import{S as Fu,i as Uu,s as ku,e as r,k as f,w as x,t as l,M as xu,c,d as t,m as d,a as i,x as H,h as a,b as h,G as e,g as n,y as W,L as Hu,q as z,o as Z,B,v as Wu}from"../../chunks/vendor-hf-doc-builder.js";import{I as La}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{C as qr}from"../../chunks/CodeBlock-hf-doc-builder.js";function zu(qd){let R,Na,G,K,Pt,He,Jr,bt,Qr,$a,gt,ec,Ra,M,Y,Tt,We,tc,Lt,oc,Ga,ze,Nt,lc,ac,Ma,j,$t,rc,cc,Rt,ic,Fa,V,sc,Gt,nc,fc,Ua,Ze,Mt,dc,hc,ka,Be,xa,Ke,Ft,_c,uc,Ha,X,v,Ut,Ec,pc,kt,vc,mc,xt,Cc,Oc,Ht,gc,Dc,Wt,Sc,Ac,zt,wc,yc,Ic,y,Zt,Pc,bc,Bt,Tc,Lc,Kt,Nc,$c,Wa,F,q,Yt,Ye,Rc,jt,Gc,za,je,Vt,Mc,Fc,Za,J,Xt,Uc,kc,qt,xc,Ba,Q,Hc,Ve,Wc,zc,Ka,Xe,Jt,Zc,Bc,Ya,qe,ja,Je,Qt,Kc,Yc,Va,ee,m,eo,jc,Vc,to,Xc,qc,oo,Jc,Qc,lo,ei,ti,ao,oi,li,ro,ai,ri,ci,I,co,ii,si,io,ni,fi,so,di,hi,Xa,U,te,no,Qe,_i,fo,ui,qa,et,ho,Ei,pi,Ja,oe,_o,vi,mi,uo,Ci,Qa,Dt,Oi,er,tt,Eo,gi,Di,tr,ot,or,lt,po,Si,Ai,lr,le,St,vo,wi,yi,Ii,At,mo,Pi,bi,ar,at,Co,Ti,Li,rr,u,P,Oo,Ni,$i,go,Ri,Gi,Do,Mi,Fi,Ui,ae,So,ki,xi,Ao,Hi,Wi,zi,re,wo,Zi,Bi,yo,Ki,Yi,ji,ce,Io,Vi,Xi,Po,qi,Ji,Qi,b,bo,es,ts,To,os,ls,Lo,as,rs,cs,T,No,is,ss,$o,ns,fs,Ro,ds,hs,_s,ie,Go,us,Es,Mo,ps,vs,cr,L,ms,Fo,Cs,Os,Uo,gs,Ds,ir,rt,ko,Ss,As,sr,wt,ws,nr,E,se,xo,ys,Is,Ho,Ps,bs,Ts,ne,Wo,Ls,Ns,zo,$s,Rs,Gs,fe,Zo,Ms,Fs,Bo,Us,ks,xs,de,Ko,Hs,Ws,Yo,zs,Zs,Bs,he,jo,Ks,Ys,Vo,js,Vs,Xs,_e,Xo,qs,Js,qo,Qs,en,tn,ue,Jo,on,ln,Qo,an,rn,fr,ct,el,cn,sn,dr,Ee,nn,tl,fn,dn,hr,_,pe,ol,hn,_n,ll,un,En,pn,ve,al,vn,mn,rl,Cn,On,gn,me,cl,Dn,Sn,il,An,wn,yn,Ce,sl,In,Pn,nl,bn,Tn,Ln,Oe,fl,Nn,$n,dl,Rn,Gn,Mn,ge,hl,Fn,Un,_l,kn,xn,Hn,De,ul,Wn,zn,El,Zn,Bn,Kn,N,pl,Yn,jn,vl,Vn,Xn,ml,qn,Jn,Qn,Se,Cl,ef,tf,Ol,of,lf,_r,it,gl,af,rf,ur,Ae,cf,Dl,sf,nf,Er,w,we,Sl,ff,df,Al,hf,_f,uf,ye,wl,Ef,pf,yl,vf,mf,Cf,Ie,Il,Of,gf,Pl,Df,Sf,Af,Pe,bl,wf,yf,Tl,If,Pf,pr,st,Ll,bf,Tf,vr,be,Lf,Nl,Nf,$f,mr,Te,Le,$l,Rf,Gf,Rl,Mf,Ff,Uf,Ne,Gl,kf,xf,Ml,Hf,Wf,Cr,nt,Fl,zf,Zf,Or,yt,Bf,gr,$e,Re,Ul,Kf,Yf,kl,jf,Vf,Xf,Ge,xl,qf,Jf,Hl,Qf,ed,Dr,k,Me,Wl,ft,td,zl,od,Sr,Fe,Zl,ld,ad,Bl,rd,Ar,Ue,cd,Kl,id,sd,wr,dt,Yl,nd,fd,yr,ht,Ir,_t,jl,dd,hd,Pr,ke,C,Vl,_d,ud,Xl,Ed,pd,ql,vd,md,Jl,Cd,Od,Ql,gd,Dd,ea,Sd,Ad,wd,$,ta,yd,Id,oa,Pd,bd,la,Td,Ld,br;return He=new La({}),We=new La({}),Be=new qr({props:{code:"accelerate config [arguments]",highlighted:"accelerate config [arguments]"}}),Ye=new La({}),qe=new qr({props:{code:"accelerate env [arguments]",highlighted:'accelerate <span class="hljs-built_in">env</span> [arguments]'}}),Qe=new La({}),ot=new qr({props:{code:"accelerate launch [arguments] {training_script} --{training_script-argument-1} --{training_script-argument-2} ...",highlighted:"accelerate launch [arguments] {training_script} --{training_script-argument-1} --{training_script-argument-2} ..."}}),ft=new La({}),ht=new qr({props:{code:"accelerate test [arguments]",highlighted:'accelerate <span class="hljs-built_in">test</span> [arguments]'}}),{c(){R=r("meta"),Na=f(),G=r("h1"),K=r("a"),Pt=r("span"),x(He.$$.fragment),Jr=f(),bt=r("span"),Qr=l("The Command Line"),$a=f(),gt=r("p"),ec=l("Below is a list of all the available commands \u{1F917} Accelerate with their parameters"),Ra=f(),M=r("h2"),Y=r("a"),Tt=r("span"),x(We.$$.fragment),tc=f(),Lt=r("span"),oc=l("accelerate config"),Ga=f(),ze=r("p"),Nt=r("strong"),lc=l("Command"),ac=l(":"),Ma=f(),j=r("p"),$t=r("code"),rc=l("accelerate config"),cc=l(" or "),Rt=r("code"),ic=l("accelerate-config"),Fa=f(),V=r("p"),sc=l("Launches a series of prompts to create and save a "),Gt=r("code"),nc=l("default_config.yml"),fc=l(` configuration file for your training system. Should
always be ran first on your machine.`),Ua=f(),Ze=r("p"),Mt=r("strong"),dc=l("Usage"),hc=l(":"),ka=f(),x(Be.$$.fragment),xa=f(),Ke=r("p"),Ft=r("strong"),_c=l("Optional Arguments"),uc=l(":"),Ha=f(),X=r("ul"),v=r("li"),Ut=r("code"),Ec=l("--config_file CONFIG_FILE"),pc=l(" ("),kt=r("code"),vc=l("str"),mc=l(`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),xt=r("code"),Cc=l("HF_HOME"),Oc=l(` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),Ht=r("code"),gc=l("~/.cache"),Dc=l(" or the content of "),Wt=r("code"),Sc=l("XDG_CACHE_HOME"),Ac=l(") suffixed with "),zt=r("code"),wc=l("huggingface"),yc=l("."),Ic=f(),y=r("li"),Zt=r("code"),Pc=l("-h"),bc=l(", "),Bt=r("code"),Tc=l("--help"),Lc=l(" ("),Kt=r("code"),Nc=l("bool"),$c=l(") \u2014 Show a help message and exit"),Wa=f(),F=r("h2"),q=r("a"),Yt=r("span"),x(Ye.$$.fragment),Rc=f(),jt=r("span"),Gc=l("accelerate env"),za=f(),je=r("p"),Vt=r("strong"),Mc=l("Command"),Fc=l(":"),Za=f(),J=r("p"),Xt=r("code"),Uc=l("accelerate env"),kc=l(" or "),qt=r("code"),xc=l("accelerate-env"),Ba=f(),Q=r("p"),Hc=l("Lists the contents of the passed \u{1F917} Accelerate configuration file. Should always be used when opening an issue on the "),Ve=r("a"),Wc=l("GitHub repository"),zc=l("."),Ka=f(),Xe=r("p"),Jt=r("strong"),Zc=l("Usage"),Bc=l(":"),Ya=f(),x(qe.$$.fragment),ja=f(),Je=r("p"),Qt=r("strong"),Kc=l("Optional Arguments"),Yc=l(":"),Va=f(),ee=r("ul"),m=r("li"),eo=r("code"),jc=l("--config_file CONFIG_FILE"),Vc=l(" ("),to=r("code"),Xc=l("str"),qc=l(`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),oo=r("code"),Jc=l("HF_HOME"),Qc=l(` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),lo=r("code"),ei=l("~/.cache"),ti=l(" or the content of "),ao=r("code"),oi=l("XDG_CACHE_HOME"),li=l(") suffixed with "),ro=r("code"),ai=l("huggingface"),ri=l("."),ci=f(),I=r("li"),co=r("code"),ii=l("-h"),si=l(", "),io=r("code"),ni=l("--help"),fi=l(" ("),so=r("code"),di=l("bool"),hi=l(") \u2014 Show a help message and exit"),Xa=f(),U=r("h2"),te=r("a"),no=r("span"),x(Qe.$$.fragment),_i=f(),fo=r("span"),ui=l("accelerate launch"),qa=f(),et=r("p"),ho=r("strong"),Ei=l("Command"),pi=l(":"),Ja=f(),oe=r("p"),_o=r("code"),vi=l("accelerate launch"),mi=l(" or "),uo=r("code"),Ci=l("accelerate-launch"),Qa=f(),Dt=r("p"),Oi=l("Launches a specified script on a distributed system with the right parameters."),er=f(),tt=r("p"),Eo=r("strong"),gi=l("Usage"),Di=l(":"),tr=f(),x(ot.$$.fragment),or=f(),lt=r("p"),po=r("strong"),Si=l("Positional Arguments"),Ai=l(":"),lr=f(),le=r("ul"),St=r("li"),vo=r("code"),wi=l("{training_script}"),yi=l(" \u2014 The full path to the script to be launched in parallel"),Ii=f(),At=r("li"),mo=r("code"),Pi=l("--{training_script-argument-1}"),bi=l(" \u2014 Arguments of the training script"),ar=f(),at=r("p"),Co=r("strong"),Ti=l("Optional Arguments"),Li=l(":"),rr=f(),u=r("ul"),P=r("li"),Oo=r("code"),Ni=l("-h"),$i=l(", "),go=r("code"),Ri=l("--help"),Gi=l(" ("),Do=r("code"),Mi=l("bool"),Fi=l(") \u2014 Show a help message and exit"),Ui=f(),ae=r("li"),So=r("code"),ki=l("--config_file CONFIG_FILE"),xi=l(" ("),Ao=r("code"),Hi=l("str"),Wi=l(")\u2014 The config file to use for the default values in the launching script."),zi=f(),re=r("li"),wo=r("code"),Zi=l("--cpu"),Bi=l(" ("),yo=r("code"),Ki=l("bool"),Yi=l(") \u2014 Whether or not to force the training on the CPU."),ji=f(),ce=r("li"),Io=r("code"),Vi=l("--mixed_precision {no,fp16,bf16}"),Xi=l(" ("),Po=r("code"),qi=l("str"),Ji=l(`) \u2014 Whether or not to use mixed precision training. Choose between FP16 and BF16 (bfloat16) training. BF16 training is only supported on
Nvidia Ampere GPUs and PyTorch 1.10 or later.`),Qi=f(),b=r("li"),bo=r("code"),es=l("--multi_gpu"),ts=l(" ("),To=r("code"),os=l("bool"),ls=l(", defaults to "),Lo=r("code"),as=l("False"),rs=l(") \u2014 Whether or not this should launch a distributed GPU training."),cs=f(),T=r("li"),No=r("code"),is=l("-m"),ss=l(", "),$o=r("code"),ns=l("--module"),fs=l(" ("),Ro=r("code"),ds=l("bool"),hs=l(") \u2014 Change each process to interpret the launch script as a Python module, executing with the same behavior as \u2018python -m\u2019."),_s=f(),ie=r("li"),Go=r("code"),us=l("--no_python"),Es=l(" ("),Mo=r("code"),ps=l("bool"),vs=l(") \u2014 Skip prepending the training script with \u2018python\u2019 - just execute it directly. Useful when the script is not a Python script."),cr=f(),L=r("p"),ms=l("The rest of these arguments are configured through "),Fo=r("code"),Cs=l("accelerate config"),Os=l(" and are read in from the specified "),Uo=r("code"),gs=l("--config_file"),Ds=l(` (or default configuration) for their
values. They can also be passed in manually.`),ir=f(),rt=r("p"),ko=r("strong"),Ss=l("Machine Configuration Arguments"),As=l(":"),sr=f(),wt=r("p"),ws=l("The following arguments are useful for customization of worker machines"),nr=f(),E=r("ul"),se=r("li"),xo=r("code"),ys=l("--machine_rank MACHINE_RANK"),Is=l(" ("),Ho=r("code"),Ps=l("int"),bs=l(") \u2014 The rank of the machine on which this script is launched."),Ts=f(),ne=r("li"),Wo=r("code"),Ls=l("--num_machines NUM_MACHINES"),Ns=l(" ("),zo=r("code"),$s=l("int"),Rs=l(") \u2014 The total number of machines used in this training."),Gs=f(),fe=r("li"),Zo=r("code"),Ms=l("--num_processes NUM_PROCESSES"),Fs=l(" ("),Bo=r("code"),Us=l("int"),ks=l(") \u2014 The total number of processes to be launched in parallel."),xs=f(),de=r("li"),Ko=r("code"),Hs=l("--gpu_ids"),Ws=l(" ("),Yo=r("code"),zs=l("str"),Zs=l(") \u2014 What GPUs (by id) should be used for training on this machine as a comma-seperated list"),Bs=f(),he=r("li"),jo=r("code"),Ks=l("--main_process_ip MAIN_PROCESS_IP"),Ys=l(" ("),Vo=r("code"),js=l("str"),Vs=l(") \u2014 The IP address of the machine of rank 0."),Xs=f(),_e=r("li"),Xo=r("code"),qs=l("--main_process_port MAIN_PROCESS_PORT"),Js=l(" ("),qo=r("code"),Qs=l("int"),en=l(") \u2014 The port to use to communicate with the machine of rank 0."),tn=f(),ue=r("li"),Jo=r("code"),on=l("--num_cpu_threads_per_process NUM_CPU_THREADS_PER_PROCESS"),ln=l(" ("),Qo=r("code"),an=l("int"),rn=l(") \u2014 The number of CPU threads per process. Can be tuned for optimal performance."),fr=f(),ct=r("p"),el=r("strong"),cn=l("DeepSpeed Arguments"),sn=l(":"),dr=f(),Ee=r("p"),nn=l("The following arguments are only useful when "),tl=r("code"),fn=l("use_deepspeed"),dn=l(" is passed:"),hr=f(),_=r("ul"),pe=r("li"),ol=r("code"),hn=l("--use_deepspeed"),_n=l(" ("),ll=r("code"),un=l("bool"),En=l(") \u2014 Whether to use deepspeed."),pn=f(),ve=r("li"),al=r("code"),vn=l("--deepspeed_config_file DEEPSPEED_CONFIG_FILE"),mn=l(" ("),rl=r("code"),Cn=l("str"),On=l(") \u2014 DeepSpeed config file."),gn=f(),me=r("li"),cl=r("code"),Dn=l("--zero_stage ZERO_STAGE"),Sn=l(" ("),il=r("code"),An=l("str"),wn=l(") \u2014 DeepSpeed\u2019s ZeRO optimization stage"),yn=f(),Ce=r("li"),sl=r("code"),In=l("--offload_optimizer_device OFFLOAD_OPTIMIZER_DEVICE"),Pn=l(" ("),nl=r("code"),bn=l("str"),Tn=l(") \u2014 Decides where (none|cpu|nvme) to offload optimizer states"),Ln=f(),Oe=r("li"),fl=r("code"),Nn=l("--offload_param_device OFFLOAD_PARAM_DEVICE"),$n=l(" ("),dl=r("code"),Rn=l("str"),Gn=l(") \u2014 Decides where (none|cpu|nvme) to offload parameters"),Mn=f(),ge=r("li"),hl=r("code"),Fn=l("--gradient_accumulation_steps GRADIENT_ACCUMULATION_STEPS"),Un=l(" ("),_l=r("code"),kn=l("int"),xn=l(") \u2014 Number of gradient_accumulation_steps used in your training script"),Hn=f(),De=r("li"),ul=r("code"),Wn=l("--gradient_clipping GRADIENT_CLIPPING"),zn=l(" ("),El=r("code"),Zn=l("float"),Bn=l(`) \u2014 gradient clipping value used in your training script
The following arguments are related to using ZeRO Stage-3`),Kn=f(),N=r("li"),pl=r("code"),Yn=l("--zero3_init_flag ZERO3_INIT_FLAG"),jn=l(" ("),vl=r("code"),Vn=l("bool"),Xn=l(") \u2014 Decides Whether (true|false) to enable "),ml=r("code"),qn=l("deepspeed.zero.Init"),Jn=l(" for constructing massive models"),Qn=f(),Se=r("li"),Cl=r("code"),ef=l("--zero3_save_16bit_model ZERO3_SAVE_16BIT_MODEL"),tf=l(" ("),Ol=r("code"),of=l("bool"),lf=l(") \u2014 Decides Whether (true|false) to save 16-bit model weights when using ZeRO Stage-3"),_r=f(),it=r("p"),gl=r("strong"),af=l("Fully Sharded Data Parallelism Arguments"),rf=l(":"),ur=f(),Ae=r("p"),cf=l("The following arguments are only useful when "),Dl=r("code"),sf=l("use_fdsp"),nf=l(" is passed:"),Er=f(),w=r("ul"),we=r("li"),Sl=r("code"),ff=l("--use_fsdp"),df=l(" ("),Al=r("code"),hf=l("bool"),_f=l(") \u2014 Whether to use fsdp."),uf=f(),ye=r("li"),wl=r("code"),Ef=l("--offload_params OFFLOAD_PARAMS"),pf=l(" ("),yl=r("code"),vf=l("bool"),mf=l(") \u2014 Decides Whether (true|false) to offload parameters and gradients to CPU."),Cf=f(),Ie=r("li"),Il=r("code"),Of=l("--min_num_params MIN_NUM_PARAMS"),gf=l(" ("),Pl=r("code"),Df=l("int"),Sf=l(") \u2014 FSDP\u2019s minimum number of parameters for Default Auto Wrapping."),Af=f(),Pe=r("li"),bl=r("code"),wf=l("--sharding_strategy SHARDING_STRATEGY"),yf=l(" ("),Tl=r("code"),If=l("str"),Pf=l(") \u2014 FSDP\u2019s Sharding Strategy."),pr=f(),st=r("p"),Ll=r("strong"),bf=l("TPU Arguments"),Tf=l(":"),vr=f(),be=r("p"),Lf=l("The following arguments are only useful when "),Nl=r("code"),Nf=l("tpu"),$f=l(" is passed:"),mr=f(),Te=r("ul"),Le=r("li"),$l=r("code"),Rf=l("--tpu"),Gf=l(" ("),Rl=r("code"),Mf=l("bool"),Ff=l(") - Whether or not this should launch a TPU training."),Uf=f(),Ne=r("li"),Gl=r("code"),kf=l("--main_training_function MAIN_TRAINING_FUNCTION"),xf=l(" ("),Ml=r("code"),Hf=l("str"),Wf=l(") \u2014 The name of the main function to be executed in your script."),Cr=f(),nt=r("p"),Fl=r("strong"),zf=l("AWS SageMaker Arguments"),Zf=l(":"),Or=f(),yt=r("p"),Bf=l("The following arguments are only useful when training in SageMaker"),gr=f(),$e=r("ul"),Re=r("li"),Ul=r("code"),Kf=l("--aws_access_key_id AWS_ACCESS_KEY_ID"),Yf=l(" ("),kl=r("code"),jf=l("str"),Vf=l(") \u2014 The AWS_ACCESS_KEY_ID used to launch the Amazon SageMaker training job"),Xf=f(),Ge=r("li"),xl=r("code"),qf=l("--aws_secret_access_key AWS_SECRET_ACCESS_KEY"),Jf=l(" ("),Hl=r("code"),Qf=l("str"),ed=l(") \u2014 The AWS_SECRET_ACCESS_KEY used to launch the Amazon SageMaker training job"),Dr=f(),k=r("h2"),Me=r("a"),Wl=r("span"),x(ft.$$.fragment),td=f(),zl=r("span"),od=l("accelerate test"),Sr=f(),Fe=r("p"),Zl=r("code"),ld=l("accelerate test"),ad=l(" or "),Bl=r("code"),rd=l("accelerate-test"),Ar=f(),Ue=r("p"),cd=l("Runs "),Kl=r("code"),id=l("accelerate/test_utils/test_script.py"),sd=l(" to verify that \u{1F917} Accelerate has been properly configured on your system and runs."),wr=f(),dt=r("p"),Yl=r("strong"),nd=l("Usage"),fd=l(":"),yr=f(),x(ht.$$.fragment),Ir=f(),_t=r("p"),jl=r("strong"),dd=l("Optional Arguments"),hd=l(":"),Pr=f(),ke=r("ul"),C=r("li"),Vl=r("code"),_d=l("--config_file CONFIG_FILE"),ud=l(" ("),Xl=r("code"),Ed=l("str"),pd=l(`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),ql=r("code"),vd=l("HF_HOME"),md=l(` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),Jl=r("code"),Cd=l("~/.cache"),Od=l(" or the content of "),Ql=r("code"),gd=l("XDG_CACHE_HOME"),Dd=l(") suffixed with "),ea=r("code"),Sd=l("huggingface"),Ad=l("."),wd=f(),$=r("li"),ta=r("code"),yd=l("-h"),Id=l(", "),oa=r("code"),Pd=l("--help"),bd=l(" ("),la=r("code"),Td=l("bool"),Ld=l(") \u2014 Show a help message and exit"),this.h()},l(o){const s=xu('[data-svelte="svelte-1phssyn"]',document.head);R=c(s,"META",{name:!0,content:!0}),s.forEach(t),Na=d(o),G=c(o,"H1",{class:!0});var Tr=i(G);K=c(Tr,"A",{id:!0,class:!0,href:!0});var Jd=i(K);Pt=c(Jd,"SPAN",{});var Qd=i(Pt);H(He.$$.fragment,Qd),Qd.forEach(t),Jd.forEach(t),Jr=d(Tr),bt=c(Tr,"SPAN",{});var eh=i(bt);Qr=a(eh,"The Command Line"),eh.forEach(t),Tr.forEach(t),$a=d(o),gt=c(o,"P",{});var th=i(gt);ec=a(th,"Below is a list of all the available commands \u{1F917} Accelerate with their parameters"),th.forEach(t),Ra=d(o),M=c(o,"H2",{class:!0});var Lr=i(M);Y=c(Lr,"A",{id:!0,class:!0,href:!0});var oh=i(Y);Tt=c(oh,"SPAN",{});var lh=i(Tt);H(We.$$.fragment,lh),lh.forEach(t),oh.forEach(t),tc=d(Lr),Lt=c(Lr,"SPAN",{});var ah=i(Lt);oc=a(ah,"accelerate config"),ah.forEach(t),Lr.forEach(t),Ga=d(o),ze=c(o,"P",{});var Nd=i(ze);Nt=c(Nd,"STRONG",{});var rh=i(Nt);lc=a(rh,"Command"),rh.forEach(t),ac=a(Nd,":"),Nd.forEach(t),Ma=d(o),j=c(o,"P",{});var Nr=i(j);$t=c(Nr,"CODE",{});var ch=i($t);rc=a(ch,"accelerate config"),ch.forEach(t),cc=a(Nr," or "),Rt=c(Nr,"CODE",{});var ih=i(Rt);ic=a(ih,"accelerate-config"),ih.forEach(t),Nr.forEach(t),Fa=d(o),V=c(o,"P",{});var $r=i(V);sc=a($r,"Launches a series of prompts to create and save a "),Gt=c($r,"CODE",{});var sh=i(Gt);nc=a(sh,"default_config.yml"),sh.forEach(t),fc=a($r,` configuration file for your training system. Should
always be ran first on your machine.`),$r.forEach(t),Ua=d(o),Ze=c(o,"P",{});var $d=i(Ze);Mt=c($d,"STRONG",{});var nh=i(Mt);dc=a(nh,"Usage"),nh.forEach(t),hc=a($d,":"),$d.forEach(t),ka=d(o),H(Be.$$.fragment,o),xa=d(o),Ke=c(o,"P",{});var Rd=i(Ke);Ft=c(Rd,"STRONG",{});var fh=i(Ft);_c=a(fh,"Optional Arguments"),fh.forEach(t),uc=a(Rd,":"),Rd.forEach(t),Ha=d(o),X=c(o,"UL",{});var Rr=i(X);v=c(Rr,"LI",{});var D=i(v);Ut=c(D,"CODE",{});var dh=i(Ut);Ec=a(dh,"--config_file CONFIG_FILE"),dh.forEach(t),pc=a(D," ("),kt=c(D,"CODE",{});var hh=i(kt);vc=a(hh,"str"),hh.forEach(t),mc=a(D,`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),xt=c(D,"CODE",{});var _h=i(xt);Cc=a(_h,"HF_HOME"),_h.forEach(t),Oc=a(D,` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),Ht=c(D,"CODE",{});var uh=i(Ht);gc=a(uh,"~/.cache"),uh.forEach(t),Dc=a(D," or the content of "),Wt=c(D,"CODE",{});var Eh=i(Wt);Sc=a(Eh,"XDG_CACHE_HOME"),Eh.forEach(t),Ac=a(D,") suffixed with "),zt=c(D,"CODE",{});var ph=i(zt);wc=a(ph,"huggingface"),ph.forEach(t),yc=a(D,"."),D.forEach(t),Ic=d(Rr),y=c(Rr,"LI",{});var ut=i(y);Zt=c(ut,"CODE",{});var vh=i(Zt);Pc=a(vh,"-h"),vh.forEach(t),bc=a(ut,", "),Bt=c(ut,"CODE",{});var mh=i(Bt);Tc=a(mh,"--help"),mh.forEach(t),Lc=a(ut," ("),Kt=c(ut,"CODE",{});var Ch=i(Kt);Nc=a(Ch,"bool"),Ch.forEach(t),$c=a(ut,") \u2014 Show a help message and exit"),ut.forEach(t),Rr.forEach(t),Wa=d(o),F=c(o,"H2",{class:!0});var Gr=i(F);q=c(Gr,"A",{id:!0,class:!0,href:!0});var Oh=i(q);Yt=c(Oh,"SPAN",{});var gh=i(Yt);H(Ye.$$.fragment,gh),gh.forEach(t),Oh.forEach(t),Rc=d(Gr),jt=c(Gr,"SPAN",{});var Dh=i(jt);Gc=a(Dh,"accelerate env"),Dh.forEach(t),Gr.forEach(t),za=d(o),je=c(o,"P",{});var Gd=i(je);Vt=c(Gd,"STRONG",{});var Sh=i(Vt);Mc=a(Sh,"Command"),Sh.forEach(t),Fc=a(Gd,":"),Gd.forEach(t),Za=d(o),J=c(o,"P",{});var Mr=i(J);Xt=c(Mr,"CODE",{});var Ah=i(Xt);Uc=a(Ah,"accelerate env"),Ah.forEach(t),kc=a(Mr," or "),qt=c(Mr,"CODE",{});var wh=i(qt);xc=a(wh,"accelerate-env"),wh.forEach(t),Mr.forEach(t),Ba=d(o),Q=c(o,"P",{});var Fr=i(Q);Hc=a(Fr,"Lists the contents of the passed \u{1F917} Accelerate configuration file. Should always be used when opening an issue on the "),Ve=c(Fr,"A",{href:!0,rel:!0});var yh=i(Ve);Wc=a(yh,"GitHub repository"),yh.forEach(t),zc=a(Fr,"."),Fr.forEach(t),Ka=d(o),Xe=c(o,"P",{});var Md=i(Xe);Jt=c(Md,"STRONG",{});var Ih=i(Jt);Zc=a(Ih,"Usage"),Ih.forEach(t),Bc=a(Md,":"),Md.forEach(t),Ya=d(o),H(qe.$$.fragment,o),ja=d(o),Je=c(o,"P",{});var Fd=i(Je);Qt=c(Fd,"STRONG",{});var Ph=i(Qt);Kc=a(Ph,"Optional Arguments"),Ph.forEach(t),Yc=a(Fd,":"),Fd.forEach(t),Va=d(o),ee=c(o,"UL",{});var Ur=i(ee);m=c(Ur,"LI",{});var S=i(m);eo=c(S,"CODE",{});var bh=i(eo);jc=a(bh,"--config_file CONFIG_FILE"),bh.forEach(t),Vc=a(S," ("),to=c(S,"CODE",{});var Th=i(to);Xc=a(Th,"str"),Th.forEach(t),qc=a(S,`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),oo=c(S,"CODE",{});var Lh=i(oo);Jc=a(Lh,"HF_HOME"),Lh.forEach(t),Qc=a(S,` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),lo=c(S,"CODE",{});var Nh=i(lo);ei=a(Nh,"~/.cache"),Nh.forEach(t),ti=a(S," or the content of "),ao=c(S,"CODE",{});var $h=i(ao);oi=a($h,"XDG_CACHE_HOME"),$h.forEach(t),li=a(S,") suffixed with "),ro=c(S,"CODE",{});var Rh=i(ro);ai=a(Rh,"huggingface"),Rh.forEach(t),ri=a(S,"."),S.forEach(t),ci=d(Ur),I=c(Ur,"LI",{});var Et=i(I);co=c(Et,"CODE",{});var Gh=i(co);ii=a(Gh,"-h"),Gh.forEach(t),si=a(Et,", "),io=c(Et,"CODE",{});var Mh=i(io);ni=a(Mh,"--help"),Mh.forEach(t),fi=a(Et," ("),so=c(Et,"CODE",{});var Fh=i(so);di=a(Fh,"bool"),Fh.forEach(t),hi=a(Et,") \u2014 Show a help message and exit"),Et.forEach(t),Ur.forEach(t),Xa=d(o),U=c(o,"H2",{class:!0});var kr=i(U);te=c(kr,"A",{id:!0,class:!0,href:!0});var Uh=i(te);no=c(Uh,"SPAN",{});var kh=i(no);H(Qe.$$.fragment,kh),kh.forEach(t),Uh.forEach(t),_i=d(kr),fo=c(kr,"SPAN",{});var xh=i(fo);ui=a(xh,"accelerate launch"),xh.forEach(t),kr.forEach(t),qa=d(o),et=c(o,"P",{});var Ud=i(et);ho=c(Ud,"STRONG",{});var Hh=i(ho);Ei=a(Hh,"Command"),Hh.forEach(t),pi=a(Ud,":"),Ud.forEach(t),Ja=d(o),oe=c(o,"P",{});var xr=i(oe);_o=c(xr,"CODE",{});var Wh=i(_o);vi=a(Wh,"accelerate launch"),Wh.forEach(t),mi=a(xr," or "),uo=c(xr,"CODE",{});var zh=i(uo);Ci=a(zh,"accelerate-launch"),zh.forEach(t),xr.forEach(t),Qa=d(o),Dt=c(o,"P",{});var Zh=i(Dt);Oi=a(Zh,"Launches a specified script on a distributed system with the right parameters."),Zh.forEach(t),er=d(o),tt=c(o,"P",{});var kd=i(tt);Eo=c(kd,"STRONG",{});var Bh=i(Eo);gi=a(Bh,"Usage"),Bh.forEach(t),Di=a(kd,":"),kd.forEach(t),tr=d(o),H(ot.$$.fragment,o),or=d(o),lt=c(o,"P",{});var xd=i(lt);po=c(xd,"STRONG",{});var Kh=i(po);Si=a(Kh,"Positional Arguments"),Kh.forEach(t),Ai=a(xd,":"),xd.forEach(t),lr=d(o),le=c(o,"UL",{});var Hr=i(le);St=c(Hr,"LI",{});var Hd=i(St);vo=c(Hd,"CODE",{});var Yh=i(vo);wi=a(Yh,"{training_script}"),Yh.forEach(t),yi=a(Hd," \u2014 The full path to the script to be launched in parallel"),Hd.forEach(t),Ii=d(Hr),At=c(Hr,"LI",{});var Wd=i(At);mo=c(Wd,"CODE",{});var jh=i(mo);Pi=a(jh,"--{training_script-argument-1}"),jh.forEach(t),bi=a(Wd," \u2014 Arguments of the training script"),Wd.forEach(t),Hr.forEach(t),ar=d(o),at=c(o,"P",{});var zd=i(at);Co=c(zd,"STRONG",{});var Vh=i(Co);Ti=a(Vh,"Optional Arguments"),Vh.forEach(t),Li=a(zd,":"),zd.forEach(t),rr=d(o),u=c(o,"UL",{});var O=i(u);P=c(O,"LI",{});var pt=i(P);Oo=c(pt,"CODE",{});var Xh=i(Oo);Ni=a(Xh,"-h"),Xh.forEach(t),$i=a(pt,", "),go=c(pt,"CODE",{});var qh=i(go);Ri=a(qh,"--help"),qh.forEach(t),Gi=a(pt," ("),Do=c(pt,"CODE",{});var Jh=i(Do);Mi=a(Jh,"bool"),Jh.forEach(t),Fi=a(pt,") \u2014 Show a help message and exit"),pt.forEach(t),Ui=d(O),ae=c(O,"LI",{});var aa=i(ae);So=c(aa,"CODE",{});var Qh=i(So);ki=a(Qh,"--config_file CONFIG_FILE"),Qh.forEach(t),xi=a(aa," ("),Ao=c(aa,"CODE",{});var e_=i(Ao);Hi=a(e_,"str"),e_.forEach(t),Wi=a(aa,")\u2014 The config file to use for the default values in the launching script."),aa.forEach(t),zi=d(O),re=c(O,"LI",{});var ra=i(re);wo=c(ra,"CODE",{});var t_=i(wo);Zi=a(t_,"--cpu"),t_.forEach(t),Bi=a(ra," ("),yo=c(ra,"CODE",{});var o_=i(yo);Ki=a(o_,"bool"),o_.forEach(t),Yi=a(ra,") \u2014 Whether or not to force the training on the CPU."),ra.forEach(t),ji=d(O),ce=c(O,"LI",{});var ca=i(ce);Io=c(ca,"CODE",{});var l_=i(Io);Vi=a(l_,"--mixed_precision {no,fp16,bf16}"),l_.forEach(t),Xi=a(ca," ("),Po=c(ca,"CODE",{});var a_=i(Po);qi=a(a_,"str"),a_.forEach(t),Ji=a(ca,`) \u2014 Whether or not to use mixed precision training. Choose between FP16 and BF16 (bfloat16) training. BF16 training is only supported on
Nvidia Ampere GPUs and PyTorch 1.10 or later.`),ca.forEach(t),Qi=d(O),b=c(O,"LI",{});var vt=i(b);bo=c(vt,"CODE",{});var r_=i(bo);es=a(r_,"--multi_gpu"),r_.forEach(t),ts=a(vt," ("),To=c(vt,"CODE",{});var c_=i(To);os=a(c_,"bool"),c_.forEach(t),ls=a(vt,", defaults to "),Lo=c(vt,"CODE",{});var i_=i(Lo);as=a(i_,"False"),i_.forEach(t),rs=a(vt,") \u2014 Whether or not this should launch a distributed GPU training."),vt.forEach(t),cs=d(O),T=c(O,"LI",{});var mt=i(T);No=c(mt,"CODE",{});var s_=i(No);is=a(s_,"-m"),s_.forEach(t),ss=a(mt,", "),$o=c(mt,"CODE",{});var n_=i($o);ns=a(n_,"--module"),n_.forEach(t),fs=a(mt," ("),Ro=c(mt,"CODE",{});var f_=i(Ro);ds=a(f_,"bool"),f_.forEach(t),hs=a(mt,") \u2014 Change each process to interpret the launch script as a Python module, executing with the same behavior as \u2018python -m\u2019."),mt.forEach(t),_s=d(O),ie=c(O,"LI",{});var ia=i(ie);Go=c(ia,"CODE",{});var d_=i(Go);us=a(d_,"--no_python"),d_.forEach(t),Es=a(ia," ("),Mo=c(ia,"CODE",{});var h_=i(Mo);ps=a(h_,"bool"),h_.forEach(t),vs=a(ia,") \u2014 Skip prepending the training script with \u2018python\u2019 - just execute it directly. Useful when the script is not a Python script."),ia.forEach(t),O.forEach(t),cr=d(o),L=c(o,"P",{});var It=i(L);ms=a(It,"The rest of these arguments are configured through "),Fo=c(It,"CODE",{});var __=i(Fo);Cs=a(__,"accelerate config"),__.forEach(t),Os=a(It," and are read in from the specified "),Uo=c(It,"CODE",{});var u_=i(Uo);gs=a(u_,"--config_file"),u_.forEach(t),Ds=a(It,` (or default configuration) for their
values. They can also be passed in manually.`),It.forEach(t),ir=d(o),rt=c(o,"P",{});var Zd=i(rt);ko=c(Zd,"STRONG",{});var E_=i(ko);Ss=a(E_,"Machine Configuration Arguments"),E_.forEach(t),As=a(Zd,":"),Zd.forEach(t),sr=d(o),wt=c(o,"P",{});var p_=i(wt);ws=a(p_,"The following arguments are useful for customization of worker machines"),p_.forEach(t),nr=d(o),E=c(o,"UL",{});var g=i(E);se=c(g,"LI",{});var sa=i(se);xo=c(sa,"CODE",{});var v_=i(xo);ys=a(v_,"--machine_rank MACHINE_RANK"),v_.forEach(t),Is=a(sa," ("),Ho=c(sa,"CODE",{});var m_=i(Ho);Ps=a(m_,"int"),m_.forEach(t),bs=a(sa,") \u2014 The rank of the machine on which this script is launched."),sa.forEach(t),Ts=d(g),ne=c(g,"LI",{});var na=i(ne);Wo=c(na,"CODE",{});var C_=i(Wo);Ls=a(C_,"--num_machines NUM_MACHINES"),C_.forEach(t),Ns=a(na," ("),zo=c(na,"CODE",{});var O_=i(zo);$s=a(O_,"int"),O_.forEach(t),Rs=a(na,") \u2014 The total number of machines used in this training."),na.forEach(t),Gs=d(g),fe=c(g,"LI",{});var fa=i(fe);Zo=c(fa,"CODE",{});var g_=i(Zo);Ms=a(g_,"--num_processes NUM_PROCESSES"),g_.forEach(t),Fs=a(fa," ("),Bo=c(fa,"CODE",{});var D_=i(Bo);Us=a(D_,"int"),D_.forEach(t),ks=a(fa,") \u2014 The total number of processes to be launched in parallel."),fa.forEach(t),xs=d(g),de=c(g,"LI",{});var da=i(de);Ko=c(da,"CODE",{});var S_=i(Ko);Hs=a(S_,"--gpu_ids"),S_.forEach(t),Ws=a(da," ("),Yo=c(da,"CODE",{});var A_=i(Yo);zs=a(A_,"str"),A_.forEach(t),Zs=a(da,") \u2014 What GPUs (by id) should be used for training on this machine as a comma-seperated list"),da.forEach(t),Bs=d(g),he=c(g,"LI",{});var ha=i(he);jo=c(ha,"CODE",{});var w_=i(jo);Ks=a(w_,"--main_process_ip MAIN_PROCESS_IP"),w_.forEach(t),Ys=a(ha," ("),Vo=c(ha,"CODE",{});var y_=i(Vo);js=a(y_,"str"),y_.forEach(t),Vs=a(ha,") \u2014 The IP address of the machine of rank 0."),ha.forEach(t),Xs=d(g),_e=c(g,"LI",{});var _a=i(_e);Xo=c(_a,"CODE",{});var I_=i(Xo);qs=a(I_,"--main_process_port MAIN_PROCESS_PORT"),I_.forEach(t),Js=a(_a," ("),qo=c(_a,"CODE",{});var P_=i(qo);Qs=a(P_,"int"),P_.forEach(t),en=a(_a,") \u2014 The port to use to communicate with the machine of rank 0."),_a.forEach(t),tn=d(g),ue=c(g,"LI",{});var ua=i(ue);Jo=c(ua,"CODE",{});var b_=i(Jo);on=a(b_,"--num_cpu_threads_per_process NUM_CPU_THREADS_PER_PROCESS"),b_.forEach(t),ln=a(ua," ("),Qo=c(ua,"CODE",{});var T_=i(Qo);an=a(T_,"int"),T_.forEach(t),rn=a(ua,") \u2014 The number of CPU threads per process. Can be tuned for optimal performance."),ua.forEach(t),g.forEach(t),fr=d(o),ct=c(o,"P",{});var Bd=i(ct);el=c(Bd,"STRONG",{});var L_=i(el);cn=a(L_,"DeepSpeed Arguments"),L_.forEach(t),sn=a(Bd,":"),Bd.forEach(t),dr=d(o),Ee=c(o,"P",{});var Wr=i(Ee);nn=a(Wr,"The following arguments are only useful when "),tl=c(Wr,"CODE",{});var N_=i(tl);fn=a(N_,"use_deepspeed"),N_.forEach(t),dn=a(Wr," is passed:"),Wr.forEach(t),hr=d(o),_=c(o,"UL",{});var p=i(_);pe=c(p,"LI",{});var Ea=i(pe);ol=c(Ea,"CODE",{});var $_=i(ol);hn=a($_,"--use_deepspeed"),$_.forEach(t),_n=a(Ea," ("),ll=c(Ea,"CODE",{});var R_=i(ll);un=a(R_,"bool"),R_.forEach(t),En=a(Ea,") \u2014 Whether to use deepspeed."),Ea.forEach(t),pn=d(p),ve=c(p,"LI",{});var pa=i(ve);al=c(pa,"CODE",{});var G_=i(al);vn=a(G_,"--deepspeed_config_file DEEPSPEED_CONFIG_FILE"),G_.forEach(t),mn=a(pa," ("),rl=c(pa,"CODE",{});var M_=i(rl);Cn=a(M_,"str"),M_.forEach(t),On=a(pa,") \u2014 DeepSpeed config file."),pa.forEach(t),gn=d(p),me=c(p,"LI",{});var va=i(me);cl=c(va,"CODE",{});var F_=i(cl);Dn=a(F_,"--zero_stage ZERO_STAGE"),F_.forEach(t),Sn=a(va," ("),il=c(va,"CODE",{});var U_=i(il);An=a(U_,"str"),U_.forEach(t),wn=a(va,") \u2014 DeepSpeed\u2019s ZeRO optimization stage"),va.forEach(t),yn=d(p),Ce=c(p,"LI",{});var ma=i(Ce);sl=c(ma,"CODE",{});var k_=i(sl);In=a(k_,"--offload_optimizer_device OFFLOAD_OPTIMIZER_DEVICE"),k_.forEach(t),Pn=a(ma," ("),nl=c(ma,"CODE",{});var x_=i(nl);bn=a(x_,"str"),x_.forEach(t),Tn=a(ma,") \u2014 Decides where (none|cpu|nvme) to offload optimizer states"),ma.forEach(t),Ln=d(p),Oe=c(p,"LI",{});var Ca=i(Oe);fl=c(Ca,"CODE",{});var H_=i(fl);Nn=a(H_,"--offload_param_device OFFLOAD_PARAM_DEVICE"),H_.forEach(t),$n=a(Ca," ("),dl=c(Ca,"CODE",{});var W_=i(dl);Rn=a(W_,"str"),W_.forEach(t),Gn=a(Ca,") \u2014 Decides where (none|cpu|nvme) to offload parameters"),Ca.forEach(t),Mn=d(p),ge=c(p,"LI",{});var Oa=i(ge);hl=c(Oa,"CODE",{});var z_=i(hl);Fn=a(z_,"--gradient_accumulation_steps GRADIENT_ACCUMULATION_STEPS"),z_.forEach(t),Un=a(Oa," ("),_l=c(Oa,"CODE",{});var Z_=i(_l);kn=a(Z_,"int"),Z_.forEach(t),xn=a(Oa,") \u2014 Number of gradient_accumulation_steps used in your training script"),Oa.forEach(t),Hn=d(p),De=c(p,"LI",{});var ga=i(De);ul=c(ga,"CODE",{});var B_=i(ul);Wn=a(B_,"--gradient_clipping GRADIENT_CLIPPING"),B_.forEach(t),zn=a(ga," ("),El=c(ga,"CODE",{});var K_=i(El);Zn=a(K_,"float"),K_.forEach(t),Bn=a(ga,`) \u2014 gradient clipping value used in your training script
The following arguments are related to using ZeRO Stage-3`),ga.forEach(t),Kn=d(p),N=c(p,"LI",{});var Ct=i(N);pl=c(Ct,"CODE",{});var Y_=i(pl);Yn=a(Y_,"--zero3_init_flag ZERO3_INIT_FLAG"),Y_.forEach(t),jn=a(Ct," ("),vl=c(Ct,"CODE",{});var j_=i(vl);Vn=a(j_,"bool"),j_.forEach(t),Xn=a(Ct,") \u2014 Decides Whether (true|false) to enable "),ml=c(Ct,"CODE",{});var V_=i(ml);qn=a(V_,"deepspeed.zero.Init"),V_.forEach(t),Jn=a(Ct," for constructing massive models"),Ct.forEach(t),Qn=d(p),Se=c(p,"LI",{});var Da=i(Se);Cl=c(Da,"CODE",{});var X_=i(Cl);ef=a(X_,"--zero3_save_16bit_model ZERO3_SAVE_16BIT_MODEL"),X_.forEach(t),tf=a(Da," ("),Ol=c(Da,"CODE",{});var q_=i(Ol);of=a(q_,"bool"),q_.forEach(t),lf=a(Da,") \u2014 Decides Whether (true|false) to save 16-bit model weights when using ZeRO Stage-3"),Da.forEach(t),p.forEach(t),_r=d(o),it=c(o,"P",{});var Kd=i(it);gl=c(Kd,"STRONG",{});var J_=i(gl);af=a(J_,"Fully Sharded Data Parallelism Arguments"),J_.forEach(t),rf=a(Kd,":"),Kd.forEach(t),ur=d(o),Ae=c(o,"P",{});var zr=i(Ae);cf=a(zr,"The following arguments are only useful when "),Dl=c(zr,"CODE",{});var Q_=i(Dl);sf=a(Q_,"use_fdsp"),Q_.forEach(t),nf=a(zr," is passed:"),zr.forEach(t),Er=d(o),w=c(o,"UL",{});var xe=i(w);we=c(xe,"LI",{});var Sa=i(we);Sl=c(Sa,"CODE",{});var eu=i(Sl);ff=a(eu,"--use_fsdp"),eu.forEach(t),df=a(Sa," ("),Al=c(Sa,"CODE",{});var tu=i(Al);hf=a(tu,"bool"),tu.forEach(t),_f=a(Sa,") \u2014 Whether to use fsdp."),Sa.forEach(t),uf=d(xe),ye=c(xe,"LI",{});var Aa=i(ye);wl=c(Aa,"CODE",{});var ou=i(wl);Ef=a(ou,"--offload_params OFFLOAD_PARAMS"),ou.forEach(t),pf=a(Aa," ("),yl=c(Aa,"CODE",{});var lu=i(yl);vf=a(lu,"bool"),lu.forEach(t),mf=a(Aa,") \u2014 Decides Whether (true|false) to offload parameters and gradients to CPU."),Aa.forEach(t),Cf=d(xe),Ie=c(xe,"LI",{});var wa=i(Ie);Il=c(wa,"CODE",{});var au=i(Il);Of=a(au,"--min_num_params MIN_NUM_PARAMS"),au.forEach(t),gf=a(wa," ("),Pl=c(wa,"CODE",{});var ru=i(Pl);Df=a(ru,"int"),ru.forEach(t),Sf=a(wa,") \u2014 FSDP\u2019s minimum number of parameters for Default Auto Wrapping."),wa.forEach(t),Af=d(xe),Pe=c(xe,"LI",{});var ya=i(Pe);bl=c(ya,"CODE",{});var cu=i(bl);wf=a(cu,"--sharding_strategy SHARDING_STRATEGY"),cu.forEach(t),yf=a(ya," ("),Tl=c(ya,"CODE",{});var iu=i(Tl);If=a(iu,"str"),iu.forEach(t),Pf=a(ya,") \u2014 FSDP\u2019s Sharding Strategy."),ya.forEach(t),xe.forEach(t),pr=d(o),st=c(o,"P",{});var Yd=i(st);Ll=c(Yd,"STRONG",{});var su=i(Ll);bf=a(su,"TPU Arguments"),su.forEach(t),Tf=a(Yd,":"),Yd.forEach(t),vr=d(o),be=c(o,"P",{});var Zr=i(be);Lf=a(Zr,"The following arguments are only useful when "),Nl=c(Zr,"CODE",{});var nu=i(Nl);Nf=a(nu,"tpu"),nu.forEach(t),$f=a(Zr," is passed:"),Zr.forEach(t),mr=d(o),Te=c(o,"UL",{});var Br=i(Te);Le=c(Br,"LI",{});var Ia=i(Le);$l=c(Ia,"CODE",{});var fu=i($l);Rf=a(fu,"--tpu"),fu.forEach(t),Gf=a(Ia," ("),Rl=c(Ia,"CODE",{});var du=i(Rl);Mf=a(du,"bool"),du.forEach(t),Ff=a(Ia,") - Whether or not this should launch a TPU training."),Ia.forEach(t),Uf=d(Br),Ne=c(Br,"LI",{});var Pa=i(Ne);Gl=c(Pa,"CODE",{});var hu=i(Gl);kf=a(hu,"--main_training_function MAIN_TRAINING_FUNCTION"),hu.forEach(t),xf=a(Pa," ("),Ml=c(Pa,"CODE",{});var _u=i(Ml);Hf=a(_u,"str"),_u.forEach(t),Wf=a(Pa,") \u2014 The name of the main function to be executed in your script."),Pa.forEach(t),Br.forEach(t),Cr=d(o),nt=c(o,"P",{});var jd=i(nt);Fl=c(jd,"STRONG",{});var uu=i(Fl);zf=a(uu,"AWS SageMaker Arguments"),uu.forEach(t),Zf=a(jd,":"),jd.forEach(t),Or=d(o),yt=c(o,"P",{});var Eu=i(yt);Bf=a(Eu,"The following arguments are only useful when training in SageMaker"),Eu.forEach(t),gr=d(o),$e=c(o,"UL",{});var Kr=i($e);Re=c(Kr,"LI",{});var ba=i(Re);Ul=c(ba,"CODE",{});var pu=i(Ul);Kf=a(pu,"--aws_access_key_id AWS_ACCESS_KEY_ID"),pu.forEach(t),Yf=a(ba," ("),kl=c(ba,"CODE",{});var vu=i(kl);jf=a(vu,"str"),vu.forEach(t),Vf=a(ba,") \u2014 The AWS_ACCESS_KEY_ID used to launch the Amazon SageMaker training job"),ba.forEach(t),Xf=d(Kr),Ge=c(Kr,"LI",{});var Ta=i(Ge);xl=c(Ta,"CODE",{});var mu=i(xl);qf=a(mu,"--aws_secret_access_key AWS_SECRET_ACCESS_KEY"),mu.forEach(t),Jf=a(Ta," ("),Hl=c(Ta,"CODE",{});var Cu=i(Hl);Qf=a(Cu,"str"),Cu.forEach(t),ed=a(Ta,") \u2014 The AWS_SECRET_ACCESS_KEY used to launch the Amazon SageMaker training job"),Ta.forEach(t),Kr.forEach(t),Dr=d(o),k=c(o,"H2",{class:!0});var Yr=i(k);Me=c(Yr,"A",{id:!0,class:!0,href:!0});var Ou=i(Me);Wl=c(Ou,"SPAN",{});var gu=i(Wl);H(ft.$$.fragment,gu),gu.forEach(t),Ou.forEach(t),td=d(Yr),zl=c(Yr,"SPAN",{});var Du=i(zl);od=a(Du,"accelerate test"),Du.forEach(t),Yr.forEach(t),Sr=d(o),Fe=c(o,"P",{});var jr=i(Fe);Zl=c(jr,"CODE",{});var Su=i(Zl);ld=a(Su,"accelerate test"),Su.forEach(t),ad=a(jr," or "),Bl=c(jr,"CODE",{});var Au=i(Bl);rd=a(Au,"accelerate-test"),Au.forEach(t),jr.forEach(t),Ar=d(o),Ue=c(o,"P",{});var Vr=i(Ue);cd=a(Vr,"Runs "),Kl=c(Vr,"CODE",{});var wu=i(Kl);id=a(wu,"accelerate/test_utils/test_script.py"),wu.forEach(t),sd=a(Vr," to verify that \u{1F917} Accelerate has been properly configured on your system and runs."),Vr.forEach(t),wr=d(o),dt=c(o,"P",{});var Vd=i(dt);Yl=c(Vd,"STRONG",{});var yu=i(Yl);nd=a(yu,"Usage"),yu.forEach(t),fd=a(Vd,":"),Vd.forEach(t),yr=d(o),H(ht.$$.fragment,o),Ir=d(o),_t=c(o,"P",{});var Xd=i(_t);jl=c(Xd,"STRONG",{});var Iu=i(jl);dd=a(Iu,"Optional Arguments"),Iu.forEach(t),hd=a(Xd,":"),Xd.forEach(t),Pr=d(o),ke=c(o,"UL",{});var Xr=i(ke);C=c(Xr,"LI",{});var A=i(C);Vl=c(A,"CODE",{});var Pu=i(Vl);_d=a(Pu,"--config_file CONFIG_FILE"),Pu.forEach(t),ud=a(A," ("),Xl=c(A,"CODE",{});var bu=i(Xl);Ed=a(bu,"str"),bu.forEach(t),pd=a(A,`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),ql=c(A,"CODE",{});var Tu=i(ql);vd=a(Tu,"HF_HOME"),Tu.forEach(t),md=a(A,` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),Jl=c(A,"CODE",{});var Lu=i(Jl);Cd=a(Lu,"~/.cache"),Lu.forEach(t),Od=a(A," or the content of "),Ql=c(A,"CODE",{});var Nu=i(Ql);gd=a(Nu,"XDG_CACHE_HOME"),Nu.forEach(t),Dd=a(A,") suffixed with "),ea=c(A,"CODE",{});var $u=i(ea);Sd=a($u,"huggingface"),$u.forEach(t),Ad=a(A,"."),A.forEach(t),wd=d(Xr),$=c(Xr,"LI",{});var Ot=i($);ta=c(Ot,"CODE",{});var Ru=i(ta);yd=a(Ru,"-h"),Ru.forEach(t),Id=a(Ot,", "),oa=c(Ot,"CODE",{});var Gu=i(oa);Pd=a(Gu,"--help"),Gu.forEach(t),bd=a(Ot," ("),la=c(Ot,"CODE",{});var Mu=i(la);Td=a(Mu,"bool"),Mu.forEach(t),Ld=a(Ot,") \u2014 Show a help message and exit"),Ot.forEach(t),Xr.forEach(t),this.h()},h(){h(R,"name","hf:doc:metadata"),h(R,"content",JSON.stringify(Zu)),h(K,"id","the-command-line"),h(K,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(K,"href","#the-command-line"),h(G,"class","relative group"),h(Y,"id","accelerate-config"),h(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(Y,"href","#accelerate-config"),h(M,"class","relative group"),h(q,"id","accelerate-env"),h(q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(q,"href","#accelerate-env"),h(F,"class","relative group"),h(Ve,"href","https://github.com/huggingface/accelerate"),h(Ve,"rel","nofollow"),h(te,"id","accelerate-launch"),h(te,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(te,"href","#accelerate-launch"),h(U,"class","relative group"),h(Me,"id","accelerate-test"),h(Me,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(Me,"href","#accelerate-test"),h(k,"class","relative group")},m(o,s){e(document.head,R),n(o,Na,s),n(o,G,s),e(G,K),e(K,Pt),W(He,Pt,null),e(G,Jr),e(G,bt),e(bt,Qr),n(o,$a,s),n(o,gt,s),e(gt,ec),n(o,Ra,s),n(o,M,s),e(M,Y),e(Y,Tt),W(We,Tt,null),e(M,tc),e(M,Lt),e(Lt,oc),n(o,Ga,s),n(o,ze,s),e(ze,Nt),e(Nt,lc),e(ze,ac),n(o,Ma,s),n(o,j,s),e(j,$t),e($t,rc),e(j,cc),e(j,Rt),e(Rt,ic),n(o,Fa,s),n(o,V,s),e(V,sc),e(V,Gt),e(Gt,nc),e(V,fc),n(o,Ua,s),n(o,Ze,s),e(Ze,Mt),e(Mt,dc),e(Ze,hc),n(o,ka,s),W(Be,o,s),n(o,xa,s),n(o,Ke,s),e(Ke,Ft),e(Ft,_c),e(Ke,uc),n(o,Ha,s),n(o,X,s),e(X,v),e(v,Ut),e(Ut,Ec),e(v,pc),e(v,kt),e(kt,vc),e(v,mc),e(v,xt),e(xt,Cc),e(v,Oc),e(v,Ht),e(Ht,gc),e(v,Dc),e(v,Wt),e(Wt,Sc),e(v,Ac),e(v,zt),e(zt,wc),e(v,yc),e(X,Ic),e(X,y),e(y,Zt),e(Zt,Pc),e(y,bc),e(y,Bt),e(Bt,Tc),e(y,Lc),e(y,Kt),e(Kt,Nc),e(y,$c),n(o,Wa,s),n(o,F,s),e(F,q),e(q,Yt),W(Ye,Yt,null),e(F,Rc),e(F,jt),e(jt,Gc),n(o,za,s),n(o,je,s),e(je,Vt),e(Vt,Mc),e(je,Fc),n(o,Za,s),n(o,J,s),e(J,Xt),e(Xt,Uc),e(J,kc),e(J,qt),e(qt,xc),n(o,Ba,s),n(o,Q,s),e(Q,Hc),e(Q,Ve),e(Ve,Wc),e(Q,zc),n(o,Ka,s),n(o,Xe,s),e(Xe,Jt),e(Jt,Zc),e(Xe,Bc),n(o,Ya,s),W(qe,o,s),n(o,ja,s),n(o,Je,s),e(Je,Qt),e(Qt,Kc),e(Je,Yc),n(o,Va,s),n(o,ee,s),e(ee,m),e(m,eo),e(eo,jc),e(m,Vc),e(m,to),e(to,Xc),e(m,qc),e(m,oo),e(oo,Jc),e(m,Qc),e(m,lo),e(lo,ei),e(m,ti),e(m,ao),e(ao,oi),e(m,li),e(m,ro),e(ro,ai),e(m,ri),e(ee,ci),e(ee,I),e(I,co),e(co,ii),e(I,si),e(I,io),e(io,ni),e(I,fi),e(I,so),e(so,di),e(I,hi),n(o,Xa,s),n(o,U,s),e(U,te),e(te,no),W(Qe,no,null),e(U,_i),e(U,fo),e(fo,ui),n(o,qa,s),n(o,et,s),e(et,ho),e(ho,Ei),e(et,pi),n(o,Ja,s),n(o,oe,s),e(oe,_o),e(_o,vi),e(oe,mi),e(oe,uo),e(uo,Ci),n(o,Qa,s),n(o,Dt,s),e(Dt,Oi),n(o,er,s),n(o,tt,s),e(tt,Eo),e(Eo,gi),e(tt,Di),n(o,tr,s),W(ot,o,s),n(o,or,s),n(o,lt,s),e(lt,po),e(po,Si),e(lt,Ai),n(o,lr,s),n(o,le,s),e(le,St),e(St,vo),e(vo,wi),e(St,yi),e(le,Ii),e(le,At),e(At,mo),e(mo,Pi),e(At,bi),n(o,ar,s),n(o,at,s),e(at,Co),e(Co,Ti),e(at,Li),n(o,rr,s),n(o,u,s),e(u,P),e(P,Oo),e(Oo,Ni),e(P,$i),e(P,go),e(go,Ri),e(P,Gi),e(P,Do),e(Do,Mi),e(P,Fi),e(u,Ui),e(u,ae),e(ae,So),e(So,ki),e(ae,xi),e(ae,Ao),e(Ao,Hi),e(ae,Wi),e(u,zi),e(u,re),e(re,wo),e(wo,Zi),e(re,Bi),e(re,yo),e(yo,Ki),e(re,Yi),e(u,ji),e(u,ce),e(ce,Io),e(Io,Vi),e(ce,Xi),e(ce,Po),e(Po,qi),e(ce,Ji),e(u,Qi),e(u,b),e(b,bo),e(bo,es),e(b,ts),e(b,To),e(To,os),e(b,ls),e(b,Lo),e(Lo,as),e(b,rs),e(u,cs),e(u,T),e(T,No),e(No,is),e(T,ss),e(T,$o),e($o,ns),e(T,fs),e(T,Ro),e(Ro,ds),e(T,hs),e(u,_s),e(u,ie),e(ie,Go),e(Go,us),e(ie,Es),e(ie,Mo),e(Mo,ps),e(ie,vs),n(o,cr,s),n(o,L,s),e(L,ms),e(L,Fo),e(Fo,Cs),e(L,Os),e(L,Uo),e(Uo,gs),e(L,Ds),n(o,ir,s),n(o,rt,s),e(rt,ko),e(ko,Ss),e(rt,As),n(o,sr,s),n(o,wt,s),e(wt,ws),n(o,nr,s),n(o,E,s),e(E,se),e(se,xo),e(xo,ys),e(se,Is),e(se,Ho),e(Ho,Ps),e(se,bs),e(E,Ts),e(E,ne),e(ne,Wo),e(Wo,Ls),e(ne,Ns),e(ne,zo),e(zo,$s),e(ne,Rs),e(E,Gs),e(E,fe),e(fe,Zo),e(Zo,Ms),e(fe,Fs),e(fe,Bo),e(Bo,Us),e(fe,ks),e(E,xs),e(E,de),e(de,Ko),e(Ko,Hs),e(de,Ws),e(de,Yo),e(Yo,zs),e(de,Zs),e(E,Bs),e(E,he),e(he,jo),e(jo,Ks),e(he,Ys),e(he,Vo),e(Vo,js),e(he,Vs),e(E,Xs),e(E,_e),e(_e,Xo),e(Xo,qs),e(_e,Js),e(_e,qo),e(qo,Qs),e(_e,en),e(E,tn),e(E,ue),e(ue,Jo),e(Jo,on),e(ue,ln),e(ue,Qo),e(Qo,an),e(ue,rn),n(o,fr,s),n(o,ct,s),e(ct,el),e(el,cn),e(ct,sn),n(o,dr,s),n(o,Ee,s),e(Ee,nn),e(Ee,tl),e(tl,fn),e(Ee,dn),n(o,hr,s),n(o,_,s),e(_,pe),e(pe,ol),e(ol,hn),e(pe,_n),e(pe,ll),e(ll,un),e(pe,En),e(_,pn),e(_,ve),e(ve,al),e(al,vn),e(ve,mn),e(ve,rl),e(rl,Cn),e(ve,On),e(_,gn),e(_,me),e(me,cl),e(cl,Dn),e(me,Sn),e(me,il),e(il,An),e(me,wn),e(_,yn),e(_,Ce),e(Ce,sl),e(sl,In),e(Ce,Pn),e(Ce,nl),e(nl,bn),e(Ce,Tn),e(_,Ln),e(_,Oe),e(Oe,fl),e(fl,Nn),e(Oe,$n),e(Oe,dl),e(dl,Rn),e(Oe,Gn),e(_,Mn),e(_,ge),e(ge,hl),e(hl,Fn),e(ge,Un),e(ge,_l),e(_l,kn),e(ge,xn),e(_,Hn),e(_,De),e(De,ul),e(ul,Wn),e(De,zn),e(De,El),e(El,Zn),e(De,Bn),e(_,Kn),e(_,N),e(N,pl),e(pl,Yn),e(N,jn),e(N,vl),e(vl,Vn),e(N,Xn),e(N,ml),e(ml,qn),e(N,Jn),e(_,Qn),e(_,Se),e(Se,Cl),e(Cl,ef),e(Se,tf),e(Se,Ol),e(Ol,of),e(Se,lf),n(o,_r,s),n(o,it,s),e(it,gl),e(gl,af),e(it,rf),n(o,ur,s),n(o,Ae,s),e(Ae,cf),e(Ae,Dl),e(Dl,sf),e(Ae,nf),n(o,Er,s),n(o,w,s),e(w,we),e(we,Sl),e(Sl,ff),e(we,df),e(we,Al),e(Al,hf),e(we,_f),e(w,uf),e(w,ye),e(ye,wl),e(wl,Ef),e(ye,pf),e(ye,yl),e(yl,vf),e(ye,mf),e(w,Cf),e(w,Ie),e(Ie,Il),e(Il,Of),e(Ie,gf),e(Ie,Pl),e(Pl,Df),e(Ie,Sf),e(w,Af),e(w,Pe),e(Pe,bl),e(bl,wf),e(Pe,yf),e(Pe,Tl),e(Tl,If),e(Pe,Pf),n(o,pr,s),n(o,st,s),e(st,Ll),e(Ll,bf),e(st,Tf),n(o,vr,s),n(o,be,s),e(be,Lf),e(be,Nl),e(Nl,Nf),e(be,$f),n(o,mr,s),n(o,Te,s),e(Te,Le),e(Le,$l),e($l,Rf),e(Le,Gf),e(Le,Rl),e(Rl,Mf),e(Le,Ff),e(Te,Uf),e(Te,Ne),e(Ne,Gl),e(Gl,kf),e(Ne,xf),e(Ne,Ml),e(Ml,Hf),e(Ne,Wf),n(o,Cr,s),n(o,nt,s),e(nt,Fl),e(Fl,zf),e(nt,Zf),n(o,Or,s),n(o,yt,s),e(yt,Bf),n(o,gr,s),n(o,$e,s),e($e,Re),e(Re,Ul),e(Ul,Kf),e(Re,Yf),e(Re,kl),e(kl,jf),e(Re,Vf),e($e,Xf),e($e,Ge),e(Ge,xl),e(xl,qf),e(Ge,Jf),e(Ge,Hl),e(Hl,Qf),e(Ge,ed),n(o,Dr,s),n(o,k,s),e(k,Me),e(Me,Wl),W(ft,Wl,null),e(k,td),e(k,zl),e(zl,od),n(o,Sr,s),n(o,Fe,s),e(Fe,Zl),e(Zl,ld),e(Fe,ad),e(Fe,Bl),e(Bl,rd),n(o,Ar,s),n(o,Ue,s),e(Ue,cd),e(Ue,Kl),e(Kl,id),e(Ue,sd),n(o,wr,s),n(o,dt,s),e(dt,Yl),e(Yl,nd),e(dt,fd),n(o,yr,s),W(ht,o,s),n(o,Ir,s),n(o,_t,s),e(_t,jl),e(jl,dd),e(_t,hd),n(o,Pr,s),n(o,ke,s),e(ke,C),e(C,Vl),e(Vl,_d),e(C,ud),e(C,Xl),e(Xl,Ed),e(C,pd),e(C,ql),e(ql,vd),e(C,md),e(C,Jl),e(Jl,Cd),e(C,Od),e(C,Ql),e(Ql,gd),e(C,Dd),e(C,ea),e(ea,Sd),e(C,Ad),e(ke,wd),e(ke,$),e($,ta),e(ta,yd),e($,Id),e($,oa),e(oa,Pd),e($,bd),e($,la),e(la,Td),e($,Ld),br=!0},p:Hu,i(o){br||(z(He.$$.fragment,o),z(We.$$.fragment,o),z(Be.$$.fragment,o),z(Ye.$$.fragment,o),z(qe.$$.fragment,o),z(Qe.$$.fragment,o),z(ot.$$.fragment,o),z(ft.$$.fragment,o),z(ht.$$.fragment,o),br=!0)},o(o){Z(He.$$.fragment,o),Z(We.$$.fragment,o),Z(Be.$$.fragment,o),Z(Ye.$$.fragment,o),Z(qe.$$.fragment,o),Z(Qe.$$.fragment,o),Z(ot.$$.fragment,o),Z(ft.$$.fragment,o),Z(ht.$$.fragment,o),br=!1},d(o){t(R),o&&t(Na),o&&t(G),B(He),o&&t($a),o&&t(gt),o&&t(Ra),o&&t(M),B(We),o&&t(Ga),o&&t(ze),o&&t(Ma),o&&t(j),o&&t(Fa),o&&t(V),o&&t(Ua),o&&t(Ze),o&&t(ka),B(Be,o),o&&t(xa),o&&t(Ke),o&&t(Ha),o&&t(X),o&&t(Wa),o&&t(F),B(Ye),o&&t(za),o&&t(je),o&&t(Za),o&&t(J),o&&t(Ba),o&&t(Q),o&&t(Ka),o&&t(Xe),o&&t(Ya),B(qe,o),o&&t(ja),o&&t(Je),o&&t(Va),o&&t(ee),o&&t(Xa),o&&t(U),B(Qe),o&&t(qa),o&&t(et),o&&t(Ja),o&&t(oe),o&&t(Qa),o&&t(Dt),o&&t(er),o&&t(tt),o&&t(tr),B(ot,o),o&&t(or),o&&t(lt),o&&t(lr),o&&t(le),o&&t(ar),o&&t(at),o&&t(rr),o&&t(u),o&&t(cr),o&&t(L),o&&t(ir),o&&t(rt),o&&t(sr),o&&t(wt),o&&t(nr),o&&t(E),o&&t(fr),o&&t(ct),o&&t(dr),o&&t(Ee),o&&t(hr),o&&t(_),o&&t(_r),o&&t(it),o&&t(ur),o&&t(Ae),o&&t(Er),o&&t(w),o&&t(pr),o&&t(st),o&&t(vr),o&&t(be),o&&t(mr),o&&t(Te),o&&t(Cr),o&&t(nt),o&&t(Or),o&&t(yt),o&&t(gr),o&&t($e),o&&t(Dr),o&&t(k),B(ft),o&&t(Sr),o&&t(Fe),o&&t(Ar),o&&t(Ue),o&&t(wr),o&&t(dt),o&&t(yr),B(ht,o),o&&t(Ir),o&&t(_t),o&&t(Pr),o&&t(ke)}}}const Zu={local:"the-command-line",sections:[{local:"accelerate-config",title:"accelerate config"},{local:"accelerate-env",title:"accelerate env"},{local:"accelerate-launch",title:"accelerate launch"},{local:"accelerate-test",title:"accelerate test"}],title:"The Command Line "};function Bu(qd){return Wu(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Vu extends Fu{constructor(R){super();Uu(this,R,Bu,zu,ku,{})}}export{Vu as default,Zu as metadata};
