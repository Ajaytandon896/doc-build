import{S as FE,i as UE,s as xE,e as r,k as d,w as W,t as l,M as WE,c,d as t,m as f,a as s,x as H,h as a,b as _,G as e,g as n,y as z,L as HE,q as Z,o as B,B as K,v as zE}from"../../chunks/vendor-hf-doc-builder.js";import{I as Ja}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{C as vc}from"../../chunks/CodeBlock-hf-doc-builder.js";function ZE(Hh){let M,Qa,k,Y,Rt,Ke,mc,Mt,Cc,er,bt,Oc,tr,G,j,kt,Ye,gc,Gt,Dc,or,je,Ft,Sc,wc,lr,V,Ut,Ac,bc,xt,yc,ar,X,Ic,Wt,Pc,Tc,rr,Ve,Ht,Lc,Nc,cr,Xe,sr,qe,zt,$c,Rc,ir,q,m,Zt,Mc,kc,Bt,Gc,Fc,Kt,Uc,xc,Yt,Wc,Hc,jt,zc,Zc,Vt,Bc,Kc,Yc,b,Xt,jc,Vc,qt,Xc,qc,Jt,Jc,Qc,nr,F,J,Qt,Je,es,eo,ts,dr,Qe,to,os,ls,fr,Q,oo,as,rs,lo,cs,hr,ee,ss,et,is,ns,_r,tt,ao,ds,fs,ur,ot,Er,lt,ro,hs,_s,pr,te,C,co,us,Es,so,ps,vs,io,ms,Cs,no,Os,gs,fo,Ds,Ss,ho,ws,As,bs,y,_o,ys,Is,uo,Ps,Ts,Eo,Ls,Ns,vr,U,oe,po,at,$s,vo,Rs,mr,rt,mo,Ms,ks,Cr,le,Co,Gs,Fs,Oo,Us,Or,yt,xs,gr,ct,go,Ws,Hs,Dr,st,Sr,it,Do,zs,Zs,wr,ae,It,So,Bs,Ks,Ys,Pt,wo,js,Vs,Ar,nt,Ao,Xs,qs,br,p,I,bo,Js,Qs,yo,ei,ti,Io,oi,li,ai,re,Po,ri,ci,To,si,ii,ni,ce,Lo,di,fi,No,hi,_i,ui,se,$o,Ei,pi,Ro,vi,mi,Ci,P,Mo,Oi,gi,ko,Di,Si,Go,wi,Ai,bi,T,Fo,yi,Ii,Uo,Pi,Ti,xo,Li,Ni,$i,ie,Wo,Ri,Mi,Ho,ki,Gi,yr,L,Fi,zo,Ui,xi,Zo,Wi,Hi,Ir,dt,Bo,zi,Zi,Pr,Tt,Bi,Tr,h,ne,Ko,Ki,Yi,Yo,ji,Vi,Xi,de,jo,qi,Ji,Vo,Qi,en,tn,fe,Xo,on,ln,qo,an,rn,cn,he,Jo,sn,nn,Qo,dn,fn,hn,_e,el,_n,un,tl,En,pn,vn,ue,ol,mn,Cn,ll,On,gn,Dn,Ee,al,Sn,wn,rl,An,bn,yn,pe,cl,In,Pn,sl,Tn,Ln,Nn,ve,il,$n,Rn,nl,Mn,kn,Gn,me,dl,Fn,Un,fl,xn,Wn,Hn,Ce,hl,zn,Zn,_l,Bn,Kn,Lr,ft,ul,Yn,jn,Nr,Oe,Vn,El,Xn,qn,$r,u,ge,pl,Jn,Qn,vl,ed,td,od,De,ml,ld,ad,Cl,rd,cd,sd,Se,Ol,id,nd,gl,dd,fd,hd,we,Dl,_d,ud,Sl,Ed,pd,vd,Ae,wl,md,Cd,Al,Od,gd,Dd,be,bl,Sd,wd,yl,Ad,bd,yd,ye,Il,Id,Pd,Pl,Td,Ld,Nd,N,Tl,$d,Rd,Ll,Md,kd,Nl,Gd,Fd,Ud,Ie,$l,xd,Wd,Rl,Hd,zd,Rr,ht,Ml,Zd,Bd,Mr,Pe,Kd,kl,Yd,jd,kr,A,Te,Gl,Vd,Xd,Fl,qd,Jd,Qd,Le,Ul,ef,tf,xl,of,lf,af,Ne,Wl,rf,cf,Hl,sf,nf,df,$e,zl,ff,hf,Zl,_f,uf,Gr,_t,Bl,Ef,pf,Fr,Re,vf,Kl,mf,Cf,Ur,$,Me,Yl,Of,gf,jl,Df,Sf,wf,ke,Vl,Af,bf,Xl,yf,If,Pf,Ge,ql,Tf,Lf,Jl,Nf,$f,xr,ut,Ql,Rf,Mf,Wr,Lt,kf,Hr,Fe,Ue,ea,Gf,Ff,ta,Uf,xf,Wf,xe,oa,Hf,zf,la,Zf,Bf,zr,x,We,aa,Et,Kf,ra,Yf,Zr,He,ca,jf,Vf,sa,Xf,Br,ze,qf,ia,Jf,Qf,Kr,pt,na,eh,th,Yr,vt,jr,mt,da,oh,lh,Vr,Ze,O,fa,ah,rh,ha,ch,sh,_a,ih,nh,ua,dh,fh,Ea,hh,_h,pa,uh,Eh,ph,R,va,vh,mh,ma,Ch,Oh,Ca,gh,Dh,Xr;return Ke=new Ja({}),Ye=new Ja({}),Xe=new vc({props:{code:"accelerate config [arguments]",highlighted:"accelerate config [arguments]"}}),Je=new Ja({}),ot=new vc({props:{code:"accelerate env [arguments]",highlighted:'accelerate <span class="hljs-built_in">env</span> [arguments]'}}),at=new Ja({}),st=new vc({props:{code:"accelerate launch [arguments] {training_script} --{training_script-argument-1} --{training_script-argument-2} ...",highlighted:"accelerate launch [arguments] {training_script} --{training_script-argument-1} --{training_script-argument-2} ..."}}),Et=new Ja({}),vt=new vc({props:{code:"accelerate test [arguments]",highlighted:'accelerate <span class="hljs-built_in">test</span> [arguments]'}}),{c(){M=r("meta"),Qa=d(),k=r("h1"),Y=r("a"),Rt=r("span"),W(Ke.$$.fragment),mc=d(),Mt=r("span"),Cc=l("The Command Line"),er=d(),bt=r("p"),Oc=l("Below is a list of all the available commands \u{1F917} Accelerate with their parameters"),tr=d(),G=r("h2"),j=r("a"),kt=r("span"),W(Ye.$$.fragment),gc=d(),Gt=r("span"),Dc=l("accelerate config"),or=d(),je=r("p"),Ft=r("strong"),Sc=l("Command"),wc=l(":"),lr=d(),V=r("p"),Ut=r("code"),Ac=l("accelerate config"),bc=l(" or "),xt=r("code"),yc=l("accelerate-config"),ar=d(),X=r("p"),Ic=l("Launches a series of prompts to create and save a "),Wt=r("code"),Pc=l("default_config.yml"),Tc=l(` configuration file for your training system. Should
always be ran first on your machine.`),rr=d(),Ve=r("p"),Ht=r("strong"),Lc=l("Usage"),Nc=l(":"),cr=d(),W(Xe.$$.fragment),sr=d(),qe=r("p"),zt=r("strong"),$c=l("Optional Arguments"),Rc=l(":"),ir=d(),q=r("ul"),m=r("li"),Zt=r("code"),Mc=l("--config_file CONFIG_FILE"),kc=l(" ("),Bt=r("code"),Gc=l("str"),Fc=l(`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),Kt=r("code"),Uc=l("HF_HOME"),xc=l(` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),Yt=r("code"),Wc=l("~/.cache"),Hc=l(" or the content of "),jt=r("code"),zc=l("XDG_CACHE_HOME"),Zc=l(") suffixed with "),Vt=r("code"),Bc=l("huggingface"),Kc=l("."),Yc=d(),b=r("li"),Xt=r("code"),jc=l("-h"),Vc=l(", "),qt=r("code"),Xc=l("--help"),qc=l(" ("),Jt=r("code"),Jc=l("bool"),Qc=l(") \u2014 Show a help message and exit"),nr=d(),F=r("h2"),J=r("a"),Qt=r("span"),W(Je.$$.fragment),es=d(),eo=r("span"),ts=l("accelerate env"),dr=d(),Qe=r("p"),to=r("strong"),os=l("Command"),ls=l(":"),fr=d(),Q=r("p"),oo=r("code"),as=l("accelerate env"),rs=l(" or "),lo=r("code"),cs=l("accelerate-env"),hr=d(),ee=r("p"),ss=l("Lists the contents of the passed \u{1F917} Accelerate configuration file. Should always be used when opening an issue on the "),et=r("a"),is=l("GitHub repository"),ns=l("."),_r=d(),tt=r("p"),ao=r("strong"),ds=l("Usage"),fs=l(":"),ur=d(),W(ot.$$.fragment),Er=d(),lt=r("p"),ro=r("strong"),hs=l("Optional Arguments"),_s=l(":"),pr=d(),te=r("ul"),C=r("li"),co=r("code"),us=l("--config_file CONFIG_FILE"),Es=l(" ("),so=r("code"),ps=l("str"),vs=l(`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),io=r("code"),ms=l("HF_HOME"),Cs=l(` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),no=r("code"),Os=l("~/.cache"),gs=l(" or the content of "),fo=r("code"),Ds=l("XDG_CACHE_HOME"),Ss=l(") suffixed with "),ho=r("code"),ws=l("huggingface"),As=l("."),bs=d(),y=r("li"),_o=r("code"),ys=l("-h"),Is=l(", "),uo=r("code"),Ps=l("--help"),Ts=l(" ("),Eo=r("code"),Ls=l("bool"),Ns=l(") \u2014 Show a help message and exit"),vr=d(),U=r("h2"),oe=r("a"),po=r("span"),W(at.$$.fragment),$s=d(),vo=r("span"),Rs=l("accelerate launch"),mr=d(),rt=r("p"),mo=r("strong"),Ms=l("Command"),ks=l(":"),Cr=d(),le=r("p"),Co=r("code"),Gs=l("accelerate launch"),Fs=l(" or "),Oo=r("code"),Us=l("accelerate-launch"),Or=d(),yt=r("p"),xs=l("Launches a specified script on a distributed system with the right parameters."),gr=d(),ct=r("p"),go=r("strong"),Ws=l("Usage"),Hs=l(":"),Dr=d(),W(st.$$.fragment),Sr=d(),it=r("p"),Do=r("strong"),zs=l("Positional Arguments"),Zs=l(":"),wr=d(),ae=r("ul"),It=r("li"),So=r("code"),Bs=l("{training_script}"),Ks=l(" \u2014 The full path to the script to be launched in parallel"),Ys=d(),Pt=r("li"),wo=r("code"),js=l("--{training_script-argument-1}"),Vs=l(" \u2014 Arguments of the training script"),Ar=d(),nt=r("p"),Ao=r("strong"),Xs=l("Optional Arguments"),qs=l(":"),br=d(),p=r("ul"),I=r("li"),bo=r("code"),Js=l("-h"),Qs=l(", "),yo=r("code"),ei=l("--help"),ti=l(" ("),Io=r("code"),oi=l("bool"),li=l(") \u2014 Show a help message and exit"),ai=d(),re=r("li"),Po=r("code"),ri=l("--config_file CONFIG_FILE"),ci=l(" ("),To=r("code"),si=l("str"),ii=l(")\u2014 The config file to use for the default values in the launching script."),ni=d(),ce=r("li"),Lo=r("code"),di=l("--cpu"),fi=l(" ("),No=r("code"),hi=l("bool"),_i=l(") \u2014 Whether or not to force the training on the CPU."),ui=d(),se=r("li"),$o=r("code"),Ei=l("--mixed_precision {no,fp16,bf16}"),pi=l(" ("),Ro=r("code"),vi=l("str"),mi=l(`) \u2014 Whether or not to use mixed precision training. Choose between FP16 and BF16 (bfloat16) training. BF16 training is only supported on
Nvidia Ampere GPUs and PyTorch 1.10 or later.`),Ci=d(),P=r("li"),Mo=r("code"),Oi=l("--multi_gpu"),gi=l(" ("),ko=r("code"),Di=l("bool"),Si=l(", defaults to "),Go=r("code"),wi=l("False"),Ai=l(") \u2014 Whether or not this should launch a distributed GPU training."),bi=d(),T=r("li"),Fo=r("code"),yi=l("-m"),Ii=l(", "),Uo=r("code"),Pi=l("--module"),Ti=l(" ("),xo=r("code"),Li=l("bool"),Ni=l(") \u2014 Change each process to interpret the launch script as a Python module, executing with the same behavior as \u2018python -m\u2019."),$i=d(),ie=r("li"),Wo=r("code"),Ri=l("--no_python"),Mi=l(" ("),Ho=r("code"),ki=l("bool"),Gi=l(") \u2014 Skip prepending the training script with \u2018python\u2019 - just execute it directly. Useful when the script is not a Python script."),yr=d(),L=r("p"),Fi=l("The rest of these arguments are configured through "),zo=r("code"),Ui=l("accelerate config"),xi=l(" and are read in from the specified "),Zo=r("code"),Wi=l("--config_file"),Hi=l(` (or default configuration) for their
values. They can also be passed in manually.`),Ir=d(),dt=r("p"),Bo=r("strong"),zi=l("Machine Configuration Arguments"),Zi=l(":"),Pr=d(),Tt=r("p"),Bi=l("The following arguments are useful for customization of worker machines"),Tr=d(),h=r("ul"),ne=r("li"),Ko=r("code"),Ki=l("--machine_rank MACHINE_RANK"),Yi=l(" ("),Yo=r("code"),ji=l("int"),Vi=l(") \u2014 The rank of the machine on which this script is launched."),Xi=d(),de=r("li"),jo=r("code"),qi=l("--num_machines NUM_MACHINES"),Ji=l(" ("),Vo=r("code"),Qi=l("int"),en=l(") \u2014 The total number of machines used in this training."),tn=d(),fe=r("li"),Xo=r("code"),on=l("--num_processes NUM_PROCESSES"),ln=l(" ("),qo=r("code"),an=l("int"),rn=l(") \u2014 The total number of processes to be launched in parallel."),cn=d(),he=r("li"),Jo=r("code"),sn=l("--gpu_ids"),nn=l(" ("),Qo=r("code"),dn=l("str"),fn=l(") \u2014 What GPUs (by id) should be used for training on this machine as a comma-seperated list"),hn=d(),_e=r("li"),el=r("code"),_n=l("--same_network"),un=l(" ("),tl=r("code"),En=l("bool"),pn=l(") \u2014 Whether all machines used for multinode training exist on the same local network."),vn=d(),ue=r("li"),ol=r("code"),mn=l("--main_process_ip MAIN_PROCESS_IP"),Cn=l(" ("),ll=r("code"),On=l("str"),gn=l(") \u2014 The IP address of the machine of rank 0."),Dn=d(),Ee=r("li"),al=r("code"),Sn=l("--main_process_port MAIN_PROCESS_PORT"),wn=l(" ("),rl=r("code"),An=l("int"),bn=l(") \u2014 The port to use to communicate with the machine of rank 0."),yn=d(),pe=r("li"),cl=r("code"),In=l("--rdzv_conf"),Pn=l(" ("),sl=r("code"),Tn=l("str"),Ln=l(") \u2014 Additional rendezvous configuration (<key1>=<value1>,<key2>=<value2>,\u2026)."),Nn=d(),ve=r("li"),il=r("code"),$n=l("--num_cpu_threads_per_process NUM_CPU_THREADS_PER_PROCESS"),Rn=l(" ("),nl=r("code"),Mn=l("int"),kn=l(") \u2014 The number of CPU threads per process. Can be tuned for optimal performance."),Gn=d(),me=r("li"),dl=r("code"),Fn=l("--max_restarts"),Un=l(" ("),fl=r("code"),xn=l("int"),Wn=l(") \u2014 Maximum number of worker group restarts before failing."),Hn=d(),Ce=r("li"),hl=r("code"),zn=l("--monitor_interval"),Zn=l(" ("),_l=r("code"),Bn=l("float"),Kn=l(") \u2014 Interval, in seconds, to monitor the state of workers."),Lr=d(),ft=r("p"),ul=r("strong"),Yn=l("DeepSpeed Arguments"),jn=l(":"),Nr=d(),Oe=r("p"),Vn=l("The following arguments are only useful when "),El=r("code"),Xn=l("use_deepspeed"),qn=l(" is passed:"),$r=d(),u=r("ul"),ge=r("li"),pl=r("code"),Jn=l("--use_deepspeed"),Qn=l(" ("),vl=r("code"),ed=l("bool"),td=l(") \u2014 Whether to use deepspeed."),od=d(),De=r("li"),ml=r("code"),ld=l("--deepspeed_config_file DEEPSPEED_CONFIG_FILE"),ad=l(" ("),Cl=r("code"),rd=l("str"),cd=l(") \u2014 DeepSpeed config file."),sd=d(),Se=r("li"),Ol=r("code"),id=l("--zero_stage ZERO_STAGE"),nd=l(" ("),gl=r("code"),dd=l("str"),fd=l(") \u2014 DeepSpeed\u2019s ZeRO optimization stage"),hd=d(),we=r("li"),Dl=r("code"),_d=l("--offload_optimizer_device OFFLOAD_OPTIMIZER_DEVICE"),ud=l(" ("),Sl=r("code"),Ed=l("str"),pd=l(") \u2014 Decides where (none|cpu|nvme) to offload optimizer states"),vd=d(),Ae=r("li"),wl=r("code"),md=l("--offload_param_device OFFLOAD_PARAM_DEVICE"),Cd=l(" ("),Al=r("code"),Od=l("str"),gd=l(") \u2014 Decides where (none|cpu|nvme) to offload parameters"),Dd=d(),be=r("li"),bl=r("code"),Sd=l("--gradient_accumulation_steps GRADIENT_ACCUMULATION_STEPS"),wd=l(" ("),yl=r("code"),Ad=l("int"),bd=l(") \u2014 Number of gradient_accumulation_steps used in your training script"),yd=d(),ye=r("li"),Il=r("code"),Id=l("--gradient_clipping GRADIENT_CLIPPING"),Pd=l(" ("),Pl=r("code"),Td=l("float"),Ld=l(`) \u2014 gradient clipping value used in your training script
The following arguments are related to using ZeRO Stage-3`),Nd=d(),N=r("li"),Tl=r("code"),$d=l("--zero3_init_flag ZERO3_INIT_FLAG"),Rd=l(" ("),Ll=r("code"),Md=l("bool"),kd=l(") \u2014 Decides Whether (true|false) to enable "),Nl=r("code"),Gd=l("deepspeed.zero.Init"),Fd=l(" for constructing massive models"),Ud=d(),Ie=r("li"),$l=r("code"),xd=l("--zero3_save_16bit_model ZERO3_SAVE_16BIT_MODEL"),Wd=l(" ("),Rl=r("code"),Hd=l("bool"),zd=l(") \u2014 Decides Whether (true|false) to save 16-bit model weights when using ZeRO Stage-3"),Rr=d(),ht=r("p"),Ml=r("strong"),Zd=l("Fully Sharded Data Parallelism Arguments"),Bd=l(":"),Mr=d(),Pe=r("p"),Kd=l("The following arguments are only useful when "),kl=r("code"),Yd=l("use_fdsp"),jd=l(" is passed:"),kr=d(),A=r("ul"),Te=r("li"),Gl=r("code"),Vd=l("--use_fsdp"),Xd=l(" ("),Fl=r("code"),qd=l("bool"),Jd=l(") \u2014 Whether to use fsdp."),Qd=d(),Le=r("li"),Ul=r("code"),ef=l("--offload_params OFFLOAD_PARAMS"),tf=l(" ("),xl=r("code"),of=l("bool"),lf=l(") \u2014 Decides Whether (true|false) to offload parameters and gradients to CPU."),af=d(),Ne=r("li"),Wl=r("code"),rf=l("--min_num_params MIN_NUM_PARAMS"),cf=l(" ("),Hl=r("code"),sf=l("int"),nf=l(") \u2014 FSDP\u2019s minimum number of parameters for Default Auto Wrapping."),df=d(),$e=r("li"),zl=r("code"),ff=l("--sharding_strategy SHARDING_STRATEGY"),hf=l(" ("),Zl=r("code"),_f=l("str"),uf=l(") \u2014 FSDP\u2019s Sharding Strategy."),Gr=d(),_t=r("p"),Bl=r("strong"),Ef=l("TPU Arguments"),pf=l(":"),Fr=d(),Re=r("p"),vf=l("The following arguments are only useful when "),Kl=r("code"),mf=l("tpu"),Cf=l(" is passed:"),Ur=d(),$=r("ul"),Me=r("li"),Yl=r("code"),Of=l("--tpu"),gf=l(" ("),jl=r("code"),Df=l("bool"),Sf=l(") \u2014 Whether or not this should launch a TPU training."),wf=d(),ke=r("li"),Vl=r("code"),Af=l("--main_training_function MAIN_TRAINING_FUNCTION"),bf=l(" ("),Xl=r("code"),yf=l("str"),If=l(") \u2014 The name of the main function to be executed in your script."),Pf=d(),Ge=r("li"),ql=r("code"),Tf=l("--downcast_bf16"),Lf=l(" ("),Jl=r("code"),Nf=l("bool"),$f=l(") \u2014 Whether when using bf16 precision on TPUs if both float and double tensors are cast to bfloat16 or if double tensors remain as float32."),xr=d(),ut=r("p"),Ql=r("strong"),Rf=l("AWS SageMaker Arguments"),Mf=l(":"),Wr=d(),Lt=r("p"),kf=l("The following arguments are only useful when training in SageMaker"),Hr=d(),Fe=r("ul"),Ue=r("li"),ea=r("code"),Gf=l("--aws_access_key_id AWS_ACCESS_KEY_ID"),Ff=l(" ("),ta=r("code"),Uf=l("str"),xf=l(") \u2014 The AWS_ACCESS_KEY_ID used to launch the Amazon SageMaker training job"),Wf=d(),xe=r("li"),oa=r("code"),Hf=l("--aws_secret_access_key AWS_SECRET_ACCESS_KEY"),zf=l(" ("),la=r("code"),Zf=l("str"),Bf=l(") \u2014 The AWS_SECRET_ACCESS_KEY used to launch the Amazon SageMaker training job"),zr=d(),x=r("h2"),We=r("a"),aa=r("span"),W(Et.$$.fragment),Kf=d(),ra=r("span"),Yf=l("accelerate test"),Zr=d(),He=r("p"),ca=r("code"),jf=l("accelerate test"),Vf=l(" or "),sa=r("code"),Xf=l("accelerate-test"),Br=d(),ze=r("p"),qf=l("Runs "),ia=r("code"),Jf=l("accelerate/test_utils/test_script.py"),Qf=l(" to verify that \u{1F917} Accelerate has been properly configured on your system and runs."),Kr=d(),pt=r("p"),na=r("strong"),eh=l("Usage"),th=l(":"),Yr=d(),W(vt.$$.fragment),jr=d(),mt=r("p"),da=r("strong"),oh=l("Optional Arguments"),lh=l(":"),Vr=d(),Ze=r("ul"),O=r("li"),fa=r("code"),ah=l("--config_file CONFIG_FILE"),rh=l(" ("),ha=r("code"),ch=l("str"),sh=l(`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),_a=r("code"),ih=l("HF_HOME"),nh=l(` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),ua=r("code"),dh=l("~/.cache"),fh=l(" or the content of "),Ea=r("code"),hh=l("XDG_CACHE_HOME"),_h=l(") suffixed with "),pa=r("code"),uh=l("huggingface"),Eh=l("."),ph=d(),R=r("li"),va=r("code"),vh=l("-h"),mh=l(", "),ma=r("code"),Ch=l("--help"),Oh=l(" ("),Ca=r("code"),gh=l("bool"),Dh=l(") \u2014 Show a help message and exit"),this.h()},l(o){const i=WE('[data-svelte="svelte-1phssyn"]',document.head);M=c(i,"META",{name:!0,content:!0}),i.forEach(t),Qa=f(o),k=c(o,"H1",{class:!0});var qr=s(k);Y=c(qr,"A",{id:!0,class:!0,href:!0});var zh=s(Y);Rt=c(zh,"SPAN",{});var Zh=s(Rt);H(Ke.$$.fragment,Zh),Zh.forEach(t),zh.forEach(t),mc=f(qr),Mt=c(qr,"SPAN",{});var Bh=s(Mt);Cc=a(Bh,"The Command Line"),Bh.forEach(t),qr.forEach(t),er=f(o),bt=c(o,"P",{});var Kh=s(bt);Oc=a(Kh,"Below is a list of all the available commands \u{1F917} Accelerate with their parameters"),Kh.forEach(t),tr=f(o),G=c(o,"H2",{class:!0});var Jr=s(G);j=c(Jr,"A",{id:!0,class:!0,href:!0});var Yh=s(j);kt=c(Yh,"SPAN",{});var jh=s(kt);H(Ye.$$.fragment,jh),jh.forEach(t),Yh.forEach(t),gc=f(Jr),Gt=c(Jr,"SPAN",{});var Vh=s(Gt);Dc=a(Vh,"accelerate config"),Vh.forEach(t),Jr.forEach(t),or=f(o),je=c(o,"P",{});var Sh=s(je);Ft=c(Sh,"STRONG",{});var Xh=s(Ft);Sc=a(Xh,"Command"),Xh.forEach(t),wc=a(Sh,":"),Sh.forEach(t),lr=f(o),V=c(o,"P",{});var Qr=s(V);Ut=c(Qr,"CODE",{});var qh=s(Ut);Ac=a(qh,"accelerate config"),qh.forEach(t),bc=a(Qr," or "),xt=c(Qr,"CODE",{});var Jh=s(xt);yc=a(Jh,"accelerate-config"),Jh.forEach(t),Qr.forEach(t),ar=f(o),X=c(o,"P",{});var ec=s(X);Ic=a(ec,"Launches a series of prompts to create and save a "),Wt=c(ec,"CODE",{});var Qh=s(Wt);Pc=a(Qh,"default_config.yml"),Qh.forEach(t),Tc=a(ec,` configuration file for your training system. Should
always be ran first on your machine.`),ec.forEach(t),rr=f(o),Ve=c(o,"P",{});var wh=s(Ve);Ht=c(wh,"STRONG",{});var e_=s(Ht);Lc=a(e_,"Usage"),e_.forEach(t),Nc=a(wh,":"),wh.forEach(t),cr=f(o),H(Xe.$$.fragment,o),sr=f(o),qe=c(o,"P",{});var Ah=s(qe);zt=c(Ah,"STRONG",{});var t_=s(zt);$c=a(t_,"Optional Arguments"),t_.forEach(t),Rc=a(Ah,":"),Ah.forEach(t),ir=f(o),q=c(o,"UL",{});var tc=s(q);m=c(tc,"LI",{});var D=s(m);Zt=c(D,"CODE",{});var o_=s(Zt);Mc=a(o_,"--config_file CONFIG_FILE"),o_.forEach(t),kc=a(D," ("),Bt=c(D,"CODE",{});var l_=s(Bt);Gc=a(l_,"str"),l_.forEach(t),Fc=a(D,`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),Kt=c(D,"CODE",{});var a_=s(Kt);Uc=a(a_,"HF_HOME"),a_.forEach(t),xc=a(D,` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),Yt=c(D,"CODE",{});var r_=s(Yt);Wc=a(r_,"~/.cache"),r_.forEach(t),Hc=a(D," or the content of "),jt=c(D,"CODE",{});var c_=s(jt);zc=a(c_,"XDG_CACHE_HOME"),c_.forEach(t),Zc=a(D,") suffixed with "),Vt=c(D,"CODE",{});var s_=s(Vt);Bc=a(s_,"huggingface"),s_.forEach(t),Kc=a(D,"."),D.forEach(t),Yc=f(tc),b=c(tc,"LI",{});var Ct=s(b);Xt=c(Ct,"CODE",{});var i_=s(Xt);jc=a(i_,"-h"),i_.forEach(t),Vc=a(Ct,", "),qt=c(Ct,"CODE",{});var n_=s(qt);Xc=a(n_,"--help"),n_.forEach(t),qc=a(Ct," ("),Jt=c(Ct,"CODE",{});var d_=s(Jt);Jc=a(d_,"bool"),d_.forEach(t),Qc=a(Ct,") \u2014 Show a help message and exit"),Ct.forEach(t),tc.forEach(t),nr=f(o),F=c(o,"H2",{class:!0});var oc=s(F);J=c(oc,"A",{id:!0,class:!0,href:!0});var f_=s(J);Qt=c(f_,"SPAN",{});var h_=s(Qt);H(Je.$$.fragment,h_),h_.forEach(t),f_.forEach(t),es=f(oc),eo=c(oc,"SPAN",{});var __=s(eo);ts=a(__,"accelerate env"),__.forEach(t),oc.forEach(t),dr=f(o),Qe=c(o,"P",{});var bh=s(Qe);to=c(bh,"STRONG",{});var u_=s(to);os=a(u_,"Command"),u_.forEach(t),ls=a(bh,":"),bh.forEach(t),fr=f(o),Q=c(o,"P",{});var lc=s(Q);oo=c(lc,"CODE",{});var E_=s(oo);as=a(E_,"accelerate env"),E_.forEach(t),rs=a(lc," or "),lo=c(lc,"CODE",{});var p_=s(lo);cs=a(p_,"accelerate-env"),p_.forEach(t),lc.forEach(t),hr=f(o),ee=c(o,"P",{});var ac=s(ee);ss=a(ac,"Lists the contents of the passed \u{1F917} Accelerate configuration file. Should always be used when opening an issue on the "),et=c(ac,"A",{href:!0,rel:!0});var v_=s(et);is=a(v_,"GitHub repository"),v_.forEach(t),ns=a(ac,"."),ac.forEach(t),_r=f(o),tt=c(o,"P",{});var yh=s(tt);ao=c(yh,"STRONG",{});var m_=s(ao);ds=a(m_,"Usage"),m_.forEach(t),fs=a(yh,":"),yh.forEach(t),ur=f(o),H(ot.$$.fragment,o),Er=f(o),lt=c(o,"P",{});var Ih=s(lt);ro=c(Ih,"STRONG",{});var C_=s(ro);hs=a(C_,"Optional Arguments"),C_.forEach(t),_s=a(Ih,":"),Ih.forEach(t),pr=f(o),te=c(o,"UL",{});var rc=s(te);C=c(rc,"LI",{});var S=s(C);co=c(S,"CODE",{});var O_=s(co);us=a(O_,"--config_file CONFIG_FILE"),O_.forEach(t),Es=a(S," ("),so=c(S,"CODE",{});var g_=s(so);ps=a(g_,"str"),g_.forEach(t),vs=a(S,`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),io=c(S,"CODE",{});var D_=s(io);ms=a(D_,"HF_HOME"),D_.forEach(t),Cs=a(S,` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),no=c(S,"CODE",{});var S_=s(no);Os=a(S_,"~/.cache"),S_.forEach(t),gs=a(S," or the content of "),fo=c(S,"CODE",{});var w_=s(fo);Ds=a(w_,"XDG_CACHE_HOME"),w_.forEach(t),Ss=a(S,") suffixed with "),ho=c(S,"CODE",{});var A_=s(ho);ws=a(A_,"huggingface"),A_.forEach(t),As=a(S,"."),S.forEach(t),bs=f(rc),y=c(rc,"LI",{});var Ot=s(y);_o=c(Ot,"CODE",{});var b_=s(_o);ys=a(b_,"-h"),b_.forEach(t),Is=a(Ot,", "),uo=c(Ot,"CODE",{});var y_=s(uo);Ps=a(y_,"--help"),y_.forEach(t),Ts=a(Ot," ("),Eo=c(Ot,"CODE",{});var I_=s(Eo);Ls=a(I_,"bool"),I_.forEach(t),Ns=a(Ot,") \u2014 Show a help message and exit"),Ot.forEach(t),rc.forEach(t),vr=f(o),U=c(o,"H2",{class:!0});var cc=s(U);oe=c(cc,"A",{id:!0,class:!0,href:!0});var P_=s(oe);po=c(P_,"SPAN",{});var T_=s(po);H(at.$$.fragment,T_),T_.forEach(t),P_.forEach(t),$s=f(cc),vo=c(cc,"SPAN",{});var L_=s(vo);Rs=a(L_,"accelerate launch"),L_.forEach(t),cc.forEach(t),mr=f(o),rt=c(o,"P",{});var Ph=s(rt);mo=c(Ph,"STRONG",{});var N_=s(mo);Ms=a(N_,"Command"),N_.forEach(t),ks=a(Ph,":"),Ph.forEach(t),Cr=f(o),le=c(o,"P",{});var sc=s(le);Co=c(sc,"CODE",{});var $_=s(Co);Gs=a($_,"accelerate launch"),$_.forEach(t),Fs=a(sc," or "),Oo=c(sc,"CODE",{});var R_=s(Oo);Us=a(R_,"accelerate-launch"),R_.forEach(t),sc.forEach(t),Or=f(o),yt=c(o,"P",{});var M_=s(yt);xs=a(M_,"Launches a specified script on a distributed system with the right parameters."),M_.forEach(t),gr=f(o),ct=c(o,"P",{});var Th=s(ct);go=c(Th,"STRONG",{});var k_=s(go);Ws=a(k_,"Usage"),k_.forEach(t),Hs=a(Th,":"),Th.forEach(t),Dr=f(o),H(st.$$.fragment,o),Sr=f(o),it=c(o,"P",{});var Lh=s(it);Do=c(Lh,"STRONG",{});var G_=s(Do);zs=a(G_,"Positional Arguments"),G_.forEach(t),Zs=a(Lh,":"),Lh.forEach(t),wr=f(o),ae=c(o,"UL",{});var ic=s(ae);It=c(ic,"LI",{});var Nh=s(It);So=c(Nh,"CODE",{});var F_=s(So);Bs=a(F_,"{training_script}"),F_.forEach(t),Ks=a(Nh," \u2014 The full path to the script to be launched in parallel"),Nh.forEach(t),Ys=f(ic),Pt=c(ic,"LI",{});var $h=s(Pt);wo=c($h,"CODE",{});var U_=s(wo);js=a(U_,"--{training_script-argument-1}"),U_.forEach(t),Vs=a($h," \u2014 Arguments of the training script"),$h.forEach(t),ic.forEach(t),Ar=f(o),nt=c(o,"P",{});var Rh=s(nt);Ao=c(Rh,"STRONG",{});var x_=s(Ao);Xs=a(x_,"Optional Arguments"),x_.forEach(t),qs=a(Rh,":"),Rh.forEach(t),br=f(o),p=c(o,"UL",{});var g=s(p);I=c(g,"LI",{});var gt=s(I);bo=c(gt,"CODE",{});var W_=s(bo);Js=a(W_,"-h"),W_.forEach(t),Qs=a(gt,", "),yo=c(gt,"CODE",{});var H_=s(yo);ei=a(H_,"--help"),H_.forEach(t),ti=a(gt," ("),Io=c(gt,"CODE",{});var z_=s(Io);oi=a(z_,"bool"),z_.forEach(t),li=a(gt,") \u2014 Show a help message and exit"),gt.forEach(t),ai=f(g),re=c(g,"LI",{});var Oa=s(re);Po=c(Oa,"CODE",{});var Z_=s(Po);ri=a(Z_,"--config_file CONFIG_FILE"),Z_.forEach(t),ci=a(Oa," ("),To=c(Oa,"CODE",{});var B_=s(To);si=a(B_,"str"),B_.forEach(t),ii=a(Oa,")\u2014 The config file to use for the default values in the launching script."),Oa.forEach(t),ni=f(g),ce=c(g,"LI",{});var ga=s(ce);Lo=c(ga,"CODE",{});var K_=s(Lo);di=a(K_,"--cpu"),K_.forEach(t),fi=a(ga," ("),No=c(ga,"CODE",{});var Y_=s(No);hi=a(Y_,"bool"),Y_.forEach(t),_i=a(ga,") \u2014 Whether or not to force the training on the CPU."),ga.forEach(t),ui=f(g),se=c(g,"LI",{});var Da=s(se);$o=c(Da,"CODE",{});var j_=s($o);Ei=a(j_,"--mixed_precision {no,fp16,bf16}"),j_.forEach(t),pi=a(Da," ("),Ro=c(Da,"CODE",{});var V_=s(Ro);vi=a(V_,"str"),V_.forEach(t),mi=a(Da,`) \u2014 Whether or not to use mixed precision training. Choose between FP16 and BF16 (bfloat16) training. BF16 training is only supported on
Nvidia Ampere GPUs and PyTorch 1.10 or later.`),Da.forEach(t),Ci=f(g),P=c(g,"LI",{});var Dt=s(P);Mo=c(Dt,"CODE",{});var X_=s(Mo);Oi=a(X_,"--multi_gpu"),X_.forEach(t),gi=a(Dt," ("),ko=c(Dt,"CODE",{});var q_=s(ko);Di=a(q_,"bool"),q_.forEach(t),Si=a(Dt,", defaults to "),Go=c(Dt,"CODE",{});var J_=s(Go);wi=a(J_,"False"),J_.forEach(t),Ai=a(Dt,") \u2014 Whether or not this should launch a distributed GPU training."),Dt.forEach(t),bi=f(g),T=c(g,"LI",{});var St=s(T);Fo=c(St,"CODE",{});var Q_=s(Fo);yi=a(Q_,"-m"),Q_.forEach(t),Ii=a(St,", "),Uo=c(St,"CODE",{});var eu=s(Uo);Pi=a(eu,"--module"),eu.forEach(t),Ti=a(St," ("),xo=c(St,"CODE",{});var tu=s(xo);Li=a(tu,"bool"),tu.forEach(t),Ni=a(St,") \u2014 Change each process to interpret the launch script as a Python module, executing with the same behavior as \u2018python -m\u2019."),St.forEach(t),$i=f(g),ie=c(g,"LI",{});var Sa=s(ie);Wo=c(Sa,"CODE",{});var ou=s(Wo);Ri=a(ou,"--no_python"),ou.forEach(t),Mi=a(Sa," ("),Ho=c(Sa,"CODE",{});var lu=s(Ho);ki=a(lu,"bool"),lu.forEach(t),Gi=a(Sa,") \u2014 Skip prepending the training script with \u2018python\u2019 - just execute it directly. Useful when the script is not a Python script."),Sa.forEach(t),g.forEach(t),yr=f(o),L=c(o,"P",{});var Nt=s(L);Fi=a(Nt,"The rest of these arguments are configured through "),zo=c(Nt,"CODE",{});var au=s(zo);Ui=a(au,"accelerate config"),au.forEach(t),xi=a(Nt," and are read in from the specified "),Zo=c(Nt,"CODE",{});var ru=s(Zo);Wi=a(ru,"--config_file"),ru.forEach(t),Hi=a(Nt,` (or default configuration) for their
values. They can also be passed in manually.`),Nt.forEach(t),Ir=f(o),dt=c(o,"P",{});var Mh=s(dt);Bo=c(Mh,"STRONG",{});var cu=s(Bo);zi=a(cu,"Machine Configuration Arguments"),cu.forEach(t),Zi=a(Mh,":"),Mh.forEach(t),Pr=f(o),Tt=c(o,"P",{});var su=s(Tt);Bi=a(su,"The following arguments are useful for customization of worker machines"),su.forEach(t),Tr=f(o),h=c(o,"UL",{});var E=s(h);ne=c(E,"LI",{});var wa=s(ne);Ko=c(wa,"CODE",{});var iu=s(Ko);Ki=a(iu,"--machine_rank MACHINE_RANK"),iu.forEach(t),Yi=a(wa," ("),Yo=c(wa,"CODE",{});var nu=s(Yo);ji=a(nu,"int"),nu.forEach(t),Vi=a(wa,") \u2014 The rank of the machine on which this script is launched."),wa.forEach(t),Xi=f(E),de=c(E,"LI",{});var Aa=s(de);jo=c(Aa,"CODE",{});var du=s(jo);qi=a(du,"--num_machines NUM_MACHINES"),du.forEach(t),Ji=a(Aa," ("),Vo=c(Aa,"CODE",{});var fu=s(Vo);Qi=a(fu,"int"),fu.forEach(t),en=a(Aa,") \u2014 The total number of machines used in this training."),Aa.forEach(t),tn=f(E),fe=c(E,"LI",{});var ba=s(fe);Xo=c(ba,"CODE",{});var hu=s(Xo);on=a(hu,"--num_processes NUM_PROCESSES"),hu.forEach(t),ln=a(ba," ("),qo=c(ba,"CODE",{});var _u=s(qo);an=a(_u,"int"),_u.forEach(t),rn=a(ba,") \u2014 The total number of processes to be launched in parallel."),ba.forEach(t),cn=f(E),he=c(E,"LI",{});var ya=s(he);Jo=c(ya,"CODE",{});var uu=s(Jo);sn=a(uu,"--gpu_ids"),uu.forEach(t),nn=a(ya," ("),Qo=c(ya,"CODE",{});var Eu=s(Qo);dn=a(Eu,"str"),Eu.forEach(t),fn=a(ya,") \u2014 What GPUs (by id) should be used for training on this machine as a comma-seperated list"),ya.forEach(t),hn=f(E),_e=c(E,"LI",{});var Ia=s(_e);el=c(Ia,"CODE",{});var pu=s(el);_n=a(pu,"--same_network"),pu.forEach(t),un=a(Ia," ("),tl=c(Ia,"CODE",{});var vu=s(tl);En=a(vu,"bool"),vu.forEach(t),pn=a(Ia,") \u2014 Whether all machines used for multinode training exist on the same local network."),Ia.forEach(t),vn=f(E),ue=c(E,"LI",{});var Pa=s(ue);ol=c(Pa,"CODE",{});var mu=s(ol);mn=a(mu,"--main_process_ip MAIN_PROCESS_IP"),mu.forEach(t),Cn=a(Pa," ("),ll=c(Pa,"CODE",{});var Cu=s(ll);On=a(Cu,"str"),Cu.forEach(t),gn=a(Pa,") \u2014 The IP address of the machine of rank 0."),Pa.forEach(t),Dn=f(E),Ee=c(E,"LI",{});var Ta=s(Ee);al=c(Ta,"CODE",{});var Ou=s(al);Sn=a(Ou,"--main_process_port MAIN_PROCESS_PORT"),Ou.forEach(t),wn=a(Ta," ("),rl=c(Ta,"CODE",{});var gu=s(rl);An=a(gu,"int"),gu.forEach(t),bn=a(Ta,") \u2014 The port to use to communicate with the machine of rank 0."),Ta.forEach(t),yn=f(E),pe=c(E,"LI",{});var La=s(pe);cl=c(La,"CODE",{});var Du=s(cl);In=a(Du,"--rdzv_conf"),Du.forEach(t),Pn=a(La," ("),sl=c(La,"CODE",{});var Su=s(sl);Tn=a(Su,"str"),Su.forEach(t),Ln=a(La,") \u2014 Additional rendezvous configuration (<key1>=<value1>,<key2>=<value2>,\u2026)."),La.forEach(t),Nn=f(E),ve=c(E,"LI",{});var Na=s(ve);il=c(Na,"CODE",{});var wu=s(il);$n=a(wu,"--num_cpu_threads_per_process NUM_CPU_THREADS_PER_PROCESS"),wu.forEach(t),Rn=a(Na," ("),nl=c(Na,"CODE",{});var Au=s(nl);Mn=a(Au,"int"),Au.forEach(t),kn=a(Na,") \u2014 The number of CPU threads per process. Can be tuned for optimal performance."),Na.forEach(t),Gn=f(E),me=c(E,"LI",{});var $a=s(me);dl=c($a,"CODE",{});var bu=s(dl);Fn=a(bu,"--max_restarts"),bu.forEach(t),Un=a($a," ("),fl=c($a,"CODE",{});var yu=s(fl);xn=a(yu,"int"),yu.forEach(t),Wn=a($a,") \u2014 Maximum number of worker group restarts before failing."),$a.forEach(t),Hn=f(E),Ce=c(E,"LI",{});var Ra=s(Ce);hl=c(Ra,"CODE",{});var Iu=s(hl);zn=a(Iu,"--monitor_interval"),Iu.forEach(t),Zn=a(Ra," ("),_l=c(Ra,"CODE",{});var Pu=s(_l);Bn=a(Pu,"float"),Pu.forEach(t),Kn=a(Ra,") \u2014 Interval, in seconds, to monitor the state of workers."),Ra.forEach(t),E.forEach(t),Lr=f(o),ft=c(o,"P",{});var kh=s(ft);ul=c(kh,"STRONG",{});var Tu=s(ul);Yn=a(Tu,"DeepSpeed Arguments"),Tu.forEach(t),jn=a(kh,":"),kh.forEach(t),Nr=f(o),Oe=c(o,"P",{});var nc=s(Oe);Vn=a(nc,"The following arguments are only useful when "),El=c(nc,"CODE",{});var Lu=s(El);Xn=a(Lu,"use_deepspeed"),Lu.forEach(t),qn=a(nc," is passed:"),nc.forEach(t),$r=f(o),u=c(o,"UL",{});var v=s(u);ge=c(v,"LI",{});var Ma=s(ge);pl=c(Ma,"CODE",{});var Nu=s(pl);Jn=a(Nu,"--use_deepspeed"),Nu.forEach(t),Qn=a(Ma," ("),vl=c(Ma,"CODE",{});var $u=s(vl);ed=a($u,"bool"),$u.forEach(t),td=a(Ma,") \u2014 Whether to use deepspeed."),Ma.forEach(t),od=f(v),De=c(v,"LI",{});var ka=s(De);ml=c(ka,"CODE",{});var Ru=s(ml);ld=a(Ru,"--deepspeed_config_file DEEPSPEED_CONFIG_FILE"),Ru.forEach(t),ad=a(ka," ("),Cl=c(ka,"CODE",{});var Mu=s(Cl);rd=a(Mu,"str"),Mu.forEach(t),cd=a(ka,") \u2014 DeepSpeed config file."),ka.forEach(t),sd=f(v),Se=c(v,"LI",{});var Ga=s(Se);Ol=c(Ga,"CODE",{});var ku=s(Ol);id=a(ku,"--zero_stage ZERO_STAGE"),ku.forEach(t),nd=a(Ga," ("),gl=c(Ga,"CODE",{});var Gu=s(gl);dd=a(Gu,"str"),Gu.forEach(t),fd=a(Ga,") \u2014 DeepSpeed\u2019s ZeRO optimization stage"),Ga.forEach(t),hd=f(v),we=c(v,"LI",{});var Fa=s(we);Dl=c(Fa,"CODE",{});var Fu=s(Dl);_d=a(Fu,"--offload_optimizer_device OFFLOAD_OPTIMIZER_DEVICE"),Fu.forEach(t),ud=a(Fa," ("),Sl=c(Fa,"CODE",{});var Uu=s(Sl);Ed=a(Uu,"str"),Uu.forEach(t),pd=a(Fa,") \u2014 Decides where (none|cpu|nvme) to offload optimizer states"),Fa.forEach(t),vd=f(v),Ae=c(v,"LI",{});var Ua=s(Ae);wl=c(Ua,"CODE",{});var xu=s(wl);md=a(xu,"--offload_param_device OFFLOAD_PARAM_DEVICE"),xu.forEach(t),Cd=a(Ua," ("),Al=c(Ua,"CODE",{});var Wu=s(Al);Od=a(Wu,"str"),Wu.forEach(t),gd=a(Ua,") \u2014 Decides where (none|cpu|nvme) to offload parameters"),Ua.forEach(t),Dd=f(v),be=c(v,"LI",{});var xa=s(be);bl=c(xa,"CODE",{});var Hu=s(bl);Sd=a(Hu,"--gradient_accumulation_steps GRADIENT_ACCUMULATION_STEPS"),Hu.forEach(t),wd=a(xa," ("),yl=c(xa,"CODE",{});var zu=s(yl);Ad=a(zu,"int"),zu.forEach(t),bd=a(xa,") \u2014 Number of gradient_accumulation_steps used in your training script"),xa.forEach(t),yd=f(v),ye=c(v,"LI",{});var Wa=s(ye);Il=c(Wa,"CODE",{});var Zu=s(Il);Id=a(Zu,"--gradient_clipping GRADIENT_CLIPPING"),Zu.forEach(t),Pd=a(Wa," ("),Pl=c(Wa,"CODE",{});var Bu=s(Pl);Td=a(Bu,"float"),Bu.forEach(t),Ld=a(Wa,`) \u2014 gradient clipping value used in your training script
The following arguments are related to using ZeRO Stage-3`),Wa.forEach(t),Nd=f(v),N=c(v,"LI",{});var wt=s(N);Tl=c(wt,"CODE",{});var Ku=s(Tl);$d=a(Ku,"--zero3_init_flag ZERO3_INIT_FLAG"),Ku.forEach(t),Rd=a(wt," ("),Ll=c(wt,"CODE",{});var Yu=s(Ll);Md=a(Yu,"bool"),Yu.forEach(t),kd=a(wt,") \u2014 Decides Whether (true|false) to enable "),Nl=c(wt,"CODE",{});var ju=s(Nl);Gd=a(ju,"deepspeed.zero.Init"),ju.forEach(t),Fd=a(wt," for constructing massive models"),wt.forEach(t),Ud=f(v),Ie=c(v,"LI",{});var Ha=s(Ie);$l=c(Ha,"CODE",{});var Vu=s($l);xd=a(Vu,"--zero3_save_16bit_model ZERO3_SAVE_16BIT_MODEL"),Vu.forEach(t),Wd=a(Ha," ("),Rl=c(Ha,"CODE",{});var Xu=s(Rl);Hd=a(Xu,"bool"),Xu.forEach(t),zd=a(Ha,") \u2014 Decides Whether (true|false) to save 16-bit model weights when using ZeRO Stage-3"),Ha.forEach(t),v.forEach(t),Rr=f(o),ht=c(o,"P",{});var Gh=s(ht);Ml=c(Gh,"STRONG",{});var qu=s(Ml);Zd=a(qu,"Fully Sharded Data Parallelism Arguments"),qu.forEach(t),Bd=a(Gh,":"),Gh.forEach(t),Mr=f(o),Pe=c(o,"P",{});var dc=s(Pe);Kd=a(dc,"The following arguments are only useful when "),kl=c(dc,"CODE",{});var Ju=s(kl);Yd=a(Ju,"use_fdsp"),Ju.forEach(t),jd=a(dc," is passed:"),dc.forEach(t),kr=f(o),A=c(o,"UL",{});var Be=s(A);Te=c(Be,"LI",{});var za=s(Te);Gl=c(za,"CODE",{});var Qu=s(Gl);Vd=a(Qu,"--use_fsdp"),Qu.forEach(t),Xd=a(za," ("),Fl=c(za,"CODE",{});var eE=s(Fl);qd=a(eE,"bool"),eE.forEach(t),Jd=a(za,") \u2014 Whether to use fsdp."),za.forEach(t),Qd=f(Be),Le=c(Be,"LI",{});var Za=s(Le);Ul=c(Za,"CODE",{});var tE=s(Ul);ef=a(tE,"--offload_params OFFLOAD_PARAMS"),tE.forEach(t),tf=a(Za," ("),xl=c(Za,"CODE",{});var oE=s(xl);of=a(oE,"bool"),oE.forEach(t),lf=a(Za,") \u2014 Decides Whether (true|false) to offload parameters and gradients to CPU."),Za.forEach(t),af=f(Be),Ne=c(Be,"LI",{});var Ba=s(Ne);Wl=c(Ba,"CODE",{});var lE=s(Wl);rf=a(lE,"--min_num_params MIN_NUM_PARAMS"),lE.forEach(t),cf=a(Ba," ("),Hl=c(Ba,"CODE",{});var aE=s(Hl);sf=a(aE,"int"),aE.forEach(t),nf=a(Ba,") \u2014 FSDP\u2019s minimum number of parameters for Default Auto Wrapping."),Ba.forEach(t),df=f(Be),$e=c(Be,"LI",{});var Ka=s($e);zl=c(Ka,"CODE",{});var rE=s(zl);ff=a(rE,"--sharding_strategy SHARDING_STRATEGY"),rE.forEach(t),hf=a(Ka," ("),Zl=c(Ka,"CODE",{});var cE=s(Zl);_f=a(cE,"str"),cE.forEach(t),uf=a(Ka,") \u2014 FSDP\u2019s Sharding Strategy."),Ka.forEach(t),Be.forEach(t),Gr=f(o),_t=c(o,"P",{});var Fh=s(_t);Bl=c(Fh,"STRONG",{});var sE=s(Bl);Ef=a(sE,"TPU Arguments"),sE.forEach(t),pf=a(Fh,":"),Fh.forEach(t),Fr=f(o),Re=c(o,"P",{});var fc=s(Re);vf=a(fc,"The following arguments are only useful when "),Kl=c(fc,"CODE",{});var iE=s(Kl);mf=a(iE,"tpu"),iE.forEach(t),Cf=a(fc," is passed:"),fc.forEach(t),Ur=f(o),$=c(o,"UL",{});var $t=s($);Me=c($t,"LI",{});var Ya=s(Me);Yl=c(Ya,"CODE",{});var nE=s(Yl);Of=a(nE,"--tpu"),nE.forEach(t),gf=a(Ya," ("),jl=c(Ya,"CODE",{});var dE=s(jl);Df=a(dE,"bool"),dE.forEach(t),Sf=a(Ya,") \u2014 Whether or not this should launch a TPU training."),Ya.forEach(t),wf=f($t),ke=c($t,"LI",{});var ja=s(ke);Vl=c(ja,"CODE",{});var fE=s(Vl);Af=a(fE,"--main_training_function MAIN_TRAINING_FUNCTION"),fE.forEach(t),bf=a(ja," ("),Xl=c(ja,"CODE",{});var hE=s(Xl);yf=a(hE,"str"),hE.forEach(t),If=a(ja,") \u2014 The name of the main function to be executed in your script."),ja.forEach(t),Pf=f($t),Ge=c($t,"LI",{});var Va=s(Ge);ql=c(Va,"CODE",{});var _E=s(ql);Tf=a(_E,"--downcast_bf16"),_E.forEach(t),Lf=a(Va," ("),Jl=c(Va,"CODE",{});var uE=s(Jl);Nf=a(uE,"bool"),uE.forEach(t),$f=a(Va,") \u2014 Whether when using bf16 precision on TPUs if both float and double tensors are cast to bfloat16 or if double tensors remain as float32."),Va.forEach(t),$t.forEach(t),xr=f(o),ut=c(o,"P",{});var Uh=s(ut);Ql=c(Uh,"STRONG",{});var EE=s(Ql);Rf=a(EE,"AWS SageMaker Arguments"),EE.forEach(t),Mf=a(Uh,":"),Uh.forEach(t),Wr=f(o),Lt=c(o,"P",{});var pE=s(Lt);kf=a(pE,"The following arguments are only useful when training in SageMaker"),pE.forEach(t),Hr=f(o),Fe=c(o,"UL",{});var hc=s(Fe);Ue=c(hc,"LI",{});var Xa=s(Ue);ea=c(Xa,"CODE",{});var vE=s(ea);Gf=a(vE,"--aws_access_key_id AWS_ACCESS_KEY_ID"),vE.forEach(t),Ff=a(Xa," ("),ta=c(Xa,"CODE",{});var mE=s(ta);Uf=a(mE,"str"),mE.forEach(t),xf=a(Xa,") \u2014 The AWS_ACCESS_KEY_ID used to launch the Amazon SageMaker training job"),Xa.forEach(t),Wf=f(hc),xe=c(hc,"LI",{});var qa=s(xe);oa=c(qa,"CODE",{});var CE=s(oa);Hf=a(CE,"--aws_secret_access_key AWS_SECRET_ACCESS_KEY"),CE.forEach(t),zf=a(qa," ("),la=c(qa,"CODE",{});var OE=s(la);Zf=a(OE,"str"),OE.forEach(t),Bf=a(qa,") \u2014 The AWS_SECRET_ACCESS_KEY used to launch the Amazon SageMaker training job"),qa.forEach(t),hc.forEach(t),zr=f(o),x=c(o,"H2",{class:!0});var _c=s(x);We=c(_c,"A",{id:!0,class:!0,href:!0});var gE=s(We);aa=c(gE,"SPAN",{});var DE=s(aa);H(Et.$$.fragment,DE),DE.forEach(t),gE.forEach(t),Kf=f(_c),ra=c(_c,"SPAN",{});var SE=s(ra);Yf=a(SE,"accelerate test"),SE.forEach(t),_c.forEach(t),Zr=f(o),He=c(o,"P",{});var uc=s(He);ca=c(uc,"CODE",{});var wE=s(ca);jf=a(wE,"accelerate test"),wE.forEach(t),Vf=a(uc," or "),sa=c(uc,"CODE",{});var AE=s(sa);Xf=a(AE,"accelerate-test"),AE.forEach(t),uc.forEach(t),Br=f(o),ze=c(o,"P",{});var Ec=s(ze);qf=a(Ec,"Runs "),ia=c(Ec,"CODE",{});var bE=s(ia);Jf=a(bE,"accelerate/test_utils/test_script.py"),bE.forEach(t),Qf=a(Ec," to verify that \u{1F917} Accelerate has been properly configured on your system and runs."),Ec.forEach(t),Kr=f(o),pt=c(o,"P",{});var xh=s(pt);na=c(xh,"STRONG",{});var yE=s(na);eh=a(yE,"Usage"),yE.forEach(t),th=a(xh,":"),xh.forEach(t),Yr=f(o),H(vt.$$.fragment,o),jr=f(o),mt=c(o,"P",{});var Wh=s(mt);da=c(Wh,"STRONG",{});var IE=s(da);oh=a(IE,"Optional Arguments"),IE.forEach(t),lh=a(Wh,":"),Wh.forEach(t),Vr=f(o),Ze=c(o,"UL",{});var pc=s(Ze);O=c(pc,"LI",{});var w=s(O);fa=c(w,"CODE",{});var PE=s(fa);ah=a(PE,"--config_file CONFIG_FILE"),PE.forEach(t),rh=a(w," ("),ha=c(w,"CODE",{});var TE=s(ha);ch=a(TE,"str"),TE.forEach(t),sh=a(w,`) \u2014 The path to use to store the config file. Will default to a file named default_config.yaml in the cache location, which is the content
of the environment `),_a=c(w,"CODE",{});var LE=s(_a);ih=a(LE,"HF_HOME"),LE.forEach(t),nh=a(w,` suffixed with \u2018accelerate\u2019, or if you don\u2019t have such an environment variable, your cache directory
(`),ua=c(w,"CODE",{});var NE=s(ua);dh=a(NE,"~/.cache"),NE.forEach(t),fh=a(w," or the content of "),Ea=c(w,"CODE",{});var $E=s(Ea);hh=a($E,"XDG_CACHE_HOME"),$E.forEach(t),_h=a(w,") suffixed with "),pa=c(w,"CODE",{});var RE=s(pa);uh=a(RE,"huggingface"),RE.forEach(t),Eh=a(w,"."),w.forEach(t),ph=f(pc),R=c(pc,"LI",{});var At=s(R);va=c(At,"CODE",{});var ME=s(va);vh=a(ME,"-h"),ME.forEach(t),mh=a(At,", "),ma=c(At,"CODE",{});var kE=s(ma);Ch=a(kE,"--help"),kE.forEach(t),Oh=a(At," ("),Ca=c(At,"CODE",{});var GE=s(Ca);gh=a(GE,"bool"),GE.forEach(t),Dh=a(At,") \u2014 Show a help message and exit"),At.forEach(t),pc.forEach(t),this.h()},h(){_(M,"name","hf:doc:metadata"),_(M,"content",JSON.stringify(BE)),_(Y,"id","the-command-line"),_(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),_(Y,"href","#the-command-line"),_(k,"class","relative group"),_(j,"id","accelerate-config"),_(j,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),_(j,"href","#accelerate-config"),_(G,"class","relative group"),_(J,"id","accelerate-env"),_(J,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),_(J,"href","#accelerate-env"),_(F,"class","relative group"),_(et,"href","https://github.com/huggingface/accelerate"),_(et,"rel","nofollow"),_(oe,"id","accelerate-launch"),_(oe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),_(oe,"href","#accelerate-launch"),_(U,"class","relative group"),_(We,"id","accelerate-test"),_(We,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),_(We,"href","#accelerate-test"),_(x,"class","relative group")},m(o,i){e(document.head,M),n(o,Qa,i),n(o,k,i),e(k,Y),e(Y,Rt),z(Ke,Rt,null),e(k,mc),e(k,Mt),e(Mt,Cc),n(o,er,i),n(o,bt,i),e(bt,Oc),n(o,tr,i),n(o,G,i),e(G,j),e(j,kt),z(Ye,kt,null),e(G,gc),e(G,Gt),e(Gt,Dc),n(o,or,i),n(o,je,i),e(je,Ft),e(Ft,Sc),e(je,wc),n(o,lr,i),n(o,V,i),e(V,Ut),e(Ut,Ac),e(V,bc),e(V,xt),e(xt,yc),n(o,ar,i),n(o,X,i),e(X,Ic),e(X,Wt),e(Wt,Pc),e(X,Tc),n(o,rr,i),n(o,Ve,i),e(Ve,Ht),e(Ht,Lc),e(Ve,Nc),n(o,cr,i),z(Xe,o,i),n(o,sr,i),n(o,qe,i),e(qe,zt),e(zt,$c),e(qe,Rc),n(o,ir,i),n(o,q,i),e(q,m),e(m,Zt),e(Zt,Mc),e(m,kc),e(m,Bt),e(Bt,Gc),e(m,Fc),e(m,Kt),e(Kt,Uc),e(m,xc),e(m,Yt),e(Yt,Wc),e(m,Hc),e(m,jt),e(jt,zc),e(m,Zc),e(m,Vt),e(Vt,Bc),e(m,Kc),e(q,Yc),e(q,b),e(b,Xt),e(Xt,jc),e(b,Vc),e(b,qt),e(qt,Xc),e(b,qc),e(b,Jt),e(Jt,Jc),e(b,Qc),n(o,nr,i),n(o,F,i),e(F,J),e(J,Qt),z(Je,Qt,null),e(F,es),e(F,eo),e(eo,ts),n(o,dr,i),n(o,Qe,i),e(Qe,to),e(to,os),e(Qe,ls),n(o,fr,i),n(o,Q,i),e(Q,oo),e(oo,as),e(Q,rs),e(Q,lo),e(lo,cs),n(o,hr,i),n(o,ee,i),e(ee,ss),e(ee,et),e(et,is),e(ee,ns),n(o,_r,i),n(o,tt,i),e(tt,ao),e(ao,ds),e(tt,fs),n(o,ur,i),z(ot,o,i),n(o,Er,i),n(o,lt,i),e(lt,ro),e(ro,hs),e(lt,_s),n(o,pr,i),n(o,te,i),e(te,C),e(C,co),e(co,us),e(C,Es),e(C,so),e(so,ps),e(C,vs),e(C,io),e(io,ms),e(C,Cs),e(C,no),e(no,Os),e(C,gs),e(C,fo),e(fo,Ds),e(C,Ss),e(C,ho),e(ho,ws),e(C,As),e(te,bs),e(te,y),e(y,_o),e(_o,ys),e(y,Is),e(y,uo),e(uo,Ps),e(y,Ts),e(y,Eo),e(Eo,Ls),e(y,Ns),n(o,vr,i),n(o,U,i),e(U,oe),e(oe,po),z(at,po,null),e(U,$s),e(U,vo),e(vo,Rs),n(o,mr,i),n(o,rt,i),e(rt,mo),e(mo,Ms),e(rt,ks),n(o,Cr,i),n(o,le,i),e(le,Co),e(Co,Gs),e(le,Fs),e(le,Oo),e(Oo,Us),n(o,Or,i),n(o,yt,i),e(yt,xs),n(o,gr,i),n(o,ct,i),e(ct,go),e(go,Ws),e(ct,Hs),n(o,Dr,i),z(st,o,i),n(o,Sr,i),n(o,it,i),e(it,Do),e(Do,zs),e(it,Zs),n(o,wr,i),n(o,ae,i),e(ae,It),e(It,So),e(So,Bs),e(It,Ks),e(ae,Ys),e(ae,Pt),e(Pt,wo),e(wo,js),e(Pt,Vs),n(o,Ar,i),n(o,nt,i),e(nt,Ao),e(Ao,Xs),e(nt,qs),n(o,br,i),n(o,p,i),e(p,I),e(I,bo),e(bo,Js),e(I,Qs),e(I,yo),e(yo,ei),e(I,ti),e(I,Io),e(Io,oi),e(I,li),e(p,ai),e(p,re),e(re,Po),e(Po,ri),e(re,ci),e(re,To),e(To,si),e(re,ii),e(p,ni),e(p,ce),e(ce,Lo),e(Lo,di),e(ce,fi),e(ce,No),e(No,hi),e(ce,_i),e(p,ui),e(p,se),e(se,$o),e($o,Ei),e(se,pi),e(se,Ro),e(Ro,vi),e(se,mi),e(p,Ci),e(p,P),e(P,Mo),e(Mo,Oi),e(P,gi),e(P,ko),e(ko,Di),e(P,Si),e(P,Go),e(Go,wi),e(P,Ai),e(p,bi),e(p,T),e(T,Fo),e(Fo,yi),e(T,Ii),e(T,Uo),e(Uo,Pi),e(T,Ti),e(T,xo),e(xo,Li),e(T,Ni),e(p,$i),e(p,ie),e(ie,Wo),e(Wo,Ri),e(ie,Mi),e(ie,Ho),e(Ho,ki),e(ie,Gi),n(o,yr,i),n(o,L,i),e(L,Fi),e(L,zo),e(zo,Ui),e(L,xi),e(L,Zo),e(Zo,Wi),e(L,Hi),n(o,Ir,i),n(o,dt,i),e(dt,Bo),e(Bo,zi),e(dt,Zi),n(o,Pr,i),n(o,Tt,i),e(Tt,Bi),n(o,Tr,i),n(o,h,i),e(h,ne),e(ne,Ko),e(Ko,Ki),e(ne,Yi),e(ne,Yo),e(Yo,ji),e(ne,Vi),e(h,Xi),e(h,de),e(de,jo),e(jo,qi),e(de,Ji),e(de,Vo),e(Vo,Qi),e(de,en),e(h,tn),e(h,fe),e(fe,Xo),e(Xo,on),e(fe,ln),e(fe,qo),e(qo,an),e(fe,rn),e(h,cn),e(h,he),e(he,Jo),e(Jo,sn),e(he,nn),e(he,Qo),e(Qo,dn),e(he,fn),e(h,hn),e(h,_e),e(_e,el),e(el,_n),e(_e,un),e(_e,tl),e(tl,En),e(_e,pn),e(h,vn),e(h,ue),e(ue,ol),e(ol,mn),e(ue,Cn),e(ue,ll),e(ll,On),e(ue,gn),e(h,Dn),e(h,Ee),e(Ee,al),e(al,Sn),e(Ee,wn),e(Ee,rl),e(rl,An),e(Ee,bn),e(h,yn),e(h,pe),e(pe,cl),e(cl,In),e(pe,Pn),e(pe,sl),e(sl,Tn),e(pe,Ln),e(h,Nn),e(h,ve),e(ve,il),e(il,$n),e(ve,Rn),e(ve,nl),e(nl,Mn),e(ve,kn),e(h,Gn),e(h,me),e(me,dl),e(dl,Fn),e(me,Un),e(me,fl),e(fl,xn),e(me,Wn),e(h,Hn),e(h,Ce),e(Ce,hl),e(hl,zn),e(Ce,Zn),e(Ce,_l),e(_l,Bn),e(Ce,Kn),n(o,Lr,i),n(o,ft,i),e(ft,ul),e(ul,Yn),e(ft,jn),n(o,Nr,i),n(o,Oe,i),e(Oe,Vn),e(Oe,El),e(El,Xn),e(Oe,qn),n(o,$r,i),n(o,u,i),e(u,ge),e(ge,pl),e(pl,Jn),e(ge,Qn),e(ge,vl),e(vl,ed),e(ge,td),e(u,od),e(u,De),e(De,ml),e(ml,ld),e(De,ad),e(De,Cl),e(Cl,rd),e(De,cd),e(u,sd),e(u,Se),e(Se,Ol),e(Ol,id),e(Se,nd),e(Se,gl),e(gl,dd),e(Se,fd),e(u,hd),e(u,we),e(we,Dl),e(Dl,_d),e(we,ud),e(we,Sl),e(Sl,Ed),e(we,pd),e(u,vd),e(u,Ae),e(Ae,wl),e(wl,md),e(Ae,Cd),e(Ae,Al),e(Al,Od),e(Ae,gd),e(u,Dd),e(u,be),e(be,bl),e(bl,Sd),e(be,wd),e(be,yl),e(yl,Ad),e(be,bd),e(u,yd),e(u,ye),e(ye,Il),e(Il,Id),e(ye,Pd),e(ye,Pl),e(Pl,Td),e(ye,Ld),e(u,Nd),e(u,N),e(N,Tl),e(Tl,$d),e(N,Rd),e(N,Ll),e(Ll,Md),e(N,kd),e(N,Nl),e(Nl,Gd),e(N,Fd),e(u,Ud),e(u,Ie),e(Ie,$l),e($l,xd),e(Ie,Wd),e(Ie,Rl),e(Rl,Hd),e(Ie,zd),n(o,Rr,i),n(o,ht,i),e(ht,Ml),e(Ml,Zd),e(ht,Bd),n(o,Mr,i),n(o,Pe,i),e(Pe,Kd),e(Pe,kl),e(kl,Yd),e(Pe,jd),n(o,kr,i),n(o,A,i),e(A,Te),e(Te,Gl),e(Gl,Vd),e(Te,Xd),e(Te,Fl),e(Fl,qd),e(Te,Jd),e(A,Qd),e(A,Le),e(Le,Ul),e(Ul,ef),e(Le,tf),e(Le,xl),e(xl,of),e(Le,lf),e(A,af),e(A,Ne),e(Ne,Wl),e(Wl,rf),e(Ne,cf),e(Ne,Hl),e(Hl,sf),e(Ne,nf),e(A,df),e(A,$e),e($e,zl),e(zl,ff),e($e,hf),e($e,Zl),e(Zl,_f),e($e,uf),n(o,Gr,i),n(o,_t,i),e(_t,Bl),e(Bl,Ef),e(_t,pf),n(o,Fr,i),n(o,Re,i),e(Re,vf),e(Re,Kl),e(Kl,mf),e(Re,Cf),n(o,Ur,i),n(o,$,i),e($,Me),e(Me,Yl),e(Yl,Of),e(Me,gf),e(Me,jl),e(jl,Df),e(Me,Sf),e($,wf),e($,ke),e(ke,Vl),e(Vl,Af),e(ke,bf),e(ke,Xl),e(Xl,yf),e(ke,If),e($,Pf),e($,Ge),e(Ge,ql),e(ql,Tf),e(Ge,Lf),e(Ge,Jl),e(Jl,Nf),e(Ge,$f),n(o,xr,i),n(o,ut,i),e(ut,Ql),e(Ql,Rf),e(ut,Mf),n(o,Wr,i),n(o,Lt,i),e(Lt,kf),n(o,Hr,i),n(o,Fe,i),e(Fe,Ue),e(Ue,ea),e(ea,Gf),e(Ue,Ff),e(Ue,ta),e(ta,Uf),e(Ue,xf),e(Fe,Wf),e(Fe,xe),e(xe,oa),e(oa,Hf),e(xe,zf),e(xe,la),e(la,Zf),e(xe,Bf),n(o,zr,i),n(o,x,i),e(x,We),e(We,aa),z(Et,aa,null),e(x,Kf),e(x,ra),e(ra,Yf),n(o,Zr,i),n(o,He,i),e(He,ca),e(ca,jf),e(He,Vf),e(He,sa),e(sa,Xf),n(o,Br,i),n(o,ze,i),e(ze,qf),e(ze,ia),e(ia,Jf),e(ze,Qf),n(o,Kr,i),n(o,pt,i),e(pt,na),e(na,eh),e(pt,th),n(o,Yr,i),z(vt,o,i),n(o,jr,i),n(o,mt,i),e(mt,da),e(da,oh),e(mt,lh),n(o,Vr,i),n(o,Ze,i),e(Ze,O),e(O,fa),e(fa,ah),e(O,rh),e(O,ha),e(ha,ch),e(O,sh),e(O,_a),e(_a,ih),e(O,nh),e(O,ua),e(ua,dh),e(O,fh),e(O,Ea),e(Ea,hh),e(O,_h),e(O,pa),e(pa,uh),e(O,Eh),e(Ze,ph),e(Ze,R),e(R,va),e(va,vh),e(R,mh),e(R,ma),e(ma,Ch),e(R,Oh),e(R,Ca),e(Ca,gh),e(R,Dh),Xr=!0},p:HE,i(o){Xr||(Z(Ke.$$.fragment,o),Z(Ye.$$.fragment,o),Z(Xe.$$.fragment,o),Z(Je.$$.fragment,o),Z(ot.$$.fragment,o),Z(at.$$.fragment,o),Z(st.$$.fragment,o),Z(Et.$$.fragment,o),Z(vt.$$.fragment,o),Xr=!0)},o(o){B(Ke.$$.fragment,o),B(Ye.$$.fragment,o),B(Xe.$$.fragment,o),B(Je.$$.fragment,o),B(ot.$$.fragment,o),B(at.$$.fragment,o),B(st.$$.fragment,o),B(Et.$$.fragment,o),B(vt.$$.fragment,o),Xr=!1},d(o){t(M),o&&t(Qa),o&&t(k),K(Ke),o&&t(er),o&&t(bt),o&&t(tr),o&&t(G),K(Ye),o&&t(or),o&&t(je),o&&t(lr),o&&t(V),o&&t(ar),o&&t(X),o&&t(rr),o&&t(Ve),o&&t(cr),K(Xe,o),o&&t(sr),o&&t(qe),o&&t(ir),o&&t(q),o&&t(nr),o&&t(F),K(Je),o&&t(dr),o&&t(Qe),o&&t(fr),o&&t(Q),o&&t(hr),o&&t(ee),o&&t(_r),o&&t(tt),o&&t(ur),K(ot,o),o&&t(Er),o&&t(lt),o&&t(pr),o&&t(te),o&&t(vr),o&&t(U),K(at),o&&t(mr),o&&t(rt),o&&t(Cr),o&&t(le),o&&t(Or),o&&t(yt),o&&t(gr),o&&t(ct),o&&t(Dr),K(st,o),o&&t(Sr),o&&t(it),o&&t(wr),o&&t(ae),o&&t(Ar),o&&t(nt),o&&t(br),o&&t(p),o&&t(yr),o&&t(L),o&&t(Ir),o&&t(dt),o&&t(Pr),o&&t(Tt),o&&t(Tr),o&&t(h),o&&t(Lr),o&&t(ft),o&&t(Nr),o&&t(Oe),o&&t($r),o&&t(u),o&&t(Rr),o&&t(ht),o&&t(Mr),o&&t(Pe),o&&t(kr),o&&t(A),o&&t(Gr),o&&t(_t),o&&t(Fr),o&&t(Re),o&&t(Ur),o&&t($),o&&t(xr),o&&t(ut),o&&t(Wr),o&&t(Lt),o&&t(Hr),o&&t(Fe),o&&t(zr),o&&t(x),K(Et),o&&t(Zr),o&&t(He),o&&t(Br),o&&t(ze),o&&t(Kr),o&&t(pt),o&&t(Yr),K(vt,o),o&&t(jr),o&&t(mt),o&&t(Vr),o&&t(Ze)}}}const BE={local:"the-command-line",sections:[{local:"accelerate-config",title:"accelerate config"},{local:"accelerate-env",title:"accelerate env"},{local:"accelerate-launch",title:"accelerate launch"},{local:"accelerate-test",title:"accelerate test"}],title:"The Command Line "};function KE(Hh){return zE(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class XE extends FE{constructor(M){super();UE(this,M,KE,ZE,xE,{})}}export{XE as default,BE as metadata};
