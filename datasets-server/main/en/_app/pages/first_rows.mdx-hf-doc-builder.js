import{S as Lo,i as Wo,s as Fo,e as n,k as i,w as T,t as o,M as Ko,c as e,d as t,m as h,a as l,x as b,h as p,b as u,G as s,g as f,y as $,q as k,o as D,B as x,v as Jo,L as ql}from"../chunks/vendor-hf-doc-builder.js";import{I as Vo,C as ht}from"../chunks/CodeBlock-hf-doc-builder.js";import{I as Uo,M as ml}from"../chunks/InferenceApi-hf-doc-builder.js";function Yo(v){let c,j;return c=new ht({props:{code:`import json
import requests
headers = {"Authorization": f"Bearer {API_TOKEN}"}
API_URL = "https://datasets-server.huggingface.co/first-rows?dataset=duorc&config=SelfRC&split=train"
def query():
    response = requests.request("GET", API_URL, headers=headers)
    return json.loads(response.content.decode("utf-8"))
data = query()`,highlighted:`<span class="hljs-keyword">import</span> json
<span class="hljs-keyword">import</span> requests
headers = {<span class="hljs-string">&quot;Authorization&quot;</span>: <span class="hljs-string">f&quot;Bearer <span class="hljs-subst">{API_TOKEN}</span>&quot;</span>}
API_URL = <span class="hljs-string">&quot;https://datasets-server.huggingface.co/first-rows?dataset=duorc&amp;config=SelfRC&amp;split=train&quot;</span>
<span class="hljs-keyword">def</span> <span class="hljs-title function_">query</span>():
    response = requests.request(<span class="hljs-string">&quot;GET&quot;</span>, API_URL, headers=headers)
    <span class="hljs-keyword">return</span> json.loads(response.content.decode(<span class="hljs-string">&quot;utf-8&quot;</span>))
data = query()`}}),{c(){T(c.$$.fragment)},l(r){b(c.$$.fragment,r)},m(r,g){$(c,r,g),j=!0},p:ql,i(r){j||(k(c.$$.fragment,r),j=!0)},o(r){D(c.$$.fragment,r),j=!1},d(r){x(c,r)}}}function Qo(v){let c,j;return c=new ml({props:{$$slots:{default:[Yo]},$$scope:{ctx:v}}}),{c(){T(c.$$.fragment)},l(r){b(c.$$.fragment,r)},m(r,g){$(c,r,g),j=!0},p(r,g){const w={};g&2&&(w.$$scope={dirty:g,ctx:r}),c.$set(w)},i(r){j||(k(c.$$.fragment,r),j=!0)},o(r){D(c.$$.fragment,r),j=!1},d(r){x(c,r)}}}function Xo(v){let c,j;return c=new ht({props:{code:`import fetch from "node-fetch";
async function query(data) {
    const response = await fetch(
        "https://datasets-server.huggingface.co/first-rows?dataset=duorc&config=SelfRC&split=train",
        {
            headers: { Authorization: \`Bearer \${API_TOKEN}\` },
            method: "GET"
        }
    );
    const result = await response.json();
    return result;
}
query().then((response) => {
    console.log(JSON.stringify(response));
});`,highlighted:`<span class="hljs-keyword">import</span> fetch <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;node-fetch&quot;</span>;
<span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">query</span>(<span class="hljs-params">data</span>) {
    <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(
        <span class="hljs-string">&quot;https://datasets-server.huggingface.co/first-rows?dataset=duorc&amp;config=SelfRC&amp;split=train&quot;</span>,
        {
            <span class="hljs-attr">headers</span>: { <span class="hljs-title class_">Authorization</span>: <span class="hljs-string">\`Bearer <span class="hljs-subst">\${API_TOKEN}</span>\`</span> },
            <span class="hljs-attr">method</span>: <span class="hljs-string">&quot;GET&quot;</span>
        }
    );
    <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">json</span>();
    <span class="hljs-keyword">return</span> result;
}
<span class="hljs-title function_">query</span>().<span class="hljs-title function_">then</span>(<span class="hljs-function">(<span class="hljs-params">response</span>) =&gt;</span> {
    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(response));
});`}}),{c(){T(c.$$.fragment)},l(r){b(c.$$.fragment,r)},m(r,g){$(c,r,g),j=!0},p:ql,i(r){j||(k(c.$$.fragment,r),j=!0)},o(r){D(c.$$.fragment,r),j=!1},d(r){x(c,r)}}}function Zo(v){let c,j;return c=new ml({props:{$$slots:{default:[Xo]},$$scope:{ctx:v}}}),{c(){T(c.$$.fragment)},l(r){b(c.$$.fragment,r)},m(r,g){$(c,r,g),j=!0},p(r,g){const w={};g&2&&(w.$$scope={dirty:g,ctx:r}),c.$set(w)},i(r){j||(k(c.$$.fragment,r),j=!0)},o(r){D(c.$$.fragment,r),j=!1},d(r){x(c,r)}}}function sp(v){let c,j;return c=new ht({props:{code:`curl https://datasets-server.huggingface.co/first-rows?dataset=duorc&config=SelfRC&split=train \\
        -X GET \\
        -H "Authorization: Bearer \${API_TOKEN}"`,highlighted:`curl https://datasets-server.huggingface.co/first-rows?dataset=duorc&amp;config=SelfRC&amp;<span class="hljs-built_in">split</span>=train \\
        -X GET \\
        -H <span class="hljs-string">&quot;Authorization: Bearer <span class="hljs-variable">\${API_TOKEN}</span>&quot;</span>`}}),{c(){T(c.$$.fragment)},l(r){b(c.$$.fragment,r)},m(r,g){$(c,r,g),j=!0},p:ql,i(r){j||(k(c.$$.fragment,r),j=!0)},o(r){D(c.$$.fragment,r),j=!1},d(r){x(c,r)}}}function tp(v){let c,j;return c=new ml({props:{$$slots:{default:[sp]},$$scope:{ctx:v}}}),{c(){T(c.$$.fragment)},l(r){b(c.$$.fragment,r)},m(r,g){$(c,r,g),j=!0},p(r,g){const w={};g&2&&(w.$$scope={dirty:g,ctx:r}),c.$set(w)},i(r){j||(k(c.$$.fragment,r),j=!0)},o(r){D(c.$$.fragment,r),j=!1},d(r){x(c,r)}}}function ap(v){let c,j,r,g,w,J,Ka,dt,Ja,sa,R,Ua,ft,Ya,Qa,Os,Xa,Za,ta,U,aa,As,sn,na,N,jt,Y,Ss,tn,an,gt,nn,S,Q,X,qt,en,ln,on,M,pn,mt,rn,un,_t,cn,hn,Z,ss,wt,dn,fn,jn,ts,gn,yt,qn,mn,as,ns,vt,_n,wn,yn,es,vn,Et,En,ea,m,Tn,ls,bn,$n,os,kn,Dn,ps,xn,Rn,rs,On,An,us,Sn,Mn,la,I,oa,q,Pn,Tt,Cn,Hn,cs,Nn,In,bt,Gn,Bn,$t,zn,Vn,kt,Ln,Wn,Dt,Fn,Kn,xt,Jn,Un,pa,G,Rt,is,Ms,Yn,Qn,Ot,Xn,y,hs,Ps,At,Zn,se,Cs,te,ae,ds,Hs,St,ne,ee,Ns,le,oe,fs,Is,Mt,pe,re,Gs,ue,ce,js,Bs,Pt,ie,he,zs,de,fe,gs,Vs,Ct,je,ge,Ls,qe,ra,Ws,me,ua,B,Ht,qs,Fs,_e,we,Nt,ye,P,ms,Ks,It,ve,Ee,Js,Te,be,_s,Us,Gt,$e,ke,Ys,De,xe,ws,Qs,Bt,Re,Oe,z,Ae,ys,Se,Me,ca,Xs,Pe,ia,V,zt,vs,Zs,Ce,He,Vt,Ne,C,Es,st,Lt,Ie,Ge,tt,Be,ze,Ts,at,Wt,Ve,Le,nt,We,Fe,bs,et,Ft,Ke,Je,L,Ue,lt,Ye,Qe,ha,O,Xe,Kt,Ze,sl,Jt,tl,al,da,$s,fa,H,W,Ut,ks,nl,Yt,el,ja,ot,ll,ga,F,ol,Qt,pl,rl,qa,K,ul,Ds,Xt,cl,il,ma,xs,_a;return J=new Vo({}),U=new ht({props:{code:"https://datasets-server.huggingface.co/first-rows?dataset={dataset}&config={config}&split={split}",highlighted:'https://datasets-server.huggingface.<span class="hljs-keyword">co</span>/<span class="hljs-keyword">first</span>-rows?dataset={dataset}&amp;config={config}&amp;<span class="hljs-keyword">split</span>={<span class="hljs-keyword">split</span>}'}}),I=new Uo({props:{python:!0,js:!0,curl:!0,$$slots:{curl:[tp],js:[Zo],python:[Qo]},$$scope:{ctx:v}}}),$s=new ht({props:{code:`{
  "dataset": "duorc",
  "config": "SelfRC",
  "split": "train",
  "features": [
    {
      "feature_idx": 0,
      "name": "plot_id",
      "type": { "dtype": "string", "id": null, "_type": "Value" }
    },
    {
      "feature_idx": 1,
      "name": "plot",
      "type": { "dtype": "string", "id": null, "_type": "Value" }
    },
    {
      "feature_idx": 2,
      "name": "title",
      "type": { "dtype": "string", "id": null, "_type": "Value" }
    },
    {
      "feature_idx": 3,
      "name": "question_id",
      "type": { "dtype": "string", "id": null, "_type": "Value" }
    },
    {
      "feature_idx": 4,
      "name": "question",
      "type": { "dtype": "string", "id": null, "_type": "Value" }
    },
    {
      "feature_idx": 5,
      "name": "answers",
      "type": {
        "feature": { "dtype": "string", "id": null, "_type": "Value" },
        "length": -1,
        "id": null,
        "_type": "Sequence"
      }
    },
    {
      "feature_idx": 6,
      "name": "no_answer",
      "type": { "dtype": "bool", "id": null, "_type": "Value" }
    }
  ],
  "rows": [
    {
      "row_idx": 0,
      "row": {
        "plot_id": "/m/03vyhn",
        "plot": "200 years in the future, Mars has been colonized by a high-tech company.\\nMelanie Ballard (Natasha Henstridge) arrives by train to a Mars mining camp which has cut all communication links with the company headquarters. She's not alone, as she is with a group of fellow police officers. They find the mining camp deserted except for a person in the prison, Desolation Williams (Ice Cube), who seems to laugh about them because they are all going to die. They were supposed to take Desolation to headquarters, but decide to explore first to find out what happened.They find a man inside an encapsulated mining car, who tells them not to open it. However, they do and he tries to kill them. One of the cops witnesses strange men with deep scarred and heavily tattooed faces killing the remaining survivors. The cops realise they need to leave the place fast.Desolation explains that the miners opened a kind of Martian construction in the soil which unleashed red dust. Those who breathed that dust became violent psychopaths who started to build weapons and kill the uninfected. They changed genetically, becoming distorted but much stronger.The cops and Desolation leave the prison with difficulty, and devise a plan to kill all the genetically modified ex-miners on the way out. However, the plan goes awry, and only Melanie and Desolation reach headquarters alive. Melanie realises that her bosses won't ever believe her. However, the red dust eventually arrives to headquarters, and Melanie and Desolation need to fight once again.",
        "title": "Ghosts of Mars",
        "question_id": "b440de7d-9c3f-841c-eaec-a14bdff950d1",
        "question": "How did the police arrive at the Mars mining camp?",
        "answers": ["They arrived by train."],
        "no_answer": false
      },
      "truncated_cells": []
    },
    {
      "row_idx": 1,
      "row": {
        "plot_id": "/m/03vyhn",
        "plot": "200 years in the future, Mars has been colonized by a high-tech company.\\nMelanie Ballard (Natasha Henstridge) arrives by train to a Mars mining camp which has cut all communication links with the company headquarters. She's not alone, as she is with a group of fellow police officers. They find the mining camp deserted except for a person in the prison, Desolation Williams (Ice Cube), who seems to laugh about them because they are all going to die. They were supposed to take Desolation to headquarters, but decide to explore first to find out what happened.They find a man inside an encapsulated mining car, who tells them not to open it. However, they do and he tries to kill them. One of the cops witnesses strange men with deep scarred and heavily tattooed faces killing the remaining survivors. The cops realise they need to leave the place fast.Desolation explains that the miners opened a kind of Martian construction in the soil which unleashed red dust. Those who breathed that dust became violent psychopaths who started to build weapons and kill the uninfected. They changed genetically, becoming distorted but much stronger.The cops and Desolation leave the prison with difficulty, and devise a plan to kill all the genetically modified ex-miners on the way out. However, the plan goes awry, and only Melanie and Desolation reach headquarters alive. Melanie realises that her bosses won't ever believe her. However, the red dust eventually arrives to headquarters, and Melanie and Desolation need to fight once again.",
        "title": "Ghosts of Mars",
        "question_id": "a9f95c0d-121f-3ca9-1595-d497dc8bc56c",
        "question": "Who has colonized Mars 200 years in the future?",
        "answers": [
          "A high-tech company has colonized Mars 200 years in the future."
        ],
        "no_answer": false
      },
      "truncated_cells": []
    }
    ...
  ]
}`,highlighted:`<span class="hljs-punctuation">{</span>
  <span class="hljs-attr">&quot;dataset&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;duorc&quot;</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;config&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;SelfRC&quot;</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;split&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;train&quot;</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;features&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>
    <span class="hljs-punctuation">{</span>
      <span class="hljs-attr">&quot;feature_idx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;plot_id&quot;</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-attr">&quot;dtype&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;string&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">null</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;_type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Value&quot;</span> <span class="hljs-punctuation">}</span>
    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
    <span class="hljs-punctuation">{</span>
      <span class="hljs-attr">&quot;feature_idx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;plot&quot;</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-attr">&quot;dtype&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;string&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">null</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;_type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Value&quot;</span> <span class="hljs-punctuation">}</span>
    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
    <span class="hljs-punctuation">{</span>
      <span class="hljs-attr">&quot;feature_idx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;title&quot;</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-attr">&quot;dtype&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;string&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">null</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;_type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Value&quot;</span> <span class="hljs-punctuation">}</span>
    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
    <span class="hljs-punctuation">{</span>
      <span class="hljs-attr">&quot;feature_idx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;question_id&quot;</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-attr">&quot;dtype&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;string&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">null</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;_type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Value&quot;</span> <span class="hljs-punctuation">}</span>
    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
    <span class="hljs-punctuation">{</span>
      <span class="hljs-attr">&quot;feature_idx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;question&quot;</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-attr">&quot;dtype&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;string&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">null</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;_type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Value&quot;</span> <span class="hljs-punctuation">}</span>
    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
    <span class="hljs-punctuation">{</span>
      <span class="hljs-attr">&quot;feature_idx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;answers&quot;</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
        <span class="hljs-attr">&quot;feature&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-attr">&quot;dtype&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;string&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">null</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;_type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Value&quot;</span> <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;length&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">-1</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">null</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;_type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Sequence&quot;</span>
      <span class="hljs-punctuation">}</span>
    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
    <span class="hljs-punctuation">{</span>
      <span class="hljs-attr">&quot;feature_idx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">6</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;no_answer&quot;</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-attr">&quot;dtype&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;bool&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">null</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;_type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Value&quot;</span> <span class="hljs-punctuation">}</span>
    <span class="hljs-punctuation">}</span>
  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>
  <span class="hljs-attr">&quot;rows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>
    <span class="hljs-punctuation">{</span>
      <span class="hljs-attr">&quot;row_idx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;row&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
        <span class="hljs-attr">&quot;plot_id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/m/03vyhn&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;plot&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;200 years in the future, Mars has been colonized by a high-tech company.\\nMelanie Ballard (Natasha Henstridge) arrives by train to a Mars mining camp which has cut all communication links with the company headquarters. She&#x27;s not alone, as she is with a group of fellow police officers. They find the mining camp deserted except for a person in the prison, Desolation Williams (Ice Cube), who seems to laugh about them because they are all going to die. They were supposed to take Desolation to headquarters, but decide to explore first to find out what happened.They find a man inside an encapsulated mining car, who tells them not to open it. However, they do and he tries to kill them. One of the cops witnesses strange men with deep scarred and heavily tattooed faces killing the remaining survivors. The cops realise they need to leave the place fast.Desolation explains that the miners opened a kind of Martian construction in the soil which unleashed red dust. Those who breathed that dust became violent psychopaths who started to build weapons and kill the uninfected. They changed genetically, becoming distorted but much stronger.The cops and Desolation leave the prison with difficulty, and devise a plan to kill all the genetically modified ex-miners on the way out. However, the plan goes awry, and only Melanie and Desolation reach headquarters alive. Melanie realises that her bosses won&#x27;t ever believe her. However, the red dust eventually arrives to headquarters, and Melanie and Desolation need to fight once again.&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Ghosts of Mars&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;question_id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;b440de7d-9c3f-841c-eaec-a14bdff950d1&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;question&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;How did the police arrive at the Mars mining camp?&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;answers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;They arrived by train.&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;no_answer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">false</span>
      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;truncated_cells&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span>
    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
    <span class="hljs-punctuation">{</span>
      <span class="hljs-attr">&quot;row_idx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;row&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
        <span class="hljs-attr">&quot;plot_id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/m/03vyhn&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;plot&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;200 years in the future, Mars has been colonized by a high-tech company.\\nMelanie Ballard (Natasha Henstridge) arrives by train to a Mars mining camp which has cut all communication links with the company headquarters. She&#x27;s not alone, as she is with a group of fellow police officers. They find the mining camp deserted except for a person in the prison, Desolation Williams (Ice Cube), who seems to laugh about them because they are all going to die. They were supposed to take Desolation to headquarters, but decide to explore first to find out what happened.They find a man inside an encapsulated mining car, who tells them not to open it. However, they do and he tries to kill them. One of the cops witnesses strange men with deep scarred and heavily tattooed faces killing the remaining survivors. The cops realise they need to leave the place fast.Desolation explains that the miners opened a kind of Martian construction in the soil which unleashed red dust. Those who breathed that dust became violent psychopaths who started to build weapons and kill the uninfected. They changed genetically, becoming distorted but much stronger.The cops and Desolation leave the prison with difficulty, and devise a plan to kill all the genetically modified ex-miners on the way out. However, the plan goes awry, and only Melanie and Desolation reach headquarters alive. Melanie realises that her bosses won&#x27;t ever believe her. However, the red dust eventually arrives to headquarters, and Melanie and Desolation need to fight once again.&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Ghosts of Mars&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;question_id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;a9f95c0d-121f-3ca9-1595-d497dc8bc56c&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;question&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Who has colonized Mars 200 years in the future?&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;answers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>
          <span class="hljs-string">&quot;A high-tech company has colonized Mars 200 years in the future.&quot;</span>
        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;no_answer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">false</span>
      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;truncated_cells&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span>
    <span class="hljs-punctuation">}</span>
    ...
  <span class="hljs-punctuation">]</span>
<span class="hljs-punctuation">}</span>`}}),ks=new Vo({}),xs=new ht({props:{code:`  ...
  "rows": [
    {
      "row_idx": 0,
      "row": {
        "start": "2016-07-01T00:00:00",
        "target": "[38.6619987487793,38.222999572753906,37.34400177001953,37.124000549316406,37.124000549316406,36.9039",
        "feat_static_cat": [0],
        "feat_dynamic_real": "[[41.130001068115234,39.62200164794922,38.86800003051758,35.518001556396484,37.52799987792969,37.611",
        "item_id": "OT"
      },
      "truncated_cells": ["target", "feat_dynamic_real"]
    },
    {
      "row_idx": 1,
      "row": {
        "start": "2016-07-01T00:00:00",
        "target": "[38.6619987487793,38.222999572753906,37.34400177001953,37.124000549316406,37.124000549316406,36.9039",
        "feat_static_cat": [0],
        "feat_dynamic_real": "[[41.130001068115234,39.62200164794922,38.86800003051758,35.518001556396484,37.52799987792969,37.611",
        "item_id": "OT"
      },
      "truncated_cells": ["target", "feat_dynamic_real"]
    },
  ...`,highlighted:`  ...
  <span class="hljs-attr">&quot;rows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>
    <span class="hljs-punctuation">{</span>
      <span class="hljs-attr">&quot;row_idx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;row&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
        <span class="hljs-attr">&quot;start&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2016-07-01T00:00:00&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;target&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;[38.6619987487793,38.222999572753906,37.34400177001953,37.124000549316406,37.124000549316406,36.9039&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;feat_static_cat&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-number">0</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;feat_dynamic_real&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;[[41.130001068115234,39.62200164794922,38.86800003051758,35.518001556396484,37.52799987792969,37.611&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;item_id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;OT&quot;</span>
      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;truncated_cells&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;target&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;feat_dynamic_real&quot;</span><span class="hljs-punctuation">]</span>
    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
    <span class="hljs-punctuation">{</span>
      <span class="hljs-attr">&quot;row_idx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;row&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>
        <span class="hljs-attr">&quot;start&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2016-07-01T00:00:00&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;target&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;[38.6619987487793,38.222999572753906,37.34400177001953,37.124000549316406,37.124000549316406,36.9039&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;feat_static_cat&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-number">0</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;feat_dynamic_real&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;[[41.130001068115234,39.62200164794922,38.86800003051758,35.518001556396484,37.52799987792969,37.611&quot;</span><span class="hljs-punctuation">,</span>
        <span class="hljs-attr">&quot;item_id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;OT&quot;</span>
      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
      <span class="hljs-attr">&quot;truncated_cells&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;target&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;feat_dynamic_real&quot;</span><span class="hljs-punctuation">]</span>
    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>
  ...`}}),{c(){c=n("meta"),j=i(),r=n("h1"),g=n("a"),w=n("span"),T(J.$$.fragment),Ka=i(),dt=n("span"),Ja=o("First rows"),sa=i(),R=n("p"),Ua=o("The endpoint "),ft=n("code"),Ya=o("/first-rows"),Qa=o(" provides the columns and the first rows of a dataset "),Os=n("a"),Xa=o("split"),Za=o("."),ta=i(),T(U.$$.fragment),aa=i(),As=n("p"),sn=o("The endpoint takes three query parameters:"),na=i(),N=n("table"),jt=n("thead"),Y=n("tr"),Ss=n("th"),tn=o("Query parameters"),an=i(),gt=n("th"),nn=i(),S=n("tbody"),Q=n("tr"),X=n("td"),qt=n("strong"),en=o("dataset"),ln=o(" (required)"),on=i(),M=n("td"),pn=o("the dataset name, for example "),mt=n("code"),rn=o("glue"),un=o(" or "),_t=n("code"),cn=o("mozilla-foundation/common_voice_10_0"),hn=i(),Z=n("tr"),ss=n("td"),wt=n("strong"),dn=o("config"),fn=o(" (required)"),jn=i(),ts=n("td"),gn=o("the configuration name, for example "),yt=n("code"),qn=o("cola"),mn=i(),as=n("tr"),ns=n("td"),vt=n("strong"),_n=o("split"),wn=o(" (required)"),yn=i(),es=n("td"),vn=o("the split name, for example "),Et=n("code"),En=o("train"),ea=i(),m=n("p"),Tn=o("Try it in your "),ls=n("a"),bn=o("browser"),$n=o(", with "),os=n("a"),kn=o("Postman"),Dn=o(", with "),ps=n("a"),xn=o("RapidAPI"),Rn=o(", with "),rs=n("a"),On=o("ReDoc"),An=o(", or programmatically. Pass your API token if you query a "),us=n("a"),Sn=o("gated dataset"),Mn=o("."),la=i(),T(I.$$.fragment),oa=i(),q=n("p"),Pn=o("The response is a JSON. The first 100 rows, or all the rows if the split contains less than 100 rows, are returned under the "),Tt=n("code"),Cn=o("rows"),Hn=o(" key. The list of columns (called "),cs=n("a"),Nn=o("features"),In=o(" to stick with the "),bt=n("code"),Gn=o("datasets"),Bn=o(" library) contain the data type and are returned under the "),$t=n("code"),zn=o("features"),Vn=o(" key. The "),kt=n("code"),Ln=o("dataset"),Wn=o(", "),Dt=n("code"),Fn=o("config"),Kn=o(" and "),xt=n("code"),Jn=o("split"),Un=o(" fields are also provided in the response."),pa=i(),G=n("table"),Rt=n("thead"),is=n("tr"),Ms=n("th"),Yn=o("Response"),Qn=i(),Ot=n("th"),Xn=i(),y=n("tbody"),hs=n("tr"),Ps=n("td"),At=n("strong"),Zn=o("dataset"),se=i(),Cs=n("td"),te=o("the dataset name"),ae=i(),ds=n("tr"),Hs=n("td"),St=n("strong"),ne=o("config"),ee=i(),Ns=n("td"),le=o("the configuration name"),oe=i(),fs=n("tr"),Is=n("td"),Mt=n("strong"),pe=o("split"),re=i(),Gs=n("td"),ue=o("the split name"),ce=i(),js=n("tr"),Bs=n("td"),Pt=n("strong"),ie=o("features"),he=i(),zs=n("td"),de=o("the list of features"),fe=i(),gs=n("tr"),Vs=n("td"),Ct=n("strong"),je=o("rows"),ge=i(),Ls=n("td"),qe=o("the list of rows"),ra=i(),Ws=n("p"),me=o("The detail of every feature is:"),ua=i(),B=n("table"),Ht=n("thead"),qs=n("tr"),Fs=n("th"),_e=o("Response: feature fields"),we=i(),Nt=n("th"),ye=i(),P=n("tbody"),ms=n("tr"),Ks=n("td"),It=n("strong"),ve=o("feature_idx"),Ee=i(),Js=n("td"),Te=o("the index of the column"),be=i(),_s=n("tr"),Us=n("td"),Gt=n("strong"),$e=o("name"),ke=i(),Ys=n("td"),De=o("the name of the column"),xe=i(),ws=n("tr"),Qs=n("td"),Bt=n("strong"),Re=o("type"),Oe=i(),z=n("td"),Ae=o("the "),ys=n("a"),Se=o("feature type"),Me=o(" as defined by the \u{1F917} Datasets library"),ca=i(),Xs=n("p"),Pe=o("The detail of every row is:"),ia=i(),V=n("table"),zt=n("thead"),vs=n("tr"),Zs=n("th"),Ce=o("Response: row fields"),He=i(),Vt=n("th"),Ne=i(),C=n("tbody"),Es=n("tr"),st=n("td"),Lt=n("strong"),Ie=o("row_idx"),Ge=i(),tt=n("td"),Be=o("the index of the row"),ze=i(),Ts=n("tr"),at=n("td"),Wt=n("strong"),Ve=o("row"),Le=i(),nt=n("td"),We=o("the content of the row, with one field for each column"),Fe=i(),bs=n("tr"),et=n("td"),Ft=n("strong"),Ke=o("truncated_cells"),Je=i(),L=n("td"),Ue=o("the list of truncated cells. See "),lt=n("a"),Ye=o("Truncated responses"),Qe=o("."),ha=i(),O=n("p"),Xe=o("For example, here are the features and the first rows of the "),Kt=n("code"),Ze=o("duorc"),sl=o(" / "),Jt=n("code"),tl=o("SelfRC"),al=o(" train split."),da=i(),T($s.$$.fragment),fa=i(),H=n("h2"),W=n("a"),Ut=n("span"),T(ks.$$.fragment),nl=i(),Yt=n("span"),el=o("Truncated responses"),ja=i(),ot=n("p"),ll=o("When the response size for 100 rows is too big, the last rows are removed until the response size is under 1MB."),ga=i(),F=n("p"),ol=o("If even the first rows generate a response that does not fit within the limit, the content of the cells themselves is truncated and converted to a string. In this case, the truncated cells are listed in the "),Qt=n("code"),pl=o("truncated_cells"),rl=o(" field."),qa=i(),K=n("p"),ul=o("See for example the "),Ds=n("a"),Xt=n("code"),cl=o("ett"),il=o(" dataset: only 10 rows are returned, and the content of two of the columns are truncated."),ma=i(),T(xs.$$.fragment),this.h()},l(a){const d=Ko('[data-svelte="svelte-1phssyn"]',document.head);c=e(d,"META",{name:!0,content:!0}),d.forEach(t),j=h(a),r=e(a,"H1",{class:!0});var Rs=l(r);g=e(Rs,"A",{id:!0,class:!0,href:!0});var _l=l(g);w=e(_l,"SPAN",{});var wl=l(w);b(J.$$.fragment,wl),wl.forEach(t),_l.forEach(t),Ka=h(Rs),dt=e(Rs,"SPAN",{});var yl=l(dt);Ja=p(yl,"First rows"),yl.forEach(t),Rs.forEach(t),sa=h(a),R=e(a,"P",{});var pt=l(R);Ua=p(pt,"The endpoint "),ft=e(pt,"CODE",{});var vl=l(ft);Ya=p(vl,"/first-rows"),vl.forEach(t),Qa=p(pt," provides the columns and the first rows of a dataset "),Os=e(pt,"A",{href:!0});var El=l(Os);Xa=p(El,"split"),El.forEach(t),Za=p(pt,"."),pt.forEach(t),ta=h(a),b(U.$$.fragment,a),aa=h(a),As=e(a,"P",{});var Tl=l(As);sn=p(Tl,"The endpoint takes three query parameters:"),Tl.forEach(t),na=h(a),N=e(a,"TABLE",{});var wa=l(N);jt=e(wa,"THEAD",{});var bl=l(jt);Y=e(bl,"TR",{});var ya=l(Y);Ss=e(ya,"TH",{align:!0});var $l=l(Ss);tn=p($l,"Query parameters"),$l.forEach(t),an=h(ya),gt=e(ya,"TH",{align:!0}),l(gt).forEach(t),ya.forEach(t),bl.forEach(t),nn=h(wa),S=e(wa,"TBODY",{});var rt=l(S);Q=e(rt,"TR",{});var va=l(Q);X=e(va,"TD",{align:!0});var hl=l(X);qt=e(hl,"STRONG",{});var kl=l(qt);en=p(kl,"dataset"),kl.forEach(t),ln=p(hl," (required)"),hl.forEach(t),on=h(va),M=e(va,"TD",{align:!0});var Zt=l(M);pn=p(Zt,"the dataset name, for example "),mt=e(Zt,"CODE",{});var Dl=l(mt);rn=p(Dl,"glue"),Dl.forEach(t),un=p(Zt," or "),_t=e(Zt,"CODE",{});var xl=l(_t);cn=p(xl,"mozilla-foundation/common_voice_10_0"),xl.forEach(t),Zt.forEach(t),va.forEach(t),hn=h(rt),Z=e(rt,"TR",{});var Ea=l(Z);ss=e(Ea,"TD",{align:!0});var dl=l(ss);wt=e(dl,"STRONG",{});var Rl=l(wt);dn=p(Rl,"config"),Rl.forEach(t),fn=p(dl," (required)"),dl.forEach(t),jn=h(Ea),ts=e(Ea,"TD",{align:!0});var fl=l(ts);gn=p(fl,"the configuration name, for example "),yt=e(fl,"CODE",{});var Ol=l(yt);qn=p(Ol,"cola"),Ol.forEach(t),fl.forEach(t),Ea.forEach(t),mn=h(rt),as=e(rt,"TR",{});var Ta=l(as);ns=e(Ta,"TD",{align:!0});var jl=l(ns);vt=e(jl,"STRONG",{});var Al=l(vt);_n=p(Al,"split"),Al.forEach(t),wn=p(jl," (required)"),jl.forEach(t),yn=h(Ta),es=e(Ta,"TD",{align:!0});var gl=l(es);vn=p(gl,"the split name, for example "),Et=e(gl,"CODE",{});var Sl=l(Et);En=p(Sl,"train"),Sl.forEach(t),gl.forEach(t),Ta.forEach(t),rt.forEach(t),wa.forEach(t),ea=h(a),m=e(a,"P",{});var E=l(m);Tn=p(E,"Try it in your "),ls=e(E,"A",{href:!0,rel:!0});var Ml=l(ls);bn=p(Ml,"browser"),Ml.forEach(t),$n=p(E,", with "),os=e(E,"A",{href:!0,rel:!0});var Pl=l(os);kn=p(Pl,"Postman"),Pl.forEach(t),Dn=p(E,", with "),ps=e(E,"A",{href:!0,rel:!0});var Cl=l(ps);xn=p(Cl,"RapidAPI"),Cl.forEach(t),Rn=p(E,", with "),rs=e(E,"A",{href:!0,rel:!0});var Hl=l(rs);On=p(Hl,"ReDoc"),Hl.forEach(t),An=p(E,", or programmatically. Pass your API token if you query a "),us=e(E,"A",{href:!0,rel:!0});var Nl=l(us);Sn=p(Nl,"gated dataset"),Nl.forEach(t),Mn=p(E,"."),E.forEach(t),la=h(a),b(I.$$.fragment,a),oa=h(a),q=e(a,"P",{});var _=l(q);Pn=p(_,"The response is a JSON. The first 100 rows, or all the rows if the split contains less than 100 rows, are returned under the "),Tt=e(_,"CODE",{});var Il=l(Tt);Cn=p(Il,"rows"),Il.forEach(t),Hn=p(_," key. The list of columns (called "),cs=e(_,"A",{href:!0,rel:!0});var Gl=l(cs);Nn=p(Gl,"features"),Gl.forEach(t),In=p(_," to stick with the "),bt=e(_,"CODE",{});var Bl=l(bt);Gn=p(Bl,"datasets"),Bl.forEach(t),Bn=p(_," library) contain the data type and are returned under the "),$t=e(_,"CODE",{});var zl=l($t);zn=p(zl,"features"),zl.forEach(t),Vn=p(_," key. The "),kt=e(_,"CODE",{});var Vl=l(kt);Ln=p(Vl,"dataset"),Vl.forEach(t),Wn=p(_,", "),Dt=e(_,"CODE",{});var Ll=l(Dt);Fn=p(Ll,"config"),Ll.forEach(t),Kn=p(_," and "),xt=e(_,"CODE",{});var Wl=l(xt);Jn=p(Wl,"split"),Wl.forEach(t),Un=p(_," fields are also provided in the response."),_.forEach(t),pa=h(a),G=e(a,"TABLE",{});var ba=l(G);Rt=e(ba,"THEAD",{});var Fl=l(Rt);is=e(Fl,"TR",{});var $a=l(is);Ms=e($a,"TH",{align:!0});var Kl=l(Ms);Yn=p(Kl,"Response"),Kl.forEach(t),Qn=h($a),Ot=e($a,"TH",{align:!0}),l(Ot).forEach(t),$a.forEach(t),Fl.forEach(t),Xn=h(ba),y=e(ba,"TBODY",{});var A=l(y);hs=e(A,"TR",{});var ka=l(hs);Ps=e(ka,"TD",{align:!0});var Jl=l(Ps);At=e(Jl,"STRONG",{});var Ul=l(At);Zn=p(Ul,"dataset"),Ul.forEach(t),Jl.forEach(t),se=h(ka),Cs=e(ka,"TD",{align:!0});var Yl=l(Cs);te=p(Yl,"the dataset name"),Yl.forEach(t),ka.forEach(t),ae=h(A),ds=e(A,"TR",{});var Da=l(ds);Hs=e(Da,"TD",{align:!0});var Ql=l(Hs);St=e(Ql,"STRONG",{});var Xl=l(St);ne=p(Xl,"config"),Xl.forEach(t),Ql.forEach(t),ee=h(Da),Ns=e(Da,"TD",{align:!0});var Zl=l(Ns);le=p(Zl,"the configuration name"),Zl.forEach(t),Da.forEach(t),oe=h(A),fs=e(A,"TR",{});var xa=l(fs);Is=e(xa,"TD",{align:!0});var so=l(Is);Mt=e(so,"STRONG",{});var to=l(Mt);pe=p(to,"split"),to.forEach(t),so.forEach(t),re=h(xa),Gs=e(xa,"TD",{align:!0});var ao=l(Gs);ue=p(ao,"the split name"),ao.forEach(t),xa.forEach(t),ce=h(A),js=e(A,"TR",{});var Ra=l(js);Bs=e(Ra,"TD",{align:!0});var no=l(Bs);Pt=e(no,"STRONG",{});var eo=l(Pt);ie=p(eo,"features"),eo.forEach(t),no.forEach(t),he=h(Ra),zs=e(Ra,"TD",{align:!0});var lo=l(zs);de=p(lo,"the list of features"),lo.forEach(t),Ra.forEach(t),fe=h(A),gs=e(A,"TR",{});var Oa=l(gs);Vs=e(Oa,"TD",{align:!0});var oo=l(Vs);Ct=e(oo,"STRONG",{});var po=l(Ct);je=p(po,"rows"),po.forEach(t),oo.forEach(t),ge=h(Oa),Ls=e(Oa,"TD",{align:!0});var ro=l(Ls);qe=p(ro,"the list of rows"),ro.forEach(t),Oa.forEach(t),A.forEach(t),ba.forEach(t),ra=h(a),Ws=e(a,"P",{});var uo=l(Ws);me=p(uo,"The detail of every feature is:"),uo.forEach(t),ua=h(a),B=e(a,"TABLE",{});var Aa=l(B);Ht=e(Aa,"THEAD",{});var co=l(Ht);qs=e(co,"TR",{});var Sa=l(qs);Fs=e(Sa,"TH",{align:!0});var io=l(Fs);_e=p(io,"Response: feature fields"),io.forEach(t),we=h(Sa),Nt=e(Sa,"TH",{align:!0}),l(Nt).forEach(t),Sa.forEach(t),co.forEach(t),ye=h(Aa),P=e(Aa,"TBODY",{});var ut=l(P);ms=e(ut,"TR",{});var Ma=l(ms);Ks=e(Ma,"TD",{align:!0});var ho=l(Ks);It=e(ho,"STRONG",{});var fo=l(It);ve=p(fo,"feature_idx"),fo.forEach(t),ho.forEach(t),Ee=h(Ma),Js=e(Ma,"TD",{align:!0});var jo=l(Js);Te=p(jo,"the index of the column"),jo.forEach(t),Ma.forEach(t),be=h(ut),_s=e(ut,"TR",{});var Pa=l(_s);Us=e(Pa,"TD",{align:!0});var go=l(Us);Gt=e(go,"STRONG",{});var qo=l(Gt);$e=p(qo,"name"),qo.forEach(t),go.forEach(t),ke=h(Pa),Ys=e(Pa,"TD",{align:!0});var mo=l(Ys);De=p(mo,"the name of the column"),mo.forEach(t),Pa.forEach(t),xe=h(ut),ws=e(ut,"TR",{});var Ca=l(ws);Qs=e(Ca,"TD",{align:!0});var _o=l(Qs);Bt=e(_o,"STRONG",{});var wo=l(Bt);Re=p(wo,"type"),wo.forEach(t),_o.forEach(t),Oe=h(Ca),z=e(Ca,"TD",{align:!0});var Ha=l(z);Ae=p(Ha,"the "),ys=e(Ha,"A",{href:!0,rel:!0});var yo=l(ys);Se=p(yo,"feature type"),yo.forEach(t),Me=p(Ha," as defined by the \u{1F917} Datasets library"),Ha.forEach(t),Ca.forEach(t),ut.forEach(t),Aa.forEach(t),ca=h(a),Xs=e(a,"P",{});var vo=l(Xs);Pe=p(vo,"The detail of every row is:"),vo.forEach(t),ia=h(a),V=e(a,"TABLE",{});var Na=l(V);zt=e(Na,"THEAD",{});var Eo=l(zt);vs=e(Eo,"TR",{});var Ia=l(vs);Zs=e(Ia,"TH",{align:!0});var To=l(Zs);Ce=p(To,"Response: row fields"),To.forEach(t),He=h(Ia),Vt=e(Ia,"TH",{align:!0}),l(Vt).forEach(t),Ia.forEach(t),Eo.forEach(t),Ne=h(Na),C=e(Na,"TBODY",{});var ct=l(C);Es=e(ct,"TR",{});var Ga=l(Es);st=e(Ga,"TD",{align:!0});var bo=l(st);Lt=e(bo,"STRONG",{});var $o=l(Lt);Ie=p($o,"row_idx"),$o.forEach(t),bo.forEach(t),Ge=h(Ga),tt=e(Ga,"TD",{align:!0});var ko=l(tt);Be=p(ko,"the index of the row"),ko.forEach(t),Ga.forEach(t),ze=h(ct),Ts=e(ct,"TR",{});var Ba=l(Ts);at=e(Ba,"TD",{align:!0});var Do=l(at);Wt=e(Do,"STRONG",{});var xo=l(Wt);Ve=p(xo,"row"),xo.forEach(t),Do.forEach(t),Le=h(Ba),nt=e(Ba,"TD",{align:!0});var Ro=l(nt);We=p(Ro,"the content of the row, with one field for each column"),Ro.forEach(t),Ba.forEach(t),Fe=h(ct),bs=e(ct,"TR",{});var za=l(bs);et=e(za,"TD",{align:!0});var Oo=l(et);Ft=e(Oo,"STRONG",{});var Ao=l(Ft);Ke=p(Ao,"truncated_cells"),Ao.forEach(t),Oo.forEach(t),Je=h(za),L=e(za,"TD",{align:!0});var Va=l(L);Ue=p(Va,"the list of truncated cells. See "),lt=e(Va,"A",{href:!0});var So=l(lt);Ye=p(So,"Truncated responses"),So.forEach(t),Qe=p(Va,"."),Va.forEach(t),za.forEach(t),ct.forEach(t),Na.forEach(t),ha=h(a),O=e(a,"P",{});var it=l(O);Xe=p(it,"For example, here are the features and the first rows of the "),Kt=e(it,"CODE",{});var Mo=l(Kt);Ze=p(Mo,"duorc"),Mo.forEach(t),sl=p(it," / "),Jt=e(it,"CODE",{});var Po=l(Jt);tl=p(Po,"SelfRC"),Po.forEach(t),al=p(it," train split."),it.forEach(t),da=h(a),b($s.$$.fragment,a),fa=h(a),H=e(a,"H2",{class:!0});var La=l(H);W=e(La,"A",{id:!0,class:!0,href:!0});var Co=l(W);Ut=e(Co,"SPAN",{});var Ho=l(Ut);b(ks.$$.fragment,Ho),Ho.forEach(t),Co.forEach(t),nl=h(La),Yt=e(La,"SPAN",{});var No=l(Yt);el=p(No,"Truncated responses"),No.forEach(t),La.forEach(t),ja=h(a),ot=e(a,"P",{});var Io=l(ot);ll=p(Io,"When the response size for 100 rows is too big, the last rows are removed until the response size is under 1MB."),Io.forEach(t),ga=h(a),F=e(a,"P",{});var Wa=l(F);ol=p(Wa,"If even the first rows generate a response that does not fit within the limit, the content of the cells themselves is truncated and converted to a string. In this case, the truncated cells are listed in the "),Qt=e(Wa,"CODE",{});var Go=l(Qt);pl=p(Go,"truncated_cells"),Go.forEach(t),rl=p(Wa," field."),Wa.forEach(t),qa=h(a),K=e(a,"P",{});var Fa=l(K);ul=p(Fa,"See for example the "),Ds=e(Fa,"A",{href:!0,rel:!0});var Bo=l(Ds);Xt=e(Bo,"CODE",{});var zo=l(Xt);cl=p(zo,"ett"),zo.forEach(t),Bo.forEach(t),il=p(Fa," dataset: only 10 rows are returned, and the content of two of the columns are truncated."),Fa.forEach(t),ma=h(a),b(xs.$$.fragment,a),this.h()},h(){u(c,"name","hf:doc:metadata"),u(c,"content",JSON.stringify(np)),u(g,"id","first-rows"),u(g,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(g,"href","#first-rows"),u(r,"class","relative group"),u(Os,"href","./splits"),u(Ss,"align","left"),u(gt,"align","left"),u(X,"align","left"),u(M,"align","left"),u(ss,"align","left"),u(ts,"align","left"),u(ns,"align","left"),u(es,"align","left"),u(ls,"href","https://datasets-server.huggingface.co/first-rows?dataset=duorc&config=SelfRC&split=train"),u(ls,"rel","nofollow"),u(os,"href","https://www.postman.com/huggingface/workspace/hugging-face-apis/request/23242779-32d6a8be-b800-446a-8cee-f6b5ca1710df"),u(os,"rel","nofollow"),u(ps,"href","https://rapidapi.com/hugging-face-hugging-face-default/api/hugging-face-datasets-api"),u(ps,"rel","nofollow"),u(rs,"href","https://redocly.github.io/redoc/?url=https://datasets-server.huggingface.co/openapi.json#operation/listFirstRows"),u(rs,"rel","nofollow"),u(us,"href","https://huggingface.co/docs/hub/datasets-gated"),u(us,"rel","nofollow"),u(cs,"href","https://huggingface.co/docs/datasets/about_dataset_features"),u(cs,"rel","nofollow"),u(Ms,"align","left"),u(Ot,"align","left"),u(Ps,"align","left"),u(Cs,"align","left"),u(Hs,"align","left"),u(Ns,"align","left"),u(Is,"align","left"),u(Gs,"align","left"),u(Bs,"align","left"),u(zs,"align","left"),u(Vs,"align","left"),u(Ls,"align","left"),u(Fs,"align","left"),u(Nt,"align","left"),u(Ks,"align","left"),u(Js,"align","left"),u(Us,"align","left"),u(Ys,"align","left"),u(Qs,"align","left"),u(ys,"href","https://huggingface.co/docs/datasets/about_dataset_features"),u(ys,"rel","nofollow"),u(z,"align","left"),u(Zs,"align","left"),u(Vt,"align","left"),u(st,"align","left"),u(tt,"align","left"),u(at,"align","left"),u(nt,"align","left"),u(et,"align","left"),u(lt,"href","#truncated-responses"),u(L,"align","left"),u(W,"id","truncated-responses"),u(W,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(W,"href","#truncated-responses"),u(H,"class","relative group"),u(Ds,"href","https://datasets-server.huggingface.co/first-rows?dataset=ett&config=m2&split=test"),u(Ds,"rel","nofollow")},m(a,d){s(document.head,c),f(a,j,d),f(a,r,d),s(r,g),s(g,w),$(J,w,null),s(r,Ka),s(r,dt),s(dt,Ja),f(a,sa,d),f(a,R,d),s(R,Ua),s(R,ft),s(ft,Ya),s(R,Qa),s(R,Os),s(Os,Xa),s(R,Za),f(a,ta,d),$(U,a,d),f(a,aa,d),f(a,As,d),s(As,sn),f(a,na,d),f(a,N,d),s(N,jt),s(jt,Y),s(Y,Ss),s(Ss,tn),s(Y,an),s(Y,gt),s(N,nn),s(N,S),s(S,Q),s(Q,X),s(X,qt),s(qt,en),s(X,ln),s(Q,on),s(Q,M),s(M,pn),s(M,mt),s(mt,rn),s(M,un),s(M,_t),s(_t,cn),s(S,hn),s(S,Z),s(Z,ss),s(ss,wt),s(wt,dn),s(ss,fn),s(Z,jn),s(Z,ts),s(ts,gn),s(ts,yt),s(yt,qn),s(S,mn),s(S,as),s(as,ns),s(ns,vt),s(vt,_n),s(ns,wn),s(as,yn),s(as,es),s(es,vn),s(es,Et),s(Et,En),f(a,ea,d),f(a,m,d),s(m,Tn),s(m,ls),s(ls,bn),s(m,$n),s(m,os),s(os,kn),s(m,Dn),s(m,ps),s(ps,xn),s(m,Rn),s(m,rs),s(rs,On),s(m,An),s(m,us),s(us,Sn),s(m,Mn),f(a,la,d),$(I,a,d),f(a,oa,d),f(a,q,d),s(q,Pn),s(q,Tt),s(Tt,Cn),s(q,Hn),s(q,cs),s(cs,Nn),s(q,In),s(q,bt),s(bt,Gn),s(q,Bn),s(q,$t),s($t,zn),s(q,Vn),s(q,kt),s(kt,Ln),s(q,Wn),s(q,Dt),s(Dt,Fn),s(q,Kn),s(q,xt),s(xt,Jn),s(q,Un),f(a,pa,d),f(a,G,d),s(G,Rt),s(Rt,is),s(is,Ms),s(Ms,Yn),s(is,Qn),s(is,Ot),s(G,Xn),s(G,y),s(y,hs),s(hs,Ps),s(Ps,At),s(At,Zn),s(hs,se),s(hs,Cs),s(Cs,te),s(y,ae),s(y,ds),s(ds,Hs),s(Hs,St),s(St,ne),s(ds,ee),s(ds,Ns),s(Ns,le),s(y,oe),s(y,fs),s(fs,Is),s(Is,Mt),s(Mt,pe),s(fs,re),s(fs,Gs),s(Gs,ue),s(y,ce),s(y,js),s(js,Bs),s(Bs,Pt),s(Pt,ie),s(js,he),s(js,zs),s(zs,de),s(y,fe),s(y,gs),s(gs,Vs),s(Vs,Ct),s(Ct,je),s(gs,ge),s(gs,Ls),s(Ls,qe),f(a,ra,d),f(a,Ws,d),s(Ws,me),f(a,ua,d),f(a,B,d),s(B,Ht),s(Ht,qs),s(qs,Fs),s(Fs,_e),s(qs,we),s(qs,Nt),s(B,ye),s(B,P),s(P,ms),s(ms,Ks),s(Ks,It),s(It,ve),s(ms,Ee),s(ms,Js),s(Js,Te),s(P,be),s(P,_s),s(_s,Us),s(Us,Gt),s(Gt,$e),s(_s,ke),s(_s,Ys),s(Ys,De),s(P,xe),s(P,ws),s(ws,Qs),s(Qs,Bt),s(Bt,Re),s(ws,Oe),s(ws,z),s(z,Ae),s(z,ys),s(ys,Se),s(z,Me),f(a,ca,d),f(a,Xs,d),s(Xs,Pe),f(a,ia,d),f(a,V,d),s(V,zt),s(zt,vs),s(vs,Zs),s(Zs,Ce),s(vs,He),s(vs,Vt),s(V,Ne),s(V,C),s(C,Es),s(Es,st),s(st,Lt),s(Lt,Ie),s(Es,Ge),s(Es,tt),s(tt,Be),s(C,ze),s(C,Ts),s(Ts,at),s(at,Wt),s(Wt,Ve),s(Ts,Le),s(Ts,nt),s(nt,We),s(C,Fe),s(C,bs),s(bs,et),s(et,Ft),s(Ft,Ke),s(bs,Je),s(bs,L),s(L,Ue),s(L,lt),s(lt,Ye),s(L,Qe),f(a,ha,d),f(a,O,d),s(O,Xe),s(O,Kt),s(Kt,Ze),s(O,sl),s(O,Jt),s(Jt,tl),s(O,al),f(a,da,d),$($s,a,d),f(a,fa,d),f(a,H,d),s(H,W),s(W,Ut),$(ks,Ut,null),s(H,nl),s(H,Yt),s(Yt,el),f(a,ja,d),f(a,ot,d),s(ot,ll),f(a,ga,d),f(a,F,d),s(F,ol),s(F,Qt),s(Qt,pl),s(F,rl),f(a,qa,d),f(a,K,d),s(K,ul),s(K,Ds),s(Ds,Xt),s(Xt,cl),s(K,il),f(a,ma,d),$(xs,a,d),_a=!0},p(a,[d]){const Rs={};d&2&&(Rs.$$scope={dirty:d,ctx:a}),I.$set(Rs)},i(a){_a||(k(J.$$.fragment,a),k(U.$$.fragment,a),k(I.$$.fragment,a),k($s.$$.fragment,a),k(ks.$$.fragment,a),k(xs.$$.fragment,a),_a=!0)},o(a){D(J.$$.fragment,a),D(U.$$.fragment,a),D(I.$$.fragment,a),D($s.$$.fragment,a),D(ks.$$.fragment,a),D(xs.$$.fragment,a),_a=!1},d(a){t(c),a&&t(j),a&&t(r),x(J),a&&t(sa),a&&t(R),a&&t(ta),x(U,a),a&&t(aa),a&&t(As),a&&t(na),a&&t(N),a&&t(ea),a&&t(m),a&&t(la),x(I,a),a&&t(oa),a&&t(q),a&&t(pa),a&&t(G),a&&t(ra),a&&t(Ws),a&&t(ua),a&&t(B),a&&t(ca),a&&t(Xs),a&&t(ia),a&&t(V),a&&t(ha),a&&t(O),a&&t(da),x($s,a),a&&t(fa),a&&t(H),x(ks),a&&t(ja),a&&t(ot),a&&t(ga),a&&t(F),a&&t(qa),a&&t(K),a&&t(ma),x(xs,a)}}}const np={local:"first-rows",sections:[{local:"truncated-responses",title:"Truncated responses"}],title:"First rows"};function ep(v){return Jo(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class rp extends Lo{constructor(c){super();Wo(this,c,ep,ap,Fo,{})}}export{rp as default,np as metadata};
