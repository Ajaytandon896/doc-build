import{S as b5,i as _5,s as w5,e as l,k as h,w as v,t as s,M as y5,c as o,d as t,m as f,a,x as d,h as n,b as i,G as e,g as p,y as u,L as N5,q as m,o as g,B as E,v as A5}from"../chunks/vendor-hf-doc-builder.js";import{I as b}from"../chunks/IconCopyLink-hf-doc-builder.js";function $5(Nb){let te,Wh,re,Re,rs,Zt,Zc,ls,ep,qh,aa,tp,Kh,ia,rp,Fh,k,os,lp,op,as,ap,ip,is,sp,Yh,er,np,sa,hp,jh,S,fp,ss,cp,pp,tr,vp,dp,Jh,le,De,ns,rr,up,hs,mp,Qh,C,na,gp,lr,Ep,bp,Te,_p,fs,wp,yp,or,Np,Ap,ha,$p,ar,Ip,Zh,oe,Ve,cs,ir,xp,ps,Lp,ef,R,fa,Pp,sr,kp,Sp,Ue,Cp,vs,Rp,Dp,nr,Tp,Vp,ca,Up,hr,Bp,tf,ae,Be,ds,fr,Op,us,Hp,rf,D,pa,Gp,cr,Mp,Xp,Oe,zp,ms,Wp,qp,pr,Kp,Fp,va,Yp,vr,jp,lf,ie,He,gs,dr,Jp,Es,Qp,of,T,da,Zp,ur,e1,t1,ua,r1,mr,l1,o1,ma,a1,gr,i1,af,se,Ge,bs,Er,s1,_s,n1,sf,A,ga,h1,br,f1,c1,Me,p1,ws,v1,d1,_r,u1,m1,Ea,g1,wr,E1,b1,ba,_1,yr,w1,nf,ne,Xe,ys,Nr,y1,Ns,N1,hf,V,_a,A1,Ar,$1,I1,ze,x1,As,L1,P1,$r,k1,S1,wa,C1,Ir,R1,ff,he,We,$s,xr,D1,Is,T1,cf,U,ya,V1,Lr,U1,B1,qe,O1,xs,H1,G1,Pr,M1,X1,Na,z1,kr,W1,pf,fe,Ke,Ls,Sr,q1,Ps,K1,vf,B,Aa,F1,Cr,Y1,j1,Fe,J1,ks,Q1,Z1,Rr,ev,tv,$a,rv,Dr,lv,df,ce,Ye,Ss,Tr,ov,Cs,av,uf,$,Ia,iv,Vr,sv,nv,je,hv,Rs,fv,cv,Ur,pv,vv,xa,dv,Br,uv,mv,La,gv,Or,Ev,mf,pe,Je,Ds,Hr,bv,Ts,_v,gf,I,Pa,wv,Gr,yv,Nv,Qe,Av,Vs,$v,Iv,Mr,xv,Lv,ka,Pv,Xr,kv,Sv,Sa,Cv,zr,Rv,Ef,ve,Ze,Us,Wr,Dv,Bs,Tv,bf,x,Ca,Vv,qr,Uv,Bv,et,Ov,Os,Hv,Gv,Kr,Mv,Xv,Ra,zv,Fr,Wv,qv,Da,Kv,Yr,Fv,_f,de,tt,Hs,jr,Yv,Gs,jv,wf,L,Ta,Jv,Jr,Qv,Zv,rt,ed,Ms,td,rd,Qr,ld,od,Va,ad,Zr,id,sd,Ua,nd,el,hd,yf,ue,lt,Xs,tl,fd,zs,cd,Nf,P,Ba,pd,rl,vd,dd,Oa,ud,_,Ha,md,ll,gd,Ed,Ga,bd,ol,_d,wd,Ma,yd,al,Nd,Ad,Xa,$d,il,Id,xd,za,Ld,sl,Pd,kd,Wa,Sd,nl,Cd,Rd,qa,Dd,hl,Td,Vd,Ka,Ud,fl,Bd,Od,Fa,Hd,cl,Gd,Md,Ya,Xd,pl,zd,Wd,ja,qd,vl,Kd,Af,me,ot,Ws,dl,Fd,qs,Yd,$f,O,Ja,jd,ul,Jd,Qd,at,Zd,Ks,eu,tu,ml,ru,lu,Qa,ou,gl,au,If,ge,it,Fs,El,iu,Ys,su,xf,H,Za,nu,bl,hu,fu,st,cu,js,pu,vu,_l,du,uu,ei,mu,wl,gu,Lf,Ee,nt,Js,yl,Eu,Qs,bu,Pf,G,ti,_u,Nl,wu,yu,ht,Nu,Zs,Au,$u,Al,Iu,xu,ri,Lu,$l,Pu,kf,be,ft,en,Il,ku,tn,Su,Sf,w,rn,li,Cu,xl,Ru,Du,Ll,ln,Tu,Vu,Pl,ct,Uu,on,Bu,Ou,kl,Hu,Gu,oi,Mu,Sl,Xu,zu,Cl,an,Wu,qu,Rl,pt,Ku,sn,Fu,Yu,Dl,ju,Ju,ai,Qu,Tl,Zu,em,Vl,nn,tm,rm,Ul,vt,lm,hn,om,am,Bl,im,sm,ii,nm,Ol,hm,fm,Hl,fn,cm,pm,Gl,dt,vm,cn,dm,um,Ml,mm,gm,Xl,Em,zl,bm,_m,wm,Wl,pn,ym,Nm,ql,ut,Am,vn,$m,Im,Kl,xm,Lm,Fl,Pm,Yl,km,Sm,Cm,jl,dn,Rm,Dm,Jl,mt,Tm,un,Vm,Um,Ql,Bm,Om,Zl,Hm,mn,Gm,Mm,Xm,eo,gn,zm,Wm,to,gt,qm,En,Km,Fm,ro,Ym,jm,si,Jm,lo,Qm,Cf,_e,Et,bn,oo,Zm,_n,e2,Rf,M,ni,t2,ao,r2,l2,bt,o2,wn,a2,i2,io,s2,n2,hi,h2,so,f2,Df,we,_t,yn,no,c2,Nn,p2,Tf,X,fi,v2,ho,d2,u2,wt,m2,An,g2,E2,fo,b2,_2,ci,w2,co,y2,Vf,ye,yt,$n,po,N2,In,A2,Uf,z,pi,$2,vo,I2,x2,Nt,L2,xn,P2,k2,uo,S2,C2,vi,R2,mo,D2,Bf,Ne,At,Ln,go,T2,Pn,V2,Of,W,di,U2,Eo,B2,O2,$t,H2,kn,G2,M2,bo,X2,z2,It,W2,_o,q2,K2,wo,F2,Hf,Ae,xt,Sn,yo,Y2,Cn,j2,Gf,q,ui,J2,No,Q2,Z2,Lt,eg,Rn,tg,rg,Ao,lg,og,mi,ag,$o,ig,Mf,$e,Pt,Dn,Io,sg,Tn,ng,Xf,K,Vn,kt,hg,xo,fg,cg,Un,pg,vg,Bn,St,dg,On,ug,mg,Lo,gg,Eg,Hn,gi,bg,Po,_g,zf,Ie,Ct,Gn,ko,wg,Mn,yg,Wf,F,Ei,Ng,So,Ag,$g,Rt,Ig,Xn,xg,Lg,Co,Pg,kg,bi,Sg,Ro,Cg,qf,xe,Dt,zn,Do,Rg,Wn,Dg,Kf,Y,_i,Tg,To,Vg,Ug,Tt,Bg,qn,Og,Hg,Vo,Gg,Mg,wi,Xg,Uo,zg,Ff,Le,Vt,Kn,Bo,Wg,Fn,qg,Yf,j,yi,Kg,Oo,Fg,Yg,Ut,jg,Yn,Jg,Qg,Ho,Zg,e0,Ni,t0,Go,r0,jf,Pe,Bt,jn,Mo,l0,Jn,o0,Jf,J,Ai,a0,Xo,i0,s0,Ot,n0,Qn,h0,f0,zo,c0,p0,$i,v0,Wo,d0,Qf,ke,Ht,Zn,qo,u0,eh,m0,Zf,Q,Ii,g0,Ko,E0,b0,Gt,_0,th,w0,y0,Fo,N0,A0,xi,$0,Yo,I0,ec,Se,Mt,rh,jo,x0,lh,L0,tc,Z,Li,P0,Jo,k0,S0,Xt,C0,oh,R0,D0,Qo,T0,V0,zt,U0,Zo,B0,O0,ea,H0,rc,Ce,Wt,ah,ta,G0,ih,M0,lc,ee,Pi,X0,ra,z0,W0,qt,q0,sh,K0,F0,la,Y0,j0,ki,J0,oa,Q0,oc;return Zt=new b({}),rr=new b({}),ir=new b({}),fr=new b({}),dr=new b({}),Er=new b({}),Nr=new b({}),xr=new b({}),Sr=new b({}),Tr=new b({}),Hr=new b({}),Wr=new b({}),jr=new b({}),tl=new b({}),dl=new b({}),El=new b({}),yl=new b({}),Il=new b({}),oo=new b({}),no=new b({}),po=new b({}),go=new b({}),yo=new b({}),Io=new b({}),ko=new b({}),Do=new b({}),Bo=new b({}),Mo=new b({}),qo=new b({}),jo=new b({}),ta=new b({}),{c(){te=l("meta"),Wh=h(),re=l("h1"),Re=l("a"),rs=l("span"),v(Zt.$$.fragment),Zc=h(),ls=l("span"),ep=s("Model Summaries"),qh=h(),aa=l("p"),tp=s("The model architectures included come from a wide variety of sources. Sources, including papers, original impl (\u201Creference code\u201D) that I rewrote / adapted, and PyTorch impl that I leveraged directly (\u201Ccode\u201D) are listed below."),Kh=h(),ia=l("p"),rp=s("Most included models have pretrained weights. The weights are either:"),Fh=h(),k=l("ol"),os=l("li"),lp=s("from their original sources"),op=h(),as=l("li"),ap=s("ported by myself from their original impl in a different framework (e.g. Tensorflow models)"),ip=h(),is=l("li"),sp=s("trained from scratch using the included training script"),Yh=h(),er=l("p"),np=s("The validation results for the pretrained weights are "),sa=l("a"),hp=s("here"),jh=h(),S=l("p"),fp=s("A more exciting view (with pretty pictures) of the models within "),ss=l("code"),cp=s("timm"),pp=s(" can be found at "),tr=l("a"),vp=s("paperswithcode"),dp=s("."),Jh=h(),le=l("h2"),De=l("a"),ns=l("span"),v(rr.$$.fragment),up=h(),hs=l("span"),mp=s("Big Transfer ResNetV2 (BiT)"),Qh=h(),C=l("ul"),na=l("li"),gp=s("Implementation: "),lr=l("a"),Ep=s("resnetv2.py"),bp=h(),Te=l("li"),_p=s("Paper: "),fs=l("code"),wp=s("Big Transfer (BiT): General Visual Representation Learning"),yp=s(" - "),or=l("a"),Np=s("https://arxiv.org/abs/1912.11370"),Ap=h(),ha=l("li"),$p=s("Reference code: "),ar=l("a"),Ip=s("https://github.com/google-research/big_transfer"),Zh=h(),oe=l("h2"),Ve=l("a"),cs=l("span"),v(ir.$$.fragment),xp=h(),ps=l("span"),Lp=s("Cross-Stage Partial Networks"),ef=h(),R=l("ul"),fa=l("li"),Pp=s("Implementation: "),sr=l("a"),kp=s("cspnet.py"),Sp=h(),Ue=l("li"),Cp=s("Paper: "),vs=l("code"),Rp=s("CSPNet: A New Backbone that can Enhance Learning Capability of CNN"),Dp=s(" - "),nr=l("a"),Tp=s("https://arxiv.org/abs/1911.11929"),Vp=h(),ca=l("li"),Up=s("Reference impl: "),hr=l("a"),Bp=s("https://github.com/WongKinYiu/CrossStagePartialNetworks"),tf=h(),ae=l("h2"),Be=l("a"),ds=l("span"),v(fr.$$.fragment),Op=h(),us=l("span"),Hp=s("DenseNet"),rf=h(),D=l("ul"),pa=l("li"),Gp=s("Implementation: "),cr=l("a"),Mp=s("densenet.py"),Xp=h(),Oe=l("li"),zp=s("Paper: "),ms=l("code"),Wp=s("Densely Connected Convolutional Networks"),qp=s(" - "),pr=l("a"),Kp=s("https://arxiv.org/abs/1608.06993"),Fp=h(),va=l("li"),Yp=s("Code: "),vr=l("a"),jp=s("https://github.com/pytorch/vision/tree/master/torchvision/models"),lf=h(),ie=l("h2"),He=l("a"),gs=l("span"),v(dr.$$.fragment),Jp=h(),Es=l("span"),Qp=s("DLA"),of=h(),T=l("ul"),da=l("li"),Zp=s("Implementation: "),ur=l("a"),e1=s("dla.py"),t1=h(),ua=l("li"),r1=s("Paper: "),mr=l("a"),l1=s("https://arxiv.org/abs/1707.06484"),o1=h(),ma=l("li"),a1=s("Code: "),gr=l("a"),i1=s("https://github.com/ucbdrive/dla"),af=h(),se=l("h2"),Ge=l("a"),bs=l("span"),v(Er.$$.fragment),s1=h(),_s=l("span"),n1=s("Dual-Path Networks"),sf=h(),A=l("ul"),ga=l("li"),h1=s("Implementation: "),br=l("a"),f1=s("dpn.py"),c1=h(),Me=l("li"),p1=s("Paper: "),ws=l("code"),v1=s("Dual Path Networks"),d1=s(" - "),_r=l("a"),u1=s("https://arxiv.org/abs/1707.01629"),m1=h(),Ea=l("li"),g1=s("My PyTorch code: "),wr=l("a"),E1=s("https://github.com/rwightman/pytorch-dpn-pretrained"),b1=h(),ba=l("li"),_1=s("Reference code: "),yr=l("a"),w1=s("https://github.com/cypw/DPNs"),nf=h(),ne=l("h2"),Xe=l("a"),ys=l("span"),v(Nr.$$.fragment),y1=h(),Ns=l("span"),N1=s("GPU-Efficient Networks"),hf=h(),V=l("ul"),_a=l("li"),A1=s("Implementation: "),Ar=l("a"),$1=s("byobnet.py"),I1=h(),ze=l("li"),x1=s("Paper: "),As=l("code"),L1=s("Neural Architecture Design for GPU-Efficient Networks"),P1=s(" - "),$r=l("a"),k1=s("https://arxiv.org/abs/2006.14090"),S1=h(),wa=l("li"),C1=s("Reference code: "),Ir=l("a"),R1=s("https://github.com/idstcv/GPU-Efficient-Networks"),ff=h(),he=l("h2"),We=l("a"),$s=l("span"),v(xr.$$.fragment),D1=h(),Is=l("span"),T1=s("HRNet"),cf=h(),U=l("ul"),ya=l("li"),V1=s("Implementation: "),Lr=l("a"),U1=s("hrnet.py"),B1=h(),qe=l("li"),O1=s("Paper: "),xs=l("code"),H1=s("Deep High-Resolution Representation Learning for Visual Recognition"),G1=s(" - "),Pr=l("a"),M1=s("https://arxiv.org/abs/1908.07919"),X1=h(),Na=l("li"),z1=s("Code: "),kr=l("a"),W1=s("https://github.com/HRNet/HRNet-Image-Classification"),pf=h(),fe=l("h2"),Ke=l("a"),Ls=l("span"),v(Sr.$$.fragment),q1=h(),Ps=l("span"),K1=s("Inception-V3"),vf=h(),B=l("ul"),Aa=l("li"),F1=s("Implementation: "),Cr=l("a"),Y1=s("inception_v3.py"),j1=h(),Fe=l("li"),J1=s("Paper: "),ks=l("code"),Q1=s("Rethinking the Inception Architecture for Computer Vision"),Z1=s(" - "),Rr=l("a"),ev=s("https://arxiv.org/abs/1512.00567"),tv=h(),$a=l("li"),rv=s("Code: "),Dr=l("a"),lv=s("https://github.com/pytorch/vision/tree/master/torchvision/models"),df=h(),ce=l("h2"),Ye=l("a"),Ss=l("span"),v(Tr.$$.fragment),ov=h(),Cs=l("span"),av=s("Inception-V4"),uf=h(),$=l("ul"),Ia=l("li"),iv=s("Implementation: "),Vr=l("a"),sv=s("inception_v4.py"),nv=h(),je=l("li"),hv=s("Paper: "),Rs=l("code"),fv=s("Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning"),cv=s(" - "),Ur=l("a"),pv=s("https://arxiv.org/abs/1602.07261"),vv=h(),xa=l("li"),dv=s("Code: "),Br=l("a"),uv=s("https://github.com/Cadene/pretrained-models.pytorch"),mv=h(),La=l("li"),gv=s("Reference code: "),Or=l("a"),Ev=s("https://github.com/tensorflow/models/tree/master/research/slim/nets"),mf=h(),pe=l("h2"),Je=l("a"),Ds=l("span"),v(Hr.$$.fragment),bv=h(),Ts=l("span"),_v=s("Inception-ResNet-V2"),gf=h(),I=l("ul"),Pa=l("li"),wv=s("Implementation: "),Gr=l("a"),yv=s("inception_resnet_v2.py"),Nv=h(),Qe=l("li"),Av=s("Paper: "),Vs=l("code"),$v=s("Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning"),Iv=s(" - "),Mr=l("a"),xv=s("https://arxiv.org/abs/1602.07261"),Lv=h(),ka=l("li"),Pv=s("Code: "),Xr=l("a"),kv=s("https://github.com/Cadene/pretrained-models.pytorch"),Sv=h(),Sa=l("li"),Cv=s("Reference code: "),zr=l("a"),Rv=s("https://github.com/tensorflow/models/tree/master/research/slim/nets"),Ef=h(),ve=l("h2"),Ze=l("a"),Us=l("span"),v(Wr.$$.fragment),Dv=h(),Bs=l("span"),Tv=s("NASNet-A"),bf=h(),x=l("ul"),Ca=l("li"),Vv=s("Implementation: "),qr=l("a"),Uv=s("nasnet.py"),Bv=h(),et=l("li"),Ov=s("Papers: "),Os=l("code"),Hv=s("Learning Transferable Architectures for Scalable Image Recognition"),Gv=s(" - "),Kr=l("a"),Mv=s("https://arxiv.org/abs/1707.07012"),Xv=h(),Ra=l("li"),zv=s("Code: "),Fr=l("a"),Wv=s("https://github.com/Cadene/pretrained-models.pytorch"),qv=h(),Da=l("li"),Kv=s("Reference code: "),Yr=l("a"),Fv=s("https://github.com/tensorflow/models/tree/master/research/slim/nets/nasnet"),_f=h(),de=l("h2"),tt=l("a"),Hs=l("span"),v(jr.$$.fragment),Yv=h(),Gs=l("span"),jv=s("PNasNet-5"),wf=h(),L=l("ul"),Ta=l("li"),Jv=s("Implementation: "),Jr=l("a"),Qv=s("pnasnet.py"),Zv=h(),rt=l("li"),ed=s("Papers: "),Ms=l("code"),td=s("Progressive Neural Architecture Search"),rd=s(" - "),Qr=l("a"),ld=s("https://arxiv.org/abs/1712.00559"),od=h(),Va=l("li"),ad=s("Code: "),Zr=l("a"),id=s("https://github.com/Cadene/pretrained-models.pytorch"),sd=h(),Ua=l("li"),nd=s("Reference code: "),el=l("a"),hd=s("https://github.com/tensorflow/models/tree/master/research/slim/nets/nasnet"),yf=h(),ue=l("h2"),lt=l("a"),Xs=l("span"),v(tl.$$.fragment),fd=h(),zs=l("span"),cd=s("EfficientNet"),Nf=h(),P=l("ul"),Ba=l("li"),pd=s("Implementation: "),rl=l("a"),vd=s("efficientnet.py"),dd=h(),Oa=l("li"),ud=s("Papers:"),_=l("ul"),Ha=l("li"),md=s("EfficientNet NoisyStudent (B0-B7, L2) - "),ll=l("a"),gd=s("https://arxiv.org/abs/1911.04252"),Ed=h(),Ga=l("li"),bd=s("EfficientNet AdvProp (B0-B8) - "),ol=l("a"),_d=s("https://arxiv.org/abs/1911.09665"),wd=h(),Ma=l("li"),yd=s("EfficientNet (B0-B7) - "),al=l("a"),Nd=s("https://arxiv.org/abs/1905.11946"),Ad=h(),Xa=l("li"),$d=s("EfficientNet-EdgeTPU (S, M, L) - "),il=l("a"),Id=s("https://ai.googleblog.com/2019/08/efficientnet-edgetpu-creating.html"),xd=h(),za=l("li"),Ld=s("MixNet - "),sl=l("a"),Pd=s("https://arxiv.org/abs/1907.09595"),kd=h(),Wa=l("li"),Sd=s("MNASNet B1, A1 (Squeeze-Excite), and Small - "),nl=l("a"),Cd=s("https://arxiv.org/abs/1807.11626"),Rd=h(),qa=l("li"),Dd=s("MobileNet-V2 - "),hl=l("a"),Td=s("https://arxiv.org/abs/1801.04381"),Vd=h(),Ka=l("li"),Ud=s("FBNet-C - "),fl=l("a"),Bd=s("https://arxiv.org/abs/1812.03443"),Od=h(),Fa=l("li"),Hd=s("Single-Path NAS - "),cl=l("a"),Gd=s("https://arxiv.org/abs/1904.02877"),Md=h(),Ya=l("li"),Xd=s("My PyTorch code: "),pl=l("a"),zd=s("https://github.com/rwightman/gen-efficientnet-pytorch"),Wd=h(),ja=l("li"),qd=s("Reference code: "),vl=l("a"),Kd=s("https://github.com/tensorflow/tpu/tree/master/models/official/efficientnet"),Af=h(),me=l("h2"),ot=l("a"),Ws=l("span"),v(dl.$$.fragment),Fd=h(),qs=l("span"),Yd=s("MobileNet-V3"),$f=h(),O=l("ul"),Ja=l("li"),jd=s("Implementation: "),ul=l("a"),Jd=s("mobilenetv3.py"),Qd=h(),at=l("li"),Zd=s("Paper: "),Ks=l("code"),eu=s("Searching for MobileNetV3"),tu=s(" - "),ml=l("a"),ru=s("https://arxiv.org/abs/1905.02244"),lu=h(),Qa=l("li"),ou=s("Reference code: "),gl=l("a"),au=s("https://github.com/tensorflow/models/tree/master/research/slim/nets/mobilenet"),If=h(),ge=l("h2"),it=l("a"),Fs=l("span"),v(El.$$.fragment),iu=h(),Ys=l("span"),su=s("RegNet"),xf=h(),H=l("ul"),Za=l("li"),nu=s("Implementation: "),bl=l("a"),hu=s("regnet.py"),fu=h(),st=l("li"),cu=s("Paper: "),js=l("code"),pu=s("Designing Network Design Spaces"),vu=s(" - "),_l=l("a"),du=s("https://arxiv.org/abs/2003.13678"),uu=h(),ei=l("li"),mu=s("Reference code: "),wl=l("a"),gu=s("https://github.com/facebookresearch/pycls/blob/master/pycls/models/regnet.py"),Lf=h(),Ee=l("h2"),nt=l("a"),Js=l("span"),v(yl.$$.fragment),Eu=h(),Qs=l("span"),bu=s("RepVGG"),Pf=h(),G=l("ul"),ti=l("li"),_u=s("Implementation: "),Nl=l("a"),wu=s("byobnet.py"),yu=h(),ht=l("li"),Nu=s("Paper: "),Zs=l("code"),Au=s("Making VGG-style ConvNets Great Again"),$u=s(" - "),Al=l("a"),Iu=s("https://arxiv.org/abs/2101.03697"),xu=h(),ri=l("li"),Lu=s("Reference code: "),$l=l("a"),Pu=s("https://github.com/DingXiaoH/RepVGG"),kf=h(),be=l("h2"),ft=l("a"),en=l("span"),v(Il.$$.fragment),ku=h(),tn=l("span"),Su=s("ResNet, ResNeXt"),Sf=h(),w=l("ul"),rn=l("li"),li=l("p"),Cu=s("Implementation: "),xl=l("a"),Ru=s("resnet.py"),Du=h(),Ll=l("li"),ln=l("p"),Tu=s("ResNet (V1B)"),Vu=h(),Pl=l("ul"),ct=l("li"),Uu=s("Paper: "),on=l("code"),Bu=s("Deep Residual Learning for Image Recognition"),Ou=s(" - "),kl=l("a"),Hu=s("https://arxiv.org/abs/1512.03385"),Gu=h(),oi=l("li"),Mu=s("Code: "),Sl=l("a"),Xu=s("https://github.com/pytorch/vision/tree/master/torchvision/models"),zu=h(),Cl=l("li"),an=l("p"),Wu=s("ResNeXt"),qu=h(),Rl=l("ul"),pt=l("li"),Ku=s("Paper: "),sn=l("code"),Fu=s("Aggregated Residual Transformations for Deep Neural Networks"),Yu=s(" - "),Dl=l("a"),ju=s("https://arxiv.org/abs/1611.05431"),Ju=h(),ai=l("li"),Qu=s("Code: "),Tl=l("a"),Zu=s("https://github.com/pytorch/vision/tree/master/torchvision/models"),em=h(),Vl=l("li"),nn=l("p"),tm=s("\u2018Bag of Tricks\u2019 / Gluon C, D, E, S ResNet variants"),rm=h(),Ul=l("ul"),vt=l("li"),lm=s("Paper: "),hn=l("code"),om=s("Bag of Tricks for Image Classification with CNNs"),am=s(" - "),Bl=l("a"),im=s("https://arxiv.org/abs/1812.01187"),sm=h(),ii=l("li"),nm=s("Code: "),Ol=l("a"),hm=s("https://github.com/dmlc/gluon-cv/blob/master/gluoncv/model_zoo/resnetv1b.py"),fm=h(),Hl=l("li"),fn=l("p"),cm=s("Instagram pretrained / ImageNet tuned ResNeXt101"),pm=h(),Gl=l("ul"),dt=l("li"),vm=s("Paper: "),cn=l("code"),dm=s("Exploring the Limits of Weakly Supervised Pretraining"),um=s(" - "),Ml=l("a"),mm=s("https://arxiv.org/abs/1805.00932"),gm=h(),Xl=l("li"),Em=s("Weights: "),zl=l("a"),bm=s("https://pytorch.org/hub/facebookresearch_WSL-Images_resnext"),_m=s(" (NOTE: CC BY-NC 4.0 License, NOT commercial friendly)"),wm=h(),Wl=l("li"),pn=l("p"),ym=s("Semi-supervised (SSL) / Semi-weakly Supervised (SWSL) ResNet and ResNeXts"),Nm=h(),ql=l("ul"),ut=l("li"),Am=s("Paper: "),vn=l("code"),$m=s("Billion-scale semi-supervised learning for image classification"),Im=s(" - "),Kl=l("a"),xm=s("https://arxiv.org/abs/1905.00546"),Lm=h(),Fl=l("li"),Pm=s("Weights: "),Yl=l("a"),km=s("https://github.com/facebookresearch/semi-supervised-ImageNet1K-models"),Sm=s(" (NOTE: CC BY-NC 4.0 License, NOT commercial friendly)"),Cm=h(),jl=l("li"),dn=l("p"),Rm=s("Squeeze-and-Excitation Networks"),Dm=h(),Jl=l("ul"),mt=l("li"),Tm=s("Paper: "),un=l("code"),Vm=s("Squeeze-and-Excitation Networks"),Um=s(" - "),Ql=l("a"),Bm=s("https://arxiv.org/abs/1709.01507"),Om=h(),Zl=l("li"),Hm=s("Code: Added to ResNet base, this is current version going forward, old "),mn=l("code"),Gm=s("senet.py"),Mm=s(" is being deprecated"),Xm=h(),eo=l("li"),gn=l("p"),zm=s("ECAResNet (ECA-Net)"),Wm=h(),to=l("ul"),gt=l("li"),qm=s("Paper: "),En=l("code"),Km=s("ECA-Net: Efficient Channel Attention for Deep CNN"),Fm=s(" - "),ro=l("a"),Ym=s("https://arxiv.org/abs/1910.03151v4"),jm=h(),si=l("li"),Jm=s("Code: Added to ResNet base, ECA module contributed by @VRandme, reference "),lo=l("a"),Qm=s("https://github.com/BangguWu/ECANet"),Cf=h(),_e=l("h2"),Et=l("a"),bn=l("span"),v(oo.$$.fragment),Zm=h(),_n=l("span"),e2=s("Res2Net"),Rf=h(),M=l("ul"),ni=l("li"),t2=s("Implementation: "),ao=l("a"),r2=s("res2net.py"),l2=h(),bt=l("li"),o2=s("Paper: "),wn=l("code"),a2=s("Res2Net: A New Multi-scale Backbone Architecture"),i2=s(" - "),io=l("a"),s2=s("https://arxiv.org/abs/1904.01169"),n2=h(),hi=l("li"),h2=s("Code: "),so=l("a"),f2=s("https://github.com/gasvn/Res2Net"),Df=h(),we=l("h2"),_t=l("a"),yn=l("span"),v(no.$$.fragment),c2=h(),Nn=l("span"),p2=s("ResNeSt"),Tf=h(),X=l("ul"),fi=l("li"),v2=s("Implementation: "),ho=l("a"),d2=s("resnest.py"),u2=h(),wt=l("li"),m2=s("Paper: "),An=l("code"),g2=s("ResNeSt: Split-Attention Networks"),E2=s(" - "),fo=l("a"),b2=s("https://arxiv.org/abs/2004.08955"),_2=h(),ci=l("li"),w2=s("Code: "),co=l("a"),y2=s("https://github.com/zhanghang1989/ResNeSt"),Vf=h(),ye=l("h2"),yt=l("a"),$n=l("span"),v(po.$$.fragment),N2=h(),In=l("span"),A2=s("ReXNet"),Uf=h(),z=l("ul"),pi=l("li"),$2=s("Implementation: "),vo=l("a"),I2=s("rexnet.py"),x2=h(),Nt=l("li"),L2=s("Paper: "),xn=l("code"),P2=s("ReXNet: Diminishing Representational Bottleneck on CNN"),k2=s(" - "),uo=l("a"),S2=s("https://arxiv.org/abs/2007.00992"),C2=h(),vi=l("li"),R2=s("Code: "),mo=l("a"),D2=s("https://github.com/clovaai/rexnet"),Bf=h(),Ne=l("h2"),At=l("a"),Ln=l("span"),v(go.$$.fragment),T2=h(),Pn=l("span"),V2=s("Selective-Kernel Networks"),Of=h(),W=l("ul"),di=l("li"),U2=s("Implementation: "),Eo=l("a"),B2=s("sknet.py"),O2=h(),$t=l("li"),H2=s("Paper: "),kn=l("code"),G2=s("Selective-Kernel Networks"),M2=s(" - "),bo=l("a"),X2=s("https://arxiv.org/abs/1903.06586"),z2=h(),It=l("li"),W2=s("Code: "),_o=l("a"),q2=s("https://github.com/implus/SKNet"),K2=s(", "),wo=l("a"),F2=s("https://github.com/clovaai/assembled-cnn"),Hf=h(),Ae=l("h2"),xt=l("a"),Sn=l("span"),v(yo.$$.fragment),Y2=h(),Cn=l("span"),j2=s("SelecSLS"),Gf=h(),q=l("ul"),ui=l("li"),J2=s("Implementation: "),No=l("a"),Q2=s("selecsls.py"),Z2=h(),Lt=l("li"),eg=s("Paper: "),Rn=l("code"),tg=s("XNect: Real-time Multi-Person 3D Motion Capture with a Single RGB Camera"),rg=s(" - "),Ao=l("a"),lg=s("https://arxiv.org/abs/1907.00837"),og=h(),mi=l("li"),ag=s("Code: "),$o=l("a"),ig=s("https://github.com/mehtadushy/SelecSLS-Pytorch"),Mf=h(),$e=l("h2"),Pt=l("a"),Dn=l("span"),v(Io.$$.fragment),sg=h(),Tn=l("span"),ng=s("Squeeze-and-Excitation Networks"),Xf=h(),K=l("ul"),Vn=l("li"),kt=l("p"),hg=s("Implementation: "),xo=l("a"),fg=s("senet.py"),cg=s(`
NOTE: I am deprecating this version of the networks, the new ones are part of `),Un=l("code"),pg=s("resnet.py"),vg=h(),Bn=l("li"),St=l("p"),dg=s("Paper: "),On=l("code"),ug=s("Squeeze-and-Excitation Networks"),mg=s(" - "),Lo=l("a"),gg=s("https://arxiv.org/abs/1709.01507"),Eg=h(),Hn=l("li"),gi=l("p"),bg=s("Code: "),Po=l("a"),_g=s("https://github.com/Cadene/pretrained-models.pytorch"),zf=h(),Ie=l("h2"),Ct=l("a"),Gn=l("span"),v(ko.$$.fragment),wg=h(),Mn=l("span"),yg=s("TResNet"),Wf=h(),F=l("ul"),Ei=l("li"),Ng=s("Implementation: "),So=l("a"),Ag=s("tresnet.py"),$g=h(),Rt=l("li"),Ig=s("Paper: "),Xn=l("code"),xg=s("TResNet: High Performance GPU-Dedicated Architecture"),Lg=s(" - "),Co=l("a"),Pg=s("https://arxiv.org/abs/2003.13630"),kg=h(),bi=l("li"),Sg=s("Code: "),Ro=l("a"),Cg=s("https://github.com/mrT23/TResNet"),qf=h(),xe=l("h2"),Dt=l("a"),zn=l("span"),v(Do.$$.fragment),Rg=h(),Wn=l("span"),Dg=s("VGG"),Kf=h(),Y=l("ul"),_i=l("li"),Tg=s("Implementation: "),To=l("a"),Vg=s("vgg.py"),Ug=h(),Tt=l("li"),Bg=s("Paper: "),qn=l("code"),Og=s("Very Deep Convolutional Networks For Large-Scale Image Recognition"),Hg=s(" - "),Vo=l("a"),Gg=s("https://arxiv.org/pdf/1409.1556.pdf"),Mg=h(),wi=l("li"),Xg=s("Reference code: "),Uo=l("a"),zg=s("https://github.com/pytorch/vision/blob/master/torchvision/models/vgg.py"),Ff=h(),Le=l("h2"),Vt=l("a"),Kn=l("span"),v(Bo.$$.fragment),Wg=h(),Fn=l("span"),qg=s("Vision Transformer"),Yf=h(),j=l("ul"),yi=l("li"),Kg=s("Implementation: "),Oo=l("a"),Fg=s("vision_transformer.py"),Yg=h(),Ut=l("li"),jg=s("Paper: "),Yn=l("code"),Jg=s("An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale"),Qg=s(" - "),Ho=l("a"),Zg=s("https://arxiv.org/abs/2010.11929"),e0=h(),Ni=l("li"),t0=s("Reference code and pretrained weights: "),Go=l("a"),r0=s("https://github.com/google-research/vision_transformer"),jf=h(),Pe=l("h2"),Bt=l("a"),jn=l("span"),v(Mo.$$.fragment),l0=h(),Jn=l("span"),o0=s("VovNet V2 and V1"),Jf=h(),J=l("ul"),Ai=l("li"),a0=s("Implementation: "),Xo=l("a"),i0=s("vovnet.py"),s0=h(),Ot=l("li"),n0=s("Paper: "),Qn=l("code"),h0=s("CenterMask : Real-Time Anchor-Free Instance Segmentation"),f0=s(" - "),zo=l("a"),c0=s("https://arxiv.org/abs/1911.06667"),p0=h(),$i=l("li"),v0=s("Reference code: "),Wo=l("a"),d0=s("https://github.com/youngwanLEE/vovnet-detectron2"),Qf=h(),ke=l("h2"),Ht=l("a"),Zn=l("span"),v(qo.$$.fragment),u0=h(),eh=l("span"),m0=s("Xception"),Zf=h(),Q=l("ul"),Ii=l("li"),g0=s("Implementation: "),Ko=l("a"),E0=s("xception.py"),b0=h(),Gt=l("li"),_0=s("Paper: "),th=l("code"),w0=s("Xception: Deep Learning with Depthwise Separable Convolutions"),y0=s(" - "),Fo=l("a"),N0=s("https://arxiv.org/abs/1610.02357"),A0=h(),xi=l("li"),$0=s("Code: "),Yo=l("a"),I0=s("https://github.com/Cadene/pretrained-models.pytorch"),ec=h(),Se=l("h2"),Mt=l("a"),rh=l("span"),v(jo.$$.fragment),x0=h(),lh=l("span"),L0=s("Xception (Modified Aligned, Gluon)"),tc=h(),Z=l("ul"),Li=l("li"),P0=s("Implementation: "),Jo=l("a"),k0=s("gluon_xception.py"),S0=h(),Xt=l("li"),C0=s("Paper: "),oh=l("code"),R0=s("Encoder-Decoder with Atrous Separable Convolution for Semantic Image Segmentation"),D0=s(" - "),Qo=l("a"),T0=s("https://arxiv.org/abs/1802.02611"),V0=h(),zt=l("li"),U0=s("Reference code: "),Zo=l("a"),B0=s("https://github.com/dmlc/gluon-cv/tree/master/gluoncv/model_zoo"),O0=s(", "),ea=l("a"),H0=s("https://github.com/jfzhang95/pytorch-deeplab-xception/"),rc=h(),Ce=l("h2"),Wt=l("a"),ah=l("span"),v(ta.$$.fragment),G0=h(),ih=l("span"),M0=s("Xception (Modified Aligned, TF)"),lc=h(),ee=l("ul"),Pi=l("li"),X0=s("Implementation: "),ra=l("a"),z0=s("aligned_xception.py"),W0=h(),qt=l("li"),q0=s("Paper: "),sh=l("code"),K0=s("Encoder-Decoder with Atrous Separable Convolution for Semantic Image Segmentation"),F0=s(" - "),la=l("a"),Y0=s("https://arxiv.org/abs/1802.02611"),j0=h(),ki=l("li"),J0=s("Reference code: "),oa=l("a"),Q0=s("https://github.com/tensorflow/models/tree/master/research/deeplab"),this.h()},l(r){const c=y5('[data-svelte="svelte-1phssyn"]',document.head);te=o(c,"META",{name:!0,content:!0}),c.forEach(t),Wh=f(r),re=o(r,"H1",{class:!0});var ac=a(re);Re=o(ac,"A",{id:!0,class:!0,href:!0});var Ab=a(Re);rs=o(Ab,"SPAN",{});var $b=a(rs);d(Zt.$$.fragment,$b),$b.forEach(t),Ab.forEach(t),Zc=f(ac),ls=o(ac,"SPAN",{});var Ib=a(ls);ep=n(Ib,"Model Summaries"),Ib.forEach(t),ac.forEach(t),qh=f(r),aa=o(r,"P",{});var xb=a(aa);tp=n(xb,"The model architectures included come from a wide variety of sources. Sources, including papers, original impl (\u201Creference code\u201D) that I rewrote / adapted, and PyTorch impl that I leveraged directly (\u201Ccode\u201D) are listed below."),xb.forEach(t),Kh=f(r),ia=o(r,"P",{});var Lb=a(ia);rp=n(Lb,"Most included models have pretrained weights. The weights are either:"),Lb.forEach(t),Fh=f(r),k=o(r,"OL",{});var Si=a(k);os=o(Si,"LI",{});var Pb=a(os);lp=n(Pb,"from their original sources"),Pb.forEach(t),op=f(Si),as=o(Si,"LI",{});var kb=a(as);ap=n(kb,"ported by myself from their original impl in a different framework (e.g. Tensorflow models)"),kb.forEach(t),ip=f(Si),is=o(Si,"LI",{});var Sb=a(is);sp=n(Sb,"trained from scratch using the included training script"),Sb.forEach(t),Si.forEach(t),Yh=f(r),er=o(r,"P",{});var Z0=a(er);np=n(Z0,"The validation results for the pretrained weights are "),sa=o(Z0,"A",{href:!0});var Cb=a(sa);hp=n(Cb,"here"),Cb.forEach(t),Z0.forEach(t),jh=f(r),S=o(r,"P",{});var Ci=a(S);fp=n(Ci,"A more exciting view (with pretty pictures) of the models within "),ss=o(Ci,"CODE",{});var Rb=a(ss);cp=n(Rb,"timm"),Rb.forEach(t),pp=n(Ci," can be found at "),tr=o(Ci,"A",{href:!0,rel:!0});var Db=a(tr);vp=n(Db,"paperswithcode"),Db.forEach(t),dp=n(Ci,"."),Ci.forEach(t),Jh=f(r),le=o(r,"H2",{class:!0});var ic=a(le);De=o(ic,"A",{id:!0,class:!0,href:!0});var Tb=a(De);ns=o(Tb,"SPAN",{});var Vb=a(ns);d(rr.$$.fragment,Vb),Vb.forEach(t),Tb.forEach(t),up=f(ic),hs=o(ic,"SPAN",{});var Ub=a(hs);mp=n(Ub,"Big Transfer ResNetV2 (BiT)"),Ub.forEach(t),ic.forEach(t),Qh=f(r),C=o(r,"UL",{});var Ri=a(C);na=o(Ri,"LI",{});var eE=a(na);gp=n(eE,"Implementation: "),lr=o(eE,"A",{href:!0,rel:!0});var Bb=a(lr);Ep=n(Bb,"resnetv2.py"),Bb.forEach(t),eE.forEach(t),bp=f(Ri),Te=o(Ri,"LI",{});var nh=a(Te);_p=n(nh,"Paper: "),fs=o(nh,"CODE",{});var Ob=a(fs);wp=n(Ob,"Big Transfer (BiT): General Visual Representation Learning"),Ob.forEach(t),yp=n(nh," - "),or=o(nh,"A",{href:!0,rel:!0});var Hb=a(or);Np=n(Hb,"https://arxiv.org/abs/1912.11370"),Hb.forEach(t),nh.forEach(t),Ap=f(Ri),ha=o(Ri,"LI",{});var tE=a(ha);$p=n(tE,"Reference code: "),ar=o(tE,"A",{href:!0,rel:!0});var Gb=a(ar);Ip=n(Gb,"https://github.com/google-research/big_transfer"),Gb.forEach(t),tE.forEach(t),Ri.forEach(t),Zh=f(r),oe=o(r,"H2",{class:!0});var sc=a(oe);Ve=o(sc,"A",{id:!0,class:!0,href:!0});var Mb=a(Ve);cs=o(Mb,"SPAN",{});var Xb=a(cs);d(ir.$$.fragment,Xb),Xb.forEach(t),Mb.forEach(t),xp=f(sc),ps=o(sc,"SPAN",{});var zb=a(ps);Lp=n(zb,"Cross-Stage Partial Networks"),zb.forEach(t),sc.forEach(t),ef=f(r),R=o(r,"UL",{});var Di=a(R);fa=o(Di,"LI",{});var rE=a(fa);Pp=n(rE,"Implementation: "),sr=o(rE,"A",{href:!0,rel:!0});var Wb=a(sr);kp=n(Wb,"cspnet.py"),Wb.forEach(t),rE.forEach(t),Sp=f(Di),Ue=o(Di,"LI",{});var hh=a(Ue);Cp=n(hh,"Paper: "),vs=o(hh,"CODE",{});var qb=a(vs);Rp=n(qb,"CSPNet: A New Backbone that can Enhance Learning Capability of CNN"),qb.forEach(t),Dp=n(hh," - "),nr=o(hh,"A",{href:!0,rel:!0});var Kb=a(nr);Tp=n(Kb,"https://arxiv.org/abs/1911.11929"),Kb.forEach(t),hh.forEach(t),Vp=f(Di),ca=o(Di,"LI",{});var lE=a(ca);Up=n(lE,"Reference impl: "),hr=o(lE,"A",{href:!0,rel:!0});var Fb=a(hr);Bp=n(Fb,"https://github.com/WongKinYiu/CrossStagePartialNetworks"),Fb.forEach(t),lE.forEach(t),Di.forEach(t),tf=f(r),ae=o(r,"H2",{class:!0});var nc=a(ae);Be=o(nc,"A",{id:!0,class:!0,href:!0});var Yb=a(Be);ds=o(Yb,"SPAN",{});var jb=a(ds);d(fr.$$.fragment,jb),jb.forEach(t),Yb.forEach(t),Op=f(nc),us=o(nc,"SPAN",{});var Jb=a(us);Hp=n(Jb,"DenseNet"),Jb.forEach(t),nc.forEach(t),rf=f(r),D=o(r,"UL",{});var Ti=a(D);pa=o(Ti,"LI",{});var oE=a(pa);Gp=n(oE,"Implementation: "),cr=o(oE,"A",{href:!0,rel:!0});var Qb=a(cr);Mp=n(Qb,"densenet.py"),Qb.forEach(t),oE.forEach(t),Xp=f(Ti),Oe=o(Ti,"LI",{});var fh=a(Oe);zp=n(fh,"Paper: "),ms=o(fh,"CODE",{});var Zb=a(ms);Wp=n(Zb,"Densely Connected Convolutional Networks"),Zb.forEach(t),qp=n(fh," - "),pr=o(fh,"A",{href:!0,rel:!0});var e_=a(pr);Kp=n(e_,"https://arxiv.org/abs/1608.06993"),e_.forEach(t),fh.forEach(t),Fp=f(Ti),va=o(Ti,"LI",{});var aE=a(va);Yp=n(aE,"Code: "),vr=o(aE,"A",{href:!0,rel:!0});var t_=a(vr);jp=n(t_,"https://github.com/pytorch/vision/tree/master/torchvision/models"),t_.forEach(t),aE.forEach(t),Ti.forEach(t),lf=f(r),ie=o(r,"H2",{class:!0});var hc=a(ie);He=o(hc,"A",{id:!0,class:!0,href:!0});var r_=a(He);gs=o(r_,"SPAN",{});var l_=a(gs);d(dr.$$.fragment,l_),l_.forEach(t),r_.forEach(t),Jp=f(hc),Es=o(hc,"SPAN",{});var o_=a(Es);Qp=n(o_,"DLA"),o_.forEach(t),hc.forEach(t),of=f(r),T=o(r,"UL",{});var Vi=a(T);da=o(Vi,"LI",{});var iE=a(da);Zp=n(iE,"Implementation: "),ur=o(iE,"A",{href:!0,rel:!0});var a_=a(ur);e1=n(a_,"dla.py"),a_.forEach(t),iE.forEach(t),t1=f(Vi),ua=o(Vi,"LI",{});var sE=a(ua);r1=n(sE,"Paper: "),mr=o(sE,"A",{href:!0,rel:!0});var i_=a(mr);l1=n(i_,"https://arxiv.org/abs/1707.06484"),i_.forEach(t),sE.forEach(t),o1=f(Vi),ma=o(Vi,"LI",{});var nE=a(ma);a1=n(nE,"Code: "),gr=o(nE,"A",{href:!0,rel:!0});var s_=a(gr);i1=n(s_,"https://github.com/ucbdrive/dla"),s_.forEach(t),nE.forEach(t),Vi.forEach(t),af=f(r),se=o(r,"H2",{class:!0});var fc=a(se);Ge=o(fc,"A",{id:!0,class:!0,href:!0});var n_=a(Ge);bs=o(n_,"SPAN",{});var h_=a(bs);d(Er.$$.fragment,h_),h_.forEach(t),n_.forEach(t),s1=f(fc),_s=o(fc,"SPAN",{});var f_=a(_s);n1=n(f_,"Dual-Path Networks"),f_.forEach(t),fc.forEach(t),sf=f(r),A=o(r,"UL",{});var Kt=a(A);ga=o(Kt,"LI",{});var hE=a(ga);h1=n(hE,"Implementation: "),br=o(hE,"A",{href:!0,rel:!0});var c_=a(br);f1=n(c_,"dpn.py"),c_.forEach(t),hE.forEach(t),c1=f(Kt),Me=o(Kt,"LI",{});var ch=a(Me);p1=n(ch,"Paper: "),ws=o(ch,"CODE",{});var p_=a(ws);v1=n(p_,"Dual Path Networks"),p_.forEach(t),d1=n(ch," - "),_r=o(ch,"A",{href:!0,rel:!0});var v_=a(_r);u1=n(v_,"https://arxiv.org/abs/1707.01629"),v_.forEach(t),ch.forEach(t),m1=f(Kt),Ea=o(Kt,"LI",{});var fE=a(Ea);g1=n(fE,"My PyTorch code: "),wr=o(fE,"A",{href:!0,rel:!0});var d_=a(wr);E1=n(d_,"https://github.com/rwightman/pytorch-dpn-pretrained"),d_.forEach(t),fE.forEach(t),b1=f(Kt),ba=o(Kt,"LI",{});var cE=a(ba);_1=n(cE,"Reference code: "),yr=o(cE,"A",{href:!0,rel:!0});var u_=a(yr);w1=n(u_,"https://github.com/cypw/DPNs"),u_.forEach(t),cE.forEach(t),Kt.forEach(t),nf=f(r),ne=o(r,"H2",{class:!0});var cc=a(ne);Xe=o(cc,"A",{id:!0,class:!0,href:!0});var m_=a(Xe);ys=o(m_,"SPAN",{});var g_=a(ys);d(Nr.$$.fragment,g_),g_.forEach(t),m_.forEach(t),y1=f(cc),Ns=o(cc,"SPAN",{});var E_=a(Ns);N1=n(E_,"GPU-Efficient Networks"),E_.forEach(t),cc.forEach(t),hf=f(r),V=o(r,"UL",{});var Ui=a(V);_a=o(Ui,"LI",{});var pE=a(_a);A1=n(pE,"Implementation: "),Ar=o(pE,"A",{href:!0,rel:!0});var b_=a(Ar);$1=n(b_,"byobnet.py"),b_.forEach(t),pE.forEach(t),I1=f(Ui),ze=o(Ui,"LI",{});var ph=a(ze);x1=n(ph,"Paper: "),As=o(ph,"CODE",{});var __=a(As);L1=n(__,"Neural Architecture Design for GPU-Efficient Networks"),__.forEach(t),P1=n(ph," - "),$r=o(ph,"A",{href:!0,rel:!0});var w_=a($r);k1=n(w_,"https://arxiv.org/abs/2006.14090"),w_.forEach(t),ph.forEach(t),S1=f(Ui),wa=o(Ui,"LI",{});var vE=a(wa);C1=n(vE,"Reference code: "),Ir=o(vE,"A",{href:!0,rel:!0});var y_=a(Ir);R1=n(y_,"https://github.com/idstcv/GPU-Efficient-Networks"),y_.forEach(t),vE.forEach(t),Ui.forEach(t),ff=f(r),he=o(r,"H2",{class:!0});var pc=a(he);We=o(pc,"A",{id:!0,class:!0,href:!0});var N_=a(We);$s=o(N_,"SPAN",{});var A_=a($s);d(xr.$$.fragment,A_),A_.forEach(t),N_.forEach(t),D1=f(pc),Is=o(pc,"SPAN",{});var $_=a(Is);T1=n($_,"HRNet"),$_.forEach(t),pc.forEach(t),cf=f(r),U=o(r,"UL",{});var Bi=a(U);ya=o(Bi,"LI",{});var dE=a(ya);V1=n(dE,"Implementation: "),Lr=o(dE,"A",{href:!0,rel:!0});var I_=a(Lr);U1=n(I_,"hrnet.py"),I_.forEach(t),dE.forEach(t),B1=f(Bi),qe=o(Bi,"LI",{});var vh=a(qe);O1=n(vh,"Paper: "),xs=o(vh,"CODE",{});var x_=a(xs);H1=n(x_,"Deep High-Resolution Representation Learning for Visual Recognition"),x_.forEach(t),G1=n(vh," - "),Pr=o(vh,"A",{href:!0,rel:!0});var L_=a(Pr);M1=n(L_,"https://arxiv.org/abs/1908.07919"),L_.forEach(t),vh.forEach(t),X1=f(Bi),Na=o(Bi,"LI",{});var uE=a(Na);z1=n(uE,"Code: "),kr=o(uE,"A",{href:!0,rel:!0});var P_=a(kr);W1=n(P_,"https://github.com/HRNet/HRNet-Image-Classification"),P_.forEach(t),uE.forEach(t),Bi.forEach(t),pf=f(r),fe=o(r,"H2",{class:!0});var vc=a(fe);Ke=o(vc,"A",{id:!0,class:!0,href:!0});var k_=a(Ke);Ls=o(k_,"SPAN",{});var S_=a(Ls);d(Sr.$$.fragment,S_),S_.forEach(t),k_.forEach(t),q1=f(vc),Ps=o(vc,"SPAN",{});var C_=a(Ps);K1=n(C_,"Inception-V3"),C_.forEach(t),vc.forEach(t),vf=f(r),B=o(r,"UL",{});var Oi=a(B);Aa=o(Oi,"LI",{});var mE=a(Aa);F1=n(mE,"Implementation: "),Cr=o(mE,"A",{href:!0,rel:!0});var R_=a(Cr);Y1=n(R_,"inception_v3.py"),R_.forEach(t),mE.forEach(t),j1=f(Oi),Fe=o(Oi,"LI",{});var dh=a(Fe);J1=n(dh,"Paper: "),ks=o(dh,"CODE",{});var D_=a(ks);Q1=n(D_,"Rethinking the Inception Architecture for Computer Vision"),D_.forEach(t),Z1=n(dh," - "),Rr=o(dh,"A",{href:!0,rel:!0});var T_=a(Rr);ev=n(T_,"https://arxiv.org/abs/1512.00567"),T_.forEach(t),dh.forEach(t),tv=f(Oi),$a=o(Oi,"LI",{});var gE=a($a);rv=n(gE,"Code: "),Dr=o(gE,"A",{href:!0,rel:!0});var V_=a(Dr);lv=n(V_,"https://github.com/pytorch/vision/tree/master/torchvision/models"),V_.forEach(t),gE.forEach(t),Oi.forEach(t),df=f(r),ce=o(r,"H2",{class:!0});var dc=a(ce);Ye=o(dc,"A",{id:!0,class:!0,href:!0});var U_=a(Ye);Ss=o(U_,"SPAN",{});var B_=a(Ss);d(Tr.$$.fragment,B_),B_.forEach(t),U_.forEach(t),ov=f(dc),Cs=o(dc,"SPAN",{});var O_=a(Cs);av=n(O_,"Inception-V4"),O_.forEach(t),dc.forEach(t),uf=f(r),$=o(r,"UL",{});var Ft=a($);Ia=o(Ft,"LI",{});var EE=a(Ia);iv=n(EE,"Implementation: "),Vr=o(EE,"A",{href:!0,rel:!0});var H_=a(Vr);sv=n(H_,"inception_v4.py"),H_.forEach(t),EE.forEach(t),nv=f(Ft),je=o(Ft,"LI",{});var uh=a(je);hv=n(uh,"Paper: "),Rs=o(uh,"CODE",{});var G_=a(Rs);fv=n(G_,"Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning"),G_.forEach(t),cv=n(uh," - "),Ur=o(uh,"A",{href:!0,rel:!0});var M_=a(Ur);pv=n(M_,"https://arxiv.org/abs/1602.07261"),M_.forEach(t),uh.forEach(t),vv=f(Ft),xa=o(Ft,"LI",{});var bE=a(xa);dv=n(bE,"Code: "),Br=o(bE,"A",{href:!0,rel:!0});var X_=a(Br);uv=n(X_,"https://github.com/Cadene/pretrained-models.pytorch"),X_.forEach(t),bE.forEach(t),mv=f(Ft),La=o(Ft,"LI",{});var _E=a(La);gv=n(_E,"Reference code: "),Or=o(_E,"A",{href:!0,rel:!0});var z_=a(Or);Ev=n(z_,"https://github.com/tensorflow/models/tree/master/research/slim/nets"),z_.forEach(t),_E.forEach(t),Ft.forEach(t),mf=f(r),pe=o(r,"H2",{class:!0});var uc=a(pe);Je=o(uc,"A",{id:!0,class:!0,href:!0});var W_=a(Je);Ds=o(W_,"SPAN",{});var q_=a(Ds);d(Hr.$$.fragment,q_),q_.forEach(t),W_.forEach(t),bv=f(uc),Ts=o(uc,"SPAN",{});var K_=a(Ts);_v=n(K_,"Inception-ResNet-V2"),K_.forEach(t),uc.forEach(t),gf=f(r),I=o(r,"UL",{});var Yt=a(I);Pa=o(Yt,"LI",{});var wE=a(Pa);wv=n(wE,"Implementation: "),Gr=o(wE,"A",{href:!0,rel:!0});var F_=a(Gr);yv=n(F_,"inception_resnet_v2.py"),F_.forEach(t),wE.forEach(t),Nv=f(Yt),Qe=o(Yt,"LI",{});var mh=a(Qe);Av=n(mh,"Paper: "),Vs=o(mh,"CODE",{});var Y_=a(Vs);$v=n(Y_,"Inception-v4, Inception-ResNet and the Impact of Residual Connections on Learning"),Y_.forEach(t),Iv=n(mh," - "),Mr=o(mh,"A",{href:!0,rel:!0});var j_=a(Mr);xv=n(j_,"https://arxiv.org/abs/1602.07261"),j_.forEach(t),mh.forEach(t),Lv=f(Yt),ka=o(Yt,"LI",{});var yE=a(ka);Pv=n(yE,"Code: "),Xr=o(yE,"A",{href:!0,rel:!0});var J_=a(Xr);kv=n(J_,"https://github.com/Cadene/pretrained-models.pytorch"),J_.forEach(t),yE.forEach(t),Sv=f(Yt),Sa=o(Yt,"LI",{});var NE=a(Sa);Cv=n(NE,"Reference code: "),zr=o(NE,"A",{href:!0,rel:!0});var Q_=a(zr);Rv=n(Q_,"https://github.com/tensorflow/models/tree/master/research/slim/nets"),Q_.forEach(t),NE.forEach(t),Yt.forEach(t),Ef=f(r),ve=o(r,"H2",{class:!0});var mc=a(ve);Ze=o(mc,"A",{id:!0,class:!0,href:!0});var Z_=a(Ze);Us=o(Z_,"SPAN",{});var e3=a(Us);d(Wr.$$.fragment,e3),e3.forEach(t),Z_.forEach(t),Dv=f(mc),Bs=o(mc,"SPAN",{});var t3=a(Bs);Tv=n(t3,"NASNet-A"),t3.forEach(t),mc.forEach(t),bf=f(r),x=o(r,"UL",{});var jt=a(x);Ca=o(jt,"LI",{});var AE=a(Ca);Vv=n(AE,"Implementation: "),qr=o(AE,"A",{href:!0,rel:!0});var r3=a(qr);Uv=n(r3,"nasnet.py"),r3.forEach(t),AE.forEach(t),Bv=f(jt),et=o(jt,"LI",{});var gh=a(et);Ov=n(gh,"Papers: "),Os=o(gh,"CODE",{});var l3=a(Os);Hv=n(l3,"Learning Transferable Architectures for Scalable Image Recognition"),l3.forEach(t),Gv=n(gh," - "),Kr=o(gh,"A",{href:!0,rel:!0});var o3=a(Kr);Mv=n(o3,"https://arxiv.org/abs/1707.07012"),o3.forEach(t),gh.forEach(t),Xv=f(jt),Ra=o(jt,"LI",{});var $E=a(Ra);zv=n($E,"Code: "),Fr=o($E,"A",{href:!0,rel:!0});var a3=a(Fr);Wv=n(a3,"https://github.com/Cadene/pretrained-models.pytorch"),a3.forEach(t),$E.forEach(t),qv=f(jt),Da=o(jt,"LI",{});var IE=a(Da);Kv=n(IE,"Reference code: "),Yr=o(IE,"A",{href:!0,rel:!0});var i3=a(Yr);Fv=n(i3,"https://github.com/tensorflow/models/tree/master/research/slim/nets/nasnet"),i3.forEach(t),IE.forEach(t),jt.forEach(t),_f=f(r),de=o(r,"H2",{class:!0});var gc=a(de);tt=o(gc,"A",{id:!0,class:!0,href:!0});var s3=a(tt);Hs=o(s3,"SPAN",{});var n3=a(Hs);d(jr.$$.fragment,n3),n3.forEach(t),s3.forEach(t),Yv=f(gc),Gs=o(gc,"SPAN",{});var h3=a(Gs);jv=n(h3,"PNasNet-5"),h3.forEach(t),gc.forEach(t),wf=f(r),L=o(r,"UL",{});var Jt=a(L);Ta=o(Jt,"LI",{});var xE=a(Ta);Jv=n(xE,"Implementation: "),Jr=o(xE,"A",{href:!0,rel:!0});var f3=a(Jr);Qv=n(f3,"pnasnet.py"),f3.forEach(t),xE.forEach(t),Zv=f(Jt),rt=o(Jt,"LI",{});var Eh=a(rt);ed=n(Eh,"Papers: "),Ms=o(Eh,"CODE",{});var c3=a(Ms);td=n(c3,"Progressive Neural Architecture Search"),c3.forEach(t),rd=n(Eh," - "),Qr=o(Eh,"A",{href:!0,rel:!0});var p3=a(Qr);ld=n(p3,"https://arxiv.org/abs/1712.00559"),p3.forEach(t),Eh.forEach(t),od=f(Jt),Va=o(Jt,"LI",{});var LE=a(Va);ad=n(LE,"Code: "),Zr=o(LE,"A",{href:!0,rel:!0});var v3=a(Zr);id=n(v3,"https://github.com/Cadene/pretrained-models.pytorch"),v3.forEach(t),LE.forEach(t),sd=f(Jt),Ua=o(Jt,"LI",{});var PE=a(Ua);nd=n(PE,"Reference code: "),el=o(PE,"A",{href:!0,rel:!0});var d3=a(el);hd=n(d3,"https://github.com/tensorflow/models/tree/master/research/slim/nets/nasnet"),d3.forEach(t),PE.forEach(t),Jt.forEach(t),yf=f(r),ue=o(r,"H2",{class:!0});var Ec=a(ue);lt=o(Ec,"A",{id:!0,class:!0,href:!0});var u3=a(lt);Xs=o(u3,"SPAN",{});var m3=a(Xs);d(tl.$$.fragment,m3),m3.forEach(t),u3.forEach(t),fd=f(Ec),zs=o(Ec,"SPAN",{});var g3=a(zs);cd=n(g3,"EfficientNet"),g3.forEach(t),Ec.forEach(t),Nf=f(r),P=o(r,"UL",{});var Qt=a(P);Ba=o(Qt,"LI",{});var kE=a(Ba);pd=n(kE,"Implementation: "),rl=o(kE,"A",{href:!0,rel:!0});var E3=a(rl);vd=n(E3,"efficientnet.py"),E3.forEach(t),kE.forEach(t),dd=f(Qt),Oa=o(Qt,"LI",{});var SE=a(Oa);ud=n(SE,"Papers:"),_=o(SE,"UL",{});var y=a(_);Ha=o(y,"LI",{});var CE=a(Ha);md=n(CE,"EfficientNet NoisyStudent (B0-B7, L2) - "),ll=o(CE,"A",{href:!0,rel:!0});var b3=a(ll);gd=n(b3,"https://arxiv.org/abs/1911.04252"),b3.forEach(t),CE.forEach(t),Ed=f(y),Ga=o(y,"LI",{});var RE=a(Ga);bd=n(RE,"EfficientNet AdvProp (B0-B8) - "),ol=o(RE,"A",{href:!0,rel:!0});var _3=a(ol);_d=n(_3,"https://arxiv.org/abs/1911.09665"),_3.forEach(t),RE.forEach(t),wd=f(y),Ma=o(y,"LI",{});var DE=a(Ma);yd=n(DE,"EfficientNet (B0-B7) - "),al=o(DE,"A",{href:!0,rel:!0});var w3=a(al);Nd=n(w3,"https://arxiv.org/abs/1905.11946"),w3.forEach(t),DE.forEach(t),Ad=f(y),Xa=o(y,"LI",{});var TE=a(Xa);$d=n(TE,"EfficientNet-EdgeTPU (S, M, L) - "),il=o(TE,"A",{href:!0,rel:!0});var y3=a(il);Id=n(y3,"https://ai.googleblog.com/2019/08/efficientnet-edgetpu-creating.html"),y3.forEach(t),TE.forEach(t),xd=f(y),za=o(y,"LI",{});var VE=a(za);Ld=n(VE,"MixNet - "),sl=o(VE,"A",{href:!0,rel:!0});var N3=a(sl);Pd=n(N3,"https://arxiv.org/abs/1907.09595"),N3.forEach(t),VE.forEach(t),kd=f(y),Wa=o(y,"LI",{});var UE=a(Wa);Sd=n(UE,"MNASNet B1, A1 (Squeeze-Excite), and Small - "),nl=o(UE,"A",{href:!0,rel:!0});var A3=a(nl);Cd=n(A3,"https://arxiv.org/abs/1807.11626"),A3.forEach(t),UE.forEach(t),Rd=f(y),qa=o(y,"LI",{});var BE=a(qa);Dd=n(BE,"MobileNet-V2 - "),hl=o(BE,"A",{href:!0,rel:!0});var $3=a(hl);Td=n($3,"https://arxiv.org/abs/1801.04381"),$3.forEach(t),BE.forEach(t),Vd=f(y),Ka=o(y,"LI",{});var OE=a(Ka);Ud=n(OE,"FBNet-C - "),fl=o(OE,"A",{href:!0,rel:!0});var I3=a(fl);Bd=n(I3,"https://arxiv.org/abs/1812.03443"),I3.forEach(t),OE.forEach(t),Od=f(y),Fa=o(y,"LI",{});var HE=a(Fa);Hd=n(HE,"Single-Path NAS - "),cl=o(HE,"A",{href:!0,rel:!0});var x3=a(cl);Gd=n(x3,"https://arxiv.org/abs/1904.02877"),x3.forEach(t),HE.forEach(t),y.forEach(t),SE.forEach(t),Md=f(Qt),Ya=o(Qt,"LI",{});var GE=a(Ya);Xd=n(GE,"My PyTorch code: "),pl=o(GE,"A",{href:!0,rel:!0});var L3=a(pl);zd=n(L3,"https://github.com/rwightman/gen-efficientnet-pytorch"),L3.forEach(t),GE.forEach(t),Wd=f(Qt),ja=o(Qt,"LI",{});var ME=a(ja);qd=n(ME,"Reference code: "),vl=o(ME,"A",{href:!0,rel:!0});var P3=a(vl);Kd=n(P3,"https://github.com/tensorflow/tpu/tree/master/models/official/efficientnet"),P3.forEach(t),ME.forEach(t),Qt.forEach(t),Af=f(r),me=o(r,"H2",{class:!0});var bc=a(me);ot=o(bc,"A",{id:!0,class:!0,href:!0});var k3=a(ot);Ws=o(k3,"SPAN",{});var S3=a(Ws);d(dl.$$.fragment,S3),S3.forEach(t),k3.forEach(t),Fd=f(bc),qs=o(bc,"SPAN",{});var C3=a(qs);Yd=n(C3,"MobileNet-V3"),C3.forEach(t),bc.forEach(t),$f=f(r),O=o(r,"UL",{});var Hi=a(O);Ja=o(Hi,"LI",{});var XE=a(Ja);jd=n(XE,"Implementation: "),ul=o(XE,"A",{href:!0,rel:!0});var R3=a(ul);Jd=n(R3,"mobilenetv3.py"),R3.forEach(t),XE.forEach(t),Qd=f(Hi),at=o(Hi,"LI",{});var bh=a(at);Zd=n(bh,"Paper: "),Ks=o(bh,"CODE",{});var D3=a(Ks);eu=n(D3,"Searching for MobileNetV3"),D3.forEach(t),tu=n(bh," - "),ml=o(bh,"A",{href:!0,rel:!0});var T3=a(ml);ru=n(T3,"https://arxiv.org/abs/1905.02244"),T3.forEach(t),bh.forEach(t),lu=f(Hi),Qa=o(Hi,"LI",{});var zE=a(Qa);ou=n(zE,"Reference code: "),gl=o(zE,"A",{href:!0,rel:!0});var V3=a(gl);au=n(V3,"https://github.com/tensorflow/models/tree/master/research/slim/nets/mobilenet"),V3.forEach(t),zE.forEach(t),Hi.forEach(t),If=f(r),ge=o(r,"H2",{class:!0});var _c=a(ge);it=o(_c,"A",{id:!0,class:!0,href:!0});var U3=a(it);Fs=o(U3,"SPAN",{});var B3=a(Fs);d(El.$$.fragment,B3),B3.forEach(t),U3.forEach(t),iu=f(_c),Ys=o(_c,"SPAN",{});var O3=a(Ys);su=n(O3,"RegNet"),O3.forEach(t),_c.forEach(t),xf=f(r),H=o(r,"UL",{});var Gi=a(H);Za=o(Gi,"LI",{});var WE=a(Za);nu=n(WE,"Implementation: "),bl=o(WE,"A",{href:!0,rel:!0});var H3=a(bl);hu=n(H3,"regnet.py"),H3.forEach(t),WE.forEach(t),fu=f(Gi),st=o(Gi,"LI",{});var _h=a(st);cu=n(_h,"Paper: "),js=o(_h,"CODE",{});var G3=a(js);pu=n(G3,"Designing Network Design Spaces"),G3.forEach(t),vu=n(_h," - "),_l=o(_h,"A",{href:!0,rel:!0});var M3=a(_l);du=n(M3,"https://arxiv.org/abs/2003.13678"),M3.forEach(t),_h.forEach(t),uu=f(Gi),ei=o(Gi,"LI",{});var qE=a(ei);mu=n(qE,"Reference code: "),wl=o(qE,"A",{href:!0,rel:!0});var X3=a(wl);gu=n(X3,"https://github.com/facebookresearch/pycls/blob/master/pycls/models/regnet.py"),X3.forEach(t),qE.forEach(t),Gi.forEach(t),Lf=f(r),Ee=o(r,"H2",{class:!0});var wc=a(Ee);nt=o(wc,"A",{id:!0,class:!0,href:!0});var z3=a(nt);Js=o(z3,"SPAN",{});var W3=a(Js);d(yl.$$.fragment,W3),W3.forEach(t),z3.forEach(t),Eu=f(wc),Qs=o(wc,"SPAN",{});var q3=a(Qs);bu=n(q3,"RepVGG"),q3.forEach(t),wc.forEach(t),Pf=f(r),G=o(r,"UL",{});var Mi=a(G);ti=o(Mi,"LI",{});var KE=a(ti);_u=n(KE,"Implementation: "),Nl=o(KE,"A",{href:!0,rel:!0});var K3=a(Nl);wu=n(K3,"byobnet.py"),K3.forEach(t),KE.forEach(t),yu=f(Mi),ht=o(Mi,"LI",{});var wh=a(ht);Nu=n(wh,"Paper: "),Zs=o(wh,"CODE",{});var F3=a(Zs);Au=n(F3,"Making VGG-style ConvNets Great Again"),F3.forEach(t),$u=n(wh," - "),Al=o(wh,"A",{href:!0,rel:!0});var Y3=a(Al);Iu=n(Y3,"https://arxiv.org/abs/2101.03697"),Y3.forEach(t),wh.forEach(t),xu=f(Mi),ri=o(Mi,"LI",{});var FE=a(ri);Lu=n(FE,"Reference code: "),$l=o(FE,"A",{href:!0,rel:!0});var j3=a($l);Pu=n(j3,"https://github.com/DingXiaoH/RepVGG"),j3.forEach(t),FE.forEach(t),Mi.forEach(t),kf=f(r),be=o(r,"H2",{class:!0});var yc=a(be);ft=o(yc,"A",{id:!0,class:!0,href:!0});var J3=a(ft);en=o(J3,"SPAN",{});var Q3=a(en);d(Il.$$.fragment,Q3),Q3.forEach(t),J3.forEach(t),ku=f(yc),tn=o(yc,"SPAN",{});var Z3=a(tn);Su=n(Z3,"ResNet, ResNeXt"),Z3.forEach(t),yc.forEach(t),Sf=f(r),w=o(r,"UL",{});var N=a(w);rn=o(N,"LI",{});var ew=a(rn);li=o(ew,"P",{});var YE=a(li);Cu=n(YE,"Implementation: "),xl=o(YE,"A",{href:!0,rel:!0});var tw=a(xl);Ru=n(tw,"resnet.py"),tw.forEach(t),YE.forEach(t),ew.forEach(t),Du=f(N),Ll=o(N,"LI",{});var Nc=a(Ll);ln=o(Nc,"P",{});var rw=a(ln);Tu=n(rw,"ResNet (V1B)"),rw.forEach(t),Vu=f(Nc),Pl=o(Nc,"UL",{});var Ac=a(Pl);ct=o(Ac,"LI",{});var yh=a(ct);Uu=n(yh,"Paper: "),on=o(yh,"CODE",{});var lw=a(on);Bu=n(lw,"Deep Residual Learning for Image Recognition"),lw.forEach(t),Ou=n(yh," - "),kl=o(yh,"A",{href:!0,rel:!0});var ow=a(kl);Hu=n(ow,"https://arxiv.org/abs/1512.03385"),ow.forEach(t),yh.forEach(t),Gu=f(Ac),oi=o(Ac,"LI",{});var jE=a(oi);Mu=n(jE,"Code: "),Sl=o(jE,"A",{href:!0,rel:!0});var aw=a(Sl);Xu=n(aw,"https://github.com/pytorch/vision/tree/master/torchvision/models"),aw.forEach(t),jE.forEach(t),Ac.forEach(t),Nc.forEach(t),zu=f(N),Cl=o(N,"LI",{});var $c=a(Cl);an=o($c,"P",{});var iw=a(an);Wu=n(iw,"ResNeXt"),iw.forEach(t),qu=f($c),Rl=o($c,"UL",{});var Ic=a(Rl);pt=o(Ic,"LI",{});var Nh=a(pt);Ku=n(Nh,"Paper: "),sn=o(Nh,"CODE",{});var sw=a(sn);Fu=n(sw,"Aggregated Residual Transformations for Deep Neural Networks"),sw.forEach(t),Yu=n(Nh," - "),Dl=o(Nh,"A",{href:!0,rel:!0});var nw=a(Dl);ju=n(nw,"https://arxiv.org/abs/1611.05431"),nw.forEach(t),Nh.forEach(t),Ju=f(Ic),ai=o(Ic,"LI",{});var JE=a(ai);Qu=n(JE,"Code: "),Tl=o(JE,"A",{href:!0,rel:!0});var hw=a(Tl);Zu=n(hw,"https://github.com/pytorch/vision/tree/master/torchvision/models"),hw.forEach(t),JE.forEach(t),Ic.forEach(t),$c.forEach(t),em=f(N),Vl=o(N,"LI",{});var xc=a(Vl);nn=o(xc,"P",{});var fw=a(nn);tm=n(fw,"\u2018Bag of Tricks\u2019 / Gluon C, D, E, S ResNet variants"),fw.forEach(t),rm=f(xc),Ul=o(xc,"UL",{});var Lc=a(Ul);vt=o(Lc,"LI",{});var Ah=a(vt);lm=n(Ah,"Paper: "),hn=o(Ah,"CODE",{});var cw=a(hn);om=n(cw,"Bag of Tricks for Image Classification with CNNs"),cw.forEach(t),am=n(Ah," - "),Bl=o(Ah,"A",{href:!0,rel:!0});var pw=a(Bl);im=n(pw,"https://arxiv.org/abs/1812.01187"),pw.forEach(t),Ah.forEach(t),sm=f(Lc),ii=o(Lc,"LI",{});var QE=a(ii);nm=n(QE,"Code: "),Ol=o(QE,"A",{href:!0,rel:!0});var vw=a(Ol);hm=n(vw,"https://github.com/dmlc/gluon-cv/blob/master/gluoncv/model_zoo/resnetv1b.py"),vw.forEach(t),QE.forEach(t),Lc.forEach(t),xc.forEach(t),fm=f(N),Hl=o(N,"LI",{});var Pc=a(Hl);fn=o(Pc,"P",{});var dw=a(fn);cm=n(dw,"Instagram pretrained / ImageNet tuned ResNeXt101"),dw.forEach(t),pm=f(Pc),Gl=o(Pc,"UL",{});var kc=a(Gl);dt=o(kc,"LI",{});var $h=a(dt);vm=n($h,"Paper: "),cn=o($h,"CODE",{});var uw=a(cn);dm=n(uw,"Exploring the Limits of Weakly Supervised Pretraining"),uw.forEach(t),um=n($h," - "),Ml=o($h,"A",{href:!0,rel:!0});var mw=a(Ml);mm=n(mw,"https://arxiv.org/abs/1805.00932"),mw.forEach(t),$h.forEach(t),gm=f(kc),Xl=o(kc,"LI",{});var Sc=a(Xl);Em=n(Sc,"Weights: "),zl=o(Sc,"A",{href:!0,rel:!0});var gw=a(zl);bm=n(gw,"https://pytorch.org/hub/facebookresearch_WSL-Images_resnext"),gw.forEach(t),_m=n(Sc," (NOTE: CC BY-NC 4.0 License, NOT commercial friendly)"),Sc.forEach(t),kc.forEach(t),Pc.forEach(t),wm=f(N),Wl=o(N,"LI",{});var Cc=a(Wl);pn=o(Cc,"P",{});var Ew=a(pn);ym=n(Ew,"Semi-supervised (SSL) / Semi-weakly Supervised (SWSL) ResNet and ResNeXts"),Ew.forEach(t),Nm=f(Cc),ql=o(Cc,"UL",{});var Rc=a(ql);ut=o(Rc,"LI",{});var Ih=a(ut);Am=n(Ih,"Paper: "),vn=o(Ih,"CODE",{});var bw=a(vn);$m=n(bw,"Billion-scale semi-supervised learning for image classification"),bw.forEach(t),Im=n(Ih," - "),Kl=o(Ih,"A",{href:!0,rel:!0});var _w=a(Kl);xm=n(_w,"https://arxiv.org/abs/1905.00546"),_w.forEach(t),Ih.forEach(t),Lm=f(Rc),Fl=o(Rc,"LI",{});var Dc=a(Fl);Pm=n(Dc,"Weights: "),Yl=o(Dc,"A",{href:!0,rel:!0});var ww=a(Yl);km=n(ww,"https://github.com/facebookresearch/semi-supervised-ImageNet1K-models"),ww.forEach(t),Sm=n(Dc," (NOTE: CC BY-NC 4.0 License, NOT commercial friendly)"),Dc.forEach(t),Rc.forEach(t),Cc.forEach(t),Cm=f(N),jl=o(N,"LI",{});var Tc=a(jl);dn=o(Tc,"P",{});var yw=a(dn);Rm=n(yw,"Squeeze-and-Excitation Networks"),yw.forEach(t),Dm=f(Tc),Jl=o(Tc,"UL",{});var Vc=a(Jl);mt=o(Vc,"LI",{});var xh=a(mt);Tm=n(xh,"Paper: "),un=o(xh,"CODE",{});var Nw=a(un);Vm=n(Nw,"Squeeze-and-Excitation Networks"),Nw.forEach(t),Um=n(xh," - "),Ql=o(xh,"A",{href:!0,rel:!0});var Aw=a(Ql);Bm=n(Aw,"https://arxiv.org/abs/1709.01507"),Aw.forEach(t),xh.forEach(t),Om=f(Vc),Zl=o(Vc,"LI",{});var Uc=a(Zl);Hm=n(Uc,"Code: Added to ResNet base, this is current version going forward, old "),mn=o(Uc,"CODE",{});var $w=a(mn);Gm=n($w,"senet.py"),$w.forEach(t),Mm=n(Uc," is being deprecated"),Uc.forEach(t),Vc.forEach(t),Tc.forEach(t),Xm=f(N),eo=o(N,"LI",{});var Bc=a(eo);gn=o(Bc,"P",{});var Iw=a(gn);zm=n(Iw,"ECAResNet (ECA-Net)"),Iw.forEach(t),Wm=f(Bc),to=o(Bc,"UL",{});var Oc=a(to);gt=o(Oc,"LI",{});var Lh=a(gt);qm=n(Lh,"Paper: "),En=o(Lh,"CODE",{});var xw=a(En);Km=n(xw,"ECA-Net: Efficient Channel Attention for Deep CNN"),xw.forEach(t),Fm=n(Lh," - "),ro=o(Lh,"A",{href:!0,rel:!0});var Lw=a(ro);Ym=n(Lw,"https://arxiv.org/abs/1910.03151v4"),Lw.forEach(t),Lh.forEach(t),jm=f(Oc),si=o(Oc,"LI",{});var ZE=a(si);Jm=n(ZE,"Code: Added to ResNet base, ECA module contributed by @VRandme, reference "),lo=o(ZE,"A",{href:!0,rel:!0});var Pw=a(lo);Qm=n(Pw,"https://github.com/BangguWu/ECANet"),Pw.forEach(t),ZE.forEach(t),Oc.forEach(t),Bc.forEach(t),N.forEach(t),Cf=f(r),_e=o(r,"H2",{class:!0});var Hc=a(_e);Et=o(Hc,"A",{id:!0,class:!0,href:!0});var kw=a(Et);bn=o(kw,"SPAN",{});var Sw=a(bn);d(oo.$$.fragment,Sw),Sw.forEach(t),kw.forEach(t),Zm=f(Hc),_n=o(Hc,"SPAN",{});var Cw=a(_n);e2=n(Cw,"Res2Net"),Cw.forEach(t),Hc.forEach(t),Rf=f(r),M=o(r,"UL",{});var Xi=a(M);ni=o(Xi,"LI",{});var eb=a(ni);t2=n(eb,"Implementation: "),ao=o(eb,"A",{href:!0,rel:!0});var Rw=a(ao);r2=n(Rw,"res2net.py"),Rw.forEach(t),eb.forEach(t),l2=f(Xi),bt=o(Xi,"LI",{});var Ph=a(bt);o2=n(Ph,"Paper: "),wn=o(Ph,"CODE",{});var Dw=a(wn);a2=n(Dw,"Res2Net: A New Multi-scale Backbone Architecture"),Dw.forEach(t),i2=n(Ph," - "),io=o(Ph,"A",{href:!0,rel:!0});var Tw=a(io);s2=n(Tw,"https://arxiv.org/abs/1904.01169"),Tw.forEach(t),Ph.forEach(t),n2=f(Xi),hi=o(Xi,"LI",{});var tb=a(hi);h2=n(tb,"Code: "),so=o(tb,"A",{href:!0,rel:!0});var Vw=a(so);f2=n(Vw,"https://github.com/gasvn/Res2Net"),Vw.forEach(t),tb.forEach(t),Xi.forEach(t),Df=f(r),we=o(r,"H2",{class:!0});var Gc=a(we);_t=o(Gc,"A",{id:!0,class:!0,href:!0});var Uw=a(_t);yn=o(Uw,"SPAN",{});var Bw=a(yn);d(no.$$.fragment,Bw),Bw.forEach(t),Uw.forEach(t),c2=f(Gc),Nn=o(Gc,"SPAN",{});var Ow=a(Nn);p2=n(Ow,"ResNeSt"),Ow.forEach(t),Gc.forEach(t),Tf=f(r),X=o(r,"UL",{});var zi=a(X);fi=o(zi,"LI",{});var rb=a(fi);v2=n(rb,"Implementation: "),ho=o(rb,"A",{href:!0,rel:!0});var Hw=a(ho);d2=n(Hw,"resnest.py"),Hw.forEach(t),rb.forEach(t),u2=f(zi),wt=o(zi,"LI",{});var kh=a(wt);m2=n(kh,"Paper: "),An=o(kh,"CODE",{});var Gw=a(An);g2=n(Gw,"ResNeSt: Split-Attention Networks"),Gw.forEach(t),E2=n(kh," - "),fo=o(kh,"A",{href:!0,rel:!0});var Mw=a(fo);b2=n(Mw,"https://arxiv.org/abs/2004.08955"),Mw.forEach(t),kh.forEach(t),_2=f(zi),ci=o(zi,"LI",{});var lb=a(ci);w2=n(lb,"Code: "),co=o(lb,"A",{href:!0,rel:!0});var Xw=a(co);y2=n(Xw,"https://github.com/zhanghang1989/ResNeSt"),Xw.forEach(t),lb.forEach(t),zi.forEach(t),Vf=f(r),ye=o(r,"H2",{class:!0});var Mc=a(ye);yt=o(Mc,"A",{id:!0,class:!0,href:!0});var zw=a(yt);$n=o(zw,"SPAN",{});var Ww=a($n);d(po.$$.fragment,Ww),Ww.forEach(t),zw.forEach(t),N2=f(Mc),In=o(Mc,"SPAN",{});var qw=a(In);A2=n(qw,"ReXNet"),qw.forEach(t),Mc.forEach(t),Uf=f(r),z=o(r,"UL",{});var Wi=a(z);pi=o(Wi,"LI",{});var ob=a(pi);$2=n(ob,"Implementation: "),vo=o(ob,"A",{href:!0,rel:!0});var Kw=a(vo);I2=n(Kw,"rexnet.py"),Kw.forEach(t),ob.forEach(t),x2=f(Wi),Nt=o(Wi,"LI",{});var Sh=a(Nt);L2=n(Sh,"Paper: "),xn=o(Sh,"CODE",{});var Fw=a(xn);P2=n(Fw,"ReXNet: Diminishing Representational Bottleneck on CNN"),Fw.forEach(t),k2=n(Sh," - "),uo=o(Sh,"A",{href:!0,rel:!0});var Yw=a(uo);S2=n(Yw,"https://arxiv.org/abs/2007.00992"),Yw.forEach(t),Sh.forEach(t),C2=f(Wi),vi=o(Wi,"LI",{});var ab=a(vi);R2=n(ab,"Code: "),mo=o(ab,"A",{href:!0,rel:!0});var jw=a(mo);D2=n(jw,"https://github.com/clovaai/rexnet"),jw.forEach(t),ab.forEach(t),Wi.forEach(t),Bf=f(r),Ne=o(r,"H2",{class:!0});var Xc=a(Ne);At=o(Xc,"A",{id:!0,class:!0,href:!0});var Jw=a(At);Ln=o(Jw,"SPAN",{});var Qw=a(Ln);d(go.$$.fragment,Qw),Qw.forEach(t),Jw.forEach(t),T2=f(Xc),Pn=o(Xc,"SPAN",{});var Zw=a(Pn);V2=n(Zw,"Selective-Kernel Networks"),Zw.forEach(t),Xc.forEach(t),Of=f(r),W=o(r,"UL",{});var qi=a(W);di=o(qi,"LI",{});var ib=a(di);U2=n(ib,"Implementation: "),Eo=o(ib,"A",{href:!0,rel:!0});var e4=a(Eo);B2=n(e4,"sknet.py"),e4.forEach(t),ib.forEach(t),O2=f(qi),$t=o(qi,"LI",{});var Ch=a($t);H2=n(Ch,"Paper: "),kn=o(Ch,"CODE",{});var t4=a(kn);G2=n(t4,"Selective-Kernel Networks"),t4.forEach(t),M2=n(Ch," - "),bo=o(Ch,"A",{href:!0,rel:!0});var r4=a(bo);X2=n(r4,"https://arxiv.org/abs/1903.06586"),r4.forEach(t),Ch.forEach(t),z2=f(qi),It=o(qi,"LI",{});var Rh=a(It);W2=n(Rh,"Code: "),_o=o(Rh,"A",{href:!0,rel:!0});var l4=a(_o);q2=n(l4,"https://github.com/implus/SKNet"),l4.forEach(t),K2=n(Rh,", "),wo=o(Rh,"A",{href:!0,rel:!0});var o4=a(wo);F2=n(o4,"https://github.com/clovaai/assembled-cnn"),o4.forEach(t),Rh.forEach(t),qi.forEach(t),Hf=f(r),Ae=o(r,"H2",{class:!0});var zc=a(Ae);xt=o(zc,"A",{id:!0,class:!0,href:!0});var a4=a(xt);Sn=o(a4,"SPAN",{});var i4=a(Sn);d(yo.$$.fragment,i4),i4.forEach(t),a4.forEach(t),Y2=f(zc),Cn=o(zc,"SPAN",{});var s4=a(Cn);j2=n(s4,"SelecSLS"),s4.forEach(t),zc.forEach(t),Gf=f(r),q=o(r,"UL",{});var Ki=a(q);ui=o(Ki,"LI",{});var sb=a(ui);J2=n(sb,"Implementation: "),No=o(sb,"A",{href:!0,rel:!0});var n4=a(No);Q2=n(n4,"selecsls.py"),n4.forEach(t),sb.forEach(t),Z2=f(Ki),Lt=o(Ki,"LI",{});var Dh=a(Lt);eg=n(Dh,"Paper: "),Rn=o(Dh,"CODE",{});var h4=a(Rn);tg=n(h4,"XNect: Real-time Multi-Person 3D Motion Capture with a Single RGB Camera"),h4.forEach(t),rg=n(Dh," - "),Ao=o(Dh,"A",{href:!0,rel:!0});var f4=a(Ao);lg=n(f4,"https://arxiv.org/abs/1907.00837"),f4.forEach(t),Dh.forEach(t),og=f(Ki),mi=o(Ki,"LI",{});var nb=a(mi);ag=n(nb,"Code: "),$o=o(nb,"A",{href:!0,rel:!0});var c4=a($o);ig=n(c4,"https://github.com/mehtadushy/SelecSLS-Pytorch"),c4.forEach(t),nb.forEach(t),Ki.forEach(t),Mf=f(r),$e=o(r,"H2",{class:!0});var Wc=a($e);Pt=o(Wc,"A",{id:!0,class:!0,href:!0});var p4=a(Pt);Dn=o(p4,"SPAN",{});var v4=a(Dn);d(Io.$$.fragment,v4),v4.forEach(t),p4.forEach(t),sg=f(Wc),Tn=o(Wc,"SPAN",{});var d4=a(Tn);ng=n(d4,"Squeeze-and-Excitation Networks"),d4.forEach(t),Wc.forEach(t),Xf=f(r),K=o(r,"UL",{});var Fi=a(K);Vn=o(Fi,"LI",{});var u4=a(Vn);kt=o(u4,"P",{});var Th=a(kt);hg=n(Th,"Implementation: "),xo=o(Th,"A",{href:!0,rel:!0});var m4=a(xo);fg=n(m4,"senet.py"),m4.forEach(t),cg=n(Th,`
NOTE: I am deprecating this version of the networks, the new ones are part of `),Un=o(Th,"CODE",{});var g4=a(Un);pg=n(g4,"resnet.py"),g4.forEach(t),Th.forEach(t),u4.forEach(t),vg=f(Fi),Bn=o(Fi,"LI",{});var E4=a(Bn);St=o(E4,"P",{});var Vh=a(St);dg=n(Vh,"Paper: "),On=o(Vh,"CODE",{});var b4=a(On);ug=n(b4,"Squeeze-and-Excitation Networks"),b4.forEach(t),mg=n(Vh," - "),Lo=o(Vh,"A",{href:!0,rel:!0});var _4=a(Lo);gg=n(_4,"https://arxiv.org/abs/1709.01507"),_4.forEach(t),Vh.forEach(t),E4.forEach(t),Eg=f(Fi),Hn=o(Fi,"LI",{});var w4=a(Hn);gi=o(w4,"P",{});var hb=a(gi);bg=n(hb,"Code: "),Po=o(hb,"A",{href:!0,rel:!0});var y4=a(Po);_g=n(y4,"https://github.com/Cadene/pretrained-models.pytorch"),y4.forEach(t),hb.forEach(t),w4.forEach(t),Fi.forEach(t),zf=f(r),Ie=o(r,"H2",{class:!0});var qc=a(Ie);Ct=o(qc,"A",{id:!0,class:!0,href:!0});var N4=a(Ct);Gn=o(N4,"SPAN",{});var A4=a(Gn);d(ko.$$.fragment,A4),A4.forEach(t),N4.forEach(t),wg=f(qc),Mn=o(qc,"SPAN",{});var $4=a(Mn);yg=n($4,"TResNet"),$4.forEach(t),qc.forEach(t),Wf=f(r),F=o(r,"UL",{});var Yi=a(F);Ei=o(Yi,"LI",{});var fb=a(Ei);Ng=n(fb,"Implementation: "),So=o(fb,"A",{href:!0,rel:!0});var I4=a(So);Ag=n(I4,"tresnet.py"),I4.forEach(t),fb.forEach(t),$g=f(Yi),Rt=o(Yi,"LI",{});var Uh=a(Rt);Ig=n(Uh,"Paper: "),Xn=o(Uh,"CODE",{});var x4=a(Xn);xg=n(x4,"TResNet: High Performance GPU-Dedicated Architecture"),x4.forEach(t),Lg=n(Uh," - "),Co=o(Uh,"A",{href:!0,rel:!0});var L4=a(Co);Pg=n(L4,"https://arxiv.org/abs/2003.13630"),L4.forEach(t),Uh.forEach(t),kg=f(Yi),bi=o(Yi,"LI",{});var cb=a(bi);Sg=n(cb,"Code: "),Ro=o(cb,"A",{href:!0,rel:!0});var P4=a(Ro);Cg=n(P4,"https://github.com/mrT23/TResNet"),P4.forEach(t),cb.forEach(t),Yi.forEach(t),qf=f(r),xe=o(r,"H2",{class:!0});var Kc=a(xe);Dt=o(Kc,"A",{id:!0,class:!0,href:!0});var k4=a(Dt);zn=o(k4,"SPAN",{});var S4=a(zn);d(Do.$$.fragment,S4),S4.forEach(t),k4.forEach(t),Rg=f(Kc),Wn=o(Kc,"SPAN",{});var C4=a(Wn);Dg=n(C4,"VGG"),C4.forEach(t),Kc.forEach(t),Kf=f(r),Y=o(r,"UL",{});var ji=a(Y);_i=o(ji,"LI",{});var pb=a(_i);Tg=n(pb,"Implementation: "),To=o(pb,"A",{href:!0,rel:!0});var R4=a(To);Vg=n(R4,"vgg.py"),R4.forEach(t),pb.forEach(t),Ug=f(ji),Tt=o(ji,"LI",{});var Bh=a(Tt);Bg=n(Bh,"Paper: "),qn=o(Bh,"CODE",{});var D4=a(qn);Og=n(D4,"Very Deep Convolutional Networks For Large-Scale Image Recognition"),D4.forEach(t),Hg=n(Bh," - "),Vo=o(Bh,"A",{href:!0,rel:!0});var T4=a(Vo);Gg=n(T4,"https://arxiv.org/pdf/1409.1556.pdf"),T4.forEach(t),Bh.forEach(t),Mg=f(ji),wi=o(ji,"LI",{});var vb=a(wi);Xg=n(vb,"Reference code: "),Uo=o(vb,"A",{href:!0,rel:!0});var V4=a(Uo);zg=n(V4,"https://github.com/pytorch/vision/blob/master/torchvision/models/vgg.py"),V4.forEach(t),vb.forEach(t),ji.forEach(t),Ff=f(r),Le=o(r,"H2",{class:!0});var Fc=a(Le);Vt=o(Fc,"A",{id:!0,class:!0,href:!0});var U4=a(Vt);Kn=o(U4,"SPAN",{});var B4=a(Kn);d(Bo.$$.fragment,B4),B4.forEach(t),U4.forEach(t),Wg=f(Fc),Fn=o(Fc,"SPAN",{});var O4=a(Fn);qg=n(O4,"Vision Transformer"),O4.forEach(t),Fc.forEach(t),Yf=f(r),j=o(r,"UL",{});var Ji=a(j);yi=o(Ji,"LI",{});var db=a(yi);Kg=n(db,"Implementation: "),Oo=o(db,"A",{href:!0,rel:!0});var H4=a(Oo);Fg=n(H4,"vision_transformer.py"),H4.forEach(t),db.forEach(t),Yg=f(Ji),Ut=o(Ji,"LI",{});var Oh=a(Ut);jg=n(Oh,"Paper: "),Yn=o(Oh,"CODE",{});var G4=a(Yn);Jg=n(G4,"An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale"),G4.forEach(t),Qg=n(Oh," - "),Ho=o(Oh,"A",{href:!0,rel:!0});var M4=a(Ho);Zg=n(M4,"https://arxiv.org/abs/2010.11929"),M4.forEach(t),Oh.forEach(t),e0=f(Ji),Ni=o(Ji,"LI",{});var ub=a(Ni);t0=n(ub,"Reference code and pretrained weights: "),Go=o(ub,"A",{href:!0,rel:!0});var X4=a(Go);r0=n(X4,"https://github.com/google-research/vision_transformer"),X4.forEach(t),ub.forEach(t),Ji.forEach(t),jf=f(r),Pe=o(r,"H2",{class:!0});var Yc=a(Pe);Bt=o(Yc,"A",{id:!0,class:!0,href:!0});var z4=a(Bt);jn=o(z4,"SPAN",{});var W4=a(jn);d(Mo.$$.fragment,W4),W4.forEach(t),z4.forEach(t),l0=f(Yc),Jn=o(Yc,"SPAN",{});var q4=a(Jn);o0=n(q4,"VovNet V2 and V1"),q4.forEach(t),Yc.forEach(t),Jf=f(r),J=o(r,"UL",{});var Qi=a(J);Ai=o(Qi,"LI",{});var mb=a(Ai);a0=n(mb,"Implementation: "),Xo=o(mb,"A",{href:!0,rel:!0});var K4=a(Xo);i0=n(K4,"vovnet.py"),K4.forEach(t),mb.forEach(t),s0=f(Qi),Ot=o(Qi,"LI",{});var Hh=a(Ot);n0=n(Hh,"Paper: "),Qn=o(Hh,"CODE",{});var F4=a(Qn);h0=n(F4,"CenterMask : Real-Time Anchor-Free Instance Segmentation"),F4.forEach(t),f0=n(Hh," - "),zo=o(Hh,"A",{href:!0,rel:!0});var Y4=a(zo);c0=n(Y4,"https://arxiv.org/abs/1911.06667"),Y4.forEach(t),Hh.forEach(t),p0=f(Qi),$i=o(Qi,"LI",{});var gb=a($i);v0=n(gb,"Reference code: "),Wo=o(gb,"A",{href:!0,rel:!0});var j4=a(Wo);d0=n(j4,"https://github.com/youngwanLEE/vovnet-detectron2"),j4.forEach(t),gb.forEach(t),Qi.forEach(t),Qf=f(r),ke=o(r,"H2",{class:!0});var jc=a(ke);Ht=o(jc,"A",{id:!0,class:!0,href:!0});var J4=a(Ht);Zn=o(J4,"SPAN",{});var Q4=a(Zn);d(qo.$$.fragment,Q4),Q4.forEach(t),J4.forEach(t),u0=f(jc),eh=o(jc,"SPAN",{});var Z4=a(eh);m0=n(Z4,"Xception"),Z4.forEach(t),jc.forEach(t),Zf=f(r),Q=o(r,"UL",{});var Zi=a(Q);Ii=o(Zi,"LI",{});var Eb=a(Ii);g0=n(Eb,"Implementation: "),Ko=o(Eb,"A",{href:!0,rel:!0});var e5=a(Ko);E0=n(e5,"xception.py"),e5.forEach(t),Eb.forEach(t),b0=f(Zi),Gt=o(Zi,"LI",{});var Gh=a(Gt);_0=n(Gh,"Paper: "),th=o(Gh,"CODE",{});var t5=a(th);w0=n(t5,"Xception: Deep Learning with Depthwise Separable Convolutions"),t5.forEach(t),y0=n(Gh," - "),Fo=o(Gh,"A",{href:!0,rel:!0});var r5=a(Fo);N0=n(r5,"https://arxiv.org/abs/1610.02357"),r5.forEach(t),Gh.forEach(t),A0=f(Zi),xi=o(Zi,"LI",{});var bb=a(xi);$0=n(bb,"Code: "),Yo=o(bb,"A",{href:!0,rel:!0});var l5=a(Yo);I0=n(l5,"https://github.com/Cadene/pretrained-models.pytorch"),l5.forEach(t),bb.forEach(t),Zi.forEach(t),ec=f(r),Se=o(r,"H2",{class:!0});var Jc=a(Se);Mt=o(Jc,"A",{id:!0,class:!0,href:!0});var o5=a(Mt);rh=o(o5,"SPAN",{});var a5=a(rh);d(jo.$$.fragment,a5),a5.forEach(t),o5.forEach(t),x0=f(Jc),lh=o(Jc,"SPAN",{});var i5=a(lh);L0=n(i5,"Xception (Modified Aligned, Gluon)"),i5.forEach(t),Jc.forEach(t),tc=f(r),Z=o(r,"UL",{});var es=a(Z);Li=o(es,"LI",{});var _b=a(Li);P0=n(_b,"Implementation: "),Jo=o(_b,"A",{href:!0,rel:!0});var s5=a(Jo);k0=n(s5,"gluon_xception.py"),s5.forEach(t),_b.forEach(t),S0=f(es),Xt=o(es,"LI",{});var Mh=a(Xt);C0=n(Mh,"Paper: "),oh=o(Mh,"CODE",{});var n5=a(oh);R0=n(n5,"Encoder-Decoder with Atrous Separable Convolution for Semantic Image Segmentation"),n5.forEach(t),D0=n(Mh," - "),Qo=o(Mh,"A",{href:!0,rel:!0});var h5=a(Qo);T0=n(h5,"https://arxiv.org/abs/1802.02611"),h5.forEach(t),Mh.forEach(t),V0=f(es),zt=o(es,"LI",{});var Xh=a(zt);U0=n(Xh,"Reference code: "),Zo=o(Xh,"A",{href:!0,rel:!0});var f5=a(Zo);B0=n(f5,"https://github.com/dmlc/gluon-cv/tree/master/gluoncv/model_zoo"),f5.forEach(t),O0=n(Xh,", "),ea=o(Xh,"A",{href:!0,rel:!0});var c5=a(ea);H0=n(c5,"https://github.com/jfzhang95/pytorch-deeplab-xception/"),c5.forEach(t),Xh.forEach(t),es.forEach(t),rc=f(r),Ce=o(r,"H2",{class:!0});var Qc=a(Ce);Wt=o(Qc,"A",{id:!0,class:!0,href:!0});var p5=a(Wt);ah=o(p5,"SPAN",{});var v5=a(ah);d(ta.$$.fragment,v5),v5.forEach(t),p5.forEach(t),G0=f(Qc),ih=o(Qc,"SPAN",{});var d5=a(ih);M0=n(d5,"Xception (Modified Aligned, TF)"),d5.forEach(t),Qc.forEach(t),lc=f(r),ee=o(r,"UL",{});var ts=a(ee);Pi=o(ts,"LI",{});var wb=a(Pi);X0=n(wb,"Implementation: "),ra=o(wb,"A",{href:!0,rel:!0});var u5=a(ra);z0=n(u5,"aligned_xception.py"),u5.forEach(t),wb.forEach(t),W0=f(ts),qt=o(ts,"LI",{});var zh=a(qt);q0=n(zh,"Paper: "),sh=o(zh,"CODE",{});var m5=a(sh);K0=n(m5,"Encoder-Decoder with Atrous Separable Convolution for Semantic Image Segmentation"),m5.forEach(t),F0=n(zh," - "),la=o(zh,"A",{href:!0,rel:!0});var g5=a(la);Y0=n(g5,"https://arxiv.org/abs/1802.02611"),g5.forEach(t),zh.forEach(t),j0=f(ts),ki=o(ts,"LI",{});var yb=a(ki);J0=n(yb,"Reference code: "),oa=o(yb,"A",{href:!0,rel:!0});var E5=a(oa);Q0=n(E5,"https://github.com/tensorflow/models/tree/master/research/deeplab"),E5.forEach(t),yb.forEach(t),ts.forEach(t),this.h()},h(){i(te,"name","hf:doc:metadata"),i(te,"content",JSON.stringify(I5)),i(Re,"id","model-summaries"),i(Re,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Re,"href","#model-summaries"),i(re,"class","relative group"),i(sa,"href","results"),i(tr,"href","https://paperswithcode.com/lib/timm"),i(tr,"rel","nofollow"),i(De,"id","big-transfer-resnetv2-bit"),i(De,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(De,"href","#big-transfer-resnetv2-bit"),i(le,"class","relative group"),i(lr,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/resnetv2.py"),i(lr,"rel","nofollow"),i(or,"href","https://arxiv.org/abs/1912.11370"),i(or,"rel","nofollow"),i(ar,"href","https://github.com/google-research/big_transfer"),i(ar,"rel","nofollow"),i(Ve,"id","crossstage-partial-networks"),i(Ve,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ve,"href","#crossstage-partial-networks"),i(oe,"class","relative group"),i(sr,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/cspnet.py"),i(sr,"rel","nofollow"),i(nr,"href","https://arxiv.org/abs/1911.11929"),i(nr,"rel","nofollow"),i(hr,"href","https://github.com/WongKinYiu/CrossStagePartialNetworks"),i(hr,"rel","nofollow"),i(Be,"id","densenet"),i(Be,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Be,"href","#densenet"),i(ae,"class","relative group"),i(cr,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/densenet.py"),i(cr,"rel","nofollow"),i(pr,"href","https://arxiv.org/abs/1608.06993"),i(pr,"rel","nofollow"),i(vr,"href","https://github.com/pytorch/vision/tree/master/torchvision/models"),i(vr,"rel","nofollow"),i(He,"id","dla"),i(He,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(He,"href","#dla"),i(ie,"class","relative group"),i(ur,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/dla.py"),i(ur,"rel","nofollow"),i(mr,"href","https://arxiv.org/abs/1707.06484"),i(mr,"rel","nofollow"),i(gr,"href","https://github.com/ucbdrive/dla"),i(gr,"rel","nofollow"),i(Ge,"id","dualpath-networks"),i(Ge,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ge,"href","#dualpath-networks"),i(se,"class","relative group"),i(br,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/dpn.py"),i(br,"rel","nofollow"),i(_r,"href","https://arxiv.org/abs/1707.01629"),i(_r,"rel","nofollow"),i(wr,"href","https://github.com/rwightman/pytorch-dpn-pretrained"),i(wr,"rel","nofollow"),i(yr,"href","https://github.com/cypw/DPNs"),i(yr,"rel","nofollow"),i(Xe,"id","gpuefficient-networks"),i(Xe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Xe,"href","#gpuefficient-networks"),i(ne,"class","relative group"),i(Ar,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/byobnet.py"),i(Ar,"rel","nofollow"),i($r,"href","https://arxiv.org/abs/2006.14090"),i($r,"rel","nofollow"),i(Ir,"href","https://github.com/idstcv/GPU-Efficient-Networks"),i(Ir,"rel","nofollow"),i(We,"id","hrnet"),i(We,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(We,"href","#hrnet"),i(he,"class","relative group"),i(Lr,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/hrnet.py"),i(Lr,"rel","nofollow"),i(Pr,"href","https://arxiv.org/abs/1908.07919"),i(Pr,"rel","nofollow"),i(kr,"href","https://github.com/HRNet/HRNet-Image-Classification"),i(kr,"rel","nofollow"),i(Ke,"id","inceptionv3"),i(Ke,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ke,"href","#inceptionv3"),i(fe,"class","relative group"),i(Cr,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/inception_v3.py"),i(Cr,"rel","nofollow"),i(Rr,"href","https://arxiv.org/abs/1512.00567"),i(Rr,"rel","nofollow"),i(Dr,"href","https://github.com/pytorch/vision/tree/master/torchvision/models"),i(Dr,"rel","nofollow"),i(Ye,"id","inceptionv4"),i(Ye,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ye,"href","#inceptionv4"),i(ce,"class","relative group"),i(Vr,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/inception_v4.py"),i(Vr,"rel","nofollow"),i(Ur,"href","https://arxiv.org/abs/1602.07261"),i(Ur,"rel","nofollow"),i(Br,"href","https://github.com/Cadene/pretrained-models.pytorch"),i(Br,"rel","nofollow"),i(Or,"href","https://github.com/tensorflow/models/tree/master/research/slim/nets"),i(Or,"rel","nofollow"),i(Je,"id","inceptionresnetv2"),i(Je,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Je,"href","#inceptionresnetv2"),i(pe,"class","relative group"),i(Gr,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/inception_resnet_v2.py"),i(Gr,"rel","nofollow"),i(Mr,"href","https://arxiv.org/abs/1602.07261"),i(Mr,"rel","nofollow"),i(Xr,"href","https://github.com/Cadene/pretrained-models.pytorch"),i(Xr,"rel","nofollow"),i(zr,"href","https://github.com/tensorflow/models/tree/master/research/slim/nets"),i(zr,"rel","nofollow"),i(Ze,"id","nasneta"),i(Ze,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ze,"href","#nasneta"),i(ve,"class","relative group"),i(qr,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/nasnet.py"),i(qr,"rel","nofollow"),i(Kr,"href","https://arxiv.org/abs/1707.07012"),i(Kr,"rel","nofollow"),i(Fr,"href","https://github.com/Cadene/pretrained-models.pytorch"),i(Fr,"rel","nofollow"),i(Yr,"href","https://github.com/tensorflow/models/tree/master/research/slim/nets/nasnet"),i(Yr,"rel","nofollow"),i(tt,"id","pnasnet5"),i(tt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(tt,"href","#pnasnet5"),i(de,"class","relative group"),i(Jr,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/pnasnet.py"),i(Jr,"rel","nofollow"),i(Qr,"href","https://arxiv.org/abs/1712.00559"),i(Qr,"rel","nofollow"),i(Zr,"href","https://github.com/Cadene/pretrained-models.pytorch"),i(Zr,"rel","nofollow"),i(el,"href","https://github.com/tensorflow/models/tree/master/research/slim/nets/nasnet"),i(el,"rel","nofollow"),i(lt,"id","efficientnet"),i(lt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(lt,"href","#efficientnet"),i(ue,"class","relative group"),i(rl,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/efficientnet.py"),i(rl,"rel","nofollow"),i(ll,"href","https://arxiv.org/abs/1911.04252"),i(ll,"rel","nofollow"),i(ol,"href","https://arxiv.org/abs/1911.09665"),i(ol,"rel","nofollow"),i(al,"href","https://arxiv.org/abs/1905.11946"),i(al,"rel","nofollow"),i(il,"href","https://ai.googleblog.com/2019/08/efficientnet-edgetpu-creating.html"),i(il,"rel","nofollow"),i(sl,"href","https://arxiv.org/abs/1907.09595"),i(sl,"rel","nofollow"),i(nl,"href","https://arxiv.org/abs/1807.11626"),i(nl,"rel","nofollow"),i(hl,"href","https://arxiv.org/abs/1801.04381"),i(hl,"rel","nofollow"),i(fl,"href","https://arxiv.org/abs/1812.03443"),i(fl,"rel","nofollow"),i(cl,"href","https://arxiv.org/abs/1904.02877"),i(cl,"rel","nofollow"),i(pl,"href","https://github.com/rwightman/gen-efficientnet-pytorch"),i(pl,"rel","nofollow"),i(vl,"href","https://github.com/tensorflow/tpu/tree/master/models/official/efficientnet"),i(vl,"rel","nofollow"),i(ot,"id","mobilenetv3"),i(ot,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(ot,"href","#mobilenetv3"),i(me,"class","relative group"),i(ul,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/mobilenetv3.py"),i(ul,"rel","nofollow"),i(ml,"href","https://arxiv.org/abs/1905.02244"),i(ml,"rel","nofollow"),i(gl,"href","https://github.com/tensorflow/models/tree/master/research/slim/nets/mobilenet"),i(gl,"rel","nofollow"),i(it,"id","regnet"),i(it,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(it,"href","#regnet"),i(ge,"class","relative group"),i(bl,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/regnet.py"),i(bl,"rel","nofollow"),i(_l,"href","https://arxiv.org/abs/2003.13678"),i(_l,"rel","nofollow"),i(wl,"href","https://github.com/facebookresearch/pycls/blob/master/pycls/models/regnet.py"),i(wl,"rel","nofollow"),i(nt,"id","repvgg"),i(nt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(nt,"href","#repvgg"),i(Ee,"class","relative group"),i(Nl,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/byobnet.py"),i(Nl,"rel","nofollow"),i(Al,"href","https://arxiv.org/abs/2101.03697"),i(Al,"rel","nofollow"),i($l,"href","https://github.com/DingXiaoH/RepVGG"),i($l,"rel","nofollow"),i(ft,"id","resnet-resnext"),i(ft,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(ft,"href","#resnet-resnext"),i(be,"class","relative group"),i(xl,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/resnet.py"),i(xl,"rel","nofollow"),i(kl,"href","https://arxiv.org/abs/1512.03385"),i(kl,"rel","nofollow"),i(Sl,"href","https://github.com/pytorch/vision/tree/master/torchvision/models"),i(Sl,"rel","nofollow"),i(Dl,"href","https://arxiv.org/abs/1611.05431"),i(Dl,"rel","nofollow"),i(Tl,"href","https://github.com/pytorch/vision/tree/master/torchvision/models"),i(Tl,"rel","nofollow"),i(Bl,"href","https://arxiv.org/abs/1812.01187"),i(Bl,"rel","nofollow"),i(Ol,"href","https://github.com/dmlc/gluon-cv/blob/master/gluoncv/model_zoo/resnetv1b.py"),i(Ol,"rel","nofollow"),i(Ml,"href","https://arxiv.org/abs/1805.00932"),i(Ml,"rel","nofollow"),i(zl,"href","https://pytorch.org/hub/facebookresearch_WSL-Images_resnext"),i(zl,"rel","nofollow"),i(Kl,"href","https://arxiv.org/abs/1905.00546"),i(Kl,"rel","nofollow"),i(Yl,"href","https://github.com/facebookresearch/semi-supervised-ImageNet1K-models"),i(Yl,"rel","nofollow"),i(Ql,"href","https://arxiv.org/abs/1709.01507"),i(Ql,"rel","nofollow"),i(ro,"href","https://arxiv.org/abs/1910.03151v4"),i(ro,"rel","nofollow"),i(lo,"href","https://github.com/BangguWu/ECANet"),i(lo,"rel","nofollow"),i(Et,"id","res2net"),i(Et,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Et,"href","#res2net"),i(_e,"class","relative group"),i(ao,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/res2net.py"),i(ao,"rel","nofollow"),i(io,"href","https://arxiv.org/abs/1904.01169"),i(io,"rel","nofollow"),i(so,"href","https://github.com/gasvn/Res2Net"),i(so,"rel","nofollow"),i(_t,"id","resnest"),i(_t,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(_t,"href","#resnest"),i(we,"class","relative group"),i(ho,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/resnest.py"),i(ho,"rel","nofollow"),i(fo,"href","https://arxiv.org/abs/2004.08955"),i(fo,"rel","nofollow"),i(co,"href","https://github.com/zhanghang1989/ResNeSt"),i(co,"rel","nofollow"),i(yt,"id","rexnet"),i(yt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(yt,"href","#rexnet"),i(ye,"class","relative group"),i(vo,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/rexnet.py"),i(vo,"rel","nofollow"),i(uo,"href","https://arxiv.org/abs/2007.00992"),i(uo,"rel","nofollow"),i(mo,"href","https://github.com/clovaai/rexnet"),i(mo,"rel","nofollow"),i(At,"id","selectivekernel-networks"),i(At,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(At,"href","#selectivekernel-networks"),i(Ne,"class","relative group"),i(Eo,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/sknet.py"),i(Eo,"rel","nofollow"),i(bo,"href","https://arxiv.org/abs/1903.06586"),i(bo,"rel","nofollow"),i(_o,"href","https://github.com/implus/SKNet"),i(_o,"rel","nofollow"),i(wo,"href","https://github.com/clovaai/assembled-cnn"),i(wo,"rel","nofollow"),i(xt,"id","selecsls"),i(xt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(xt,"href","#selecsls"),i(Ae,"class","relative group"),i(No,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/selecsls.py"),i(No,"rel","nofollow"),i(Ao,"href","https://arxiv.org/abs/1907.00837"),i(Ao,"rel","nofollow"),i($o,"href","https://github.com/mehtadushy/SelecSLS-Pytorch"),i($o,"rel","nofollow"),i(Pt,"id","squeezeandexcitation-networks"),i(Pt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Pt,"href","#squeezeandexcitation-networks"),i($e,"class","relative group"),i(xo,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/senet.py"),i(xo,"rel","nofollow"),i(Lo,"href","https://arxiv.org/abs/1709.01507"),i(Lo,"rel","nofollow"),i(Po,"href","https://github.com/Cadene/pretrained-models.pytorch"),i(Po,"rel","nofollow"),i(Ct,"id","tresnet"),i(Ct,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ct,"href","#tresnet"),i(Ie,"class","relative group"),i(So,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/tresnet.py"),i(So,"rel","nofollow"),i(Co,"href","https://arxiv.org/abs/2003.13630"),i(Co,"rel","nofollow"),i(Ro,"href","https://github.com/mrT23/TResNet"),i(Ro,"rel","nofollow"),i(Dt,"id","vgg"),i(Dt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Dt,"href","#vgg"),i(xe,"class","relative group"),i(To,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/vgg.py"),i(To,"rel","nofollow"),i(Vo,"href","https://arxiv.org/pdf/1409.1556.pdf"),i(Vo,"rel","nofollow"),i(Uo,"href","https://github.com/pytorch/vision/blob/master/torchvision/models/vgg.py"),i(Uo,"rel","nofollow"),i(Vt,"id","vision-transformer"),i(Vt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Vt,"href","#vision-transformer"),i(Le,"class","relative group"),i(Oo,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/vision_transformer.py"),i(Oo,"rel","nofollow"),i(Ho,"href","https://arxiv.org/abs/2010.11929"),i(Ho,"rel","nofollow"),i(Go,"href","https://github.com/google-research/vision_transformer"),i(Go,"rel","nofollow"),i(Bt,"id","vovnet-v2-and-v1"),i(Bt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Bt,"href","#vovnet-v2-and-v1"),i(Pe,"class","relative group"),i(Xo,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/vovnet.py"),i(Xo,"rel","nofollow"),i(zo,"href","https://arxiv.org/abs/1911.06667"),i(zo,"rel","nofollow"),i(Wo,"href","https://github.com/youngwanLEE/vovnet-detectron2"),i(Wo,"rel","nofollow"),i(Ht,"id","xception"),i(Ht,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ht,"href","#xception"),i(ke,"class","relative group"),i(Ko,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/xception.py"),i(Ko,"rel","nofollow"),i(Fo,"href","https://arxiv.org/abs/1610.02357"),i(Fo,"rel","nofollow"),i(Yo,"href","https://github.com/Cadene/pretrained-models.pytorch"),i(Yo,"rel","nofollow"),i(Mt,"id","xception-modified-aligned-gluon"),i(Mt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Mt,"href","#xception-modified-aligned-gluon"),i(Se,"class","relative group"),i(Jo,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/gluon_xception.py"),i(Jo,"rel","nofollow"),i(Qo,"href","https://arxiv.org/abs/1802.02611"),i(Qo,"rel","nofollow"),i(Zo,"href","https://github.com/dmlc/gluon-cv/tree/master/gluoncv/model_zoo"),i(Zo,"rel","nofollow"),i(ea,"href","https://github.com/jfzhang95/pytorch-deeplab-xception/"),i(ea,"rel","nofollow"),i(Wt,"id","xception-modified-aligned-tf"),i(Wt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Wt,"href","#xception-modified-aligned-tf"),i(Ce,"class","relative group"),i(ra,"href","https://github.com/rwightman/pytorch-image-models/blob/master/timm/models/aligned_xception.py"),i(ra,"rel","nofollow"),i(la,"href","https://arxiv.org/abs/1802.02611"),i(la,"rel","nofollow"),i(oa,"href","https://github.com/tensorflow/models/tree/master/research/deeplab"),i(oa,"rel","nofollow")},m(r,c){e(document.head,te),p(r,Wh,c),p(r,re,c),e(re,Re),e(Re,rs),u(Zt,rs,null),e(re,Zc),e(re,ls),e(ls,ep),p(r,qh,c),p(r,aa,c),e(aa,tp),p(r,Kh,c),p(r,ia,c),e(ia,rp),p(r,Fh,c),p(r,k,c),e(k,os),e(os,lp),e(k,op),e(k,as),e(as,ap),e(k,ip),e(k,is),e(is,sp),p(r,Yh,c),p(r,er,c),e(er,np),e(er,sa),e(sa,hp),p(r,jh,c),p(r,S,c),e(S,fp),e(S,ss),e(ss,cp),e(S,pp),e(S,tr),e(tr,vp),e(S,dp),p(r,Jh,c),p(r,le,c),e(le,De),e(De,ns),u(rr,ns,null),e(le,up),e(le,hs),e(hs,mp),p(r,Qh,c),p(r,C,c),e(C,na),e(na,gp),e(na,lr),e(lr,Ep),e(C,bp),e(C,Te),e(Te,_p),e(Te,fs),e(fs,wp),e(Te,yp),e(Te,or),e(or,Np),e(C,Ap),e(C,ha),e(ha,$p),e(ha,ar),e(ar,Ip),p(r,Zh,c),p(r,oe,c),e(oe,Ve),e(Ve,cs),u(ir,cs,null),e(oe,xp),e(oe,ps),e(ps,Lp),p(r,ef,c),p(r,R,c),e(R,fa),e(fa,Pp),e(fa,sr),e(sr,kp),e(R,Sp),e(R,Ue),e(Ue,Cp),e(Ue,vs),e(vs,Rp),e(Ue,Dp),e(Ue,nr),e(nr,Tp),e(R,Vp),e(R,ca),e(ca,Up),e(ca,hr),e(hr,Bp),p(r,tf,c),p(r,ae,c),e(ae,Be),e(Be,ds),u(fr,ds,null),e(ae,Op),e(ae,us),e(us,Hp),p(r,rf,c),p(r,D,c),e(D,pa),e(pa,Gp),e(pa,cr),e(cr,Mp),e(D,Xp),e(D,Oe),e(Oe,zp),e(Oe,ms),e(ms,Wp),e(Oe,qp),e(Oe,pr),e(pr,Kp),e(D,Fp),e(D,va),e(va,Yp),e(va,vr),e(vr,jp),p(r,lf,c),p(r,ie,c),e(ie,He),e(He,gs),u(dr,gs,null),e(ie,Jp),e(ie,Es),e(Es,Qp),p(r,of,c),p(r,T,c),e(T,da),e(da,Zp),e(da,ur),e(ur,e1),e(T,t1),e(T,ua),e(ua,r1),e(ua,mr),e(mr,l1),e(T,o1),e(T,ma),e(ma,a1),e(ma,gr),e(gr,i1),p(r,af,c),p(r,se,c),e(se,Ge),e(Ge,bs),u(Er,bs,null),e(se,s1),e(se,_s),e(_s,n1),p(r,sf,c),p(r,A,c),e(A,ga),e(ga,h1),e(ga,br),e(br,f1),e(A,c1),e(A,Me),e(Me,p1),e(Me,ws),e(ws,v1),e(Me,d1),e(Me,_r),e(_r,u1),e(A,m1),e(A,Ea),e(Ea,g1),e(Ea,wr),e(wr,E1),e(A,b1),e(A,ba),e(ba,_1),e(ba,yr),e(yr,w1),p(r,nf,c),p(r,ne,c),e(ne,Xe),e(Xe,ys),u(Nr,ys,null),e(ne,y1),e(ne,Ns),e(Ns,N1),p(r,hf,c),p(r,V,c),e(V,_a),e(_a,A1),e(_a,Ar),e(Ar,$1),e(V,I1),e(V,ze),e(ze,x1),e(ze,As),e(As,L1),e(ze,P1),e(ze,$r),e($r,k1),e(V,S1),e(V,wa),e(wa,C1),e(wa,Ir),e(Ir,R1),p(r,ff,c),p(r,he,c),e(he,We),e(We,$s),u(xr,$s,null),e(he,D1),e(he,Is),e(Is,T1),p(r,cf,c),p(r,U,c),e(U,ya),e(ya,V1),e(ya,Lr),e(Lr,U1),e(U,B1),e(U,qe),e(qe,O1),e(qe,xs),e(xs,H1),e(qe,G1),e(qe,Pr),e(Pr,M1),e(U,X1),e(U,Na),e(Na,z1),e(Na,kr),e(kr,W1),p(r,pf,c),p(r,fe,c),e(fe,Ke),e(Ke,Ls),u(Sr,Ls,null),e(fe,q1),e(fe,Ps),e(Ps,K1),p(r,vf,c),p(r,B,c),e(B,Aa),e(Aa,F1),e(Aa,Cr),e(Cr,Y1),e(B,j1),e(B,Fe),e(Fe,J1),e(Fe,ks),e(ks,Q1),e(Fe,Z1),e(Fe,Rr),e(Rr,ev),e(B,tv),e(B,$a),e($a,rv),e($a,Dr),e(Dr,lv),p(r,df,c),p(r,ce,c),e(ce,Ye),e(Ye,Ss),u(Tr,Ss,null),e(ce,ov),e(ce,Cs),e(Cs,av),p(r,uf,c),p(r,$,c),e($,Ia),e(Ia,iv),e(Ia,Vr),e(Vr,sv),e($,nv),e($,je),e(je,hv),e(je,Rs),e(Rs,fv),e(je,cv),e(je,Ur),e(Ur,pv),e($,vv),e($,xa),e(xa,dv),e(xa,Br),e(Br,uv),e($,mv),e($,La),e(La,gv),e(La,Or),e(Or,Ev),p(r,mf,c),p(r,pe,c),e(pe,Je),e(Je,Ds),u(Hr,Ds,null),e(pe,bv),e(pe,Ts),e(Ts,_v),p(r,gf,c),p(r,I,c),e(I,Pa),e(Pa,wv),e(Pa,Gr),e(Gr,yv),e(I,Nv),e(I,Qe),e(Qe,Av),e(Qe,Vs),e(Vs,$v),e(Qe,Iv),e(Qe,Mr),e(Mr,xv),e(I,Lv),e(I,ka),e(ka,Pv),e(ka,Xr),e(Xr,kv),e(I,Sv),e(I,Sa),e(Sa,Cv),e(Sa,zr),e(zr,Rv),p(r,Ef,c),p(r,ve,c),e(ve,Ze),e(Ze,Us),u(Wr,Us,null),e(ve,Dv),e(ve,Bs),e(Bs,Tv),p(r,bf,c),p(r,x,c),e(x,Ca),e(Ca,Vv),e(Ca,qr),e(qr,Uv),e(x,Bv),e(x,et),e(et,Ov),e(et,Os),e(Os,Hv),e(et,Gv),e(et,Kr),e(Kr,Mv),e(x,Xv),e(x,Ra),e(Ra,zv),e(Ra,Fr),e(Fr,Wv),e(x,qv),e(x,Da),e(Da,Kv),e(Da,Yr),e(Yr,Fv),p(r,_f,c),p(r,de,c),e(de,tt),e(tt,Hs),u(jr,Hs,null),e(de,Yv),e(de,Gs),e(Gs,jv),p(r,wf,c),p(r,L,c),e(L,Ta),e(Ta,Jv),e(Ta,Jr),e(Jr,Qv),e(L,Zv),e(L,rt),e(rt,ed),e(rt,Ms),e(Ms,td),e(rt,rd),e(rt,Qr),e(Qr,ld),e(L,od),e(L,Va),e(Va,ad),e(Va,Zr),e(Zr,id),e(L,sd),e(L,Ua),e(Ua,nd),e(Ua,el),e(el,hd),p(r,yf,c),p(r,ue,c),e(ue,lt),e(lt,Xs),u(tl,Xs,null),e(ue,fd),e(ue,zs),e(zs,cd),p(r,Nf,c),p(r,P,c),e(P,Ba),e(Ba,pd),e(Ba,rl),e(rl,vd),e(P,dd),e(P,Oa),e(Oa,ud),e(Oa,_),e(_,Ha),e(Ha,md),e(Ha,ll),e(ll,gd),e(_,Ed),e(_,Ga),e(Ga,bd),e(Ga,ol),e(ol,_d),e(_,wd),e(_,Ma),e(Ma,yd),e(Ma,al),e(al,Nd),e(_,Ad),e(_,Xa),e(Xa,$d),e(Xa,il),e(il,Id),e(_,xd),e(_,za),e(za,Ld),e(za,sl),e(sl,Pd),e(_,kd),e(_,Wa),e(Wa,Sd),e(Wa,nl),e(nl,Cd),e(_,Rd),e(_,qa),e(qa,Dd),e(qa,hl),e(hl,Td),e(_,Vd),e(_,Ka),e(Ka,Ud),e(Ka,fl),e(fl,Bd),e(_,Od),e(_,Fa),e(Fa,Hd),e(Fa,cl),e(cl,Gd),e(P,Md),e(P,Ya),e(Ya,Xd),e(Ya,pl),e(pl,zd),e(P,Wd),e(P,ja),e(ja,qd),e(ja,vl),e(vl,Kd),p(r,Af,c),p(r,me,c),e(me,ot),e(ot,Ws),u(dl,Ws,null),e(me,Fd),e(me,qs),e(qs,Yd),p(r,$f,c),p(r,O,c),e(O,Ja),e(Ja,jd),e(Ja,ul),e(ul,Jd),e(O,Qd),e(O,at),e(at,Zd),e(at,Ks),e(Ks,eu),e(at,tu),e(at,ml),e(ml,ru),e(O,lu),e(O,Qa),e(Qa,ou),e(Qa,gl),e(gl,au),p(r,If,c),p(r,ge,c),e(ge,it),e(it,Fs),u(El,Fs,null),e(ge,iu),e(ge,Ys),e(Ys,su),p(r,xf,c),p(r,H,c),e(H,Za),e(Za,nu),e(Za,bl),e(bl,hu),e(H,fu),e(H,st),e(st,cu),e(st,js),e(js,pu),e(st,vu),e(st,_l),e(_l,du),e(H,uu),e(H,ei),e(ei,mu),e(ei,wl),e(wl,gu),p(r,Lf,c),p(r,Ee,c),e(Ee,nt),e(nt,Js),u(yl,Js,null),e(Ee,Eu),e(Ee,Qs),e(Qs,bu),p(r,Pf,c),p(r,G,c),e(G,ti),e(ti,_u),e(ti,Nl),e(Nl,wu),e(G,yu),e(G,ht),e(ht,Nu),e(ht,Zs),e(Zs,Au),e(ht,$u),e(ht,Al),e(Al,Iu),e(G,xu),e(G,ri),e(ri,Lu),e(ri,$l),e($l,Pu),p(r,kf,c),p(r,be,c),e(be,ft),e(ft,en),u(Il,en,null),e(be,ku),e(be,tn),e(tn,Su),p(r,Sf,c),p(r,w,c),e(w,rn),e(rn,li),e(li,Cu),e(li,xl),e(xl,Ru),e(w,Du),e(w,Ll),e(Ll,ln),e(ln,Tu),e(Ll,Vu),e(Ll,Pl),e(Pl,ct),e(ct,Uu),e(ct,on),e(on,Bu),e(ct,Ou),e(ct,kl),e(kl,Hu),e(Pl,Gu),e(Pl,oi),e(oi,Mu),e(oi,Sl),e(Sl,Xu),e(w,zu),e(w,Cl),e(Cl,an),e(an,Wu),e(Cl,qu),e(Cl,Rl),e(Rl,pt),e(pt,Ku),e(pt,sn),e(sn,Fu),e(pt,Yu),e(pt,Dl),e(Dl,ju),e(Rl,Ju),e(Rl,ai),e(ai,Qu),e(ai,Tl),e(Tl,Zu),e(w,em),e(w,Vl),e(Vl,nn),e(nn,tm),e(Vl,rm),e(Vl,Ul),e(Ul,vt),e(vt,lm),e(vt,hn),e(hn,om),e(vt,am),e(vt,Bl),e(Bl,im),e(Ul,sm),e(Ul,ii),e(ii,nm),e(ii,Ol),e(Ol,hm),e(w,fm),e(w,Hl),e(Hl,fn),e(fn,cm),e(Hl,pm),e(Hl,Gl),e(Gl,dt),e(dt,vm),e(dt,cn),e(cn,dm),e(dt,um),e(dt,Ml),e(Ml,mm),e(Gl,gm),e(Gl,Xl),e(Xl,Em),e(Xl,zl),e(zl,bm),e(Xl,_m),e(w,wm),e(w,Wl),e(Wl,pn),e(pn,ym),e(Wl,Nm),e(Wl,ql),e(ql,ut),e(ut,Am),e(ut,vn),e(vn,$m),e(ut,Im),e(ut,Kl),e(Kl,xm),e(ql,Lm),e(ql,Fl),e(Fl,Pm),e(Fl,Yl),e(Yl,km),e(Fl,Sm),e(w,Cm),e(w,jl),e(jl,dn),e(dn,Rm),e(jl,Dm),e(jl,Jl),e(Jl,mt),e(mt,Tm),e(mt,un),e(un,Vm),e(mt,Um),e(mt,Ql),e(Ql,Bm),e(Jl,Om),e(Jl,Zl),e(Zl,Hm),e(Zl,mn),e(mn,Gm),e(Zl,Mm),e(w,Xm),e(w,eo),e(eo,gn),e(gn,zm),e(eo,Wm),e(eo,to),e(to,gt),e(gt,qm),e(gt,En),e(En,Km),e(gt,Fm),e(gt,ro),e(ro,Ym),e(to,jm),e(to,si),e(si,Jm),e(si,lo),e(lo,Qm),p(r,Cf,c),p(r,_e,c),e(_e,Et),e(Et,bn),u(oo,bn,null),e(_e,Zm),e(_e,_n),e(_n,e2),p(r,Rf,c),p(r,M,c),e(M,ni),e(ni,t2),e(ni,ao),e(ao,r2),e(M,l2),e(M,bt),e(bt,o2),e(bt,wn),e(wn,a2),e(bt,i2),e(bt,io),e(io,s2),e(M,n2),e(M,hi),e(hi,h2),e(hi,so),e(so,f2),p(r,Df,c),p(r,we,c),e(we,_t),e(_t,yn),u(no,yn,null),e(we,c2),e(we,Nn),e(Nn,p2),p(r,Tf,c),p(r,X,c),e(X,fi),e(fi,v2),e(fi,ho),e(ho,d2),e(X,u2),e(X,wt),e(wt,m2),e(wt,An),e(An,g2),e(wt,E2),e(wt,fo),e(fo,b2),e(X,_2),e(X,ci),e(ci,w2),e(ci,co),e(co,y2),p(r,Vf,c),p(r,ye,c),e(ye,yt),e(yt,$n),u(po,$n,null),e(ye,N2),e(ye,In),e(In,A2),p(r,Uf,c),p(r,z,c),e(z,pi),e(pi,$2),e(pi,vo),e(vo,I2),e(z,x2),e(z,Nt),e(Nt,L2),e(Nt,xn),e(xn,P2),e(Nt,k2),e(Nt,uo),e(uo,S2),e(z,C2),e(z,vi),e(vi,R2),e(vi,mo),e(mo,D2),p(r,Bf,c),p(r,Ne,c),e(Ne,At),e(At,Ln),u(go,Ln,null),e(Ne,T2),e(Ne,Pn),e(Pn,V2),p(r,Of,c),p(r,W,c),e(W,di),e(di,U2),e(di,Eo),e(Eo,B2),e(W,O2),e(W,$t),e($t,H2),e($t,kn),e(kn,G2),e($t,M2),e($t,bo),e(bo,X2),e(W,z2),e(W,It),e(It,W2),e(It,_o),e(_o,q2),e(It,K2),e(It,wo),e(wo,F2),p(r,Hf,c),p(r,Ae,c),e(Ae,xt),e(xt,Sn),u(yo,Sn,null),e(Ae,Y2),e(Ae,Cn),e(Cn,j2),p(r,Gf,c),p(r,q,c),e(q,ui),e(ui,J2),e(ui,No),e(No,Q2),e(q,Z2),e(q,Lt),e(Lt,eg),e(Lt,Rn),e(Rn,tg),e(Lt,rg),e(Lt,Ao),e(Ao,lg),e(q,og),e(q,mi),e(mi,ag),e(mi,$o),e($o,ig),p(r,Mf,c),p(r,$e,c),e($e,Pt),e(Pt,Dn),u(Io,Dn,null),e($e,sg),e($e,Tn),e(Tn,ng),p(r,Xf,c),p(r,K,c),e(K,Vn),e(Vn,kt),e(kt,hg),e(kt,xo),e(xo,fg),e(kt,cg),e(kt,Un),e(Un,pg),e(K,vg),e(K,Bn),e(Bn,St),e(St,dg),e(St,On),e(On,ug),e(St,mg),e(St,Lo),e(Lo,gg),e(K,Eg),e(K,Hn),e(Hn,gi),e(gi,bg),e(gi,Po),e(Po,_g),p(r,zf,c),p(r,Ie,c),e(Ie,Ct),e(Ct,Gn),u(ko,Gn,null),e(Ie,wg),e(Ie,Mn),e(Mn,yg),p(r,Wf,c),p(r,F,c),e(F,Ei),e(Ei,Ng),e(Ei,So),e(So,Ag),e(F,$g),e(F,Rt),e(Rt,Ig),e(Rt,Xn),e(Xn,xg),e(Rt,Lg),e(Rt,Co),e(Co,Pg),e(F,kg),e(F,bi),e(bi,Sg),e(bi,Ro),e(Ro,Cg),p(r,qf,c),p(r,xe,c),e(xe,Dt),e(Dt,zn),u(Do,zn,null),e(xe,Rg),e(xe,Wn),e(Wn,Dg),p(r,Kf,c),p(r,Y,c),e(Y,_i),e(_i,Tg),e(_i,To),e(To,Vg),e(Y,Ug),e(Y,Tt),e(Tt,Bg),e(Tt,qn),e(qn,Og),e(Tt,Hg),e(Tt,Vo),e(Vo,Gg),e(Y,Mg),e(Y,wi),e(wi,Xg),e(wi,Uo),e(Uo,zg),p(r,Ff,c),p(r,Le,c),e(Le,Vt),e(Vt,Kn),u(Bo,Kn,null),e(Le,Wg),e(Le,Fn),e(Fn,qg),p(r,Yf,c),p(r,j,c),e(j,yi),e(yi,Kg),e(yi,Oo),e(Oo,Fg),e(j,Yg),e(j,Ut),e(Ut,jg),e(Ut,Yn),e(Yn,Jg),e(Ut,Qg),e(Ut,Ho),e(Ho,Zg),e(j,e0),e(j,Ni),e(Ni,t0),e(Ni,Go),e(Go,r0),p(r,jf,c),p(r,Pe,c),e(Pe,Bt),e(Bt,jn),u(Mo,jn,null),e(Pe,l0),e(Pe,Jn),e(Jn,o0),p(r,Jf,c),p(r,J,c),e(J,Ai),e(Ai,a0),e(Ai,Xo),e(Xo,i0),e(J,s0),e(J,Ot),e(Ot,n0),e(Ot,Qn),e(Qn,h0),e(Ot,f0),e(Ot,zo),e(zo,c0),e(J,p0),e(J,$i),e($i,v0),e($i,Wo),e(Wo,d0),p(r,Qf,c),p(r,ke,c),e(ke,Ht),e(Ht,Zn),u(qo,Zn,null),e(ke,u0),e(ke,eh),e(eh,m0),p(r,Zf,c),p(r,Q,c),e(Q,Ii),e(Ii,g0),e(Ii,Ko),e(Ko,E0),e(Q,b0),e(Q,Gt),e(Gt,_0),e(Gt,th),e(th,w0),e(Gt,y0),e(Gt,Fo),e(Fo,N0),e(Q,A0),e(Q,xi),e(xi,$0),e(xi,Yo),e(Yo,I0),p(r,ec,c),p(r,Se,c),e(Se,Mt),e(Mt,rh),u(jo,rh,null),e(Se,x0),e(Se,lh),e(lh,L0),p(r,tc,c),p(r,Z,c),e(Z,Li),e(Li,P0),e(Li,Jo),e(Jo,k0),e(Z,S0),e(Z,Xt),e(Xt,C0),e(Xt,oh),e(oh,R0),e(Xt,D0),e(Xt,Qo),e(Qo,T0),e(Z,V0),e(Z,zt),e(zt,U0),e(zt,Zo),e(Zo,B0),e(zt,O0),e(zt,ea),e(ea,H0),p(r,rc,c),p(r,Ce,c),e(Ce,Wt),e(Wt,ah),u(ta,ah,null),e(Ce,G0),e(Ce,ih),e(ih,M0),p(r,lc,c),p(r,ee,c),e(ee,Pi),e(Pi,X0),e(Pi,ra),e(ra,z0),e(ee,W0),e(ee,qt),e(qt,q0),e(qt,sh),e(sh,K0),e(qt,F0),e(qt,la),e(la,Y0),e(ee,j0),e(ee,ki),e(ki,J0),e(ki,oa),e(oa,Q0),oc=!0},p:N5,i(r){oc||(m(Zt.$$.fragment,r),m(rr.$$.fragment,r),m(ir.$$.fragment,r),m(fr.$$.fragment,r),m(dr.$$.fragment,r),m(Er.$$.fragment,r),m(Nr.$$.fragment,r),m(xr.$$.fragment,r),m(Sr.$$.fragment,r),m(Tr.$$.fragment,r),m(Hr.$$.fragment,r),m(Wr.$$.fragment,r),m(jr.$$.fragment,r),m(tl.$$.fragment,r),m(dl.$$.fragment,r),m(El.$$.fragment,r),m(yl.$$.fragment,r),m(Il.$$.fragment,r),m(oo.$$.fragment,r),m(no.$$.fragment,r),m(po.$$.fragment,r),m(go.$$.fragment,r),m(yo.$$.fragment,r),m(Io.$$.fragment,r),m(ko.$$.fragment,r),m(Do.$$.fragment,r),m(Bo.$$.fragment,r),m(Mo.$$.fragment,r),m(qo.$$.fragment,r),m(jo.$$.fragment,r),m(ta.$$.fragment,r),oc=!0)},o(r){g(Zt.$$.fragment,r),g(rr.$$.fragment,r),g(ir.$$.fragment,r),g(fr.$$.fragment,r),g(dr.$$.fragment,r),g(Er.$$.fragment,r),g(Nr.$$.fragment,r),g(xr.$$.fragment,r),g(Sr.$$.fragment,r),g(Tr.$$.fragment,r),g(Hr.$$.fragment,r),g(Wr.$$.fragment,r),g(jr.$$.fragment,r),g(tl.$$.fragment,r),g(dl.$$.fragment,r),g(El.$$.fragment,r),g(yl.$$.fragment,r),g(Il.$$.fragment,r),g(oo.$$.fragment,r),g(no.$$.fragment,r),g(po.$$.fragment,r),g(go.$$.fragment,r),g(yo.$$.fragment,r),g(Io.$$.fragment,r),g(ko.$$.fragment,r),g(Do.$$.fragment,r),g(Bo.$$.fragment,r),g(Mo.$$.fragment,r),g(qo.$$.fragment,r),g(jo.$$.fragment,r),g(ta.$$.fragment,r),oc=!1},d(r){t(te),r&&t(Wh),r&&t(re),E(Zt),r&&t(qh),r&&t(aa),r&&t(Kh),r&&t(ia),r&&t(Fh),r&&t(k),r&&t(Yh),r&&t(er),r&&t(jh),r&&t(S),r&&t(Jh),r&&t(le),E(rr),r&&t(Qh),r&&t(C),r&&t(Zh),r&&t(oe),E(ir),r&&t(ef),r&&t(R),r&&t(tf),r&&t(ae),E(fr),r&&t(rf),r&&t(D),r&&t(lf),r&&t(ie),E(dr),r&&t(of),r&&t(T),r&&t(af),r&&t(se),E(Er),r&&t(sf),r&&t(A),r&&t(nf),r&&t(ne),E(Nr),r&&t(hf),r&&t(V),r&&t(ff),r&&t(he),E(xr),r&&t(cf),r&&t(U),r&&t(pf),r&&t(fe),E(Sr),r&&t(vf),r&&t(B),r&&t(df),r&&t(ce),E(Tr),r&&t(uf),r&&t($),r&&t(mf),r&&t(pe),E(Hr),r&&t(gf),r&&t(I),r&&t(Ef),r&&t(ve),E(Wr),r&&t(bf),r&&t(x),r&&t(_f),r&&t(de),E(jr),r&&t(wf),r&&t(L),r&&t(yf),r&&t(ue),E(tl),r&&t(Nf),r&&t(P),r&&t(Af),r&&t(me),E(dl),r&&t($f),r&&t(O),r&&t(If),r&&t(ge),E(El),r&&t(xf),r&&t(H),r&&t(Lf),r&&t(Ee),E(yl),r&&t(Pf),r&&t(G),r&&t(kf),r&&t(be),E(Il),r&&t(Sf),r&&t(w),r&&t(Cf),r&&t(_e),E(oo),r&&t(Rf),r&&t(M),r&&t(Df),r&&t(we),E(no),r&&t(Tf),r&&t(X),r&&t(Vf),r&&t(ye),E(po),r&&t(Uf),r&&t(z),r&&t(Bf),r&&t(Ne),E(go),r&&t(Of),r&&t(W),r&&t(Hf),r&&t(Ae),E(yo),r&&t(Gf),r&&t(q),r&&t(Mf),r&&t($e),E(Io),r&&t(Xf),r&&t(K),r&&t(zf),r&&t(Ie),E(ko),r&&t(Wf),r&&t(F),r&&t(qf),r&&t(xe),E(Do),r&&t(Kf),r&&t(Y),r&&t(Ff),r&&t(Le),E(Bo),r&&t(Yf),r&&t(j),r&&t(jf),r&&t(Pe),E(Mo),r&&t(Jf),r&&t(J),r&&t(Qf),r&&t(ke),E(qo),r&&t(Zf),r&&t(Q),r&&t(ec),r&&t(Se),E(jo),r&&t(tc),r&&t(Z),r&&t(rc),r&&t(Ce),E(ta),r&&t(lc),r&&t(ee)}}}const I5={local:"model-summaries",sections:[{local:"big-transfer-resnetv2-bit",title:"Big Transfer ResNetV2 (BiT)"},{local:"crossstage-partial-networks",title:"Cross-Stage Partial Networks"},{local:"densenet",title:"DenseNet"},{local:"dla",title:"DLA"},{local:"dualpath-networks",title:"Dual-Path Networks"},{local:"gpuefficient-networks",title:"GPU-Efficient Networks"},{local:"hrnet",title:"HRNet"},{local:"inceptionv3",title:"Inception-V3"},{local:"inceptionv4",title:"Inception-V4"},{local:"inceptionresnetv2",title:"Inception-ResNet-V2"},{local:"nasneta",title:"NASNet-A"},{local:"pnasnet5",title:"PNasNet-5"},{local:"efficientnet",title:"EfficientNet"},{local:"mobilenetv3",title:"MobileNet-V3"},{local:"regnet",title:"RegNet"},{local:"repvgg",title:"RepVGG"},{local:"resnet-resnext",title:"ResNet, ResNeXt"},{local:"res2net",title:"Res2Net"},{local:"resnest",title:"ResNeSt"},{local:"rexnet",title:"ReXNet"},{local:"selectivekernel-networks",title:"Selective-Kernel Networks"},{local:"selecsls",title:"SelecSLS"},{local:"squeezeandexcitation-networks",title:"Squeeze-and-Excitation Networks"},{local:"tresnet",title:"TResNet"},{local:"vgg",title:"VGG"},{local:"vision-transformer",title:"Vision Transformer"},{local:"vovnet-v2-and-v1",title:"VovNet V2 and V1"},{local:"xception",title:"Xception"},{local:"xception-modified-aligned-gluon",title:"Xception (Modified Aligned, Gluon)"},{local:"xception-modified-aligned-tf",title:"Xception (Modified Aligned, TF)"}],title:"Model Summaries"};function x5(Nb){return A5(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class k5 extends b5{constructor(te){super();_5(this,te,x5,$5,w5,{})}}export{k5 as default,I5 as metadata};
