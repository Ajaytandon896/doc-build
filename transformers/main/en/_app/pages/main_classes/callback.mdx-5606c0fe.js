import{S as ip,i as cp,s as fp,e as s,k as c,w as u,t as r,M as mp,c as o,d as t,m as f,a as l,x as _,h as n,b as i,F as e,g as h,y as v,q as b,o as E,B as k,v as hp}from"../../chunks/vendor-6b77c823.js";import{T as dp}from"../../chunks/Tip-39098574.js";import{D as $}from"../../chunks/Docstring-af1d0ae0.js";import{C as Vm}from"../../chunks/CodeBlock-3a8b25a8.js";import{I as On}from"../../chunks/IconCopyLink-7a11ce68.js";function pp(Pn){let w,Ee,S,F,Z,I,tt,ee;return{c(){w=s("p"),Ee=r(`In all this class, one step is to be understood as one update step. When using gradient accumulation, one update
step may require several forward and backward passes: if you use `),S=s("code"),F=r("gradient_accumulation_steps=n"),Z=r(`, then one update
step requires going through `),I=s("em"),tt=r("n"),ee=r(" batches.")},l(te){w=o(te,"P",{});var M=l(w);Ee=n(M,`In all this class, one step is to be understood as one update step. When using gradient accumulation, one update
step may require several forward and backward passes: if you use `),S=o(M,"CODE",{});var R=l(S);F=n(R,"gradient_accumulation_steps=n"),R.forEach(t),Z=n(M,`, then one update
step requires going through `),I=o(M,"EM",{});var ma=l(I);tt=n(ma,"n"),ma.forEach(t),ee=n(M," batches."),M.forEach(t)},m(te,M){h(te,w,M),e(w,Ee),e(w,S),e(S,F),e(w,Z),e(w,I),e(I,tt),e(w,ee)},d(te){te&&t(w)}}}function gp(Pn){let w,Ee,S,F,Z,I,tt,ee,te,M,R,ma,ha,Js,Ys,In,N,Xs,da,Ks,Qs,pa,Zs,eo,ga,to,ao,Mn,ke,ro,ua,no,so,xn,y,_a,va,oo,lo,io,X,ba,co,fo,Ea,mo,ho,ka,po,go,uo,Ta,$a,_o,vo,bo,Te,Ca,Eo,ko,at,To,$o,Co,$e,wa,wo,yo,rt,Ao,Do,Lo,Ce,ya,So,Oo,nt,Po,Io,Mo,we,Aa,xo,Fo,st,No,jo,Wo,ye,Da,zo,Bo,ot,Vo,Ro,Fn,D,qo,La,Uo,Ho,Sa,Go,Jo,Oa,Yo,Xo,Pa,Ko,Qo,Ia,Zo,el,Nn,ae,Ae,mr,lt,tl,hr,al,jn,De,rl,Ma,nl,sl,Wn,q,it,ol,re,ll,xa,il,cl,ct,fl,ml,hl,j,ft,dl,dr,pl,gl,C,ul,pr,_l,vl,gr,bl,El,ur,kl,Tl,_r,$l,Cl,vr,wl,yl,br,Al,Dl,Er,Ll,Sl,kr,Ol,Pl,Tr,Il,Ml,xl,mt,Fl,ht,Nl,jl,zn,ne,dt,Wl,pt,zl,Fa,Bl,Vl,Bn,se,gt,Rl,ut,ql,Na,Ul,Hl,Vn,oe,_t,Gl,vt,Jl,ja,Yl,Xl,Rn,U,bt,Kl,Et,Ql,Wa,Zl,ei,ti,H,ai,za,ri,ni,$r,si,oi,Ba,li,ii,qn,le,kt,ci,ie,fi,Va,mi,hi,Tt,di,pi,Un,G,$t,gi,ce,ui,Ra,_i,vi,Ct,bi,Ei,ki,W,wt,Ti,yt,$i,Cr,Ci,wi,yi,At,Ai,Dt,Di,Li,Si,d,Oi,wr,Pi,Ii,yr,Mi,xi,Ar,Fi,Ni,Dr,ji,Wi,Lr,zi,Bi,Sr,Vi,Ri,Or,qi,Ui,Pr,Hi,Gi,Ir,Ji,Yi,Mr,Xi,Ki,xr,Qi,Zi,Fr,ec,tc,Nr,ac,rc,jr,nc,sc,Wr,oc,lc,zr,ic,cc,Br,fc,mc,Vr,hc,dc,Rr,pc,gc,Hn,J,Lt,uc,Y,_c,qa,vc,bc,St,Ec,kc,qr,Tc,$c,Cc,z,Ot,wc,Ur,yc,Ac,fe,Dc,Hr,Lc,Sc,Gr,Oc,Pc,Ic,x,Mc,Jr,xc,Fc,Yr,Nc,jc,Ua,Wc,zc,Xr,Bc,Vc,Gn,me,Pt,Rc,he,qc,Ha,Uc,Hc,It,Gc,Jc,Jn,de,Mt,Yc,xt,Xc,Ga,Kc,Qc,Yn,pe,Le,Kr,Ft,Zc,Qr,ef,Xn,p,Nt,tf,Zr,af,rf,jt,nf,en,sf,of,lf,O,cf,tn,ff,mf,an,hf,df,rn,pf,gf,nn,uf,_f,sn,vf,bf,Ef,on,kf,Tf,Wt,$f,Se,zt,Cf,ln,wf,yf,Oe,Bt,Af,cn,Df,Lf,Pe,Vt,Sf,fn,Of,Pf,Ie,Rt,If,qt,Mf,Ja,xf,Ff,Nf,Me,Ut,jf,mn,Wf,zf,xe,Ht,Bf,hn,Vf,Rf,Fe,Gt,qf,dn,Uf,Hf,Ne,Jt,Gf,pn,Jf,Yf,je,Yt,Xf,gn,Kf,Qf,We,Xt,Zf,un,em,tm,ze,Kt,am,_n,rm,nm,Be,Qt,sm,vn,om,Kn,Ve,lm,Ya,im,cm,Qn,Zt,Zn,Re,fm,bn,mm,hm,es,ea,ts,ge,qe,En,ta,dm,kn,pm,as,P,aa,gm,ue,um,Xa,_m,vm,Ka,bm,Em,km,Ue,Tm,He,ra,$m,na,Cm,Tn,wm,ym,Am,Ge,sa,Dm,oa,Lm,$n,Sm,Om,rs,_e,Je,Cn,la,Pm,wn,Im,ns,ve,ia,Mm,be,xm,Qa,Fm,Nm,Za,jm,Wm,ss;return I=new On({}),lt=new On({}),it=new $({props:{name:"class transformers.integrations.CometCallback",anchor:"transformers.integrations.CometCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L661"}}),ft=new $({props:{name:"setup",anchor:"transformers.integrations.CometCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L672"}}),dt=new $({props:{name:"class transformers.DefaultFlowCallback",anchor:"transformers.DefaultFlowCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L406"}}),gt=new $({props:{name:"class transformers.PrinterCallback",anchor:"transformers.PrinterCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L498"}}),_t=new $({props:{name:"class transformers.ProgressCallback",anchor:"transformers.ProgressCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L456"}}),bt=new $({props:{name:"class transformers.EarlyStoppingCallback",anchor:"transformers.EarlyStoppingCallback",parameters:[{name:"early_stopping_patience",val:": int = 1"},{name:"early_stopping_threshold",val:": typing.Optional[float] = 0.0"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L509",parametersDescription:[{anchor:"transformers.EarlyStoppingCallback.early_stopping_patience",description:`<strong>early_stopping_patience</strong> (<code>int</code>) &#x2014;
Use with <code>metric_for_best_model</code> to stop training when the specified metric worsens for
<code>early_stopping_patience</code> evaluation calls.`,name:"early_stopping_patience"},{anchor:"transformers.EarlyStoppingCallback.early_stopping_threshold(float,",description:`<strong>early_stopping_threshold(<code>float</code>,</strong> <em>optional</em>) &#x2014;
Use with TrainingArguments <code>metric_for_best_model</code> and <code>early_stopping_patience</code> to denote how much the
specified metric must improve to satisfy early stopping conditions. \``,name:"early_stopping_threshold(float,"}]}}),kt=new $({props:{name:"class transformers.integrations.TensorBoardCallback",anchor:"transformers.integrations.TensorBoardCallback",parameters:[{name:"tb_writer",val:" = None"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L447",parametersDescription:[{anchor:"transformers.integrations.TensorBoardCallback.tb_writer",description:`<strong>tb_writer</strong> (<code>SummaryWriter</code>, <em>optional</em>) &#x2014;
The writer to use. Will instantiate one if not set.`,name:"tb_writer"}]}}),$t=new $({props:{name:"class transformers.integrations.WandbCallback",anchor:"transformers.integrations.WandbCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L535"}}),wt=new $({props:{name:"setup",anchor:"transformers.integrations.WandbCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L552"}}),Lt=new $({props:{name:"class transformers.integrations.MLflowCallback",anchor:"transformers.integrations.MLflowCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L760"}}),Ot=new $({props:{name:"setup",anchor:"transformers.integrations.MLflowCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L778"}}),Pt=new $({props:{name:"class transformers.integrations.AzureMLCallback",anchor:"transformers.integrations.AzureMLCallback",parameters:[{name:"azureml_run",val:" = None"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L737"}}),Mt=new $({props:{name:"class transformers.integrations.CodeCarbonCallback",anchor:"transformers.integrations.CodeCarbonCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L922"}}),Ft=new On({}),Nt=new $({props:{name:"class transformers.TrainerCallback",anchor:"transformers.TrainerCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L159",parametersDescription:[{anchor:"transformers.TrainerCallback.args",description:`<strong>args</strong> (<a href="/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a>) &#x2014;
The training arguments used to instantiate the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"args"},{anchor:"transformers.TrainerCallback.state",description:`<strong>state</strong> (<a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerState">TrainerState</a>) &#x2014;
The current state of the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"state"},{anchor:"transformers.TrainerCallback.control",description:`<strong>control</strong> (<a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerControl">TrainerControl</a>) &#x2014;
The object that is returned to the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a> and can be used to make some decisions.`,name:"control"},{anchor:"transformers.TrainerCallback.model",description:`<strong>model</strong> (<a href="/docs/transformers/main/en/main_classes/model#transformers.PreTrainedModel">PreTrainedModel</a> or <code>torch.nn.Module</code>) &#x2014;
The model being trained.`,name:"model"},{anchor:"transformers.TrainerCallback.tokenizer",description:`<strong>tokenizer</strong> (<a href="/docs/transformers/main/en/main_classes/tokenizer#transformers.PreTrainedTokenizer">PreTrainedTokenizer</a>) &#x2014;
The tokenizer used for encoding the data.`,name:"tokenizer"},{anchor:"transformers.TrainerCallback.optimizer",description:`<strong>optimizer</strong> (<code>torch.optim.Optimizer</code>) &#x2014;
The optimizer used for the training steps.`,name:"optimizer"},{anchor:"transformers.TrainerCallback.lr_scheduler",description:`<strong>lr_scheduler</strong> (<code>torch.optim.lr_scheduler.LambdaLR</code>) &#x2014;
The scheduler used for setting the learning rate.`,name:"lr_scheduler"},{anchor:"transformers.TrainerCallback.train_dataloader",description:`<strong>train_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"train_dataloader"},{anchor:"transformers.TrainerCallback.eval_dataloader",description:`<strong>eval_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"eval_dataloader"},{anchor:"transformers.TrainerCallback.metrics",description:`<strong>metrics</strong> (<code>Dict[str, float]</code>) &#x2014;
The metrics computed by the last evaluation phase.</p>
<p>Those are only accessible in the event <code>on_evaluate</code>.`,name:"metrics"},{anchor:"transformers.TrainerCallback.logs",description:`<strong>logs</strong>  (<code>Dict[str, float]</code>) &#x2014;
The values to log.</p>
<p>Those are only accessible in the event <code>on_log</code>.`,name:"logs"}]}}),Wt=new Vm({props:{code:`class PrinterCallback(TrainerCallback):
    def on_log(self, args, state, control, logs=None, **kwargs):
        _ = logs.pop("total_flos", None)
        if state.is_local_process_zero:
            print(logs)`,highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">PrinterCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_log</span>(<span class="hljs-params">self, args, state, control, logs=<span class="hljs-literal">None</span>, **kwargs</span>):
        _ = logs.pop(<span class="hljs-string">&quot;total_flos&quot;</span>, <span class="hljs-literal">None</span>)
        <span class="hljs-keyword">if</span> state.is_local_process_zero:
            <span class="hljs-built_in">print</span>(logs)`}}),zt=new $({props:{name:"on_epoch_begin",anchor:"transformers.TrainerCallback.on_epoch_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L227"}}),Bt=new $({props:{name:"on_epoch_end",anchor:"transformers.TrainerCallback.on_epoch_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L233"}}),Vt=new $({props:{name:"on_evaluate",anchor:"transformers.TrainerCallback.on_evaluate",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L259"}}),Rt=new $({props:{name:"on_init_end",anchor:"transformers.TrainerCallback.on_init_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L209"}}),Ut=new $({props:{name:"on_log",anchor:"transformers.TrainerCallback.on_log",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L271"}}),Ht=new $({props:{name:"on_prediction_step",anchor:"transformers.TrainerCallback.on_prediction_step",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L277"}}),Gt=new $({props:{name:"on_save",anchor:"transformers.TrainerCallback.on_save",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L265"}}),Jt=new $({props:{name:"on_step_begin",anchor:"transformers.TrainerCallback.on_step_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L239"}}),Yt=new $({props:{name:"on_step_end",anchor:"transformers.TrainerCallback.on_step_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L252"}}),Xt=new $({props:{name:"on_substep_end",anchor:"transformers.TrainerCallback.on_substep_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L246"}}),Kt=new $({props:{name:"on_train_begin",anchor:"transformers.TrainerCallback.on_train_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L215"}}),Qt=new $({props:{name:"on_train_end",anchor:"transformers.TrainerCallback.on_train_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L221"}}),Zt=new Vm({props:{code:`class MyCallback(TrainerCallback):
    "A callback that prints a message at the beginning of training"

    def on_train_begin(self, args, state, control, **kwargs):
        print("Starting training")


trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback],  # We can either pass the callback class this way or an instance of it (MyCallback())
)`,highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">MyCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-string">&quot;A callback that prints a message at the beginning of training&quot;</span>

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_train_begin</span>(<span class="hljs-params">self, args, state, control, **kwargs</span>):
        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Starting training&quot;</span>)


trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback],  <span class="hljs-comment"># We can either pass the callback class this way or an instance of it (MyCallback())</span>
)`}}),ea=new Vm({props:{code:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
# Alternatively, we can pass an instance of the callback class
trainer.add_callback(MyCallback())`,highlighted:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
<span class="hljs-comment"># Alternatively, we can pass an instance of the callback class</span>
trainer.add_callback(MyCallback())`}}),ta=new On({}),aa=new $({props:{name:"class transformers.TrainerState",anchor:"transformers.TrainerState",parameters:[{name:"epoch",val:": typing.Optional[float] = None"},{name:"global_step",val:": int = 0"},{name:"max_steps",val:": int = 0"},{name:"num_train_epochs",val:": int = 0"},{name:"total_flos",val:": float = 0"},{name:"log_history",val:": typing.List[typing.Dict[str, float]] = None"},{name:"best_metric",val:": typing.Optional[float] = None"},{name:"best_model_checkpoint",val:": typing.Optional[str] = None"},{name:"is_local_process_zero",val:": bool = True"},{name:"is_world_process_zero",val:": bool = True"},{name:"is_hyper_param_search",val:": bool = False"},{name:"trial_name",val:": str = None"},{name:"trial_params",val:": typing.Dict[str, typing.Union[str, float, int, bool]] = None"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L35",parametersDescription:[{anchor:"transformers.TrainerState.epoch",description:`<strong>epoch</strong> (<code>float</code>, <em>optional</em>) &#x2014;
Only set during training, will represent the epoch the training is at (the decimal part being the
percentage of the current epoch completed).`,name:"epoch"},{anchor:"transformers.TrainerState.global_step",description:`<strong>global_step</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
During training, represents the number of update steps completed.`,name:"global_step"},{anchor:"transformers.TrainerState.max_steps",description:`<strong>max_steps</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
The number of update steps to do during the current training.`,name:"max_steps"},{anchor:"transformers.TrainerState.total_flos",description:`<strong>total_flos</strong> (<code>float</code>, <em>optional</em>, defaults to 0) &#x2014;
The total number of floating operations done by the model since the beginning of training (stored as floats
to avoid overflow).`,name:"total_flos"},{anchor:"transformers.TrainerState.log_history",description:`<strong>log_history</strong> (<code>List[Dict[str, float]]</code>, <em>optional</em>) &#x2014;
The list of logs done since the beginning of training.`,name:"log_history"},{anchor:"transformers.TrainerState.best_metric",description:`<strong>best_metric</strong> (<code>float</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the best metric encountered so far.`,name:"best_metric"},{anchor:"transformers.TrainerState.best_model_checkpoint",description:`<strong>best_model_checkpoint</strong> (<code>str</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the name of the checkpoint for the best model encountered so
far.`,name:"best_model_checkpoint"},{anchor:"transformers.TrainerState.is_local_process_zero",description:`<strong>is_local_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the local (e.g., on one machine if training in a distributed fashion on
several machines) main process.`,name:"is_local_process_zero"},{anchor:"transformers.TrainerState.is_world_process_zero",description:`<strong>is_world_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the global main process (when training in a distributed fashion on several
machines, this is only going to be <code>True</code> for one process).`,name:"is_world_process_zero"},{anchor:"transformers.TrainerState.is_hyper_param_search",description:`<strong>is_hyper_param_search</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether we are in the process of a hyper parameter search using Trainer.hyperparameter_search. This will
impact the way data will be logged in TensorBoard.`,name:"is_hyper_param_search"}]}}),Ue=new dp({props:{$$slots:{default:[pp]},$$scope:{ctx:Pn}}}),ra=new $({props:{name:"load_from_json",anchor:"transformers.TrainerState.load_from_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L101"}}),sa=new $({props:{name:"save_to_json",anchor:"transformers.TrainerState.save_to_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L95"}}),la=new On({}),ia=new $({props:{name:"class transformers.TrainerControl",anchor:"transformers.TrainerControl",parameters:[{name:"should_training_stop",val:": bool = False"},{name:"should_epoch_stop",val:": bool = False"},{name:"should_save",val:": bool = False"},{name:"should_evaluate",val:": bool = False"},{name:"should_log",val:": bool = False"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L110",parametersDescription:[{anchor:"transformers.TrainerControl.should_training_stop",description:`<strong>should_training_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the training should be interrupted.</p>
<p>If <code>True</code>, this variable will not be set back to <code>False</code>. The training will just stop.`,name:"should_training_stop"},{anchor:"transformers.TrainerControl.should_epoch_stop",description:`<strong>should_epoch_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the current epoch should be interrupted.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next epoch.`,name:"should_epoch_stop"},{anchor:"transformers.TrainerControl.should_save",description:`<strong>should_save</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be saved at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_save"},{anchor:"transformers.TrainerControl.should_evaluate",description:`<strong>should_evaluate</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be evaluated at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_evaluate"},{anchor:"transformers.TrainerControl.should_log",description:`<strong>should_log</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the logs should be reported at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_log"}]}}),{c(){w=s("meta"),Ee=c(),S=s("h1"),F=s("a"),Z=s("span"),u(I.$$.fragment),tt=c(),ee=s("span"),te=r("Callbacks"),M=c(),R=s("p"),ma=r(`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
`),ha=s("a"),Js=r("Trainer"),Ys=r(` (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms\u2026) and take decisions (like early
stopping).`),In=c(),N=s("p"),Xs=r("Callbacks are \u201Cread only\u201D pieces of code, apart from the "),da=s("a"),Ks=r("TrainerControl"),Qs=r(` object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass `),pa=s("a"),Zs=r("Trainer"),eo=r(" and override the methods you need (see "),ga=s("a"),to=r("trainer"),ao=r(" for examples)."),Mn=c(),ke=s("p"),ro=r("By default a "),ua=s("a"),no=r("Trainer"),so=r(" will use the following callbacks:"),xn=c(),y=s("ul"),_a=s("li"),va=s("a"),oo=r("DefaultFlowCallback"),lo=r(" which handles the default behavior for logging, saving and evaluation."),io=c(),X=s("li"),ba=s("a"),co=r("PrinterCallback"),fo=r(" or "),Ea=s("a"),mo=r("ProgressCallback"),ho=r(` to display progress and print the
logs (the first one is used if you deactivate tqdm through the `),ka=s("a"),po=r("TrainingArguments"),go=r(`, otherwise
it\u2019s the second one).`),uo=c(),Ta=s("li"),$a=s("a"),_o=r("TensorBoardCallback"),vo=r(` if tensorboard is accessible (either through PyTorch >= 1.4
or tensorboardX).`),bo=c(),Te=s("li"),Ca=s("a"),Eo=r("WandbCallback"),ko=r(" if "),at=s("a"),To=r("wandb"),$o=r(" is installed."),Co=c(),$e=s("li"),wa=s("a"),wo=r("CometCallback"),yo=r(" if "),rt=s("a"),Ao=r("comet_ml"),Do=r(" is installed."),Lo=c(),Ce=s("li"),ya=s("a"),So=r("MLflowCallback"),Oo=r(" if "),nt=s("a"),Po=r("mlflow"),Io=r(" is installed."),Mo=c(),we=s("li"),Aa=s("a"),xo=r("AzureMLCallback"),Fo=r(" if "),st=s("a"),No=r("azureml-sdk"),jo=r(` is
installed.`),Wo=c(),ye=s("li"),Da=s("a"),zo=r("CodeCarbonCallback"),Bo=r(" if "),ot=s("a"),Vo=r("codecarbon"),Ro=r(` is
installed.`),Fn=c(),D=s("p"),qo=r("The main class that implements callbacks is "),La=s("a"),Uo=r("TrainerCallback"),Ho=r(`. It gets the
`),Sa=s("a"),Go=r("TrainingArguments"),Jo=r(" used to instantiate the "),Oa=s("a"),Yo=r("Trainer"),Xo=r(`, can access that
Trainer\u2019s internal state via `),Pa=s("a"),Ko=r("TrainerState"),Qo=r(`, and can take some actions on the training loop via
`),Ia=s("a"),Zo=r("TrainerControl"),el=r("."),Nn=c(),ae=s("h2"),Ae=s("a"),mr=s("span"),u(lt.$$.fragment),tl=c(),hr=s("span"),al=r("Available Callbacks"),jn=c(),De=s("p"),rl=r("Here is the list of the available "),Ma=s("a"),nl=r("TrainerCallback"),sl=r(" in the library:"),Wn=c(),q=s("div"),u(it.$$.fragment),ol=c(),re=s("p"),ll=r("A "),xa=s("a"),il=r("TrainerCallback"),cl=r(" that sends the logs to "),ct=s("a"),fl=r("Comet ML"),ml=r("."),hl=c(),j=s("div"),u(ft.$$.fragment),dl=c(),dr=s("p"),pl=r("Setup the optional Comet.ml integration."),gl=c(),C=s("p"),ul=r(`Environment:
COMET_MODE (`),pr=s("code"),_l=r("str"),vl=r(", "),gr=s("em"),bl=r("optional"),El=r(`):
Whether to create an online, offline experiment or disable Comet logging. Can be \u201COFFLINE\u201D, \u201CONLINE\u201D,
or \u201CDISABLED\u201D. Defaults to \u201CONLINE\u201D.
COMET_PROJECT_NAME (`),ur=s("code"),kl=r("str"),Tl=r(", "),_r=s("em"),$l=r("optional"),Cl=r(`):
Comet project name for experiments
COMET_OFFLINE_DIRECTORY (`),vr=s("code"),wl=r("str"),yl=r(", "),br=s("em"),Al=r("optional"),Dl=r(`):
Folder to use for saving offline experiments when `),Er=s("code"),Ll=r("COMET_MODE"),Sl=r(` is \u201COFFLINE\u201D
COMET_LOG_ASSETS (`),kr=s("code"),Ol=r("str"),Pl=r(", "),Tr=s("em"),Il=r("optional"),Ml=r(`):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be \u201CTRUE\u201D, or
\u201CFALSE\u201D. Defaults to \u201CTRUE\u201D.`),xl=c(),mt=s("p"),Fl=r(`For a number of configurable items in the environment, see
`),ht=s("a"),Nl=r("here"),jl=r("."),zn=c(),ne=s("div"),u(dt.$$.fragment),Wl=c(),pt=s("p"),zl=r("A "),Fa=s("a"),Bl=r("TrainerCallback"),Vl=r(" that handles the default flow of the training loop for logs, evaluation and checkpoints."),Bn=c(),se=s("div"),u(gt.$$.fragment),Rl=c(),ut=s("p"),ql=r("A bare "),Na=s("a"),Ul=r("TrainerCallback"),Hl=r(" that just prints the logs."),Vn=c(),oe=s("div"),u(_t.$$.fragment),Gl=c(),vt=s("p"),Jl=r("A "),ja=s("a"),Yl=r("TrainerCallback"),Xl=r(" that displays the progress of training or evaluation."),Rn=c(),U=s("div"),u(bt.$$.fragment),Kl=c(),Et=s("p"),Ql=r("A "),Wa=s("a"),Zl=r("TrainerCallback"),ei=r(" that handles early stopping."),ti=c(),H=s("p"),ai=r("This callback depends on "),za=s("a"),ri=r("TrainingArguments"),ni=r(" argument "),$r=s("em"),si=r("load_best_model_at_end"),oi=r(` functionality to set best_metric
in `),Ba=s("a"),li=r("TrainerState"),ii=r("."),qn=c(),le=s("div"),u(kt.$$.fragment),ci=c(),ie=s("p"),fi=r("A "),Va=s("a"),mi=r("TrainerCallback"),hi=r(" that sends the logs to "),Tt=s("a"),di=r("TensorBoard"),pi=r("."),Un=c(),G=s("div"),u($t.$$.fragment),gi=c(),ce=s("p"),ui=r("A "),Ra=s("a"),_i=r("TrainerCallback"),vi=r(" that sends the logs to "),Ct=s("a"),bi=r("Weight and Biases"),Ei=r("."),ki=c(),W=s("div"),u(wt.$$.fragment),Ti=c(),yt=s("p"),$i=r("Setup the optional Weights & Biases ("),Cr=s("em"),Ci=r("wandb"),wi=r(") integration."),yi=c(),At=s("p"),Ai=r(`One can subclass and override this method to customize the setup if needed. Find more information
`),Dt=s("a"),Di=r("here"),Li=r(`. You can also override the following environment
variables:`),Si=c(),d=s("p"),Oi=r(`Environment:
WANDB_LOG_MODEL (`),wr=s("code"),Pi=r("bool"),Ii=r(", "),yr=s("em"),Mi=r("optional"),xi=r(", defaults to "),Ar=s("code"),Fi=r("False"),Ni=r(`):
Whether or not to log model as artifact at the end of training. Use along with
`),Dr=s("em"),ji=r("TrainingArguments.load_best_model_at_end"),Wi=r(` to upload best model.
WANDB_WATCH (`),Lr=s("code"),zi=r("str"),Bi=r(", "),Sr=s("em"),Vi=r("optional"),Ri=r(" defaults to "),Or=s("code"),qi=r('"gradients"'),Ui=r(`):
Can be `),Pr=s("code"),Hi=r('"gradients"'),Gi=r(", "),Ir=s("code"),Ji=r('"all"'),Yi=r(" or "),Mr=s("code"),Xi=r('"false"'),Ki=r(". Set to "),xr=s("code"),Qi=r('"false"'),Zi=r(" to disable gradient logging or "),Fr=s("code"),ec=r('"all"'),tc=r(` to
log gradients and parameters.
WANDB_PROJECT (`),Nr=s("code"),ac=r("str"),rc=r(", "),jr=s("em"),nc=r("optional"),sc=r(", defaults to "),Wr=s("code"),oc=r('"huggingface"'),lc=r(`):
Set this to a custom string to store results in a different project.
WANDB_DISABLED (`),zr=s("code"),ic=r("bool"),cc=r(", "),Br=s("em"),fc=r("optional"),mc=r(", defaults to "),Vr=s("code"),hc=r("False"),dc=r(`):
Whether or not to disable wandb entirely. Set `),Rr=s("em"),pc=r("WANDB_DISABLED=true"),gc=r(" to disable."),Hn=c(),J=s("div"),u(Lt.$$.fragment),uc=c(),Y=s("p"),_c=r("A "),qa=s("a"),vc=r("TrainerCallback"),bc=r(" that sends the logs to "),St=s("a"),Ec=r("MLflow"),kc=r(`. Can be disabled by setting
environment variable `),qr=s("code"),Tc=r("DISABLE_MLFLOW_INTEGRATION = TRUE"),$c=r("."),Cc=c(),z=s("div"),u(Ot.$$.fragment),wc=c(),Ur=s("p"),yc=r("Setup the optional MLflow integration."),Ac=c(),fe=s("p"),Dc=r(`Environment:
HF_MLFLOW_LOG_ARTIFACTS (`),Hr=s("code"),Lc=r("str"),Sc=r(", "),Gr=s("em"),Oc=r("optional"),Pc=r(`):
Whether to use MLflow .log_artifact() facility to log artifacts.`),Ic=c(),x=s("p"),Mc=r("This only makes sense if logging to a remote server, e.g. s3 or GCS. If set to "),Jr=s("code"),xc=r("True"),Fc=r(" or "),Yr=s("em"),Nc=r("1"),jc=r(`, will copy
whatever is in `),Ua=s("a"),Wc=r("TrainingArguments"),zc=r("\u2019s "),Xr=s("code"),Bc=r("output_dir"),Vc=r(` to the local or remote artifact storage. Using it
without a remote storage will just copy the files to your artifact location.`),Gn=c(),me=s("div"),u(Pt.$$.fragment),Rc=c(),he=s("p"),qc=r("A "),Ha=s("a"),Uc=r("TrainerCallback"),Hc=r(" that sends the logs to "),It=s("a"),Gc=r("AzureML"),Jc=r("."),Jn=c(),de=s("div"),u(Mt.$$.fragment),Yc=c(),xt=s("p"),Xc=r("A "),Ga=s("a"),Kc=r("TrainerCallback"),Qc=r(" that tracks the CO2 emission of training."),Yn=c(),pe=s("h2"),Le=s("a"),Kr=s("span"),u(Ft.$$.fragment),Zc=c(),Qr=s("span"),ef=r("TrainerCallback"),Xn=c(),p=s("div"),u(Nt.$$.fragment),tf=c(),Zr=s("p"),af=r(`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`),rf=c(),jt=s("p"),nf=r("The "),en=s("code"),sf=r("control"),of=r(` object is the only one that can be changed by the callback, in which case the event that changes it
should return the modified version.`),lf=c(),O=s("p"),cf=r("The argument "),tn=s("code"),ff=r("args"),mf=r(", "),an=s("code"),hf=r("state"),df=r(" and "),rn=s("code"),pf=r("control"),gf=r(" are positionals for all events, all the others are grouped in "),nn=s("code"),uf=r("kwargs"),_f=r(`.
You can unpack the ones you need in the signature of the event using them. As an example, see the code of the
simple `),sn=s("code"),vf=r("PrinterCallback"),bf=r("."),Ef=c(),on=s("p"),kf=r("Example:"),Tf=c(),u(Wt.$$.fragment),$f=c(),Se=s("div"),u(zt.$$.fragment),Cf=c(),ln=s("p"),wf=r("Event called at the beginning of an epoch."),yf=c(),Oe=s("div"),u(Bt.$$.fragment),Af=c(),cn=s("p"),Df=r("Event called at the end of an epoch."),Lf=c(),Pe=s("div"),u(Vt.$$.fragment),Sf=c(),fn=s("p"),Of=r("Event called after an evaluation phase."),Pf=c(),Ie=s("div"),u(Rt.$$.fragment),If=c(),qt=s("p"),Mf=r("Event called at the end of the initialization of the "),Ja=s("a"),xf=r("Trainer"),Ff=r("."),Nf=c(),Me=s("div"),u(Ut.$$.fragment),jf=c(),mn=s("p"),Wf=r("Event called after logging the last logs."),zf=c(),xe=s("div"),u(Ht.$$.fragment),Bf=c(),hn=s("p"),Vf=r("Event called after a prediction step."),Rf=c(),Fe=s("div"),u(Gt.$$.fragment),qf=c(),dn=s("p"),Uf=r("Event called after a checkpoint save."),Hf=c(),Ne=s("div"),u(Jt.$$.fragment),Gf=c(),pn=s("p"),Jf=r(`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`),Yf=c(),je=s("div"),u(Yt.$$.fragment),Xf=c(),gn=s("p"),Kf=r(`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`),Qf=c(),We=s("div"),u(Xt.$$.fragment),Zf=c(),un=s("p"),em=r("Event called at the end of an substep during gradient accumulation."),tm=c(),ze=s("div"),u(Kt.$$.fragment),am=c(),_n=s("p"),rm=r("Event called at the beginning of training."),nm=c(),Be=s("div"),u(Qt.$$.fragment),sm=c(),vn=s("p"),om=r("Event called at the end of training."),Kn=c(),Ve=s("p"),lm=r("Here is an example of how to register a custom callback with the PyTorch "),Ya=s("a"),im=r("Trainer"),cm=r(":"),Qn=c(),u(Zt.$$.fragment),Zn=c(),Re=s("p"),fm=r("Another way to register a callback is to call "),bn=s("code"),mm=r("trainer.add_callback()"),hm=r(" as follows:"),es=c(),u(ea.$$.fragment),ts=c(),ge=s("h2"),qe=s("a"),En=s("span"),u(ta.$$.fragment),dm=c(),kn=s("span"),pm=r("TrainerState"),as=c(),P=s("div"),u(aa.$$.fragment),gm=c(),ue=s("p"),um=r("A class containing the "),Xa=s("a"),_m=r("Trainer"),vm=r(` inner state that will be saved along the model and optimizer when checkpointing
and passed to the `),Ka=s("a"),bm=r("TrainerCallback"),Em=r("."),km=c(),u(Ue.$$.fragment),Tm=c(),He=s("div"),u(ra.$$.fragment),$m=c(),na=s("p"),Cm=r("Create an instance from the content of "),Tn=s("code"),wm=r("json_path"),ym=r("."),Am=c(),Ge=s("div"),u(sa.$$.fragment),Dm=c(),oa=s("p"),Lm=r("Save the content of this instance in JSON format inside "),$n=s("code"),Sm=r("json_path"),Om=r("."),rs=c(),_e=s("h2"),Je=s("a"),Cn=s("span"),u(la.$$.fragment),Pm=c(),wn=s("span"),Im=r("TrainerControl"),ns=c(),ve=s("div"),u(ia.$$.fragment),Mm=c(),be=s("p"),xm=r("A class that handles the "),Qa=s("a"),Fm=r("Trainer"),Nm=r(" control flow. This class is used by the "),Za=s("a"),jm=r("TrainerCallback"),Wm=r(` to activate some
switches in the training loop.`),this.h()},l(a){const m=mp('[data-svelte="svelte-1phssyn"]',document.head);w=o(m,"META",{name:!0,content:!0}),m.forEach(t),Ee=f(a),S=o(a,"H1",{class:!0});var ca=l(S);F=o(ca,"A",{id:!0,class:!0,href:!0});var Rm=l(F);Z=o(Rm,"SPAN",{});var qm=l(Z);_(I.$$.fragment,qm),qm.forEach(t),Rm.forEach(t),tt=f(ca),ee=o(ca,"SPAN",{});var Um=l(ee);te=n(Um,"Callbacks"),Um.forEach(t),ca.forEach(t),M=f(a),R=o(a,"P",{});var os=l(R);ma=n(os,`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
`),ha=o(os,"A",{href:!0});var Hm=l(ha);Js=n(Hm,"Trainer"),Hm.forEach(t),Ys=n(os,` (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms\u2026) and take decisions (like early
stopping).`),os.forEach(t),In=f(a),N=o(a,"P",{});var Ye=l(N);Xs=n(Ye,"Callbacks are \u201Cread only\u201D pieces of code, apart from the "),da=o(Ye,"A",{href:!0});var Gm=l(da);Ks=n(Gm,"TrainerControl"),Gm.forEach(t),Qs=n(Ye,` object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass `),pa=o(Ye,"A",{href:!0});var Jm=l(pa);Zs=n(Jm,"Trainer"),Jm.forEach(t),eo=n(Ye," and override the methods you need (see "),ga=o(Ye,"A",{href:!0});var Ym=l(ga);to=n(Ym,"trainer"),Ym.forEach(t),ao=n(Ye," for examples)."),Ye.forEach(t),Mn=f(a),ke=o(a,"P",{});var ls=l(ke);ro=n(ls,"By default a "),ua=o(ls,"A",{href:!0});var Xm=l(ua);no=n(Xm,"Trainer"),Xm.forEach(t),so=n(ls," will use the following callbacks:"),ls.forEach(t),xn=f(a),y=o(a,"UL",{});var L=l(y);_a=o(L,"LI",{});var zm=l(_a);va=o(zm,"A",{href:!0});var Km=l(va);oo=n(Km,"DefaultFlowCallback"),Km.forEach(t),lo=n(zm," which handles the default behavior for logging, saving and evaluation."),zm.forEach(t),io=f(L),X=o(L,"LI",{});var fa=l(X);ba=o(fa,"A",{href:!0});var Qm=l(ba);co=n(Qm,"PrinterCallback"),Qm.forEach(t),fo=n(fa," or "),Ea=o(fa,"A",{href:!0});var Zm=l(Ea);mo=n(Zm,"ProgressCallback"),Zm.forEach(t),ho=n(fa,` to display progress and print the
logs (the first one is used if you deactivate tqdm through the `),ka=o(fa,"A",{href:!0});var eh=l(ka);po=n(eh,"TrainingArguments"),eh.forEach(t),go=n(fa,`, otherwise
it\u2019s the second one).`),fa.forEach(t),uo=f(L),Ta=o(L,"LI",{});var Bm=l(Ta);$a=o(Bm,"A",{href:!0});var th=l($a);_o=n(th,"TensorBoardCallback"),th.forEach(t),vo=n(Bm,` if tensorboard is accessible (either through PyTorch >= 1.4
or tensorboardX).`),Bm.forEach(t),bo=f(L),Te=o(L,"LI",{});var yn=l(Te);Ca=o(yn,"A",{href:!0});var ah=l(Ca);Eo=n(ah,"WandbCallback"),ah.forEach(t),ko=n(yn," if "),at=o(yn,"A",{href:!0,rel:!0});var rh=l(at);To=n(rh,"wandb"),rh.forEach(t),$o=n(yn," is installed."),yn.forEach(t),Co=f(L),$e=o(L,"LI",{});var An=l($e);wa=o(An,"A",{href:!0});var nh=l(wa);wo=n(nh,"CometCallback"),nh.forEach(t),yo=n(An," if "),rt=o(An,"A",{href:!0,rel:!0});var sh=l(rt);Ao=n(sh,"comet_ml"),sh.forEach(t),Do=n(An," is installed."),An.forEach(t),Lo=f(L),Ce=o(L,"LI",{});var Dn=l(Ce);ya=o(Dn,"A",{href:!0});var oh=l(ya);So=n(oh,"MLflowCallback"),oh.forEach(t),Oo=n(Dn," if "),nt=o(Dn,"A",{href:!0,rel:!0});var lh=l(nt);Po=n(lh,"mlflow"),lh.forEach(t),Io=n(Dn," is installed."),Dn.forEach(t),Mo=f(L),we=o(L,"LI",{});var Ln=l(we);Aa=o(Ln,"A",{href:!0});var ih=l(Aa);xo=n(ih,"AzureMLCallback"),ih.forEach(t),Fo=n(Ln," if "),st=o(Ln,"A",{href:!0,rel:!0});var ch=l(st);No=n(ch,"azureml-sdk"),ch.forEach(t),jo=n(Ln,` is
installed.`),Ln.forEach(t),Wo=f(L),ye=o(L,"LI",{});var Sn=l(ye);Da=o(Sn,"A",{href:!0});var fh=l(Da);zo=n(fh,"CodeCarbonCallback"),fh.forEach(t),Bo=n(Sn," if "),ot=o(Sn,"A",{href:!0,rel:!0});var mh=l(ot);Vo=n(mh,"codecarbon"),mh.forEach(t),Ro=n(Sn,` is
installed.`),Sn.forEach(t),L.forEach(t),Fn=f(a),D=o(a,"P",{});var B=l(D);qo=n(B,"The main class that implements callbacks is "),La=o(B,"A",{href:!0});var hh=l(La);Uo=n(hh,"TrainerCallback"),hh.forEach(t),Ho=n(B,`. It gets the
`),Sa=o(B,"A",{href:!0});var dh=l(Sa);Go=n(dh,"TrainingArguments"),dh.forEach(t),Jo=n(B," used to instantiate the "),Oa=o(B,"A",{href:!0});var ph=l(Oa);Yo=n(ph,"Trainer"),ph.forEach(t),Xo=n(B,`, can access that
Trainer\u2019s internal state via `),Pa=o(B,"A",{href:!0});var gh=l(Pa);Ko=n(gh,"TrainerState"),gh.forEach(t),Qo=n(B,`, and can take some actions on the training loop via
`),Ia=o(B,"A",{href:!0});var uh=l(Ia);Zo=n(uh,"TrainerControl"),uh.forEach(t),el=n(B,"."),B.forEach(t),Nn=f(a),ae=o(a,"H2",{class:!0});var is=l(ae);Ae=o(is,"A",{id:!0,class:!0,href:!0});var _h=l(Ae);mr=o(_h,"SPAN",{});var vh=l(mr);_(lt.$$.fragment,vh),vh.forEach(t),_h.forEach(t),tl=f(is),hr=o(is,"SPAN",{});var bh=l(hr);al=n(bh,"Available Callbacks"),bh.forEach(t),is.forEach(t),jn=f(a),De=o(a,"P",{});var cs=l(De);rl=n(cs,"Here is the list of the available "),Ma=o(cs,"A",{href:!0});var Eh=l(Ma);nl=n(Eh,"TrainerCallback"),Eh.forEach(t),sl=n(cs," in the library:"),cs.forEach(t),Wn=f(a),q=o(a,"DIV",{class:!0});var er=l(q);_(it.$$.fragment,er),ol=f(er),re=o(er,"P",{});var tr=l(re);ll=n(tr,"A "),xa=o(tr,"A",{href:!0});var kh=l(xa);il=n(kh,"TrainerCallback"),kh.forEach(t),cl=n(tr," that sends the logs to "),ct=o(tr,"A",{href:!0,rel:!0});var Th=l(ct);fl=n(Th,"Comet ML"),Th.forEach(t),ml=n(tr,"."),tr.forEach(t),hl=f(er),j=o(er,"DIV",{class:!0});var Xe=l(j);_(ft.$$.fragment,Xe),dl=f(Xe),dr=o(Xe,"P",{});var $h=l(dr);pl=n($h,"Setup the optional Comet.ml integration."),$h.forEach(t),gl=f(Xe),C=o(Xe,"P",{});var A=l(C);ul=n(A,`Environment:
COMET_MODE (`),pr=o(A,"CODE",{});var Ch=l(pr);_l=n(Ch,"str"),Ch.forEach(t),vl=n(A,", "),gr=o(A,"EM",{});var wh=l(gr);bl=n(wh,"optional"),wh.forEach(t),El=n(A,`):
Whether to create an online, offline experiment or disable Comet logging. Can be \u201COFFLINE\u201D, \u201CONLINE\u201D,
or \u201CDISABLED\u201D. Defaults to \u201CONLINE\u201D.
COMET_PROJECT_NAME (`),ur=o(A,"CODE",{});var yh=l(ur);kl=n(yh,"str"),yh.forEach(t),Tl=n(A,", "),_r=o(A,"EM",{});var Ah=l(_r);$l=n(Ah,"optional"),Ah.forEach(t),Cl=n(A,`):
Comet project name for experiments
COMET_OFFLINE_DIRECTORY (`),vr=o(A,"CODE",{});var Dh=l(vr);wl=n(Dh,"str"),Dh.forEach(t),yl=n(A,", "),br=o(A,"EM",{});var Lh=l(br);Al=n(Lh,"optional"),Lh.forEach(t),Dl=n(A,`):
Folder to use for saving offline experiments when `),Er=o(A,"CODE",{});var Sh=l(Er);Ll=n(Sh,"COMET_MODE"),Sh.forEach(t),Sl=n(A,` is \u201COFFLINE\u201D
COMET_LOG_ASSETS (`),kr=o(A,"CODE",{});var Oh=l(kr);Ol=n(Oh,"str"),Oh.forEach(t),Pl=n(A,", "),Tr=o(A,"EM",{});var Ph=l(Tr);Il=n(Ph,"optional"),Ph.forEach(t),Ml=n(A,`):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be \u201CTRUE\u201D, or
\u201CFALSE\u201D. Defaults to \u201CTRUE\u201D.`),A.forEach(t),xl=f(Xe),mt=o(Xe,"P",{});var fs=l(mt);Fl=n(fs,`For a number of configurable items in the environment, see
`),ht=o(fs,"A",{href:!0,rel:!0});var Ih=l(ht);Nl=n(Ih,"here"),Ih.forEach(t),jl=n(fs,"."),fs.forEach(t),Xe.forEach(t),er.forEach(t),zn=f(a),ne=o(a,"DIV",{class:!0});var ms=l(ne);_(dt.$$.fragment,ms),Wl=f(ms),pt=o(ms,"P",{});var hs=l(pt);zl=n(hs,"A "),Fa=o(hs,"A",{href:!0});var Mh=l(Fa);Bl=n(Mh,"TrainerCallback"),Mh.forEach(t),Vl=n(hs," that handles the default flow of the training loop for logs, evaluation and checkpoints."),hs.forEach(t),ms.forEach(t),Bn=f(a),se=o(a,"DIV",{class:!0});var ds=l(se);_(gt.$$.fragment,ds),Rl=f(ds),ut=o(ds,"P",{});var ps=l(ut);ql=n(ps,"A bare "),Na=o(ps,"A",{href:!0});var xh=l(Na);Ul=n(xh,"TrainerCallback"),xh.forEach(t),Hl=n(ps," that just prints the logs."),ps.forEach(t),ds.forEach(t),Vn=f(a),oe=o(a,"DIV",{class:!0});var gs=l(oe);_(_t.$$.fragment,gs),Gl=f(gs),vt=o(gs,"P",{});var us=l(vt);Jl=n(us,"A "),ja=o(us,"A",{href:!0});var Fh=l(ja);Yl=n(Fh,"TrainerCallback"),Fh.forEach(t),Xl=n(us," that displays the progress of training or evaluation."),us.forEach(t),gs.forEach(t),Rn=f(a),U=o(a,"DIV",{class:!0});var ar=l(U);_(bt.$$.fragment,ar),Kl=f(ar),Et=o(ar,"P",{});var _s=l(Et);Ql=n(_s,"A "),Wa=o(_s,"A",{href:!0});var Nh=l(Wa);Zl=n(Nh,"TrainerCallback"),Nh.forEach(t),ei=n(_s," that handles early stopping."),_s.forEach(t),ti=f(ar),H=o(ar,"P",{});var Ke=l(H);ai=n(Ke,"This callback depends on "),za=o(Ke,"A",{href:!0});var jh=l(za);ri=n(jh,"TrainingArguments"),jh.forEach(t),ni=n(Ke," argument "),$r=o(Ke,"EM",{});var Wh=l($r);si=n(Wh,"load_best_model_at_end"),Wh.forEach(t),oi=n(Ke,` functionality to set best_metric
in `),Ba=o(Ke,"A",{href:!0});var zh=l(Ba);li=n(zh,"TrainerState"),zh.forEach(t),ii=n(Ke,"."),Ke.forEach(t),ar.forEach(t),qn=f(a),le=o(a,"DIV",{class:!0});var vs=l(le);_(kt.$$.fragment,vs),ci=f(vs),ie=o(vs,"P",{});var rr=l(ie);fi=n(rr,"A "),Va=o(rr,"A",{href:!0});var Bh=l(Va);mi=n(Bh,"TrainerCallback"),Bh.forEach(t),hi=n(rr," that sends the logs to "),Tt=o(rr,"A",{href:!0,rel:!0});var Vh=l(Tt);di=n(Vh,"TensorBoard"),Vh.forEach(t),pi=n(rr,"."),rr.forEach(t),vs.forEach(t),Un=f(a),G=o(a,"DIV",{class:!0});var nr=l(G);_($t.$$.fragment,nr),gi=f(nr),ce=o(nr,"P",{});var sr=l(ce);ui=n(sr,"A "),Ra=o(sr,"A",{href:!0});var Rh=l(Ra);_i=n(Rh,"TrainerCallback"),Rh.forEach(t),vi=n(sr," that sends the logs to "),Ct=o(sr,"A",{href:!0,rel:!0});var qh=l(Ct);bi=n(qh,"Weight and Biases"),qh.forEach(t),Ei=n(sr,"."),sr.forEach(t),ki=f(nr),W=o(nr,"DIV",{class:!0});var Qe=l(W);_(wt.$$.fragment,Qe),Ti=f(Qe),yt=o(Qe,"P",{});var bs=l(yt);$i=n(bs,"Setup the optional Weights & Biases ("),Cr=o(bs,"EM",{});var Uh=l(Cr);Ci=n(Uh,"wandb"),Uh.forEach(t),wi=n(bs,") integration."),bs.forEach(t),yi=f(Qe),At=o(Qe,"P",{});var Es=l(At);Ai=n(Es,`One can subclass and override this method to customize the setup if needed. Find more information
`),Dt=o(Es,"A",{href:!0,rel:!0});var Hh=l(Dt);Di=n(Hh,"here"),Hh.forEach(t),Li=n(Es,`. You can also override the following environment
variables:`),Es.forEach(t),Si=f(Qe),d=o(Qe,"P",{});var g=l(d);Oi=n(g,`Environment:
WANDB_LOG_MODEL (`),wr=o(g,"CODE",{});var Gh=l(wr);Pi=n(Gh,"bool"),Gh.forEach(t),Ii=n(g,", "),yr=o(g,"EM",{});var Jh=l(yr);Mi=n(Jh,"optional"),Jh.forEach(t),xi=n(g,", defaults to "),Ar=o(g,"CODE",{});var Yh=l(Ar);Fi=n(Yh,"False"),Yh.forEach(t),Ni=n(g,`):
Whether or not to log model as artifact at the end of training. Use along with
`),Dr=o(g,"EM",{});var Xh=l(Dr);ji=n(Xh,"TrainingArguments.load_best_model_at_end"),Xh.forEach(t),Wi=n(g,` to upload best model.
WANDB_WATCH (`),Lr=o(g,"CODE",{});var Kh=l(Lr);zi=n(Kh,"str"),Kh.forEach(t),Bi=n(g,", "),Sr=o(g,"EM",{});var Qh=l(Sr);Vi=n(Qh,"optional"),Qh.forEach(t),Ri=n(g," defaults to "),Or=o(g,"CODE",{});var Zh=l(Or);qi=n(Zh,'"gradients"'),Zh.forEach(t),Ui=n(g,`):
Can be `),Pr=o(g,"CODE",{});var ed=l(Pr);Hi=n(ed,'"gradients"'),ed.forEach(t),Gi=n(g,", "),Ir=o(g,"CODE",{});var td=l(Ir);Ji=n(td,'"all"'),td.forEach(t),Yi=n(g," or "),Mr=o(g,"CODE",{});var ad=l(Mr);Xi=n(ad,'"false"'),ad.forEach(t),Ki=n(g,". Set to "),xr=o(g,"CODE",{});var rd=l(xr);Qi=n(rd,'"false"'),rd.forEach(t),Zi=n(g," to disable gradient logging or "),Fr=o(g,"CODE",{});var nd=l(Fr);ec=n(nd,'"all"'),nd.forEach(t),tc=n(g,` to
log gradients and parameters.
WANDB_PROJECT (`),Nr=o(g,"CODE",{});var sd=l(Nr);ac=n(sd,"str"),sd.forEach(t),rc=n(g,", "),jr=o(g,"EM",{});var od=l(jr);nc=n(od,"optional"),od.forEach(t),sc=n(g,", defaults to "),Wr=o(g,"CODE",{});var ld=l(Wr);oc=n(ld,'"huggingface"'),ld.forEach(t),lc=n(g,`):
Set this to a custom string to store results in a different project.
WANDB_DISABLED (`),zr=o(g,"CODE",{});var id=l(zr);ic=n(id,"bool"),id.forEach(t),cc=n(g,", "),Br=o(g,"EM",{});var cd=l(Br);fc=n(cd,"optional"),cd.forEach(t),mc=n(g,", defaults to "),Vr=o(g,"CODE",{});var fd=l(Vr);hc=n(fd,"False"),fd.forEach(t),dc=n(g,`):
Whether or not to disable wandb entirely. Set `),Rr=o(g,"EM",{});var md=l(Rr);pc=n(md,"WANDB_DISABLED=true"),md.forEach(t),gc=n(g," to disable."),g.forEach(t),Qe.forEach(t),nr.forEach(t),Hn=f(a),J=o(a,"DIV",{class:!0});var or=l(J);_(Lt.$$.fragment,or),uc=f(or),Y=o(or,"P",{});var Ze=l(Y);_c=n(Ze,"A "),qa=o(Ze,"A",{href:!0});var hd=l(qa);vc=n(hd,"TrainerCallback"),hd.forEach(t),bc=n(Ze," that sends the logs to "),St=o(Ze,"A",{href:!0,rel:!0});var dd=l(St);Ec=n(dd,"MLflow"),dd.forEach(t),kc=n(Ze,`. Can be disabled by setting
environment variable `),qr=o(Ze,"CODE",{});var pd=l(qr);Tc=n(pd,"DISABLE_MLFLOW_INTEGRATION = TRUE"),pd.forEach(t),$c=n(Ze,"."),Ze.forEach(t),Cc=f(or),z=o(or,"DIV",{class:!0});var et=l(z);_(Ot.$$.fragment,et),wc=f(et),Ur=o(et,"P",{});var gd=l(Ur);yc=n(gd,"Setup the optional MLflow integration."),gd.forEach(t),Ac=f(et),fe=o(et,"P",{});var lr=l(fe);Dc=n(lr,`Environment:
HF_MLFLOW_LOG_ARTIFACTS (`),Hr=o(lr,"CODE",{});var ud=l(Hr);Lc=n(ud,"str"),ud.forEach(t),Sc=n(lr,", "),Gr=o(lr,"EM",{});var _d=l(Gr);Oc=n(_d,"optional"),_d.forEach(t),Pc=n(lr,`):
Whether to use MLflow .log_artifact() facility to log artifacts.`),lr.forEach(t),Ic=f(et),x=o(et,"P",{});var K=l(x);Mc=n(K,"This only makes sense if logging to a remote server, e.g. s3 or GCS. If set to "),Jr=o(K,"CODE",{});var vd=l(Jr);xc=n(vd,"True"),vd.forEach(t),Fc=n(K," or "),Yr=o(K,"EM",{});var bd=l(Yr);Nc=n(bd,"1"),bd.forEach(t),jc=n(K,`, will copy
whatever is in `),Ua=o(K,"A",{href:!0});var Ed=l(Ua);Wc=n(Ed,"TrainingArguments"),Ed.forEach(t),zc=n(K,"\u2019s "),Xr=o(K,"CODE",{});var kd=l(Xr);Bc=n(kd,"output_dir"),kd.forEach(t),Vc=n(K,` to the local or remote artifact storage. Using it
without a remote storage will just copy the files to your artifact location.`),K.forEach(t),et.forEach(t),or.forEach(t),Gn=f(a),me=o(a,"DIV",{class:!0});var ks=l(me);_(Pt.$$.fragment,ks),Rc=f(ks),he=o(ks,"P",{});var ir=l(he);qc=n(ir,"A "),Ha=o(ir,"A",{href:!0});var Td=l(Ha);Uc=n(Td,"TrainerCallback"),Td.forEach(t),Hc=n(ir," that sends the logs to "),It=o(ir,"A",{href:!0,rel:!0});var $d=l(It);Gc=n($d,"AzureML"),$d.forEach(t),Jc=n(ir,"."),ir.forEach(t),ks.forEach(t),Jn=f(a),de=o(a,"DIV",{class:!0});var Ts=l(de);_(Mt.$$.fragment,Ts),Yc=f(Ts),xt=o(Ts,"P",{});var $s=l(xt);Xc=n($s,"A "),Ga=o($s,"A",{href:!0});var Cd=l(Ga);Kc=n(Cd,"TrainerCallback"),Cd.forEach(t),Qc=n($s," that tracks the CO2 emission of training."),$s.forEach(t),Ts.forEach(t),Yn=f(a),pe=o(a,"H2",{class:!0});var Cs=l(pe);Le=o(Cs,"A",{id:!0,class:!0,href:!0});var wd=l(Le);Kr=o(wd,"SPAN",{});var yd=l(Kr);_(Ft.$$.fragment,yd),yd.forEach(t),wd.forEach(t),Zc=f(Cs),Qr=o(Cs,"SPAN",{});var Ad=l(Qr);ef=n(Ad,"TrainerCallback"),Ad.forEach(t),Cs.forEach(t),Xn=f(a),p=o(a,"DIV",{class:!0});var T=l(p);_(Nt.$$.fragment,T),tf=f(T),Zr=o(T,"P",{});var Dd=l(Zr);af=n(Dd,`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`),Dd.forEach(t),rf=f(T),jt=o(T,"P",{});var ws=l(jt);nf=n(ws,"The "),en=o(ws,"CODE",{});var Ld=l(en);sf=n(Ld,"control"),Ld.forEach(t),of=n(ws,` object is the only one that can be changed by the callback, in which case the event that changes it
should return the modified version.`),ws.forEach(t),lf=f(T),O=o(T,"P",{});var V=l(O);cf=n(V,"The argument "),tn=o(V,"CODE",{});var Sd=l(tn);ff=n(Sd,"args"),Sd.forEach(t),mf=n(V,", "),an=o(V,"CODE",{});var Od=l(an);hf=n(Od,"state"),Od.forEach(t),df=n(V," and "),rn=o(V,"CODE",{});var Pd=l(rn);pf=n(Pd,"control"),Pd.forEach(t),gf=n(V," are positionals for all events, all the others are grouped in "),nn=o(V,"CODE",{});var Id=l(nn);uf=n(Id,"kwargs"),Id.forEach(t),_f=n(V,`.
You can unpack the ones you need in the signature of the event using them. As an example, see the code of the
simple `),sn=o(V,"CODE",{});var Md=l(sn);vf=n(Md,"PrinterCallback"),Md.forEach(t),bf=n(V,"."),V.forEach(t),Ef=f(T),on=o(T,"P",{});var xd=l(on);kf=n(xd,"Example:"),xd.forEach(t),Tf=f(T),_(Wt.$$.fragment,T),$f=f(T),Se=o(T,"DIV",{class:!0});var ys=l(Se);_(zt.$$.fragment,ys),Cf=f(ys),ln=o(ys,"P",{});var Fd=l(ln);wf=n(Fd,"Event called at the beginning of an epoch."),Fd.forEach(t),ys.forEach(t),yf=f(T),Oe=o(T,"DIV",{class:!0});var As=l(Oe);_(Bt.$$.fragment,As),Af=f(As),cn=o(As,"P",{});var Nd=l(cn);Df=n(Nd,"Event called at the end of an epoch."),Nd.forEach(t),As.forEach(t),Lf=f(T),Pe=o(T,"DIV",{class:!0});var Ds=l(Pe);_(Vt.$$.fragment,Ds),Sf=f(Ds),fn=o(Ds,"P",{});var jd=l(fn);Of=n(jd,"Event called after an evaluation phase."),jd.forEach(t),Ds.forEach(t),Pf=f(T),Ie=o(T,"DIV",{class:!0});var Ls=l(Ie);_(Rt.$$.fragment,Ls),If=f(Ls),qt=o(Ls,"P",{});var Ss=l(qt);Mf=n(Ss,"Event called at the end of the initialization of the "),Ja=o(Ss,"A",{href:!0});var Wd=l(Ja);xf=n(Wd,"Trainer"),Wd.forEach(t),Ff=n(Ss,"."),Ss.forEach(t),Ls.forEach(t),Nf=f(T),Me=o(T,"DIV",{class:!0});var Os=l(Me);_(Ut.$$.fragment,Os),jf=f(Os),mn=o(Os,"P",{});var zd=l(mn);Wf=n(zd,"Event called after logging the last logs."),zd.forEach(t),Os.forEach(t),zf=f(T),xe=o(T,"DIV",{class:!0});var Ps=l(xe);_(Ht.$$.fragment,Ps),Bf=f(Ps),hn=o(Ps,"P",{});var Bd=l(hn);Vf=n(Bd,"Event called after a prediction step."),Bd.forEach(t),Ps.forEach(t),Rf=f(T),Fe=o(T,"DIV",{class:!0});var Is=l(Fe);_(Gt.$$.fragment,Is),qf=f(Is),dn=o(Is,"P",{});var Vd=l(dn);Uf=n(Vd,"Event called after a checkpoint save."),Vd.forEach(t),Is.forEach(t),Hf=f(T),Ne=o(T,"DIV",{class:!0});var Ms=l(Ne);_(Jt.$$.fragment,Ms),Gf=f(Ms),pn=o(Ms,"P",{});var Rd=l(pn);Jf=n(Rd,`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`),Rd.forEach(t),Ms.forEach(t),Yf=f(T),je=o(T,"DIV",{class:!0});var xs=l(je);_(Yt.$$.fragment,xs),Xf=f(xs),gn=o(xs,"P",{});var qd=l(gn);Kf=n(qd,`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`),qd.forEach(t),xs.forEach(t),Qf=f(T),We=o(T,"DIV",{class:!0});var Fs=l(We);_(Xt.$$.fragment,Fs),Zf=f(Fs),un=o(Fs,"P",{});var Ud=l(un);em=n(Ud,"Event called at the end of an substep during gradient accumulation."),Ud.forEach(t),Fs.forEach(t),tm=f(T),ze=o(T,"DIV",{class:!0});var Ns=l(ze);_(Kt.$$.fragment,Ns),am=f(Ns),_n=o(Ns,"P",{});var Hd=l(_n);rm=n(Hd,"Event called at the beginning of training."),Hd.forEach(t),Ns.forEach(t),nm=f(T),Be=o(T,"DIV",{class:!0});var js=l(Be);_(Qt.$$.fragment,js),sm=f(js),vn=o(js,"P",{});var Gd=l(vn);om=n(Gd,"Event called at the end of training."),Gd.forEach(t),js.forEach(t),T.forEach(t),Kn=f(a),Ve=o(a,"P",{});var Ws=l(Ve);lm=n(Ws,"Here is an example of how to register a custom callback with the PyTorch "),Ya=o(Ws,"A",{href:!0});var Jd=l(Ya);im=n(Jd,"Trainer"),Jd.forEach(t),cm=n(Ws,":"),Ws.forEach(t),Qn=f(a),_(Zt.$$.fragment,a),Zn=f(a),Re=o(a,"P",{});var zs=l(Re);fm=n(zs,"Another way to register a callback is to call "),bn=o(zs,"CODE",{});var Yd=l(bn);mm=n(Yd,"trainer.add_callback()"),Yd.forEach(t),hm=n(zs," as follows:"),zs.forEach(t),es=f(a),_(ea.$$.fragment,a),ts=f(a),ge=o(a,"H2",{class:!0});var Bs=l(ge);qe=o(Bs,"A",{id:!0,class:!0,href:!0});var Xd=l(qe);En=o(Xd,"SPAN",{});var Kd=l(En);_(ta.$$.fragment,Kd),Kd.forEach(t),Xd.forEach(t),dm=f(Bs),kn=o(Bs,"SPAN",{});var Qd=l(kn);pm=n(Qd,"TrainerState"),Qd.forEach(t),Bs.forEach(t),as=f(a),P=o(a,"DIV",{class:!0});var Q=l(P);_(aa.$$.fragment,Q),gm=f(Q),ue=o(Q,"P",{});var cr=l(ue);um=n(cr,"A class containing the "),Xa=o(cr,"A",{href:!0});var Zd=l(Xa);_m=n(Zd,"Trainer"),Zd.forEach(t),vm=n(cr,` inner state that will be saved along the model and optimizer when checkpointing
and passed to the `),Ka=o(cr,"A",{href:!0});var ep=l(Ka);bm=n(ep,"TrainerCallback"),ep.forEach(t),Em=n(cr,"."),cr.forEach(t),km=f(Q),_(Ue.$$.fragment,Q),Tm=f(Q),He=o(Q,"DIV",{class:!0});var Vs=l(He);_(ra.$$.fragment,Vs),$m=f(Vs),na=o(Vs,"P",{});var Rs=l(na);Cm=n(Rs,"Create an instance from the content of "),Tn=o(Rs,"CODE",{});var tp=l(Tn);wm=n(tp,"json_path"),tp.forEach(t),ym=n(Rs,"."),Rs.forEach(t),Vs.forEach(t),Am=f(Q),Ge=o(Q,"DIV",{class:!0});var qs=l(Ge);_(sa.$$.fragment,qs),Dm=f(qs),oa=o(qs,"P",{});var Us=l(oa);Lm=n(Us,"Save the content of this instance in JSON format inside "),$n=o(Us,"CODE",{});var ap=l($n);Sm=n(ap,"json_path"),ap.forEach(t),Om=n(Us,"."),Us.forEach(t),qs.forEach(t),Q.forEach(t),rs=f(a),_e=o(a,"H2",{class:!0});var Hs=l(_e);Je=o(Hs,"A",{id:!0,class:!0,href:!0});var rp=l(Je);Cn=o(rp,"SPAN",{});var np=l(Cn);_(la.$$.fragment,np),np.forEach(t),rp.forEach(t),Pm=f(Hs),wn=o(Hs,"SPAN",{});var sp=l(wn);Im=n(sp,"TrainerControl"),sp.forEach(t),Hs.forEach(t),ns=f(a),ve=o(a,"DIV",{class:!0});var Gs=l(ve);_(ia.$$.fragment,Gs),Mm=f(Gs),be=o(Gs,"P",{});var fr=l(be);xm=n(fr,"A class that handles the "),Qa=o(fr,"A",{href:!0});var op=l(Qa);Fm=n(op,"Trainer"),op.forEach(t),Nm=n(fr," control flow. This class is used by the "),Za=o(fr,"A",{href:!0});var lp=l(Za);jm=n(lp,"TrainerCallback"),lp.forEach(t),Wm=n(fr,` to activate some
switches in the training loop.`),fr.forEach(t),Gs.forEach(t),this.h()},h(){i(w,"name","hf:doc:metadata"),i(w,"content",JSON.stringify(up)),i(F,"id","callbacks"),i(F,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(F,"href","#callbacks"),i(S,"class","relative group"),i(ha,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(da,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerControl"),i(pa,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(ga,"href","trainer"),i(ua,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(va,"href","/docs/transformers/main/en/main_classes/callback#transformers.DefaultFlowCallback"),i(ba,"href","/docs/transformers/main/en/main_classes/callback#transformers.PrinterCallback"),i(Ea,"href","/docs/transformers/main/en/main_classes/callback#transformers.ProgressCallback"),i(ka,"href","/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments"),i($a,"href","/docs/transformers/main/en/main_classes/callback#transformers.integrations.TensorBoardCallback"),i(Ca,"href","/docs/transformers/main/en/main_classes/callback#transformers.integrations.WandbCallback"),i(at,"href","https://www.wandb.com/"),i(at,"rel","nofollow"),i(wa,"href","/docs/transformers/main/en/main_classes/callback#transformers.integrations.CometCallback"),i(rt,"href","https://www.comet.ml/site/"),i(rt,"rel","nofollow"),i(ya,"href","/docs/transformers/main/en/main_classes/callback#transformers.integrations.MLflowCallback"),i(nt,"href","https://www.mlflow.org/"),i(nt,"rel","nofollow"),i(Aa,"href","/docs/transformers/main/en/main_classes/callback#transformers.integrations.AzureMLCallback"),i(st,"href","https://pypi.org/project/azureml-sdk/"),i(st,"rel","nofollow"),i(Da,"href","/docs/transformers/main/en/main_classes/callback#transformers.integrations.CodeCarbonCallback"),i(ot,"href","https://pypi.org/project/codecarbon/"),i(ot,"rel","nofollow"),i(La,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(Sa,"href","/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments"),i(Oa,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(Pa,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerState"),i(Ia,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerControl"),i(Ae,"id","transformers.integrations.CometCallback"),i(Ae,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ae,"href","#transformers.integrations.CometCallback"),i(ae,"class","relative group"),i(Ma,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(xa,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(ct,"href","https://www.comet.ml/site/"),i(ct,"rel","nofollow"),i(ht,"href","https://www.comet.ml/docs/python-sdk/advanced/#comet-configuration-variables"),i(ht,"rel","nofollow"),i(j,"class","docstring"),i(q,"class","docstring"),i(Fa,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(ne,"class","docstring"),i(Na,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(se,"class","docstring"),i(ja,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(oe,"class","docstring"),i(Wa,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(za,"href","/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments"),i(Ba,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerState"),i(U,"class","docstring"),i(Va,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(Tt,"href","https://www.tensorflow.org/tensorboard"),i(Tt,"rel","nofollow"),i(le,"class","docstring"),i(Ra,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(Ct,"href","https://www.wandb.com/"),i(Ct,"rel","nofollow"),i(Dt,"href","https://docs.wandb.ai/integrations/huggingface"),i(Dt,"rel","nofollow"),i(W,"class","docstring"),i(G,"class","docstring"),i(qa,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(St,"href","https://www.mlflow.org/"),i(St,"rel","nofollow"),i(Ua,"href","/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments"),i(z,"class","docstring"),i(J,"class","docstring"),i(Ha,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(It,"href","https://pypi.org/project/azureml-sdk/"),i(It,"rel","nofollow"),i(me,"class","docstring"),i(Ga,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(de,"class","docstring"),i(Le,"id","transformers.TrainerCallback"),i(Le,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Le,"href","#transformers.TrainerCallback"),i(pe,"class","relative group"),i(Se,"class","docstring"),i(Oe,"class","docstring"),i(Pe,"class","docstring"),i(Ja,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(Ie,"class","docstring"),i(Me,"class","docstring"),i(xe,"class","docstring"),i(Fe,"class","docstring"),i(Ne,"class","docstring"),i(je,"class","docstring"),i(We,"class","docstring"),i(ze,"class","docstring"),i(Be,"class","docstring"),i(p,"class","docstring"),i(Ya,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(qe,"id","transformers.TrainerState"),i(qe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(qe,"href","#transformers.TrainerState"),i(ge,"class","relative group"),i(Xa,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(Ka,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(He,"class","docstring"),i(Ge,"class","docstring"),i(P,"class","docstring"),i(Je,"id","transformers.TrainerControl"),i(Je,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Je,"href","#transformers.TrainerControl"),i(_e,"class","relative group"),i(Qa,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(Za,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(ve,"class","docstring")},m(a,m){e(document.head,w),h(a,Ee,m),h(a,S,m),e(S,F),e(F,Z),v(I,Z,null),e(S,tt),e(S,ee),e(ee,te),h(a,M,m),h(a,R,m),e(R,ma),e(R,ha),e(ha,Js),e(R,Ys),h(a,In,m),h(a,N,m),e(N,Xs),e(N,da),e(da,Ks),e(N,Qs),e(N,pa),e(pa,Zs),e(N,eo),e(N,ga),e(ga,to),e(N,ao),h(a,Mn,m),h(a,ke,m),e(ke,ro),e(ke,ua),e(ua,no),e(ke,so),h(a,xn,m),h(a,y,m),e(y,_a),e(_a,va),e(va,oo),e(_a,lo),e(y,io),e(y,X),e(X,ba),e(ba,co),e(X,fo),e(X,Ea),e(Ea,mo),e(X,ho),e(X,ka),e(ka,po),e(X,go),e(y,uo),e(y,Ta),e(Ta,$a),e($a,_o),e(Ta,vo),e(y,bo),e(y,Te),e(Te,Ca),e(Ca,Eo),e(Te,ko),e(Te,at),e(at,To),e(Te,$o),e(y,Co),e(y,$e),e($e,wa),e(wa,wo),e($e,yo),e($e,rt),e(rt,Ao),e($e,Do),e(y,Lo),e(y,Ce),e(Ce,ya),e(ya,So),e(Ce,Oo),e(Ce,nt),e(nt,Po),e(Ce,Io),e(y,Mo),e(y,we),e(we,Aa),e(Aa,xo),e(we,Fo),e(we,st),e(st,No),e(we,jo),e(y,Wo),e(y,ye),e(ye,Da),e(Da,zo),e(ye,Bo),e(ye,ot),e(ot,Vo),e(ye,Ro),h(a,Fn,m),h(a,D,m),e(D,qo),e(D,La),e(La,Uo),e(D,Ho),e(D,Sa),e(Sa,Go),e(D,Jo),e(D,Oa),e(Oa,Yo),e(D,Xo),e(D,Pa),e(Pa,Ko),e(D,Qo),e(D,Ia),e(Ia,Zo),e(D,el),h(a,Nn,m),h(a,ae,m),e(ae,Ae),e(Ae,mr),v(lt,mr,null),e(ae,tl),e(ae,hr),e(hr,al),h(a,jn,m),h(a,De,m),e(De,rl),e(De,Ma),e(Ma,nl),e(De,sl),h(a,Wn,m),h(a,q,m),v(it,q,null),e(q,ol),e(q,re),e(re,ll),e(re,xa),e(xa,il),e(re,cl),e(re,ct),e(ct,fl),e(re,ml),e(q,hl),e(q,j),v(ft,j,null),e(j,dl),e(j,dr),e(dr,pl),e(j,gl),e(j,C),e(C,ul),e(C,pr),e(pr,_l),e(C,vl),e(C,gr),e(gr,bl),e(C,El),e(C,ur),e(ur,kl),e(C,Tl),e(C,_r),e(_r,$l),e(C,Cl),e(C,vr),e(vr,wl),e(C,yl),e(C,br),e(br,Al),e(C,Dl),e(C,Er),e(Er,Ll),e(C,Sl),e(C,kr),e(kr,Ol),e(C,Pl),e(C,Tr),e(Tr,Il),e(C,Ml),e(j,xl),e(j,mt),e(mt,Fl),e(mt,ht),e(ht,Nl),e(mt,jl),h(a,zn,m),h(a,ne,m),v(dt,ne,null),e(ne,Wl),e(ne,pt),e(pt,zl),e(pt,Fa),e(Fa,Bl),e(pt,Vl),h(a,Bn,m),h(a,se,m),v(gt,se,null),e(se,Rl),e(se,ut),e(ut,ql),e(ut,Na),e(Na,Ul),e(ut,Hl),h(a,Vn,m),h(a,oe,m),v(_t,oe,null),e(oe,Gl),e(oe,vt),e(vt,Jl),e(vt,ja),e(ja,Yl),e(vt,Xl),h(a,Rn,m),h(a,U,m),v(bt,U,null),e(U,Kl),e(U,Et),e(Et,Ql),e(Et,Wa),e(Wa,Zl),e(Et,ei),e(U,ti),e(U,H),e(H,ai),e(H,za),e(za,ri),e(H,ni),e(H,$r),e($r,si),e(H,oi),e(H,Ba),e(Ba,li),e(H,ii),h(a,qn,m),h(a,le,m),v(kt,le,null),e(le,ci),e(le,ie),e(ie,fi),e(ie,Va),e(Va,mi),e(ie,hi),e(ie,Tt),e(Tt,di),e(ie,pi),h(a,Un,m),h(a,G,m),v($t,G,null),e(G,gi),e(G,ce),e(ce,ui),e(ce,Ra),e(Ra,_i),e(ce,vi),e(ce,Ct),e(Ct,bi),e(ce,Ei),e(G,ki),e(G,W),v(wt,W,null),e(W,Ti),e(W,yt),e(yt,$i),e(yt,Cr),e(Cr,Ci),e(yt,wi),e(W,yi),e(W,At),e(At,Ai),e(At,Dt),e(Dt,Di),e(At,Li),e(W,Si),e(W,d),e(d,Oi),e(d,wr),e(wr,Pi),e(d,Ii),e(d,yr),e(yr,Mi),e(d,xi),e(d,Ar),e(Ar,Fi),e(d,Ni),e(d,Dr),e(Dr,ji),e(d,Wi),e(d,Lr),e(Lr,zi),e(d,Bi),e(d,Sr),e(Sr,Vi),e(d,Ri),e(d,Or),e(Or,qi),e(d,Ui),e(d,Pr),e(Pr,Hi),e(d,Gi),e(d,Ir),e(Ir,Ji),e(d,Yi),e(d,Mr),e(Mr,Xi),e(d,Ki),e(d,xr),e(xr,Qi),e(d,Zi),e(d,Fr),e(Fr,ec),e(d,tc),e(d,Nr),e(Nr,ac),e(d,rc),e(d,jr),e(jr,nc),e(d,sc),e(d,Wr),e(Wr,oc),e(d,lc),e(d,zr),e(zr,ic),e(d,cc),e(d,Br),e(Br,fc),e(d,mc),e(d,Vr),e(Vr,hc),e(d,dc),e(d,Rr),e(Rr,pc),e(d,gc),h(a,Hn,m),h(a,J,m),v(Lt,J,null),e(J,uc),e(J,Y),e(Y,_c),e(Y,qa),e(qa,vc),e(Y,bc),e(Y,St),e(St,Ec),e(Y,kc),e(Y,qr),e(qr,Tc),e(Y,$c),e(J,Cc),e(J,z),v(Ot,z,null),e(z,wc),e(z,Ur),e(Ur,yc),e(z,Ac),e(z,fe),e(fe,Dc),e(fe,Hr),e(Hr,Lc),e(fe,Sc),e(fe,Gr),e(Gr,Oc),e(fe,Pc),e(z,Ic),e(z,x),e(x,Mc),e(x,Jr),e(Jr,xc),e(x,Fc),e(x,Yr),e(Yr,Nc),e(x,jc),e(x,Ua),e(Ua,Wc),e(x,zc),e(x,Xr),e(Xr,Bc),e(x,Vc),h(a,Gn,m),h(a,me,m),v(Pt,me,null),e(me,Rc),e(me,he),e(he,qc),e(he,Ha),e(Ha,Uc),e(he,Hc),e(he,It),e(It,Gc),e(he,Jc),h(a,Jn,m),h(a,de,m),v(Mt,de,null),e(de,Yc),e(de,xt),e(xt,Xc),e(xt,Ga),e(Ga,Kc),e(xt,Qc),h(a,Yn,m),h(a,pe,m),e(pe,Le),e(Le,Kr),v(Ft,Kr,null),e(pe,Zc),e(pe,Qr),e(Qr,ef),h(a,Xn,m),h(a,p,m),v(Nt,p,null),e(p,tf),e(p,Zr),e(Zr,af),e(p,rf),e(p,jt),e(jt,nf),e(jt,en),e(en,sf),e(jt,of),e(p,lf),e(p,O),e(O,cf),e(O,tn),e(tn,ff),e(O,mf),e(O,an),e(an,hf),e(O,df),e(O,rn),e(rn,pf),e(O,gf),e(O,nn),e(nn,uf),e(O,_f),e(O,sn),e(sn,vf),e(O,bf),e(p,Ef),e(p,on),e(on,kf),e(p,Tf),v(Wt,p,null),e(p,$f),e(p,Se),v(zt,Se,null),e(Se,Cf),e(Se,ln),e(ln,wf),e(p,yf),e(p,Oe),v(Bt,Oe,null),e(Oe,Af),e(Oe,cn),e(cn,Df),e(p,Lf),e(p,Pe),v(Vt,Pe,null),e(Pe,Sf),e(Pe,fn),e(fn,Of),e(p,Pf),e(p,Ie),v(Rt,Ie,null),e(Ie,If),e(Ie,qt),e(qt,Mf),e(qt,Ja),e(Ja,xf),e(qt,Ff),e(p,Nf),e(p,Me),v(Ut,Me,null),e(Me,jf),e(Me,mn),e(mn,Wf),e(p,zf),e(p,xe),v(Ht,xe,null),e(xe,Bf),e(xe,hn),e(hn,Vf),e(p,Rf),e(p,Fe),v(Gt,Fe,null),e(Fe,qf),e(Fe,dn),e(dn,Uf),e(p,Hf),e(p,Ne),v(Jt,Ne,null),e(Ne,Gf),e(Ne,pn),e(pn,Jf),e(p,Yf),e(p,je),v(Yt,je,null),e(je,Xf),e(je,gn),e(gn,Kf),e(p,Qf),e(p,We),v(Xt,We,null),e(We,Zf),e(We,un),e(un,em),e(p,tm),e(p,ze),v(Kt,ze,null),e(ze,am),e(ze,_n),e(_n,rm),e(p,nm),e(p,Be),v(Qt,Be,null),e(Be,sm),e(Be,vn),e(vn,om),h(a,Kn,m),h(a,Ve,m),e(Ve,lm),e(Ve,Ya),e(Ya,im),e(Ve,cm),h(a,Qn,m),v(Zt,a,m),h(a,Zn,m),h(a,Re,m),e(Re,fm),e(Re,bn),e(bn,mm),e(Re,hm),h(a,es,m),v(ea,a,m),h(a,ts,m),h(a,ge,m),e(ge,qe),e(qe,En),v(ta,En,null),e(ge,dm),e(ge,kn),e(kn,pm),h(a,as,m),h(a,P,m),v(aa,P,null),e(P,gm),e(P,ue),e(ue,um),e(ue,Xa),e(Xa,_m),e(ue,vm),e(ue,Ka),e(Ka,bm),e(ue,Em),e(P,km),v(Ue,P,null),e(P,Tm),e(P,He),v(ra,He,null),e(He,$m),e(He,na),e(na,Cm),e(na,Tn),e(Tn,wm),e(na,ym),e(P,Am),e(P,Ge),v(sa,Ge,null),e(Ge,Dm),e(Ge,oa),e(oa,Lm),e(oa,$n),e($n,Sm),e(oa,Om),h(a,rs,m),h(a,_e,m),e(_e,Je),e(Je,Cn),v(la,Cn,null),e(_e,Pm),e(_e,wn),e(wn,Im),h(a,ns,m),h(a,ve,m),v(ia,ve,null),e(ve,Mm),e(ve,be),e(be,xm),e(be,Qa),e(Qa,Fm),e(be,Nm),e(be,Za),e(Za,jm),e(be,Wm),ss=!0},p(a,[m]){const ca={};m&2&&(ca.$$scope={dirty:m,ctx:a}),Ue.$set(ca)},i(a){ss||(b(I.$$.fragment,a),b(lt.$$.fragment,a),b(it.$$.fragment,a),b(ft.$$.fragment,a),b(dt.$$.fragment,a),b(gt.$$.fragment,a),b(_t.$$.fragment,a),b(bt.$$.fragment,a),b(kt.$$.fragment,a),b($t.$$.fragment,a),b(wt.$$.fragment,a),b(Lt.$$.fragment,a),b(Ot.$$.fragment,a),b(Pt.$$.fragment,a),b(Mt.$$.fragment,a),b(Ft.$$.fragment,a),b(Nt.$$.fragment,a),b(Wt.$$.fragment,a),b(zt.$$.fragment,a),b(Bt.$$.fragment,a),b(Vt.$$.fragment,a),b(Rt.$$.fragment,a),b(Ut.$$.fragment,a),b(Ht.$$.fragment,a),b(Gt.$$.fragment,a),b(Jt.$$.fragment,a),b(Yt.$$.fragment,a),b(Xt.$$.fragment,a),b(Kt.$$.fragment,a),b(Qt.$$.fragment,a),b(Zt.$$.fragment,a),b(ea.$$.fragment,a),b(ta.$$.fragment,a),b(aa.$$.fragment,a),b(Ue.$$.fragment,a),b(ra.$$.fragment,a),b(sa.$$.fragment,a),b(la.$$.fragment,a),b(ia.$$.fragment,a),ss=!0)},o(a){E(I.$$.fragment,a),E(lt.$$.fragment,a),E(it.$$.fragment,a),E(ft.$$.fragment,a),E(dt.$$.fragment,a),E(gt.$$.fragment,a),E(_t.$$.fragment,a),E(bt.$$.fragment,a),E(kt.$$.fragment,a),E($t.$$.fragment,a),E(wt.$$.fragment,a),E(Lt.$$.fragment,a),E(Ot.$$.fragment,a),E(Pt.$$.fragment,a),E(Mt.$$.fragment,a),E(Ft.$$.fragment,a),E(Nt.$$.fragment,a),E(Wt.$$.fragment,a),E(zt.$$.fragment,a),E(Bt.$$.fragment,a),E(Vt.$$.fragment,a),E(Rt.$$.fragment,a),E(Ut.$$.fragment,a),E(Ht.$$.fragment,a),E(Gt.$$.fragment,a),E(Jt.$$.fragment,a),E(Yt.$$.fragment,a),E(Xt.$$.fragment,a),E(Kt.$$.fragment,a),E(Qt.$$.fragment,a),E(Zt.$$.fragment,a),E(ea.$$.fragment,a),E(ta.$$.fragment,a),E(aa.$$.fragment,a),E(Ue.$$.fragment,a),E(ra.$$.fragment,a),E(sa.$$.fragment,a),E(la.$$.fragment,a),E(ia.$$.fragment,a),ss=!1},d(a){t(w),a&&t(Ee),a&&t(S),k(I),a&&t(M),a&&t(R),a&&t(In),a&&t(N),a&&t(Mn),a&&t(ke),a&&t(xn),a&&t(y),a&&t(Fn),a&&t(D),a&&t(Nn),a&&t(ae),k(lt),a&&t(jn),a&&t(De),a&&t(Wn),a&&t(q),k(it),k(ft),a&&t(zn),a&&t(ne),k(dt),a&&t(Bn),a&&t(se),k(gt),a&&t(Vn),a&&t(oe),k(_t),a&&t(Rn),a&&t(U),k(bt),a&&t(qn),a&&t(le),k(kt),a&&t(Un),a&&t(G),k($t),k(wt),a&&t(Hn),a&&t(J),k(Lt),k(Ot),a&&t(Gn),a&&t(me),k(Pt),a&&t(Jn),a&&t(de),k(Mt),a&&t(Yn),a&&t(pe),k(Ft),a&&t(Xn),a&&t(p),k(Nt),k(Wt),k(zt),k(Bt),k(Vt),k(Rt),k(Ut),k(Ht),k(Gt),k(Jt),k(Yt),k(Xt),k(Kt),k(Qt),a&&t(Kn),a&&t(Ve),a&&t(Qn),k(Zt,a),a&&t(Zn),a&&t(Re),a&&t(es),k(ea,a),a&&t(ts),a&&t(ge),k(ta),a&&t(as),a&&t(P),k(aa),k(Ue),k(ra),k(sa),a&&t(rs),a&&t(_e),k(la),a&&t(ns),a&&t(ve),k(ia)}}}const up={local:"callbacks",sections:[{local:"transformers.integrations.CometCallback",title:"Available Callbacks"},{local:"transformers.TrainerCallback",title:"TrainerCallback"},{local:"transformers.TrainerState",title:"TrainerState"},{local:"transformers.TrainerControl",title:"TrainerControl"}],title:"Callbacks"};function _p(Pn){return hp(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class $p extends ip{constructor(w){super();cp(this,w,_p,gp,fp,{})}}export{$p as default,up as metadata};
