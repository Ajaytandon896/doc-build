import{S as Zl,i as en,s as tn,e as l,k as g,w as p,t as o,M as rn,c as n,d as r,m as f,a,x as u,h as s,b as c,F as t,g as m,y as h,q as v,o as _,B as b,v as on}from"../../chunks/vendor-6b77c823.js";import{T as sn}from"../../chunks/Tip-39098574.js";import{D as C}from"../../chunks/Docstring-abef54e3.js";import{C as It}from"../../chunks/CodeBlock-3a8b25a8.js";import{I as Ks}from"../../chunks/IconCopyLink-7a11ce68.js";function ln(pr){let y,be,O,d,A,G,Z,ee,Le,U,Y,Fe,M,L,te,re,Pe,F,Ee,P,ke,$e,T,ye,E,z,oe,se,xe,le,J,Ve,W,Ge;return{c(){y=l("p"),be=o("\u{1F917} Transformers has following logging levels:"),O=g(),d=l("ul"),A=l("li"),G=o("50: "),Z=l("code"),ee=o("transformers.logging.CRITICAL"),Le=o(" or "),U=l("code"),Y=o("transformers.logging.FATAL"),Fe=g(),M=l("li"),L=o("40: "),te=l("code"),re=o("transformers.logging.ERROR"),Pe=g(),F=l("li"),Ee=o("30: "),P=l("code"),ke=o("transformers.logging.WARNING"),$e=o(" or "),T=l("code"),ye=o("transformers.logging.WARN"),E=g(),z=l("li"),oe=o("20: "),se=l("code"),xe=o("transformers.logging.INFO"),le=g(),J=l("li"),Ve=o("10: "),W=l("code"),Ge=o("transformers.logging.DEBUG")},l(R){y=n(R,"P",{});var k=a(y);be=s(k,"\u{1F917} Transformers has following logging levels:"),k.forEach(r),O=f(R),d=n(R,"UL",{});var I=a(d);A=n(I,"LI",{});var ne=a(A);G=s(ne,"50: "),Z=n(ne,"CODE",{});var we=a(Z);ee=s(we,"transformers.logging.CRITICAL"),we.forEach(r),Le=s(ne," or "),U=n(ne,"CODE",{});var dt=a(U);Y=s(dt,"transformers.logging.FATAL"),dt.forEach(r),ne.forEach(r),Fe=f(I),M=n(I,"LI",{});var Me=a(M);L=s(Me,"40: "),te=n(Me,"CODE",{});var Re=a(te);re=s(Re,"transformers.logging.ERROR"),Re.forEach(r),Me.forEach(r),Pe=f(I),F=n(I,"LI",{});var ae=a(F);Ee=s(ae,"30: "),P=n(ae,"CODE",{});var pt=a(P);ke=s(pt,"transformers.logging.WARNING"),pt.forEach(r),$e=s(ae," or "),T=n(ae,"CODE",{});var We=a(T);ye=s(We,"transformers.logging.WARN"),We.forEach(r),ae.forEach(r),E=f(I),z=n(I,"LI",{});var B=a(z);oe=s(B,"20: "),se=n(B,"CODE",{});var Be=a(se);xe=s(Be,"transformers.logging.INFO"),Be.forEach(r),B.forEach(r),le=f(I),J=n(I,"LI",{});var $=a(J);Ve=s($,"10: "),W=n($,"CODE",{});var ut=a(W);Ge=s(ut,"transformers.logging.DEBUG"),ut.forEach(r),$.forEach(r),I.forEach(r)},m(R,k){m(R,y,k),t(y,be),m(R,O,k),m(R,d,k),t(d,A),t(A,G),t(A,Z),t(Z,ee),t(A,Le),t(A,U),t(U,Y),t(d,Fe),t(d,M),t(M,L),t(M,te),t(te,re),t(d,Pe),t(d,F),t(F,Ee),t(F,P),t(P,ke),t(F,$e),t(F,T),t(T,ye),t(d,E),t(d,z),t(z,oe),t(z,se),t(se,xe),t(d,le),t(d,J),t(J,Ve),t(J,W),t(W,Ge)},d(R){R&&r(y),R&&r(O),R&&r(d)}}}function nn(pr){let y,be,O,d,A,G,Z,ee,Le,U,Y,Fe,M,L,te,re,Pe,F,Ee,P,ke,$e,T,ye,E,z,oe,se,xe,le,J,Ve,W,Ge,R,k,I,ne,we,dt,Me,Re,ae,pt,We,B,Be,$,ut,Nt,ro,oo,Dt,so,lo,Tt,no,ao,St,io,go,ur,qe,hr,Oe,fo,Ct,mo,co,vr,je,_r,w,po,Lt,uo,ho,Ft,vo,_o,Pt,bo,Eo,kt,$o,yo,xt,wo,Ro,br,He,Er,K,Oo,ht,Ao,Io,vt,No,Do,$r,N,Ae,Vt,To,So,Gt,Co,Lo,Fo,_t,Mt,Po,ko,xo,Ie,Wt,Vo,Go,Bt,Mo,Wo,Bo,bt,qt,qo,jo,Ho,Et,jt,Uo,Yo,yr,x,zo,Ht,Jo,Ko,$t,Qo,Xo,yt,Zo,es,wr,ie,Ne,Ut,Ue,ts,Yt,rs,Rr,ge,Ye,os,ze,ss,zt,ls,ns,Or,fe,Je,as,Ke,is,Jt,gs,fs,Ar,me,Qe,ms,Xe,cs,Kt,ds,ps,Ir,ce,Ze,us,et,hs,Qt,vs,_s,Nr,de,De,Xt,tt,bs,Zt,Es,Dr,q,rt,$s,er,ys,ws,Te,Tr,pe,ot,Rs,tr,Os,Sr,j,st,As,rr,Is,Ns,or,Ds,Cr,ue,lt,Ts,sr,Ss,Lr,he,nt,Cs,lr,Ls,Fr,S,at,Fs,nr,Ps,ks,it,xs,ar,Vs,Pr,H,gt,Gs,ir,Ms,Ws,gr,Bs,kr,ve,ft,qs,fr,js,xr,_e,mt,Hs,mr,Us,Vr;return G=new Ks({}),T=new It({props:{code:`import transformers

transformers.logging.set_verbosity_info()`,highlighted:`<span class="hljs-keyword">import</span> transformers

transformers.logging.set_verbosity_info()`}}),B=new It({props:{code:"TRANSFORMERS_VERBOSITY=error ./myprogram.py",highlighted:"TRANSFORMERS_VERBOSITY=error ./myprogram.py"}}),qe=new It({props:{code:"TRANSFORMERS_NO_ADVISORY_WARNINGS=1 ./myprogram.py",highlighted:"TRANSFORMERS_NO_ADVISORY_WARNINGS=1 ./myprogram.py"}}),je=new It({props:{code:`from transformers.utils import logging

logging.set_verbosity_info()
logger = logging.get_logger(__name__)
logger.info("INFO")
logger.warning("WARN")`,highlighted:`<span class="hljs-keyword">from</span> transformers.utils <span class="hljs-keyword">import</span> logging

logging.set_verbosity_info()
logger = logging.get_logger(__name__)
logger.info(<span class="hljs-string">&quot;INFO&quot;</span>)
logger.warning(<span class="hljs-string">&quot;WARN&quot;</span>)`}}),He=new It({props:{code:`from transformers.utils import logging

if __name__ == "__main__":
    logging.set_verbosity_info()
    # leave it empy or use a string
    logger = logging.get_logger()
    logger.info("INFO")
    logger.warning("WARN")`,highlighted:`<span class="hljs-keyword">from</span> transformers.utils <span class="hljs-keyword">import</span> logging

<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:
    logging.set_verbosity_info()
    <span class="hljs-comment"># leave it empy or use a string</span>
    logger = logging.get_logger()
    logger.info(<span class="hljs-string">&quot;INFO&quot;</span>)
    logger.warning(<span class="hljs-string">&quot;WARN&quot;</span>)`}}),Ue=new Ks({}),Ye=new C({props:{name:"transformers.utils.logging.set_verbosity_error",anchor:"transformers.utils.logging.set_verbosity_error",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/utils/logging.py#L184"}}),Je=new C({props:{name:"transformers.utils.logging.set_verbosity_warning",anchor:"transformers.utils.logging.set_verbosity_warning",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/utils/logging.py#L174"}}),Qe=new C({props:{name:"transformers.utils.logging.set_verbosity_info",anchor:"transformers.utils.logging.set_verbosity_info",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/utils/logging.py#L169"}}),Ze=new C({props:{name:"transformers.utils.logging.set_verbosity_debug",anchor:"transformers.utils.logging.set_verbosity_debug",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/utils/logging.py#L179"}}),tt=new Ks({}),rt=new C({props:{name:"transformers.utils.logging.get_verbosity",anchor:"transformers.utils.logging.get_verbosity",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/utils/logging.py#L127",returnDescription:`
<p>The logging level.</p>
`,returnType:`
<p><code>int</code></p>
`}}),Te=new sn({props:{$$slots:{default:[ln]},$$scope:{ctx:pr}}}),ot=new C({props:{name:"transformers.utils.logging.set_verbosity",anchor:"transformers.utils.logging.set_verbosity",parameters:[{name:"verbosity",val:": int"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/utils/logging.py#L150",parametersDescription:[{anchor:"transformers.utils.logging.set_verbosity.verbosity",description:`<strong>verbosity</strong> (<code>int</code>) &#x2014;
Logging level, e.g., one of:</p>
<ul>
<li><code>transformers.logging.CRITICAL</code> or <code>transformers.logging.FATAL</code></li>
<li><code>transformers.logging.ERROR</code></li>
<li><code>transformers.logging.WARNING</code> or <code>transformers.logging.WARN</code></li>
<li><code>transformers.logging.INFO</code></li>
<li><code>transformers.logging.DEBUG</code></li>
</ul>`,name:"verbosity"}]}}),st=new C({props:{name:"transformers.utils.logging.get_logger",anchor:"transformers.utils.logging.get_logger",parameters:[{name:"name",val:": typing.Optional[str] = None"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/utils/logging.py#L113"}}),lt=new C({props:{name:"transformers.utils.logging.enable_default_handler",anchor:"transformers.utils.logging.enable_default_handler",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/utils/logging.py#L198"}}),nt=new C({props:{name:"transformers.utils.logging.disable_default_handler",anchor:"transformers.utils.logging.disable_default_handler",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/utils/logging.py#L189"}}),at=new C({props:{name:"transformers.utils.logging.enable_explicit_format",anchor:"transformers.utils.logging.enable_explicit_format",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/utils/logging.py#L244"}}),it=new It({props:{code:"    [LEVELNAME|FILENAME|LINE NUMBER] TIME >> MESSAGE",highlighted:'    [LEVELNAME|<span class="hljs-type">FILENAME</span>|<span class="hljs-type">LINE</span> NUMBER] TIME &gt;&gt; MESSAGE'}}),gt=new C({props:{name:"transformers.utils.logging.reset_format",anchor:"transformers.utils.logging.reset_format",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/utils/logging.py#L259"}}),ft=new C({props:{name:"transformers.utils.logging.enable_progress_bar",anchor:"transformers.utils.logging.enable_progress_bar",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/utils/logging.py#L335"}}),mt=new C({props:{name:"transformers.utils.logging.disable_progress_bar",anchor:"transformers.utils.logging.disable_progress_bar",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/utils/logging.py#L341"}}),{c(){y=l("meta"),be=g(),O=l("h1"),d=l("a"),A=l("span"),p(G.$$.fragment),Z=g(),ee=l("span"),Le=o("Logging"),U=g(),Y=l("p"),Fe=o("\u{1F917} Transformers has a centralized logging system, so that you can setup the verbosity of the library easily."),M=g(),L=l("p"),te=o("Currently the default verbosity of the library is "),re=l("code"),Pe=o("WARNING"),F=o("."),Ee=g(),P=l("p"),ke=o(`To change the level of verbosity, just use one of the direct setters. For instance, here is how to change the verbosity
to the INFO level.`),$e=g(),p(T.$$.fragment),ye=g(),E=l("p"),z=o("You can also use the environment variable "),oe=l("code"),se=o("TRANSFORMERS_VERBOSITY"),xe=o(` to override the default verbosity. You can set it
to one of the following: `),le=l("code"),J=o("debug"),Ve=o(", "),W=l("code"),Ge=o("info"),R=o(", "),k=l("code"),I=o("warning"),ne=o(", "),we=l("code"),dt=o("error"),Me=o(", "),Re=l("code"),ae=o("critical"),pt=o(". For example:"),We=g(),p(B.$$.fragment),Be=g(),$=l("p"),ut=o("Additionally, some "),Nt=l("code"),ro=o("warnings"),oo=o(` can be disabled by setting the environment variable
`),Dt=l("code"),so=o("TRANSFORMERS_NO_ADVISORY_WARNINGS"),lo=o(" to a true value, like "),Tt=l("em"),no=o("1"),ao=o(`. This will disable any warning that is logged using
`),St=l("code"),io=o("logger.warning_advice()"),go=o(" For example:"),ur=g(),p(qe.$$.fragment),hr=g(),Oe=l("p"),fo=o("Here is an example of how to use "),Ct=l("code"),mo=o("logging"),co=o(" in a module:"),vr=g(),p(je.$$.fragment),_r=g(),w=l("p"),po=o("Above, a "),Lt=l("code"),uo=o("logger"),ho=o(" instance is created from "),Ft=l("code"),vo=o("logging.get_logger(__name__)"),_o=o(". If you want to use "),Pt=l("code"),bo=o("logging"),Eo=o(" in a script, you shouldn\u2019t pass "),kt=l("code"),$o=o("__name__"),yo=o(" to "),xt=l("code"),wo=o("logging.get_logger"),Ro=o(". For example:"),br=g(),p(He.$$.fragment),Er=g(),K=l("p"),Oo=o(`All the methods of this logging module are documented below, the main ones are
`),ht=l("a"),Ao=o("logging.get_verbosity()"),Io=o(` to get the current level of verbosity in the logger and
`),vt=l("a"),No=o("logging.set_verbosity()"),Do=o(` to set the verbosity to the level of your choice. In order (from the least
verbose to the most verbose), those levels (with their corresponding int values in parenthesis) are:`),$r=g(),N=l("ul"),Ae=l("li"),Vt=l("code"),To=o("transformers.logging.CRITICAL"),So=o(" or "),Gt=l("code"),Co=o("transformers.logging.FATAL"),Lo=o(` (int value, 50): only report the most
critical errors.`),Fo=g(),_t=l("li"),Mt=l("code"),Po=o("transformers.logging.ERROR"),ko=o(" (int value, 40): only report errors."),xo=g(),Ie=l("li"),Wt=l("code"),Vo=o("transformers.logging.WARNING"),Go=o(" or "),Bt=l("code"),Mo=o("transformers.logging.WARN"),Wo=o(` (int value, 30): only reports error and
warnings. This the default level used by the library.`),Bo=g(),bt=l("li"),qt=l("code"),qo=o("transformers.logging.INFO"),jo=o(" (int value, 20): reports error, warnings and basic information."),Ho=g(),Et=l("li"),jt=l("code"),Uo=o("transformers.logging.DEBUG"),Yo=o(" (int value, 10): report all information."),yr=g(),x=l("p"),zo=o("By default, "),Ht=l("code"),Jo=o("tqdm"),Ko=o(" progress bars will be displayed during model download. "),$t=l("a"),Qo=o("logging.disable_progress_bar()"),Xo=o(" and "),yt=l("a"),Zo=o("logging.enable_progress_bar()"),es=o(" can be used to suppress or unsuppress this behavior."),wr=g(),ie=l("h2"),Ne=l("a"),Ut=l("span"),p(Ue.$$.fragment),ts=g(),Yt=l("span"),rs=o("Base setters"),Rr=g(),ge=l("div"),p(Ye.$$.fragment),os=g(),ze=l("p"),ss=o("Set the verbosity to the "),zt=l("code"),ls=o("ERROR"),ns=o(" level."),Or=g(),fe=l("div"),p(Je.$$.fragment),as=g(),Ke=l("p"),is=o("Set the verbosity to the "),Jt=l("code"),gs=o("WARNING"),fs=o(" level."),Ar=g(),me=l("div"),p(Qe.$$.fragment),ms=g(),Xe=l("p"),cs=o("Set the verbosity to the "),Kt=l("code"),ds=o("INFO"),ps=o(" level."),Ir=g(),ce=l("div"),p(Ze.$$.fragment),us=g(),et=l("p"),hs=o("Set the verbosity to the "),Qt=l("code"),vs=o("DEBUG"),_s=o(" level."),Nr=g(),de=l("h2"),De=l("a"),Xt=l("span"),p(tt.$$.fragment),bs=g(),Zt=l("span"),Es=o("Other functions"),Dr=g(),q=l("div"),p(rt.$$.fragment),$s=g(),er=l("p"),ys=o("Return the current level for the \u{1F917} Transformers\u2019s root logger as an int."),ws=g(),p(Te.$$.fragment),Tr=g(),pe=l("div"),p(ot.$$.fragment),Rs=g(),tr=l("p"),Os=o("Set the verbosity level for the \u{1F917} Transformers\u2019s root logger."),Sr=g(),j=l("div"),p(st.$$.fragment),As=g(),rr=l("p"),Is=o("Return a logger with the specified name."),Ns=g(),or=l("p"),Ds=o("This function is not supposed to be directly accessed unless you are writing a custom transformers module."),Cr=g(),ue=l("div"),p(lt.$$.fragment),Ts=g(),sr=l("p"),Ss=o("Enable the default handler of the HuggingFace Transformers\u2019s root logger."),Lr=g(),he=l("div"),p(nt.$$.fragment),Cs=g(),lr=l("p"),Ls=o("Disable the default handler of the HuggingFace Transformers\u2019s root logger."),Fr=g(),S=l("div"),p(at.$$.fragment),Fs=g(),nr=l("p"),Ps=o("Enable explicit formatting for every HuggingFace Transformers\u2019s logger. The explicit formatter is as follows:"),ks=g(),p(it.$$.fragment),xs=g(),ar=l("p"),Vs=o("All handlers currently bound to the root logger are affected by this method."),Pr=g(),H=l("div"),p(gt.$$.fragment),Gs=g(),ir=l("p"),Ms=o("Resets the formatting for HuggingFace Transformers\u2019s loggers."),Ws=g(),gr=l("p"),Bs=o("All handlers currently bound to the root logger are affected by this method."),kr=g(),ve=l("div"),p(ft.$$.fragment),qs=g(),fr=l("p"),js=o("Enable tqdm progress bar."),xr=g(),_e=l("div"),p(mt.$$.fragment),Hs=g(),mr=l("p"),Us=o("Enable tqdm progress bar."),this.h()},l(e){const i=rn('[data-svelte="svelte-1phssyn"]',document.head);y=n(i,"META",{name:!0,content:!0}),i.forEach(r),be=f(e),O=n(e,"H1",{class:!0});var ct=a(O);d=n(ct,"A",{id:!0,class:!0,href:!0});var Qs=a(d);A=n(Qs,"SPAN",{});var Xs=a(A);u(G.$$.fragment,Xs),Xs.forEach(r),Qs.forEach(r),Z=f(ct),ee=n(ct,"SPAN",{});var Zs=a(ee);Le=s(Zs,"Logging"),Zs.forEach(r),ct.forEach(r),U=f(e),Y=n(e,"P",{});var el=a(Y);Fe=s(el,"\u{1F917} Transformers has a centralized logging system, so that you can setup the verbosity of the library easily."),el.forEach(r),M=f(e),L=n(e,"P",{});var Gr=a(L);te=s(Gr,"Currently the default verbosity of the library is "),re=n(Gr,"CODE",{});var tl=a(re);Pe=s(tl,"WARNING"),tl.forEach(r),F=s(Gr,"."),Gr.forEach(r),Ee=f(e),P=n(e,"P",{});var rl=a(P);ke=s(rl,`To change the level of verbosity, just use one of the direct setters. For instance, here is how to change the verbosity
to the INFO level.`),rl.forEach(r),$e=f(e),u(T.$$.fragment,e),ye=f(e),E=n(e,"P",{});var D=a(E);z=s(D,"You can also use the environment variable "),oe=n(D,"CODE",{});var ol=a(oe);se=s(ol,"TRANSFORMERS_VERBOSITY"),ol.forEach(r),xe=s(D,` to override the default verbosity. You can set it
to one of the following: `),le=n(D,"CODE",{});var sl=a(le);J=s(sl,"debug"),sl.forEach(r),Ve=s(D,", "),W=n(D,"CODE",{});var ll=a(W);Ge=s(ll,"info"),ll.forEach(r),R=s(D,", "),k=n(D,"CODE",{});var nl=a(k);I=s(nl,"warning"),nl.forEach(r),ne=s(D,", "),we=n(D,"CODE",{});var al=a(we);dt=s(al,"error"),al.forEach(r),Me=s(D,", "),Re=n(D,"CODE",{});var il=a(Re);ae=s(il,"critical"),il.forEach(r),pt=s(D,". For example:"),D.forEach(r),We=f(e),u(B.$$.fragment,e),Be=f(e),$=n(e,"P",{});var Q=a($);ut=s(Q,"Additionally, some "),Nt=n(Q,"CODE",{});var gl=a(Nt);ro=s(gl,"warnings"),gl.forEach(r),oo=s(Q,` can be disabled by setting the environment variable
`),Dt=n(Q,"CODE",{});var fl=a(Dt);so=s(fl,"TRANSFORMERS_NO_ADVISORY_WARNINGS"),fl.forEach(r),lo=s(Q," to a true value, like "),Tt=n(Q,"EM",{});var ml=a(Tt);no=s(ml,"1"),ml.forEach(r),ao=s(Q,`. This will disable any warning that is logged using
`),St=n(Q,"CODE",{});var cl=a(St);io=s(cl,"logger.warning_advice()"),cl.forEach(r),go=s(Q," For example:"),Q.forEach(r),ur=f(e),u(qe.$$.fragment,e),hr=f(e),Oe=n(e,"P",{});var Mr=a(Oe);fo=s(Mr,"Here is an example of how to use "),Ct=n(Mr,"CODE",{});var dl=a(Ct);mo=s(dl,"logging"),dl.forEach(r),co=s(Mr," in a module:"),Mr.forEach(r),vr=f(e),u(je.$$.fragment,e),_r=f(e),w=n(e,"P",{});var V=a(w);po=s(V,"Above, a "),Lt=n(V,"CODE",{});var pl=a(Lt);uo=s(pl,"logger"),pl.forEach(r),ho=s(V," instance is created from "),Ft=n(V,"CODE",{});var ul=a(Ft);vo=s(ul,"logging.get_logger(__name__)"),ul.forEach(r),_o=s(V,". If you want to use "),Pt=n(V,"CODE",{});var hl=a(Pt);bo=s(hl,"logging"),hl.forEach(r),Eo=s(V," in a script, you shouldn\u2019t pass "),kt=n(V,"CODE",{});var vl=a(kt);$o=s(vl,"__name__"),vl.forEach(r),yo=s(V," to "),xt=n(V,"CODE",{});var _l=a(xt);wo=s(_l,"logging.get_logger"),_l.forEach(r),Ro=s(V,". For example:"),V.forEach(r),br=f(e),u(He.$$.fragment,e),Er=f(e),K=n(e,"P",{});var wt=a(K);Oo=s(wt,`All the methods of this logging module are documented below, the main ones are
`),ht=n(wt,"A",{href:!0});var bl=a(ht);Ao=s(bl,"logging.get_verbosity()"),bl.forEach(r),Io=s(wt,` to get the current level of verbosity in the logger and
`),vt=n(wt,"A",{href:!0});var El=a(vt);No=s(El,"logging.set_verbosity()"),El.forEach(r),Do=s(wt,` to set the verbosity to the level of your choice. In order (from the least
verbose to the most verbose), those levels (with their corresponding int values in parenthesis) are:`),wt.forEach(r),$r=f(e),N=n(e,"UL",{});var X=a(N);Ae=n(X,"LI",{});var cr=a(Ae);Vt=n(cr,"CODE",{});var $l=a(Vt);To=s($l,"transformers.logging.CRITICAL"),$l.forEach(r),So=s(cr," or "),Gt=n(cr,"CODE",{});var yl=a(Gt);Co=s(yl,"transformers.logging.FATAL"),yl.forEach(r),Lo=s(cr,` (int value, 50): only report the most
critical errors.`),cr.forEach(r),Fo=f(X),_t=n(X,"LI",{});var Ys=a(_t);Mt=n(Ys,"CODE",{});var wl=a(Mt);Po=s(wl,"transformers.logging.ERROR"),wl.forEach(r),ko=s(Ys," (int value, 40): only report errors."),Ys.forEach(r),xo=f(X),Ie=n(X,"LI",{});var dr=a(Ie);Wt=n(dr,"CODE",{});var Rl=a(Wt);Vo=s(Rl,"transformers.logging.WARNING"),Rl.forEach(r),Go=s(dr," or "),Bt=n(dr,"CODE",{});var Ol=a(Bt);Mo=s(Ol,"transformers.logging.WARN"),Ol.forEach(r),Wo=s(dr,` (int value, 30): only reports error and
warnings. This the default level used by the library.`),dr.forEach(r),Bo=f(X),bt=n(X,"LI",{});var zs=a(bt);qt=n(zs,"CODE",{});var Al=a(qt);qo=s(Al,"transformers.logging.INFO"),Al.forEach(r),jo=s(zs," (int value, 20): reports error, warnings and basic information."),zs.forEach(r),Ho=f(X),Et=n(X,"LI",{});var Js=a(Et);jt=n(Js,"CODE",{});var Il=a(jt);Uo=s(Il,"transformers.logging.DEBUG"),Il.forEach(r),Yo=s(Js," (int value, 10): report all information."),Js.forEach(r),X.forEach(r),yr=f(e),x=n(e,"P",{});var Se=a(x);zo=s(Se,"By default, "),Ht=n(Se,"CODE",{});var Nl=a(Ht);Jo=s(Nl,"tqdm"),Nl.forEach(r),Ko=s(Se," progress bars will be displayed during model download. "),$t=n(Se,"A",{href:!0});var Dl=a($t);Qo=s(Dl,"logging.disable_progress_bar()"),Dl.forEach(r),Xo=s(Se," and "),yt=n(Se,"A",{href:!0});var Tl=a(yt);Zo=s(Tl,"logging.enable_progress_bar()"),Tl.forEach(r),es=s(Se," can be used to suppress or unsuppress this behavior."),Se.forEach(r),wr=f(e),ie=n(e,"H2",{class:!0});var Wr=a(ie);Ne=n(Wr,"A",{id:!0,class:!0,href:!0});var Sl=a(Ne);Ut=n(Sl,"SPAN",{});var Cl=a(Ut);u(Ue.$$.fragment,Cl),Cl.forEach(r),Sl.forEach(r),ts=f(Wr),Yt=n(Wr,"SPAN",{});var Ll=a(Yt);rs=s(Ll,"Base setters"),Ll.forEach(r),Wr.forEach(r),Rr=f(e),ge=n(e,"DIV",{class:!0});var Br=a(ge);u(Ye.$$.fragment,Br),os=f(Br),ze=n(Br,"P",{});var qr=a(ze);ss=s(qr,"Set the verbosity to the "),zt=n(qr,"CODE",{});var Fl=a(zt);ls=s(Fl,"ERROR"),Fl.forEach(r),ns=s(qr," level."),qr.forEach(r),Br.forEach(r),Or=f(e),fe=n(e,"DIV",{class:!0});var jr=a(fe);u(Je.$$.fragment,jr),as=f(jr),Ke=n(jr,"P",{});var Hr=a(Ke);is=s(Hr,"Set the verbosity to the "),Jt=n(Hr,"CODE",{});var Pl=a(Jt);gs=s(Pl,"WARNING"),Pl.forEach(r),fs=s(Hr," level."),Hr.forEach(r),jr.forEach(r),Ar=f(e),me=n(e,"DIV",{class:!0});var Ur=a(me);u(Qe.$$.fragment,Ur),ms=f(Ur),Xe=n(Ur,"P",{});var Yr=a(Xe);cs=s(Yr,"Set the verbosity to the "),Kt=n(Yr,"CODE",{});var kl=a(Kt);ds=s(kl,"INFO"),kl.forEach(r),ps=s(Yr," level."),Yr.forEach(r),Ur.forEach(r),Ir=f(e),ce=n(e,"DIV",{class:!0});var zr=a(ce);u(Ze.$$.fragment,zr),us=f(zr),et=n(zr,"P",{});var Jr=a(et);hs=s(Jr,"Set the verbosity to the "),Qt=n(Jr,"CODE",{});var xl=a(Qt);vs=s(xl,"DEBUG"),xl.forEach(r),_s=s(Jr," level."),Jr.forEach(r),zr.forEach(r),Nr=f(e),de=n(e,"H2",{class:!0});var Kr=a(de);De=n(Kr,"A",{id:!0,class:!0,href:!0});var Vl=a(De);Xt=n(Vl,"SPAN",{});var Gl=a(Xt);u(tt.$$.fragment,Gl),Gl.forEach(r),Vl.forEach(r),bs=f(Kr),Zt=n(Kr,"SPAN",{});var Ml=a(Zt);Es=s(Ml,"Other functions"),Ml.forEach(r),Kr.forEach(r),Dr=f(e),q=n(e,"DIV",{class:!0});var Rt=a(q);u(rt.$$.fragment,Rt),$s=f(Rt),er=n(Rt,"P",{});var Wl=a(er);ys=s(Wl,"Return the current level for the \u{1F917} Transformers\u2019s root logger as an int."),Wl.forEach(r),ws=f(Rt),u(Te.$$.fragment,Rt),Rt.forEach(r),Tr=f(e),pe=n(e,"DIV",{class:!0});var Qr=a(pe);u(ot.$$.fragment,Qr),Rs=f(Qr),tr=n(Qr,"P",{});var Bl=a(tr);Os=s(Bl,"Set the verbosity level for the \u{1F917} Transformers\u2019s root logger."),Bl.forEach(r),Qr.forEach(r),Sr=f(e),j=n(e,"DIV",{class:!0});var Ot=a(j);u(st.$$.fragment,Ot),As=f(Ot),rr=n(Ot,"P",{});var ql=a(rr);Is=s(ql,"Return a logger with the specified name."),ql.forEach(r),Ns=f(Ot),or=n(Ot,"P",{});var jl=a(or);Ds=s(jl,"This function is not supposed to be directly accessed unless you are writing a custom transformers module."),jl.forEach(r),Ot.forEach(r),Cr=f(e),ue=n(e,"DIV",{class:!0});var Xr=a(ue);u(lt.$$.fragment,Xr),Ts=f(Xr),sr=n(Xr,"P",{});var Hl=a(sr);Ss=s(Hl,"Enable the default handler of the HuggingFace Transformers\u2019s root logger."),Hl.forEach(r),Xr.forEach(r),Lr=f(e),he=n(e,"DIV",{class:!0});var Zr=a(he);u(nt.$$.fragment,Zr),Cs=f(Zr),lr=n(Zr,"P",{});var Ul=a(lr);Ls=s(Ul,"Disable the default handler of the HuggingFace Transformers\u2019s root logger."),Ul.forEach(r),Zr.forEach(r),Fr=f(e),S=n(e,"DIV",{class:!0});var Ce=a(S);u(at.$$.fragment,Ce),Fs=f(Ce),nr=n(Ce,"P",{});var Yl=a(nr);Ps=s(Yl,"Enable explicit formatting for every HuggingFace Transformers\u2019s logger. The explicit formatter is as follows:"),Yl.forEach(r),ks=f(Ce),u(it.$$.fragment,Ce),xs=f(Ce),ar=n(Ce,"P",{});var zl=a(ar);Vs=s(zl,"All handlers currently bound to the root logger are affected by this method."),zl.forEach(r),Ce.forEach(r),Pr=f(e),H=n(e,"DIV",{class:!0});var At=a(H);u(gt.$$.fragment,At),Gs=f(At),ir=n(At,"P",{});var Jl=a(ir);Ms=s(Jl,"Resets the formatting for HuggingFace Transformers\u2019s loggers."),Jl.forEach(r),Ws=f(At),gr=n(At,"P",{});var Kl=a(gr);Bs=s(Kl,"All handlers currently bound to the root logger are affected by this method."),Kl.forEach(r),At.forEach(r),kr=f(e),ve=n(e,"DIV",{class:!0});var eo=a(ve);u(ft.$$.fragment,eo),qs=f(eo),fr=n(eo,"P",{});var Ql=a(fr);js=s(Ql,"Enable tqdm progress bar."),Ql.forEach(r),eo.forEach(r),xr=f(e),_e=n(e,"DIV",{class:!0});var to=a(_e);u(mt.$$.fragment,to),Hs=f(to),mr=n(to,"P",{});var Xl=a(mr);Us=s(Xl,"Enable tqdm progress bar."),Xl.forEach(r),to.forEach(r),this.h()},h(){c(y,"name","hf:doc:metadata"),c(y,"content",JSON.stringify(an)),c(d,"id","logging"),c(d,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(d,"href","#logging"),c(O,"class","relative group"),c(ht,"href","/docs/transformers/main/en/main_classes/logging#transformers.utils.logging.get_verbosity"),c(vt,"href","/docs/transformers/main/en/main_classes/logging#transformers.utils.logging.set_verbosity"),c($t,"href","/docs/transformers/main/en/main_classes/logging#transformers.utils.logging.disable_progress_bar"),c(yt,"href","/docs/transformers/main/en/main_classes/logging#transformers.utils.logging.enable_progress_bar"),c(Ne,"id","transformers.utils.logging.set_verbosity_error"),c(Ne,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Ne,"href","#transformers.utils.logging.set_verbosity_error"),c(ie,"class","relative group"),c(ge,"class","docstring"),c(fe,"class","docstring"),c(me,"class","docstring"),c(ce,"class","docstring"),c(De,"id","transformers.utils.logging.get_verbosity"),c(De,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(De,"href","#transformers.utils.logging.get_verbosity"),c(de,"class","relative group"),c(q,"class","docstring"),c(pe,"class","docstring"),c(j,"class","docstring"),c(ue,"class","docstring"),c(he,"class","docstring"),c(S,"class","docstring"),c(H,"class","docstring"),c(ve,"class","docstring"),c(_e,"class","docstring")},m(e,i){t(document.head,y),m(e,be,i),m(e,O,i),t(O,d),t(d,A),h(G,A,null),t(O,Z),t(O,ee),t(ee,Le),m(e,U,i),m(e,Y,i),t(Y,Fe),m(e,M,i),m(e,L,i),t(L,te),t(L,re),t(re,Pe),t(L,F),m(e,Ee,i),m(e,P,i),t(P,ke),m(e,$e,i),h(T,e,i),m(e,ye,i),m(e,E,i),t(E,z),t(E,oe),t(oe,se),t(E,xe),t(E,le),t(le,J),t(E,Ve),t(E,W),t(W,Ge),t(E,R),t(E,k),t(k,I),t(E,ne),t(E,we),t(we,dt),t(E,Me),t(E,Re),t(Re,ae),t(E,pt),m(e,We,i),h(B,e,i),m(e,Be,i),m(e,$,i),t($,ut),t($,Nt),t(Nt,ro),t($,oo),t($,Dt),t(Dt,so),t($,lo),t($,Tt),t(Tt,no),t($,ao),t($,St),t(St,io),t($,go),m(e,ur,i),h(qe,e,i),m(e,hr,i),m(e,Oe,i),t(Oe,fo),t(Oe,Ct),t(Ct,mo),t(Oe,co),m(e,vr,i),h(je,e,i),m(e,_r,i),m(e,w,i),t(w,po),t(w,Lt),t(Lt,uo),t(w,ho),t(w,Ft),t(Ft,vo),t(w,_o),t(w,Pt),t(Pt,bo),t(w,Eo),t(w,kt),t(kt,$o),t(w,yo),t(w,xt),t(xt,wo),t(w,Ro),m(e,br,i),h(He,e,i),m(e,Er,i),m(e,K,i),t(K,Oo),t(K,ht),t(ht,Ao),t(K,Io),t(K,vt),t(vt,No),t(K,Do),m(e,$r,i),m(e,N,i),t(N,Ae),t(Ae,Vt),t(Vt,To),t(Ae,So),t(Ae,Gt),t(Gt,Co),t(Ae,Lo),t(N,Fo),t(N,_t),t(_t,Mt),t(Mt,Po),t(_t,ko),t(N,xo),t(N,Ie),t(Ie,Wt),t(Wt,Vo),t(Ie,Go),t(Ie,Bt),t(Bt,Mo),t(Ie,Wo),t(N,Bo),t(N,bt),t(bt,qt),t(qt,qo),t(bt,jo),t(N,Ho),t(N,Et),t(Et,jt),t(jt,Uo),t(Et,Yo),m(e,yr,i),m(e,x,i),t(x,zo),t(x,Ht),t(Ht,Jo),t(x,Ko),t(x,$t),t($t,Qo),t(x,Xo),t(x,yt),t(yt,Zo),t(x,es),m(e,wr,i),m(e,ie,i),t(ie,Ne),t(Ne,Ut),h(Ue,Ut,null),t(ie,ts),t(ie,Yt),t(Yt,rs),m(e,Rr,i),m(e,ge,i),h(Ye,ge,null),t(ge,os),t(ge,ze),t(ze,ss),t(ze,zt),t(zt,ls),t(ze,ns),m(e,Or,i),m(e,fe,i),h(Je,fe,null),t(fe,as),t(fe,Ke),t(Ke,is),t(Ke,Jt),t(Jt,gs),t(Ke,fs),m(e,Ar,i),m(e,me,i),h(Qe,me,null),t(me,ms),t(me,Xe),t(Xe,cs),t(Xe,Kt),t(Kt,ds),t(Xe,ps),m(e,Ir,i),m(e,ce,i),h(Ze,ce,null),t(ce,us),t(ce,et),t(et,hs),t(et,Qt),t(Qt,vs),t(et,_s),m(e,Nr,i),m(e,de,i),t(de,De),t(De,Xt),h(tt,Xt,null),t(de,bs),t(de,Zt),t(Zt,Es),m(e,Dr,i),m(e,q,i),h(rt,q,null),t(q,$s),t(q,er),t(er,ys),t(q,ws),h(Te,q,null),m(e,Tr,i),m(e,pe,i),h(ot,pe,null),t(pe,Rs),t(pe,tr),t(tr,Os),m(e,Sr,i),m(e,j,i),h(st,j,null),t(j,As),t(j,rr),t(rr,Is),t(j,Ns),t(j,or),t(or,Ds),m(e,Cr,i),m(e,ue,i),h(lt,ue,null),t(ue,Ts),t(ue,sr),t(sr,Ss),m(e,Lr,i),m(e,he,i),h(nt,he,null),t(he,Cs),t(he,lr),t(lr,Ls),m(e,Fr,i),m(e,S,i),h(at,S,null),t(S,Fs),t(S,nr),t(nr,Ps),t(S,ks),h(it,S,null),t(S,xs),t(S,ar),t(ar,Vs),m(e,Pr,i),m(e,H,i),h(gt,H,null),t(H,Gs),t(H,ir),t(ir,Ms),t(H,Ws),t(H,gr),t(gr,Bs),m(e,kr,i),m(e,ve,i),h(ft,ve,null),t(ve,qs),t(ve,fr),t(fr,js),m(e,xr,i),m(e,_e,i),h(mt,_e,null),t(_e,Hs),t(_e,mr),t(mr,Us),Vr=!0},p(e,[i]){const ct={};i&2&&(ct.$$scope={dirty:i,ctx:e}),Te.$set(ct)},i(e){Vr||(v(G.$$.fragment,e),v(T.$$.fragment,e),v(B.$$.fragment,e),v(qe.$$.fragment,e),v(je.$$.fragment,e),v(He.$$.fragment,e),v(Ue.$$.fragment,e),v(Ye.$$.fragment,e),v(Je.$$.fragment,e),v(Qe.$$.fragment,e),v(Ze.$$.fragment,e),v(tt.$$.fragment,e),v(rt.$$.fragment,e),v(Te.$$.fragment,e),v(ot.$$.fragment,e),v(st.$$.fragment,e),v(lt.$$.fragment,e),v(nt.$$.fragment,e),v(at.$$.fragment,e),v(it.$$.fragment,e),v(gt.$$.fragment,e),v(ft.$$.fragment,e),v(mt.$$.fragment,e),Vr=!0)},o(e){_(G.$$.fragment,e),_(T.$$.fragment,e),_(B.$$.fragment,e),_(qe.$$.fragment,e),_(je.$$.fragment,e),_(He.$$.fragment,e),_(Ue.$$.fragment,e),_(Ye.$$.fragment,e),_(Je.$$.fragment,e),_(Qe.$$.fragment,e),_(Ze.$$.fragment,e),_(tt.$$.fragment,e),_(rt.$$.fragment,e),_(Te.$$.fragment,e),_(ot.$$.fragment,e),_(st.$$.fragment,e),_(lt.$$.fragment,e),_(nt.$$.fragment,e),_(at.$$.fragment,e),_(it.$$.fragment,e),_(gt.$$.fragment,e),_(ft.$$.fragment,e),_(mt.$$.fragment,e),Vr=!1},d(e){r(y),e&&r(be),e&&r(O),b(G),e&&r(U),e&&r(Y),e&&r(M),e&&r(L),e&&r(Ee),e&&r(P),e&&r($e),b(T,e),e&&r(ye),e&&r(E),e&&r(We),b(B,e),e&&r(Be),e&&r($),e&&r(ur),b(qe,e),e&&r(hr),e&&r(Oe),e&&r(vr),b(je,e),e&&r(_r),e&&r(w),e&&r(br),b(He,e),e&&r(Er),e&&r(K),e&&r($r),e&&r(N),e&&r(yr),e&&r(x),e&&r(wr),e&&r(ie),b(Ue),e&&r(Rr),e&&r(ge),b(Ye),e&&r(Or),e&&r(fe),b(Je),e&&r(Ar),e&&r(me),b(Qe),e&&r(Ir),e&&r(ce),b(Ze),e&&r(Nr),e&&r(de),b(tt),e&&r(Dr),e&&r(q),b(rt),b(Te),e&&r(Tr),e&&r(pe),b(ot),e&&r(Sr),e&&r(j),b(st),e&&r(Cr),e&&r(ue),b(lt),e&&r(Lr),e&&r(he),b(nt),e&&r(Fr),e&&r(S),b(at),b(it),e&&r(Pr),e&&r(H),b(gt),e&&r(kr),e&&r(ve),b(ft),e&&r(xr),e&&r(_e),b(mt)}}}const an={local:"logging",sections:[{local:"transformers.utils.logging.set_verbosity_error",title:"Base setters"},{local:"transformers.utils.logging.get_verbosity",title:"Other functions"}],title:"Logging"};function gn(pr){return on(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class un extends Zl{constructor(y){super();en(this,y,gn,nn,tn,{})}}export{un as default,an as metadata};
