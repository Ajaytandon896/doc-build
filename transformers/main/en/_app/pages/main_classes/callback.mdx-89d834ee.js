import{S as ip,i as cp,s as dp,e as o,k as c,w as b,t as r,M as mp,c as s,d as t,m as d,a as l,x as u,h as n,b as i,F as e,g as f,y as _,q as v,o as E,B as k,v as fp}from"../../chunks/vendor-6b77c823.js";import{T as hp}from"../../chunks/Tip-39098574.js";import{D as $}from"../../chunks/Docstring-17b815d9.js";import{C as Bm}from"../../chunks/CodeBlock-3a8b25a8.js";import{I as xn}from"../../chunks/IconCopyLink-7a11ce68.js";function pp(On){let w,Ee,S,F,Z,P,tt,ee;return{c(){w=o("p"),Ee=r(`In all this class, one step is to be understood as one update step. When using gradient accumulation, one update
step may require several forward and backward passes: if you use `),S=o("code"),F=r("gradient_accumulation_steps=n"),Z=r(`, then one update
step requires going through `),P=o("em"),tt=r("n"),ee=r(" batches.")},l(te){w=s(te,"P",{});var I=l(w);Ee=n(I,`In all this class, one step is to be understood as one update step. When using gradient accumulation, one update
step may require several forward and backward passes: if you use `),S=s(I,"CODE",{});var R=l(S);F=n(R,"gradient_accumulation_steps=n"),R.forEach(t),Z=n(I,`, then one update
step requires going through `),P=s(I,"EM",{});var ma=l(P);tt=n(ma,"n"),ma.forEach(t),ee=n(I," batches."),I.forEach(t)},m(te,I){f(te,w,I),e(w,Ee),e(w,S),e(S,F),e(w,Z),e(w,P),e(P,tt),e(w,ee)},d(te){te&&t(w)}}}function gp(On){let w,Ee,S,F,Z,P,tt,ee,te,I,R,ma,fa,Yo,Xo,Pn,N,Ko,ha,Qo,Zo,pa,es,ts,ga,as,rs,In,ke,ns,ba,os,ss,Mn,y,ua,_a,ls,is,cs,X,va,ds,ms,Ea,fs,hs,ka,ps,gs,bs,Ta,$a,us,_s,vs,Te,Ca,Es,ks,at,Ts,$s,Cs,$e,wa,ws,ys,rt,As,Ds,Ls,Ce,ya,Ss,xs,nt,Os,Ps,Is,we,Aa,Ms,Fs,ot,Ns,js,Ws,ye,Da,zs,Bs,st,Vs,Rs,Fn,D,qs,La,Us,Hs,Sa,Gs,Js,xa,Ys,Xs,Oa,Ks,Qs,Pa,Zs,el,Nn,ae,Ae,mr,lt,tl,fr,al,jn,De,rl,Ia,nl,ol,Wn,q,it,sl,re,ll,Ma,il,cl,ct,dl,ml,fl,j,dt,hl,hr,pl,gl,C,bl,pr,ul,_l,gr,vl,El,br,kl,Tl,ur,$l,Cl,_r,wl,yl,vr,Al,Dl,Er,Ll,Sl,kr,xl,Ol,Tr,Pl,Il,Ml,mt,Fl,ft,Nl,jl,zn,ne,ht,Wl,pt,zl,Fa,Bl,Vl,Bn,oe,gt,Rl,bt,ql,Na,Ul,Hl,Vn,se,ut,Gl,_t,Jl,ja,Yl,Xl,Rn,U,vt,Kl,Et,Ql,Wa,Zl,ei,ti,H,ai,za,ri,ni,$r,oi,si,Ba,li,ii,qn,le,kt,ci,ie,di,Va,mi,fi,Tt,hi,pi,Un,G,$t,gi,ce,bi,Ra,ui,_i,Ct,vi,Ei,ki,W,wt,Ti,yt,$i,Cr,Ci,wi,yi,At,Ai,Dt,Di,Li,Si,h,xi,wr,Oi,Pi,yr,Ii,Mi,Ar,Fi,Ni,Dr,ji,Wi,Lr,zi,Bi,Sr,Vi,Ri,xr,qi,Ui,Or,Hi,Gi,Pr,Ji,Yi,Ir,Xi,Ki,Mr,Qi,Zi,Fr,ec,tc,Nr,ac,rc,jr,nc,oc,Wr,sc,lc,zr,ic,cc,Br,dc,mc,Vr,fc,hc,Rr,pc,gc,Hn,J,Lt,bc,Y,uc,qa,_c,vc,St,Ec,kc,qr,Tc,$c,Cc,z,xt,wc,Ur,yc,Ac,de,Dc,Hr,Lc,Sc,Gr,xc,Oc,Pc,M,Ic,Jr,Mc,Fc,Yr,Nc,jc,Ua,Wc,zc,Xr,Bc,Vc,Gn,me,Ot,Rc,fe,qc,Ha,Uc,Hc,Pt,Gc,Jc,Jn,he,It,Yc,Mt,Xc,Ga,Kc,Qc,Yn,pe,Le,Kr,Ft,Zc,Qr,ed,Xn,p,Nt,td,Zr,ad,rd,jt,nd,en,od,sd,ld,x,id,tn,cd,dd,an,md,fd,rn,hd,pd,nn,gd,bd,on,ud,_d,vd,sn,Ed,kd,Wt,Td,Se,zt,$d,ln,Cd,wd,xe,Bt,yd,cn,Ad,Dd,Oe,Vt,Ld,dn,Sd,xd,Pe,Rt,Od,qt,Pd,Ja,Id,Md,Fd,Ie,Ut,Nd,mn,jd,Wd,Me,Ht,zd,fn,Bd,Vd,Fe,Gt,Rd,hn,qd,Ud,Ne,Jt,Hd,pn,Gd,Jd,je,Yt,Yd,gn,Xd,Kd,We,Xt,Qd,bn,Zd,em,ze,Kt,tm,un,am,rm,Be,Qt,nm,_n,om,Kn,Ve,sm,Ya,lm,im,Qn,Zt,Zn,Re,cm,vn,dm,mm,eo,ea,to,ge,qe,En,ta,fm,kn,hm,ao,O,aa,pm,be,gm,Xa,bm,um,Ka,_m,vm,Em,Ue,km,He,ra,Tm,na,$m,Tn,Cm,wm,ym,Ge,oa,Am,sa,Dm,$n,Lm,Sm,ro,ue,Je,Cn,la,xm,wn,Om,no,_e,ia,Pm,ve,Im,Qa,Mm,Fm,Za,Nm,jm,oo;return P=new xn({}),lt=new xn({}),it=new $({props:{name:"class transformers.integrations.CometCallback",anchor:"transformers.integrations.CometCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L661"}}),dt=new $({props:{name:"setup",anchor:"transformers.integrations.CometCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L672"}}),ht=new $({props:{name:"class transformers.DefaultFlowCallback",anchor:"transformers.DefaultFlowCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L406"}}),gt=new $({props:{name:"class transformers.PrinterCallback",anchor:"transformers.PrinterCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L498"}}),ut=new $({props:{name:"class transformers.ProgressCallback",anchor:"transformers.ProgressCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L456"}}),vt=new $({props:{name:"class transformers.EarlyStoppingCallback",anchor:"transformers.EarlyStoppingCallback",parameters:[{name:"early_stopping_patience",val:": int = 1"},{name:"early_stopping_threshold",val:": typing.Optional[float] = 0.0"}],parametersDescription:[{anchor:"transformers.EarlyStoppingCallback.early_stopping_patience",description:`<strong>early_stopping_patience</strong> (<code>int</code>) &#x2014;
Use with <code>metric_for_best_model</code> to stop training when the specified metric worsens for
<code>early_stopping_patience</code> evaluation calls.`,name:"early_stopping_patience"},{anchor:"transformers.EarlyStoppingCallback.early_stopping_threshold(float,",description:`<strong>early_stopping_threshold(<code>float</code>,</strong> <em>optional</em>) &#x2014;
Use with TrainingArguments <code>metric_for_best_model</code> and <code>early_stopping_patience</code> to denote how much the
specified metric must improve to satisfy early stopping conditions. \``,name:"early_stopping_threshold(float,"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L509"}}),kt=new $({props:{name:"class transformers.integrations.TensorBoardCallback",anchor:"transformers.integrations.TensorBoardCallback",parameters:[{name:"tb_writer",val:" = None"}],parametersDescription:[{anchor:"transformers.integrations.TensorBoardCallback.tb_writer",description:`<strong>tb_writer</strong> (<code>SummaryWriter</code>, <em>optional</em>) &#x2014;
The writer to use. Will instantiate one if not set.`,name:"tb_writer"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L447"}}),$t=new $({props:{name:"class transformers.integrations.WandbCallback",anchor:"transformers.integrations.WandbCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L535"}}),wt=new $({props:{name:"setup",anchor:"transformers.integrations.WandbCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L552"}}),Lt=new $({props:{name:"class transformers.integrations.MLflowCallback",anchor:"transformers.integrations.MLflowCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L760"}}),xt=new $({props:{name:"setup",anchor:"transformers.integrations.MLflowCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L778"}}),Ot=new $({props:{name:"class transformers.integrations.AzureMLCallback",anchor:"transformers.integrations.AzureMLCallback",parameters:[{name:"azureml_run",val:" = None"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L737"}}),It=new $({props:{name:"class transformers.integrations.CodeCarbonCallback",anchor:"transformers.integrations.CodeCarbonCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/integrations.py#L922"}}),Ft=new xn({}),Nt=new $({props:{name:"class transformers.TrainerCallback",anchor:"transformers.TrainerCallback",parameters:[],parametersDescription:[{anchor:"transformers.TrainerCallback.args",description:`<strong>args</strong> (<a href="/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a>) &#x2014;
The training arguments used to instantiate the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"args"},{anchor:"transformers.TrainerCallback.state",description:`<strong>state</strong> (<a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerState">TrainerState</a>) &#x2014;
The current state of the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"state"},{anchor:"transformers.TrainerCallback.control",description:`<strong>control</strong> (<a href="/docs/transformers/main/en/main_classes/callback#transformers.TrainerControl">TrainerControl</a>) &#x2014;
The object that is returned to the <a href="/docs/transformers/main/en/main_classes/trainer#transformers.Trainer">Trainer</a> and can be used to make some decisions.`,name:"control"},{anchor:"transformers.TrainerCallback.model",description:`<strong>model</strong> (<a href="/docs/transformers/main/en/main_classes/model#transformers.PreTrainedModel">PreTrainedModel</a> or <code>torch.nn.Module</code>) &#x2014;
The model being trained.`,name:"model"},{anchor:"transformers.TrainerCallback.tokenizer",description:`<strong>tokenizer</strong> (<a href="/docs/transformers/main/en/main_classes/tokenizer#transformers.PreTrainedTokenizer">PreTrainedTokenizer</a>) &#x2014;
The tokenizer used for encoding the data.`,name:"tokenizer"},{anchor:"transformers.TrainerCallback.optimizer",description:`<strong>optimizer</strong> (<code>torch.optim.Optimizer</code>) &#x2014;
The optimizer used for the training steps.`,name:"optimizer"},{anchor:"transformers.TrainerCallback.lr_scheduler",description:`<strong>lr_scheduler</strong> (<code>torch.optim.lr_scheduler.LambdaLR</code>) &#x2014;
The scheduler used for setting the learning rate.`,name:"lr_scheduler"},{anchor:"transformers.TrainerCallback.train_dataloader",description:`<strong>train_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"train_dataloader"},{anchor:"transformers.TrainerCallback.eval_dataloader",description:`<strong>eval_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"eval_dataloader"},{anchor:"transformers.TrainerCallback.metrics",description:`<strong>metrics</strong> (<code>Dict[str, float]</code>) &#x2014;
The metrics computed by the last evaluation phase.</p>
<p>Those are only accessible in the event <code>on_evaluate</code>.`,name:"metrics"},{anchor:"transformers.TrainerCallback.logs",description:`<strong>logs</strong>  (<code>Dict[str, float]</code>) &#x2014;
The values to log.</p>
<p>Those are only accessible in the event <code>on_log</code>.`,name:"logs"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L159"}}),Wt=new Bm({props:{code:`class PrinterCallback(TrainerCallback):
    def on_log(self, args, state, control, logs=None, **kwargs):
        _ = logs.pop("total_flos", None)
        if state.is_local_process_zero:
            print(logs)`,highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">PrinterCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_log</span>(<span class="hljs-params">self, args, state, control, logs=<span class="hljs-literal">None</span>, **kwargs</span>):
        _ = logs.pop(<span class="hljs-string">&quot;total_flos&quot;</span>, <span class="hljs-literal">None</span>)
        <span class="hljs-keyword">if</span> state.is_local_process_zero:
            <span class="hljs-built_in">print</span>(logs)`}}),zt=new $({props:{name:"on_epoch_begin",anchor:"transformers.TrainerCallback.on_epoch_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L227"}}),Bt=new $({props:{name:"on_epoch_end",anchor:"transformers.TrainerCallback.on_epoch_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L233"}}),Vt=new $({props:{name:"on_evaluate",anchor:"transformers.TrainerCallback.on_evaluate",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L259"}}),Rt=new $({props:{name:"on_init_end",anchor:"transformers.TrainerCallback.on_init_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L209"}}),Ut=new $({props:{name:"on_log",anchor:"transformers.TrainerCallback.on_log",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L271"}}),Ht=new $({props:{name:"on_prediction_step",anchor:"transformers.TrainerCallback.on_prediction_step",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L277"}}),Gt=new $({props:{name:"on_save",anchor:"transformers.TrainerCallback.on_save",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L265"}}),Jt=new $({props:{name:"on_step_begin",anchor:"transformers.TrainerCallback.on_step_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L239"}}),Yt=new $({props:{name:"on_step_end",anchor:"transformers.TrainerCallback.on_step_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L252"}}),Xt=new $({props:{name:"on_substep_end",anchor:"transformers.TrainerCallback.on_substep_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L246"}}),Kt=new $({props:{name:"on_train_begin",anchor:"transformers.TrainerCallback.on_train_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L215"}}),Qt=new $({props:{name:"on_train_end",anchor:"transformers.TrainerCallback.on_train_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L221"}}),Zt=new Bm({props:{code:`class MyCallback(TrainerCallback):
    "A callback that prints a message at the beginning of training"

    def on_train_begin(self, args, state, control, **kwargs):
        print("Starting training")


trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback],  # We can either pass the callback class this way or an instance of it (MyCallback())
)`,highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">MyCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-string">&quot;A callback that prints a message at the beginning of training&quot;</span>

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_train_begin</span>(<span class="hljs-params">self, args, state, control, **kwargs</span>):
        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Starting training&quot;</span>)


trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback],  <span class="hljs-comment"># We can either pass the callback class this way or an instance of it (MyCallback())</span>
)`}}),ea=new Bm({props:{code:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
# Alternatively, we can pass an instance of the callback class
trainer.add_callback(MyCallback())`,highlighted:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
<span class="hljs-comment"># Alternatively, we can pass an instance of the callback class</span>
trainer.add_callback(MyCallback())`}}),ta=new xn({}),aa=new $({props:{name:"class transformers.TrainerState",anchor:"transformers.TrainerState",parameters:[{name:"epoch",val:": typing.Optional[float] = None"},{name:"global_step",val:": int = 0"},{name:"max_steps",val:": int = 0"},{name:"num_train_epochs",val:": int = 0"},{name:"total_flos",val:": float = 0"},{name:"log_history",val:": typing.List[typing.Dict[str, float]] = None"},{name:"best_metric",val:": typing.Optional[float] = None"},{name:"best_model_checkpoint",val:": typing.Optional[str] = None"},{name:"is_local_process_zero",val:": bool = True"},{name:"is_world_process_zero",val:": bool = True"},{name:"is_hyper_param_search",val:": bool = False"},{name:"trial_name",val:": str = None"},{name:"trial_params",val:": typing.Dict[str, typing.Union[str, float, int, bool]] = None"}],parametersDescription:[{anchor:"transformers.TrainerState.epoch",description:`<strong>epoch</strong> (<code>float</code>, <em>optional</em>) &#x2014;
Only set during training, will represent the epoch the training is at (the decimal part being the
percentage of the current epoch completed).`,name:"epoch"},{anchor:"transformers.TrainerState.global_step",description:`<strong>global_step</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
During training, represents the number of update steps completed.`,name:"global_step"},{anchor:"transformers.TrainerState.max_steps",description:`<strong>max_steps</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
The number of update steps to do during the current training.`,name:"max_steps"},{anchor:"transformers.TrainerState.total_flos",description:`<strong>total_flos</strong> (<code>float</code>, <em>optional</em>, defaults to 0) &#x2014;
The total number of floating operations done by the model since the beginning of training (stored as floats
to avoid overflow).`,name:"total_flos"},{anchor:"transformers.TrainerState.log_history",description:`<strong>log_history</strong> (<code>List[Dict[str, float]]</code>, <em>optional</em>) &#x2014;
The list of logs done since the beginning of training.`,name:"log_history"},{anchor:"transformers.TrainerState.best_metric",description:`<strong>best_metric</strong> (<code>float</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the best metric encountered so far.`,name:"best_metric"},{anchor:"transformers.TrainerState.best_model_checkpoint",description:`<strong>best_model_checkpoint</strong> (<code>str</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the name of the checkpoint for the best model encountered so
far.`,name:"best_model_checkpoint"},{anchor:"transformers.TrainerState.is_local_process_zero",description:`<strong>is_local_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the local (e.g., on one machine if training in a distributed fashion on
several machines) main process.`,name:"is_local_process_zero"},{anchor:"transformers.TrainerState.is_world_process_zero",description:`<strong>is_world_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the global main process (when training in a distributed fashion on several
machines, this is only going to be <code>True</code> for one process).`,name:"is_world_process_zero"},{anchor:"transformers.TrainerState.is_hyper_param_search",description:`<strong>is_hyper_param_search</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether we are in the process of a hyper parameter search using Trainer.hyperparameter_search. This will
impact the way data will be logged in TensorBoard.`,name:"is_hyper_param_search"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L35"}}),Ue=new hp({props:{$$slots:{default:[pp]},$$scope:{ctx:On}}}),ra=new $({props:{name:"load_from_json",anchor:"transformers.TrainerState.load_from_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L101"}}),oa=new $({props:{name:"save_to_json",anchor:"transformers.TrainerState.save_to_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L95"}}),la=new xn({}),ia=new $({props:{name:"class transformers.TrainerControl",anchor:"transformers.TrainerControl",parameters:[{name:"should_training_stop",val:": bool = False"},{name:"should_epoch_stop",val:": bool = False"},{name:"should_save",val:": bool = False"},{name:"should_evaluate",val:": bool = False"},{name:"should_log",val:": bool = False"}],parametersDescription:[{anchor:"transformers.TrainerControl.should_training_stop",description:`<strong>should_training_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the training should be interrupted.</p>
<p>If <code>True</code>, this variable will not be set back to <code>False</code>. The training will just stop.`,name:"should_training_stop"},{anchor:"transformers.TrainerControl.should_epoch_stop",description:`<strong>should_epoch_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the current epoch should be interrupted.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next epoch.`,name:"should_epoch_stop"},{anchor:"transformers.TrainerControl.should_save",description:`<strong>should_save</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be saved at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_save"},{anchor:"transformers.TrainerControl.should_evaluate",description:`<strong>should_evaluate</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be evaluated at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_evaluate"},{anchor:"transformers.TrainerControl.should_log",description:`<strong>should_log</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the logs should be reported at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_log"}],source:"https://github.com/huggingface/transformers/blob/main/src/transformers/trainer_callback.py#L110"}}),{c(){w=o("meta"),Ee=c(),S=o("h1"),F=o("a"),Z=o("span"),b(P.$$.fragment),tt=c(),ee=o("span"),te=r("Callbacks"),I=c(),R=o("p"),ma=r(`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
`),fa=o("a"),Yo=r("Trainer"),Xo=r(` (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms\u2026) and take decisions (like early
stopping).`),Pn=c(),N=o("p"),Ko=r("Callbacks are \u201Cread only\u201D pieces of code, apart from the "),ha=o("a"),Qo=r("TrainerControl"),Zo=r(` object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass `),pa=o("a"),es=r("Trainer"),ts=r(" and override the methods you need (see "),ga=o("a"),as=r("trainer"),rs=r(" for examples)."),In=c(),ke=o("p"),ns=r("By default a "),ba=o("a"),os=r("Trainer"),ss=r(" will use the following callbacks:"),Mn=c(),y=o("ul"),ua=o("li"),_a=o("a"),ls=r("DefaultFlowCallback"),is=r(" which handles the default behavior for logging, saving and evaluation."),cs=c(),X=o("li"),va=o("a"),ds=r("PrinterCallback"),ms=r(" or "),Ea=o("a"),fs=r("ProgressCallback"),hs=r(` to display progress and print the
logs (the first one is used if you deactivate tqdm through the `),ka=o("a"),ps=r("TrainingArguments"),gs=r(`, otherwise
it\u2019s the second one).`),bs=c(),Ta=o("li"),$a=o("a"),us=r("TensorBoardCallback"),_s=r(` if tensorboard is accessible (either through PyTorch >= 1.4
or tensorboardX).`),vs=c(),Te=o("li"),Ca=o("a"),Es=r("WandbCallback"),ks=r(" if "),at=o("a"),Ts=r("wandb"),$s=r(" is installed."),Cs=c(),$e=o("li"),wa=o("a"),ws=r("CometCallback"),ys=r(" if "),rt=o("a"),As=r("comet_ml"),Ds=r(" is installed."),Ls=c(),Ce=o("li"),ya=o("a"),Ss=r("MLflowCallback"),xs=r(" if "),nt=o("a"),Os=r("mlflow"),Ps=r(" is installed."),Is=c(),we=o("li"),Aa=o("a"),Ms=r("AzureMLCallback"),Fs=r(" if "),ot=o("a"),Ns=r("azureml-sdk"),js=r(` is
installed.`),Ws=c(),ye=o("li"),Da=o("a"),zs=r("CodeCarbonCallback"),Bs=r(" if "),st=o("a"),Vs=r("codecarbon"),Rs=r(` is
installed.`),Fn=c(),D=o("p"),qs=r("The main class that implements callbacks is "),La=o("a"),Us=r("TrainerCallback"),Hs=r(`. It gets the
`),Sa=o("a"),Gs=r("TrainingArguments"),Js=r(" used to instantiate the "),xa=o("a"),Ys=r("Trainer"),Xs=r(`, can access that
Trainer\u2019s internal state via `),Oa=o("a"),Ks=r("TrainerState"),Qs=r(`, and can take some actions on the training loop via
`),Pa=o("a"),Zs=r("TrainerControl"),el=r("."),Nn=c(),ae=o("h2"),Ae=o("a"),mr=o("span"),b(lt.$$.fragment),tl=c(),fr=o("span"),al=r("Available Callbacks"),jn=c(),De=o("p"),rl=r("Here is the list of the available "),Ia=o("a"),nl=r("TrainerCallback"),ol=r(" in the library:"),Wn=c(),q=o("div"),b(it.$$.fragment),sl=c(),re=o("p"),ll=r("A "),Ma=o("a"),il=r("TrainerCallback"),cl=r(" that sends the logs to "),ct=o("a"),dl=r("Comet ML"),ml=r("."),fl=c(),j=o("div"),b(dt.$$.fragment),hl=c(),hr=o("p"),pl=r("Setup the optional Comet.ml integration."),gl=c(),C=o("p"),bl=r(`Environment:
COMET_MODE (`),pr=o("code"),ul=r("str"),_l=r(", "),gr=o("em"),vl=r("optional"),El=r(`):
Whether to create an online, offline experiment or disable Comet logging. Can be \u201COFFLINE\u201D, \u201CONLINE\u201D,
or \u201CDISABLED\u201D. Defaults to \u201CONLINE\u201D.
COMET_PROJECT_NAME (`),br=o("code"),kl=r("str"),Tl=r(", "),ur=o("em"),$l=r("optional"),Cl=r(`):
Comet project name for experiments
COMET_OFFLINE_DIRECTORY (`),_r=o("code"),wl=r("str"),yl=r(", "),vr=o("em"),Al=r("optional"),Dl=r(`):
Folder to use for saving offline experiments when `),Er=o("code"),Ll=r("COMET_MODE"),Sl=r(` is \u201COFFLINE\u201D
COMET_LOG_ASSETS (`),kr=o("code"),xl=r("str"),Ol=r(", "),Tr=o("em"),Pl=r("optional"),Il=r(`):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be \u201CTRUE\u201D, or
\u201CFALSE\u201D. Defaults to \u201CTRUE\u201D.`),Ml=c(),mt=o("p"),Fl=r(`For a number of configurable items in the environment, see
`),ft=o("a"),Nl=r("here"),jl=r("."),zn=c(),ne=o("div"),b(ht.$$.fragment),Wl=c(),pt=o("p"),zl=r("A "),Fa=o("a"),Bl=r("TrainerCallback"),Vl=r(" that handles the default flow of the training loop for logs, evaluation and checkpoints."),Bn=c(),oe=o("div"),b(gt.$$.fragment),Rl=c(),bt=o("p"),ql=r("A bare "),Na=o("a"),Ul=r("TrainerCallback"),Hl=r(" that just prints the logs."),Vn=c(),se=o("div"),b(ut.$$.fragment),Gl=c(),_t=o("p"),Jl=r("A "),ja=o("a"),Yl=r("TrainerCallback"),Xl=r(" that displays the progress of training or evaluation."),Rn=c(),U=o("div"),b(vt.$$.fragment),Kl=c(),Et=o("p"),Ql=r("A "),Wa=o("a"),Zl=r("TrainerCallback"),ei=r(" that handles early stopping."),ti=c(),H=o("p"),ai=r("This callback depends on "),za=o("a"),ri=r("TrainingArguments"),ni=r(" argument "),$r=o("em"),oi=r("load_best_model_at_end"),si=r(` functionality to set best_metric
in `),Ba=o("a"),li=r("TrainerState"),ii=r("."),qn=c(),le=o("div"),b(kt.$$.fragment),ci=c(),ie=o("p"),di=r("A "),Va=o("a"),mi=r("TrainerCallback"),fi=r(" that sends the logs to "),Tt=o("a"),hi=r("TensorBoard"),pi=r("."),Un=c(),G=o("div"),b($t.$$.fragment),gi=c(),ce=o("p"),bi=r("A "),Ra=o("a"),ui=r("TrainerCallback"),_i=r(" that sends the logs to "),Ct=o("a"),vi=r("Weight and Biases"),Ei=r("."),ki=c(),W=o("div"),b(wt.$$.fragment),Ti=c(),yt=o("p"),$i=r("Setup the optional Weights & Biases ("),Cr=o("em"),Ci=r("wandb"),wi=r(") integration."),yi=c(),At=o("p"),Ai=r(`One can subclass and override this method to customize the setup if needed. Find more information
`),Dt=o("a"),Di=r("here"),Li=r(`. You can also override the following environment
variables:`),Si=c(),h=o("p"),xi=r(`Environment:
WANDB_LOG_MODEL (`),wr=o("code"),Oi=r("bool"),Pi=r(", "),yr=o("em"),Ii=r("optional"),Mi=r(", defaults to "),Ar=o("code"),Fi=r("False"),Ni=r(`):
Whether or not to log model as artifact at the end of training. Use along with
`),Dr=o("em"),ji=r("TrainingArguments.load_best_model_at_end"),Wi=r(` to upload best model.
WANDB_WATCH (`),Lr=o("code"),zi=r("str"),Bi=r(", "),Sr=o("em"),Vi=r("optional"),Ri=r(" defaults to "),xr=o("code"),qi=r('"gradients"'),Ui=r(`):
Can be `),Or=o("code"),Hi=r('"gradients"'),Gi=r(", "),Pr=o("code"),Ji=r('"all"'),Yi=r(" or "),Ir=o("code"),Xi=r('"false"'),Ki=r(". Set to "),Mr=o("code"),Qi=r('"false"'),Zi=r(" to disable gradient logging or "),Fr=o("code"),ec=r('"all"'),tc=r(` to
log gradients and parameters.
WANDB_PROJECT (`),Nr=o("code"),ac=r("str"),rc=r(", "),jr=o("em"),nc=r("optional"),oc=r(", defaults to "),Wr=o("code"),sc=r('"huggingface"'),lc=r(`):
Set this to a custom string to store results in a different project.
WANDB_DISABLED (`),zr=o("code"),ic=r("bool"),cc=r(", "),Br=o("em"),dc=r("optional"),mc=r(", defaults to "),Vr=o("code"),fc=r("False"),hc=r(`):
Whether or not to disable wandb entirely. Set `),Rr=o("em"),pc=r("WANDB_DISABLED=true"),gc=r(" to disable."),Hn=c(),J=o("div"),b(Lt.$$.fragment),bc=c(),Y=o("p"),uc=r("A "),qa=o("a"),_c=r("TrainerCallback"),vc=r(" that sends the logs to "),St=o("a"),Ec=r("MLflow"),kc=r(`. Can be disabled by setting
environment variable `),qr=o("code"),Tc=r("DISABLE_MLFLOW_INTEGRATION = TRUE"),$c=r("."),Cc=c(),z=o("div"),b(xt.$$.fragment),wc=c(),Ur=o("p"),yc=r("Setup the optional MLflow integration."),Ac=c(),de=o("p"),Dc=r(`Environment:
HF_MLFLOW_LOG_ARTIFACTS (`),Hr=o("code"),Lc=r("str"),Sc=r(", "),Gr=o("em"),xc=r("optional"),Oc=r(`):
Whether to use MLflow .log_artifact() facility to log artifacts.`),Pc=c(),M=o("p"),Ic=r("This only makes sense if logging to a remote server, e.g. s3 or GCS. If set to "),Jr=o("code"),Mc=r("True"),Fc=r(" or "),Yr=o("em"),Nc=r("1"),jc=r(`, will copy
whatever is in `),Ua=o("a"),Wc=r("TrainingArguments"),zc=r("\u2019s "),Xr=o("code"),Bc=r("output_dir"),Vc=r(` to the local or remote artifact storage. Using it
without a remote storage will just copy the files to your artifact location.`),Gn=c(),me=o("div"),b(Ot.$$.fragment),Rc=c(),fe=o("p"),qc=r("A "),Ha=o("a"),Uc=r("TrainerCallback"),Hc=r(" that sends the logs to "),Pt=o("a"),Gc=r("AzureML"),Jc=r("."),Jn=c(),he=o("div"),b(It.$$.fragment),Yc=c(),Mt=o("p"),Xc=r("A "),Ga=o("a"),Kc=r("TrainerCallback"),Qc=r(" that tracks the CO2 emission of training."),Yn=c(),pe=o("h2"),Le=o("a"),Kr=o("span"),b(Ft.$$.fragment),Zc=c(),Qr=o("span"),ed=r("TrainerCallback"),Xn=c(),p=o("div"),b(Nt.$$.fragment),td=c(),Zr=o("p"),ad=r(`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`),rd=c(),jt=o("p"),nd=r("The "),en=o("code"),od=r("control"),sd=r(` object is the only one that can be changed by the callback, in which case the event that changes it
should return the modified version.`),ld=c(),x=o("p"),id=r("The argument "),tn=o("code"),cd=r("args"),dd=r(", "),an=o("code"),md=r("state"),fd=r(" and "),rn=o("code"),hd=r("control"),pd=r(" are positionals for all events, all the others are grouped in "),nn=o("code"),gd=r("kwargs"),bd=r(`.
You can unpack the ones you need in the signature of the event using them. As an example, see the code of the
simple `),on=o("code"),ud=r("PrinterCallback"),_d=r("."),vd=c(),sn=o("p"),Ed=r("Example:"),kd=c(),b(Wt.$$.fragment),Td=c(),Se=o("div"),b(zt.$$.fragment),$d=c(),ln=o("p"),Cd=r("Event called at the beginning of an epoch."),wd=c(),xe=o("div"),b(Bt.$$.fragment),yd=c(),cn=o("p"),Ad=r("Event called at the end of an epoch."),Dd=c(),Oe=o("div"),b(Vt.$$.fragment),Ld=c(),dn=o("p"),Sd=r("Event called after an evaluation phase."),xd=c(),Pe=o("div"),b(Rt.$$.fragment),Od=c(),qt=o("p"),Pd=r("Event called at the end of the initialization of the "),Ja=o("a"),Id=r("Trainer"),Md=r("."),Fd=c(),Ie=o("div"),b(Ut.$$.fragment),Nd=c(),mn=o("p"),jd=r("Event called after logging the last logs."),Wd=c(),Me=o("div"),b(Ht.$$.fragment),zd=c(),fn=o("p"),Bd=r("Event called after a prediction step."),Vd=c(),Fe=o("div"),b(Gt.$$.fragment),Rd=c(),hn=o("p"),qd=r("Event called after a checkpoint save."),Ud=c(),Ne=o("div"),b(Jt.$$.fragment),Hd=c(),pn=o("p"),Gd=r(`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`),Jd=c(),je=o("div"),b(Yt.$$.fragment),Yd=c(),gn=o("p"),Xd=r(`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`),Kd=c(),We=o("div"),b(Xt.$$.fragment),Qd=c(),bn=o("p"),Zd=r("Event called at the end of an substep during gradient accumulation."),em=c(),ze=o("div"),b(Kt.$$.fragment),tm=c(),un=o("p"),am=r("Event called at the beginning of training."),rm=c(),Be=o("div"),b(Qt.$$.fragment),nm=c(),_n=o("p"),om=r("Event called at the end of training."),Kn=c(),Ve=o("p"),sm=r("Here is an example of how to register a custom callback with the PyTorch "),Ya=o("a"),lm=r("Trainer"),im=r(":"),Qn=c(),b(Zt.$$.fragment),Zn=c(),Re=o("p"),cm=r("Another way to register a callback is to call "),vn=o("code"),dm=r("trainer.add_callback()"),mm=r(" as follows:"),eo=c(),b(ea.$$.fragment),to=c(),ge=o("h2"),qe=o("a"),En=o("span"),b(ta.$$.fragment),fm=c(),kn=o("span"),hm=r("TrainerState"),ao=c(),O=o("div"),b(aa.$$.fragment),pm=c(),be=o("p"),gm=r("A class containing the "),Xa=o("a"),bm=r("Trainer"),um=r(` inner state that will be saved along the model and optimizer when checkpointing
and passed to the `),Ka=o("a"),_m=r("TrainerCallback"),vm=r("."),Em=c(),b(Ue.$$.fragment),km=c(),He=o("div"),b(ra.$$.fragment),Tm=c(),na=o("p"),$m=r("Create an instance from the content of "),Tn=o("code"),Cm=r("json_path"),wm=r("."),ym=c(),Ge=o("div"),b(oa.$$.fragment),Am=c(),sa=o("p"),Dm=r("Save the content of this instance in JSON format inside "),$n=o("code"),Lm=r("json_path"),Sm=r("."),ro=c(),ue=o("h2"),Je=o("a"),Cn=o("span"),b(la.$$.fragment),xm=c(),wn=o("span"),Om=r("TrainerControl"),no=c(),_e=o("div"),b(ia.$$.fragment),Pm=c(),ve=o("p"),Im=r("A class that handles the "),Qa=o("a"),Mm=r("Trainer"),Fm=r(" control flow. This class is used by the "),Za=o("a"),Nm=r("TrainerCallback"),jm=r(` to activate some
switches in the training loop.`),this.h()},l(a){const m=mp('[data-svelte="svelte-1phssyn"]',document.head);w=s(m,"META",{name:!0,content:!0}),m.forEach(t),Ee=d(a),S=s(a,"H1",{class:!0});var ca=l(S);F=s(ca,"A",{id:!0,class:!0,href:!0});var Vm=l(F);Z=s(Vm,"SPAN",{});var Rm=l(Z);u(P.$$.fragment,Rm),Rm.forEach(t),Vm.forEach(t),tt=d(ca),ee=s(ca,"SPAN",{});var qm=l(ee);te=n(qm,"Callbacks"),qm.forEach(t),ca.forEach(t),I=d(a),R=s(a,"P",{});var so=l(R);ma=n(so,`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
`),fa=s(so,"A",{href:!0});var Um=l(fa);Yo=n(Um,"Trainer"),Um.forEach(t),Xo=n(so,` (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms\u2026) and take decisions (like early
stopping).`),so.forEach(t),Pn=d(a),N=s(a,"P",{});var Ye=l(N);Ko=n(Ye,"Callbacks are \u201Cread only\u201D pieces of code, apart from the "),ha=s(Ye,"A",{href:!0});var Hm=l(ha);Qo=n(Hm,"TrainerControl"),Hm.forEach(t),Zo=n(Ye,` object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass `),pa=s(Ye,"A",{href:!0});var Gm=l(pa);es=n(Gm,"Trainer"),Gm.forEach(t),ts=n(Ye," and override the methods you need (see "),ga=s(Ye,"A",{href:!0});var Jm=l(ga);as=n(Jm,"trainer"),Jm.forEach(t),rs=n(Ye," for examples)."),Ye.forEach(t),In=d(a),ke=s(a,"P",{});var lo=l(ke);ns=n(lo,"By default a "),ba=s(lo,"A",{href:!0});var Ym=l(ba);os=n(Ym,"Trainer"),Ym.forEach(t),ss=n(lo," will use the following callbacks:"),lo.forEach(t),Mn=d(a),y=s(a,"UL",{});var L=l(y);ua=s(L,"LI",{});var Wm=l(ua);_a=s(Wm,"A",{href:!0});var Xm=l(_a);ls=n(Xm,"DefaultFlowCallback"),Xm.forEach(t),is=n(Wm," which handles the default behavior for logging, saving and evaluation."),Wm.forEach(t),cs=d(L),X=s(L,"LI",{});var da=l(X);va=s(da,"A",{href:!0});var Km=l(va);ds=n(Km,"PrinterCallback"),Km.forEach(t),ms=n(da," or "),Ea=s(da,"A",{href:!0});var Qm=l(Ea);fs=n(Qm,"ProgressCallback"),Qm.forEach(t),hs=n(da,` to display progress and print the
logs (the first one is used if you deactivate tqdm through the `),ka=s(da,"A",{href:!0});var Zm=l(ka);ps=n(Zm,"TrainingArguments"),Zm.forEach(t),gs=n(da,`, otherwise
it\u2019s the second one).`),da.forEach(t),bs=d(L),Ta=s(L,"LI",{});var zm=l(Ta);$a=s(zm,"A",{href:!0});var ef=l($a);us=n(ef,"TensorBoardCallback"),ef.forEach(t),_s=n(zm,` if tensorboard is accessible (either through PyTorch >= 1.4
or tensorboardX).`),zm.forEach(t),vs=d(L),Te=s(L,"LI",{});var yn=l(Te);Ca=s(yn,"A",{href:!0});var tf=l(Ca);Es=n(tf,"WandbCallback"),tf.forEach(t),ks=n(yn," if "),at=s(yn,"A",{href:!0,rel:!0});var af=l(at);Ts=n(af,"wandb"),af.forEach(t),$s=n(yn," is installed."),yn.forEach(t),Cs=d(L),$e=s(L,"LI",{});var An=l($e);wa=s(An,"A",{href:!0});var rf=l(wa);ws=n(rf,"CometCallback"),rf.forEach(t),ys=n(An," if "),rt=s(An,"A",{href:!0,rel:!0});var nf=l(rt);As=n(nf,"comet_ml"),nf.forEach(t),Ds=n(An," is installed."),An.forEach(t),Ls=d(L),Ce=s(L,"LI",{});var Dn=l(Ce);ya=s(Dn,"A",{href:!0});var of=l(ya);Ss=n(of,"MLflowCallback"),of.forEach(t),xs=n(Dn," if "),nt=s(Dn,"A",{href:!0,rel:!0});var sf=l(nt);Os=n(sf,"mlflow"),sf.forEach(t),Ps=n(Dn," is installed."),Dn.forEach(t),Is=d(L),we=s(L,"LI",{});var Ln=l(we);Aa=s(Ln,"A",{href:!0});var lf=l(Aa);Ms=n(lf,"AzureMLCallback"),lf.forEach(t),Fs=n(Ln," if "),ot=s(Ln,"A",{href:!0,rel:!0});var cf=l(ot);Ns=n(cf,"azureml-sdk"),cf.forEach(t),js=n(Ln,` is
installed.`),Ln.forEach(t),Ws=d(L),ye=s(L,"LI",{});var Sn=l(ye);Da=s(Sn,"A",{href:!0});var df=l(Da);zs=n(df,"CodeCarbonCallback"),df.forEach(t),Bs=n(Sn," if "),st=s(Sn,"A",{href:!0,rel:!0});var mf=l(st);Vs=n(mf,"codecarbon"),mf.forEach(t),Rs=n(Sn,` is
installed.`),Sn.forEach(t),L.forEach(t),Fn=d(a),D=s(a,"P",{});var B=l(D);qs=n(B,"The main class that implements callbacks is "),La=s(B,"A",{href:!0});var ff=l(La);Us=n(ff,"TrainerCallback"),ff.forEach(t),Hs=n(B,`. It gets the
`),Sa=s(B,"A",{href:!0});var hf=l(Sa);Gs=n(hf,"TrainingArguments"),hf.forEach(t),Js=n(B," used to instantiate the "),xa=s(B,"A",{href:!0});var pf=l(xa);Ys=n(pf,"Trainer"),pf.forEach(t),Xs=n(B,`, can access that
Trainer\u2019s internal state via `),Oa=s(B,"A",{href:!0});var gf=l(Oa);Ks=n(gf,"TrainerState"),gf.forEach(t),Qs=n(B,`, and can take some actions on the training loop via
`),Pa=s(B,"A",{href:!0});var bf=l(Pa);Zs=n(bf,"TrainerControl"),bf.forEach(t),el=n(B,"."),B.forEach(t),Nn=d(a),ae=s(a,"H2",{class:!0});var io=l(ae);Ae=s(io,"A",{id:!0,class:!0,href:!0});var uf=l(Ae);mr=s(uf,"SPAN",{});var _f=l(mr);u(lt.$$.fragment,_f),_f.forEach(t),uf.forEach(t),tl=d(io),fr=s(io,"SPAN",{});var vf=l(fr);al=n(vf,"Available Callbacks"),vf.forEach(t),io.forEach(t),jn=d(a),De=s(a,"P",{});var co=l(De);rl=n(co,"Here is the list of the available "),Ia=s(co,"A",{href:!0});var Ef=l(Ia);nl=n(Ef,"TrainerCallback"),Ef.forEach(t),ol=n(co," in the library:"),co.forEach(t),Wn=d(a),q=s(a,"DIV",{class:!0});var er=l(q);u(it.$$.fragment,er),sl=d(er),re=s(er,"P",{});var tr=l(re);ll=n(tr,"A "),Ma=s(tr,"A",{href:!0});var kf=l(Ma);il=n(kf,"TrainerCallback"),kf.forEach(t),cl=n(tr," that sends the logs to "),ct=s(tr,"A",{href:!0,rel:!0});var Tf=l(ct);dl=n(Tf,"Comet ML"),Tf.forEach(t),ml=n(tr,"."),tr.forEach(t),fl=d(er),j=s(er,"DIV",{class:!0});var Xe=l(j);u(dt.$$.fragment,Xe),hl=d(Xe),hr=s(Xe,"P",{});var $f=l(hr);pl=n($f,"Setup the optional Comet.ml integration."),$f.forEach(t),gl=d(Xe),C=s(Xe,"P",{});var A=l(C);bl=n(A,`Environment:
COMET_MODE (`),pr=s(A,"CODE",{});var Cf=l(pr);ul=n(Cf,"str"),Cf.forEach(t),_l=n(A,", "),gr=s(A,"EM",{});var wf=l(gr);vl=n(wf,"optional"),wf.forEach(t),El=n(A,`):
Whether to create an online, offline experiment or disable Comet logging. Can be \u201COFFLINE\u201D, \u201CONLINE\u201D,
or \u201CDISABLED\u201D. Defaults to \u201CONLINE\u201D.
COMET_PROJECT_NAME (`),br=s(A,"CODE",{});var yf=l(br);kl=n(yf,"str"),yf.forEach(t),Tl=n(A,", "),ur=s(A,"EM",{});var Af=l(ur);$l=n(Af,"optional"),Af.forEach(t),Cl=n(A,`):
Comet project name for experiments
COMET_OFFLINE_DIRECTORY (`),_r=s(A,"CODE",{});var Df=l(_r);wl=n(Df,"str"),Df.forEach(t),yl=n(A,", "),vr=s(A,"EM",{});var Lf=l(vr);Al=n(Lf,"optional"),Lf.forEach(t),Dl=n(A,`):
Folder to use for saving offline experiments when `),Er=s(A,"CODE",{});var Sf=l(Er);Ll=n(Sf,"COMET_MODE"),Sf.forEach(t),Sl=n(A,` is \u201COFFLINE\u201D
COMET_LOG_ASSETS (`),kr=s(A,"CODE",{});var xf=l(kr);xl=n(xf,"str"),xf.forEach(t),Ol=n(A,", "),Tr=s(A,"EM",{});var Of=l(Tr);Pl=n(Of,"optional"),Of.forEach(t),Il=n(A,`):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be \u201CTRUE\u201D, or
\u201CFALSE\u201D. Defaults to \u201CTRUE\u201D.`),A.forEach(t),Ml=d(Xe),mt=s(Xe,"P",{});var mo=l(mt);Fl=n(mo,`For a number of configurable items in the environment, see
`),ft=s(mo,"A",{href:!0,rel:!0});var Pf=l(ft);Nl=n(Pf,"here"),Pf.forEach(t),jl=n(mo,"."),mo.forEach(t),Xe.forEach(t),er.forEach(t),zn=d(a),ne=s(a,"DIV",{class:!0});var fo=l(ne);u(ht.$$.fragment,fo),Wl=d(fo),pt=s(fo,"P",{});var ho=l(pt);zl=n(ho,"A "),Fa=s(ho,"A",{href:!0});var If=l(Fa);Bl=n(If,"TrainerCallback"),If.forEach(t),Vl=n(ho," that handles the default flow of the training loop for logs, evaluation and checkpoints."),ho.forEach(t),fo.forEach(t),Bn=d(a),oe=s(a,"DIV",{class:!0});var po=l(oe);u(gt.$$.fragment,po),Rl=d(po),bt=s(po,"P",{});var go=l(bt);ql=n(go,"A bare "),Na=s(go,"A",{href:!0});var Mf=l(Na);Ul=n(Mf,"TrainerCallback"),Mf.forEach(t),Hl=n(go," that just prints the logs."),go.forEach(t),po.forEach(t),Vn=d(a),se=s(a,"DIV",{class:!0});var bo=l(se);u(ut.$$.fragment,bo),Gl=d(bo),_t=s(bo,"P",{});var uo=l(_t);Jl=n(uo,"A "),ja=s(uo,"A",{href:!0});var Ff=l(ja);Yl=n(Ff,"TrainerCallback"),Ff.forEach(t),Xl=n(uo," that displays the progress of training or evaluation."),uo.forEach(t),bo.forEach(t),Rn=d(a),U=s(a,"DIV",{class:!0});var ar=l(U);u(vt.$$.fragment,ar),Kl=d(ar),Et=s(ar,"P",{});var _o=l(Et);Ql=n(_o,"A "),Wa=s(_o,"A",{href:!0});var Nf=l(Wa);Zl=n(Nf,"TrainerCallback"),Nf.forEach(t),ei=n(_o," that handles early stopping."),_o.forEach(t),ti=d(ar),H=s(ar,"P",{});var Ke=l(H);ai=n(Ke,"This callback depends on "),za=s(Ke,"A",{href:!0});var jf=l(za);ri=n(jf,"TrainingArguments"),jf.forEach(t),ni=n(Ke," argument "),$r=s(Ke,"EM",{});var Wf=l($r);oi=n(Wf,"load_best_model_at_end"),Wf.forEach(t),si=n(Ke,` functionality to set best_metric
in `),Ba=s(Ke,"A",{href:!0});var zf=l(Ba);li=n(zf,"TrainerState"),zf.forEach(t),ii=n(Ke,"."),Ke.forEach(t),ar.forEach(t),qn=d(a),le=s(a,"DIV",{class:!0});var vo=l(le);u(kt.$$.fragment,vo),ci=d(vo),ie=s(vo,"P",{});var rr=l(ie);di=n(rr,"A "),Va=s(rr,"A",{href:!0});var Bf=l(Va);mi=n(Bf,"TrainerCallback"),Bf.forEach(t),fi=n(rr," that sends the logs to "),Tt=s(rr,"A",{href:!0,rel:!0});var Vf=l(Tt);hi=n(Vf,"TensorBoard"),Vf.forEach(t),pi=n(rr,"."),rr.forEach(t),vo.forEach(t),Un=d(a),G=s(a,"DIV",{class:!0});var nr=l(G);u($t.$$.fragment,nr),gi=d(nr),ce=s(nr,"P",{});var or=l(ce);bi=n(or,"A "),Ra=s(or,"A",{href:!0});var Rf=l(Ra);ui=n(Rf,"TrainerCallback"),Rf.forEach(t),_i=n(or," that sends the logs to "),Ct=s(or,"A",{href:!0,rel:!0});var qf=l(Ct);vi=n(qf,"Weight and Biases"),qf.forEach(t),Ei=n(or,"."),or.forEach(t),ki=d(nr),W=s(nr,"DIV",{class:!0});var Qe=l(W);u(wt.$$.fragment,Qe),Ti=d(Qe),yt=s(Qe,"P",{});var Eo=l(yt);$i=n(Eo,"Setup the optional Weights & Biases ("),Cr=s(Eo,"EM",{});var Uf=l(Cr);Ci=n(Uf,"wandb"),Uf.forEach(t),wi=n(Eo,") integration."),Eo.forEach(t),yi=d(Qe),At=s(Qe,"P",{});var ko=l(At);Ai=n(ko,`One can subclass and override this method to customize the setup if needed. Find more information
`),Dt=s(ko,"A",{href:!0,rel:!0});var Hf=l(Dt);Di=n(Hf,"here"),Hf.forEach(t),Li=n(ko,`. You can also override the following environment
variables:`),ko.forEach(t),Si=d(Qe),h=s(Qe,"P",{});var g=l(h);xi=n(g,`Environment:
WANDB_LOG_MODEL (`),wr=s(g,"CODE",{});var Gf=l(wr);Oi=n(Gf,"bool"),Gf.forEach(t),Pi=n(g,", "),yr=s(g,"EM",{});var Jf=l(yr);Ii=n(Jf,"optional"),Jf.forEach(t),Mi=n(g,", defaults to "),Ar=s(g,"CODE",{});var Yf=l(Ar);Fi=n(Yf,"False"),Yf.forEach(t),Ni=n(g,`):
Whether or not to log model as artifact at the end of training. Use along with
`),Dr=s(g,"EM",{});var Xf=l(Dr);ji=n(Xf,"TrainingArguments.load_best_model_at_end"),Xf.forEach(t),Wi=n(g,` to upload best model.
WANDB_WATCH (`),Lr=s(g,"CODE",{});var Kf=l(Lr);zi=n(Kf,"str"),Kf.forEach(t),Bi=n(g,", "),Sr=s(g,"EM",{});var Qf=l(Sr);Vi=n(Qf,"optional"),Qf.forEach(t),Ri=n(g," defaults to "),xr=s(g,"CODE",{});var Zf=l(xr);qi=n(Zf,'"gradients"'),Zf.forEach(t),Ui=n(g,`):
Can be `),Or=s(g,"CODE",{});var eh=l(Or);Hi=n(eh,'"gradients"'),eh.forEach(t),Gi=n(g,", "),Pr=s(g,"CODE",{});var th=l(Pr);Ji=n(th,'"all"'),th.forEach(t),Yi=n(g," or "),Ir=s(g,"CODE",{});var ah=l(Ir);Xi=n(ah,'"false"'),ah.forEach(t),Ki=n(g,". Set to "),Mr=s(g,"CODE",{});var rh=l(Mr);Qi=n(rh,'"false"'),rh.forEach(t),Zi=n(g," to disable gradient logging or "),Fr=s(g,"CODE",{});var nh=l(Fr);ec=n(nh,'"all"'),nh.forEach(t),tc=n(g,` to
log gradients and parameters.
WANDB_PROJECT (`),Nr=s(g,"CODE",{});var oh=l(Nr);ac=n(oh,"str"),oh.forEach(t),rc=n(g,", "),jr=s(g,"EM",{});var sh=l(jr);nc=n(sh,"optional"),sh.forEach(t),oc=n(g,", defaults to "),Wr=s(g,"CODE",{});var lh=l(Wr);sc=n(lh,'"huggingface"'),lh.forEach(t),lc=n(g,`):
Set this to a custom string to store results in a different project.
WANDB_DISABLED (`),zr=s(g,"CODE",{});var ih=l(zr);ic=n(ih,"bool"),ih.forEach(t),cc=n(g,", "),Br=s(g,"EM",{});var ch=l(Br);dc=n(ch,"optional"),ch.forEach(t),mc=n(g,", defaults to "),Vr=s(g,"CODE",{});var dh=l(Vr);fc=n(dh,"False"),dh.forEach(t),hc=n(g,`):
Whether or not to disable wandb entirely. Set `),Rr=s(g,"EM",{});var mh=l(Rr);pc=n(mh,"WANDB_DISABLED=true"),mh.forEach(t),gc=n(g," to disable."),g.forEach(t),Qe.forEach(t),nr.forEach(t),Hn=d(a),J=s(a,"DIV",{class:!0});var sr=l(J);u(Lt.$$.fragment,sr),bc=d(sr),Y=s(sr,"P",{});var Ze=l(Y);uc=n(Ze,"A "),qa=s(Ze,"A",{href:!0});var fh=l(qa);_c=n(fh,"TrainerCallback"),fh.forEach(t),vc=n(Ze," that sends the logs to "),St=s(Ze,"A",{href:!0,rel:!0});var hh=l(St);Ec=n(hh,"MLflow"),hh.forEach(t),kc=n(Ze,`. Can be disabled by setting
environment variable `),qr=s(Ze,"CODE",{});var ph=l(qr);Tc=n(ph,"DISABLE_MLFLOW_INTEGRATION = TRUE"),ph.forEach(t),$c=n(Ze,"."),Ze.forEach(t),Cc=d(sr),z=s(sr,"DIV",{class:!0});var et=l(z);u(xt.$$.fragment,et),wc=d(et),Ur=s(et,"P",{});var gh=l(Ur);yc=n(gh,"Setup the optional MLflow integration."),gh.forEach(t),Ac=d(et),de=s(et,"P",{});var lr=l(de);Dc=n(lr,`Environment:
HF_MLFLOW_LOG_ARTIFACTS (`),Hr=s(lr,"CODE",{});var bh=l(Hr);Lc=n(bh,"str"),bh.forEach(t),Sc=n(lr,", "),Gr=s(lr,"EM",{});var uh=l(Gr);xc=n(uh,"optional"),uh.forEach(t),Oc=n(lr,`):
Whether to use MLflow .log_artifact() facility to log artifacts.`),lr.forEach(t),Pc=d(et),M=s(et,"P",{});var K=l(M);Ic=n(K,"This only makes sense if logging to a remote server, e.g. s3 or GCS. If set to "),Jr=s(K,"CODE",{});var _h=l(Jr);Mc=n(_h,"True"),_h.forEach(t),Fc=n(K," or "),Yr=s(K,"EM",{});var vh=l(Yr);Nc=n(vh,"1"),vh.forEach(t),jc=n(K,`, will copy
whatever is in `),Ua=s(K,"A",{href:!0});var Eh=l(Ua);Wc=n(Eh,"TrainingArguments"),Eh.forEach(t),zc=n(K,"\u2019s "),Xr=s(K,"CODE",{});var kh=l(Xr);Bc=n(kh,"output_dir"),kh.forEach(t),Vc=n(K,` to the local or remote artifact storage. Using it
without a remote storage will just copy the files to your artifact location.`),K.forEach(t),et.forEach(t),sr.forEach(t),Gn=d(a),me=s(a,"DIV",{class:!0});var To=l(me);u(Ot.$$.fragment,To),Rc=d(To),fe=s(To,"P",{});var ir=l(fe);qc=n(ir,"A "),Ha=s(ir,"A",{href:!0});var Th=l(Ha);Uc=n(Th,"TrainerCallback"),Th.forEach(t),Hc=n(ir," that sends the logs to "),Pt=s(ir,"A",{href:!0,rel:!0});var $h=l(Pt);Gc=n($h,"AzureML"),$h.forEach(t),Jc=n(ir,"."),ir.forEach(t),To.forEach(t),Jn=d(a),he=s(a,"DIV",{class:!0});var $o=l(he);u(It.$$.fragment,$o),Yc=d($o),Mt=s($o,"P",{});var Co=l(Mt);Xc=n(Co,"A "),Ga=s(Co,"A",{href:!0});var Ch=l(Ga);Kc=n(Ch,"TrainerCallback"),Ch.forEach(t),Qc=n(Co," that tracks the CO2 emission of training."),Co.forEach(t),$o.forEach(t),Yn=d(a),pe=s(a,"H2",{class:!0});var wo=l(pe);Le=s(wo,"A",{id:!0,class:!0,href:!0});var wh=l(Le);Kr=s(wh,"SPAN",{});var yh=l(Kr);u(Ft.$$.fragment,yh),yh.forEach(t),wh.forEach(t),Zc=d(wo),Qr=s(wo,"SPAN",{});var Ah=l(Qr);ed=n(Ah,"TrainerCallback"),Ah.forEach(t),wo.forEach(t),Xn=d(a),p=s(a,"DIV",{class:!0});var T=l(p);u(Nt.$$.fragment,T),td=d(T),Zr=s(T,"P",{});var Dh=l(Zr);ad=n(Dh,`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`),Dh.forEach(t),rd=d(T),jt=s(T,"P",{});var yo=l(jt);nd=n(yo,"The "),en=s(yo,"CODE",{});var Lh=l(en);od=n(Lh,"control"),Lh.forEach(t),sd=n(yo,` object is the only one that can be changed by the callback, in which case the event that changes it
should return the modified version.`),yo.forEach(t),ld=d(T),x=s(T,"P",{});var V=l(x);id=n(V,"The argument "),tn=s(V,"CODE",{});var Sh=l(tn);cd=n(Sh,"args"),Sh.forEach(t),dd=n(V,", "),an=s(V,"CODE",{});var xh=l(an);md=n(xh,"state"),xh.forEach(t),fd=n(V," and "),rn=s(V,"CODE",{});var Oh=l(rn);hd=n(Oh,"control"),Oh.forEach(t),pd=n(V," are positionals for all events, all the others are grouped in "),nn=s(V,"CODE",{});var Ph=l(nn);gd=n(Ph,"kwargs"),Ph.forEach(t),bd=n(V,`.
You can unpack the ones you need in the signature of the event using them. As an example, see the code of the
simple `),on=s(V,"CODE",{});var Ih=l(on);ud=n(Ih,"PrinterCallback"),Ih.forEach(t),_d=n(V,"."),V.forEach(t),vd=d(T),sn=s(T,"P",{});var Mh=l(sn);Ed=n(Mh,"Example:"),Mh.forEach(t),kd=d(T),u(Wt.$$.fragment,T),Td=d(T),Se=s(T,"DIV",{class:!0});var Ao=l(Se);u(zt.$$.fragment,Ao),$d=d(Ao),ln=s(Ao,"P",{});var Fh=l(ln);Cd=n(Fh,"Event called at the beginning of an epoch."),Fh.forEach(t),Ao.forEach(t),wd=d(T),xe=s(T,"DIV",{class:!0});var Do=l(xe);u(Bt.$$.fragment,Do),yd=d(Do),cn=s(Do,"P",{});var Nh=l(cn);Ad=n(Nh,"Event called at the end of an epoch."),Nh.forEach(t),Do.forEach(t),Dd=d(T),Oe=s(T,"DIV",{class:!0});var Lo=l(Oe);u(Vt.$$.fragment,Lo),Ld=d(Lo),dn=s(Lo,"P",{});var jh=l(dn);Sd=n(jh,"Event called after an evaluation phase."),jh.forEach(t),Lo.forEach(t),xd=d(T),Pe=s(T,"DIV",{class:!0});var So=l(Pe);u(Rt.$$.fragment,So),Od=d(So),qt=s(So,"P",{});var xo=l(qt);Pd=n(xo,"Event called at the end of the initialization of the "),Ja=s(xo,"A",{href:!0});var Wh=l(Ja);Id=n(Wh,"Trainer"),Wh.forEach(t),Md=n(xo,"."),xo.forEach(t),So.forEach(t),Fd=d(T),Ie=s(T,"DIV",{class:!0});var Oo=l(Ie);u(Ut.$$.fragment,Oo),Nd=d(Oo),mn=s(Oo,"P",{});var zh=l(mn);jd=n(zh,"Event called after logging the last logs."),zh.forEach(t),Oo.forEach(t),Wd=d(T),Me=s(T,"DIV",{class:!0});var Po=l(Me);u(Ht.$$.fragment,Po),zd=d(Po),fn=s(Po,"P",{});var Bh=l(fn);Bd=n(Bh,"Event called after a prediction step."),Bh.forEach(t),Po.forEach(t),Vd=d(T),Fe=s(T,"DIV",{class:!0});var Io=l(Fe);u(Gt.$$.fragment,Io),Rd=d(Io),hn=s(Io,"P",{});var Vh=l(hn);qd=n(Vh,"Event called after a checkpoint save."),Vh.forEach(t),Io.forEach(t),Ud=d(T),Ne=s(T,"DIV",{class:!0});var Mo=l(Ne);u(Jt.$$.fragment,Mo),Hd=d(Mo),pn=s(Mo,"P",{});var Rh=l(pn);Gd=n(Rh,`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`),Rh.forEach(t),Mo.forEach(t),Jd=d(T),je=s(T,"DIV",{class:!0});var Fo=l(je);u(Yt.$$.fragment,Fo),Yd=d(Fo),gn=s(Fo,"P",{});var qh=l(gn);Xd=n(qh,`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`),qh.forEach(t),Fo.forEach(t),Kd=d(T),We=s(T,"DIV",{class:!0});var No=l(We);u(Xt.$$.fragment,No),Qd=d(No),bn=s(No,"P",{});var Uh=l(bn);Zd=n(Uh,"Event called at the end of an substep during gradient accumulation."),Uh.forEach(t),No.forEach(t),em=d(T),ze=s(T,"DIV",{class:!0});var jo=l(ze);u(Kt.$$.fragment,jo),tm=d(jo),un=s(jo,"P",{});var Hh=l(un);am=n(Hh,"Event called at the beginning of training."),Hh.forEach(t),jo.forEach(t),rm=d(T),Be=s(T,"DIV",{class:!0});var Wo=l(Be);u(Qt.$$.fragment,Wo),nm=d(Wo),_n=s(Wo,"P",{});var Gh=l(_n);om=n(Gh,"Event called at the end of training."),Gh.forEach(t),Wo.forEach(t),T.forEach(t),Kn=d(a),Ve=s(a,"P",{});var zo=l(Ve);sm=n(zo,"Here is an example of how to register a custom callback with the PyTorch "),Ya=s(zo,"A",{href:!0});var Jh=l(Ya);lm=n(Jh,"Trainer"),Jh.forEach(t),im=n(zo,":"),zo.forEach(t),Qn=d(a),u(Zt.$$.fragment,a),Zn=d(a),Re=s(a,"P",{});var Bo=l(Re);cm=n(Bo,"Another way to register a callback is to call "),vn=s(Bo,"CODE",{});var Yh=l(vn);dm=n(Yh,"trainer.add_callback()"),Yh.forEach(t),mm=n(Bo," as follows:"),Bo.forEach(t),eo=d(a),u(ea.$$.fragment,a),to=d(a),ge=s(a,"H2",{class:!0});var Vo=l(ge);qe=s(Vo,"A",{id:!0,class:!0,href:!0});var Xh=l(qe);En=s(Xh,"SPAN",{});var Kh=l(En);u(ta.$$.fragment,Kh),Kh.forEach(t),Xh.forEach(t),fm=d(Vo),kn=s(Vo,"SPAN",{});var Qh=l(kn);hm=n(Qh,"TrainerState"),Qh.forEach(t),Vo.forEach(t),ao=d(a),O=s(a,"DIV",{class:!0});var Q=l(O);u(aa.$$.fragment,Q),pm=d(Q),be=s(Q,"P",{});var cr=l(be);gm=n(cr,"A class containing the "),Xa=s(cr,"A",{href:!0});var Zh=l(Xa);bm=n(Zh,"Trainer"),Zh.forEach(t),um=n(cr,` inner state that will be saved along the model and optimizer when checkpointing
and passed to the `),Ka=s(cr,"A",{href:!0});var ep=l(Ka);_m=n(ep,"TrainerCallback"),ep.forEach(t),vm=n(cr,"."),cr.forEach(t),Em=d(Q),u(Ue.$$.fragment,Q),km=d(Q),He=s(Q,"DIV",{class:!0});var Ro=l(He);u(ra.$$.fragment,Ro),Tm=d(Ro),na=s(Ro,"P",{});var qo=l(na);$m=n(qo,"Create an instance from the content of "),Tn=s(qo,"CODE",{});var tp=l(Tn);Cm=n(tp,"json_path"),tp.forEach(t),wm=n(qo,"."),qo.forEach(t),Ro.forEach(t),ym=d(Q),Ge=s(Q,"DIV",{class:!0});var Uo=l(Ge);u(oa.$$.fragment,Uo),Am=d(Uo),sa=s(Uo,"P",{});var Ho=l(sa);Dm=n(Ho,"Save the content of this instance in JSON format inside "),$n=s(Ho,"CODE",{});var ap=l($n);Lm=n(ap,"json_path"),ap.forEach(t),Sm=n(Ho,"."),Ho.forEach(t),Uo.forEach(t),Q.forEach(t),ro=d(a),ue=s(a,"H2",{class:!0});var Go=l(ue);Je=s(Go,"A",{id:!0,class:!0,href:!0});var rp=l(Je);Cn=s(rp,"SPAN",{});var np=l(Cn);u(la.$$.fragment,np),np.forEach(t),rp.forEach(t),xm=d(Go),wn=s(Go,"SPAN",{});var op=l(wn);Om=n(op,"TrainerControl"),op.forEach(t),Go.forEach(t),no=d(a),_e=s(a,"DIV",{class:!0});var Jo=l(_e);u(ia.$$.fragment,Jo),Pm=d(Jo),ve=s(Jo,"P",{});var dr=l(ve);Im=n(dr,"A class that handles the "),Qa=s(dr,"A",{href:!0});var sp=l(Qa);Mm=n(sp,"Trainer"),sp.forEach(t),Fm=n(dr," control flow. This class is used by the "),Za=s(dr,"A",{href:!0});var lp=l(Za);Nm=n(lp,"TrainerCallback"),lp.forEach(t),jm=n(dr,` to activate some
switches in the training loop.`),dr.forEach(t),Jo.forEach(t),this.h()},h(){i(w,"name","hf:doc:metadata"),i(w,"content",JSON.stringify(bp)),i(F,"id","callbacks"),i(F,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(F,"href","#callbacks"),i(S,"class","relative group"),i(fa,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(ha,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerControl"),i(pa,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(ga,"href","trainer"),i(ba,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(_a,"href","/docs/transformers/main/en/main_classes/callback#transformers.DefaultFlowCallback"),i(va,"href","/docs/transformers/main/en/main_classes/callback#transformers.PrinterCallback"),i(Ea,"href","/docs/transformers/main/en/main_classes/callback#transformers.ProgressCallback"),i(ka,"href","/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments"),i($a,"href","/docs/transformers/main/en/main_classes/callback#transformers.integrations.TensorBoardCallback"),i(Ca,"href","/docs/transformers/main/en/main_classes/callback#transformers.integrations.WandbCallback"),i(at,"href","https://www.wandb.com/"),i(at,"rel","nofollow"),i(wa,"href","/docs/transformers/main/en/main_classes/callback#transformers.integrations.CometCallback"),i(rt,"href","https://www.comet.ml/site/"),i(rt,"rel","nofollow"),i(ya,"href","/docs/transformers/main/en/main_classes/callback#transformers.integrations.MLflowCallback"),i(nt,"href","https://www.mlflow.org/"),i(nt,"rel","nofollow"),i(Aa,"href","/docs/transformers/main/en/main_classes/callback#transformers.integrations.AzureMLCallback"),i(ot,"href","https://pypi.org/project/azureml-sdk/"),i(ot,"rel","nofollow"),i(Da,"href","/docs/transformers/main/en/main_classes/callback#transformers.integrations.CodeCarbonCallback"),i(st,"href","https://pypi.org/project/codecarbon/"),i(st,"rel","nofollow"),i(La,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(Sa,"href","/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments"),i(xa,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(Oa,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerState"),i(Pa,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerControl"),i(Ae,"id","transformers.integrations.CometCallback"),i(Ae,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ae,"href","#transformers.integrations.CometCallback"),i(ae,"class","relative group"),i(Ia,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(Ma,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(ct,"href","https://www.comet.ml/site/"),i(ct,"rel","nofollow"),i(ft,"href","https://www.comet.ml/docs/python-sdk/advanced/#comet-configuration-variables"),i(ft,"rel","nofollow"),i(j,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(q,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Fa,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(ne,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Na,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(oe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(ja,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(se,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Wa,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(za,"href","/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments"),i(Ba,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerState"),i(U,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Va,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(Tt,"href","https://www.tensorflow.org/tensorboard"),i(Tt,"rel","nofollow"),i(le,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ra,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(Ct,"href","https://www.wandb.com/"),i(Ct,"rel","nofollow"),i(Dt,"href","https://docs.wandb.ai/integrations/huggingface"),i(Dt,"rel","nofollow"),i(W,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(G,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(qa,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(St,"href","https://www.mlflow.org/"),i(St,"rel","nofollow"),i(Ua,"href","/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments"),i(z,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(J,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ha,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(Pt,"href","https://pypi.org/project/azureml-sdk/"),i(Pt,"rel","nofollow"),i(me,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ga,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(he,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Le,"id","transformers.TrainerCallback"),i(Le,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Le,"href","#transformers.TrainerCallback"),i(pe,"class","relative group"),i(Se,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(xe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Oe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ja,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(Pe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ie,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Me,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Fe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ne,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(je,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(We,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(ze,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Be,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(p,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ya,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(qe,"id","transformers.TrainerState"),i(qe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(qe,"href","#transformers.TrainerState"),i(ge,"class","relative group"),i(Xa,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(Ka,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(He,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ge,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(O,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Je,"id","transformers.TrainerControl"),i(Je,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Je,"href","#transformers.TrainerControl"),i(ue,"class","relative group"),i(Qa,"href","/docs/transformers/main/en/main_classes/trainer#transformers.Trainer"),i(Za,"href","/docs/transformers/main/en/main_classes/callback#transformers.TrainerCallback"),i(_e,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(a,m){e(document.head,w),f(a,Ee,m),f(a,S,m),e(S,F),e(F,Z),_(P,Z,null),e(S,tt),e(S,ee),e(ee,te),f(a,I,m),f(a,R,m),e(R,ma),e(R,fa),e(fa,Yo),e(R,Xo),f(a,Pn,m),f(a,N,m),e(N,Ko),e(N,ha),e(ha,Qo),e(N,Zo),e(N,pa),e(pa,es),e(N,ts),e(N,ga),e(ga,as),e(N,rs),f(a,In,m),f(a,ke,m),e(ke,ns),e(ke,ba),e(ba,os),e(ke,ss),f(a,Mn,m),f(a,y,m),e(y,ua),e(ua,_a),e(_a,ls),e(ua,is),e(y,cs),e(y,X),e(X,va),e(va,ds),e(X,ms),e(X,Ea),e(Ea,fs),e(X,hs),e(X,ka),e(ka,ps),e(X,gs),e(y,bs),e(y,Ta),e(Ta,$a),e($a,us),e(Ta,_s),e(y,vs),e(y,Te),e(Te,Ca),e(Ca,Es),e(Te,ks),e(Te,at),e(at,Ts),e(Te,$s),e(y,Cs),e(y,$e),e($e,wa),e(wa,ws),e($e,ys),e($e,rt),e(rt,As),e($e,Ds),e(y,Ls),e(y,Ce),e(Ce,ya),e(ya,Ss),e(Ce,xs),e(Ce,nt),e(nt,Os),e(Ce,Ps),e(y,Is),e(y,we),e(we,Aa),e(Aa,Ms),e(we,Fs),e(we,ot),e(ot,Ns),e(we,js),e(y,Ws),e(y,ye),e(ye,Da),e(Da,zs),e(ye,Bs),e(ye,st),e(st,Vs),e(ye,Rs),f(a,Fn,m),f(a,D,m),e(D,qs),e(D,La),e(La,Us),e(D,Hs),e(D,Sa),e(Sa,Gs),e(D,Js),e(D,xa),e(xa,Ys),e(D,Xs),e(D,Oa),e(Oa,Ks),e(D,Qs),e(D,Pa),e(Pa,Zs),e(D,el),f(a,Nn,m),f(a,ae,m),e(ae,Ae),e(Ae,mr),_(lt,mr,null),e(ae,tl),e(ae,fr),e(fr,al),f(a,jn,m),f(a,De,m),e(De,rl),e(De,Ia),e(Ia,nl),e(De,ol),f(a,Wn,m),f(a,q,m),_(it,q,null),e(q,sl),e(q,re),e(re,ll),e(re,Ma),e(Ma,il),e(re,cl),e(re,ct),e(ct,dl),e(re,ml),e(q,fl),e(q,j),_(dt,j,null),e(j,hl),e(j,hr),e(hr,pl),e(j,gl),e(j,C),e(C,bl),e(C,pr),e(pr,ul),e(C,_l),e(C,gr),e(gr,vl),e(C,El),e(C,br),e(br,kl),e(C,Tl),e(C,ur),e(ur,$l),e(C,Cl),e(C,_r),e(_r,wl),e(C,yl),e(C,vr),e(vr,Al),e(C,Dl),e(C,Er),e(Er,Ll),e(C,Sl),e(C,kr),e(kr,xl),e(C,Ol),e(C,Tr),e(Tr,Pl),e(C,Il),e(j,Ml),e(j,mt),e(mt,Fl),e(mt,ft),e(ft,Nl),e(mt,jl),f(a,zn,m),f(a,ne,m),_(ht,ne,null),e(ne,Wl),e(ne,pt),e(pt,zl),e(pt,Fa),e(Fa,Bl),e(pt,Vl),f(a,Bn,m),f(a,oe,m),_(gt,oe,null),e(oe,Rl),e(oe,bt),e(bt,ql),e(bt,Na),e(Na,Ul),e(bt,Hl),f(a,Vn,m),f(a,se,m),_(ut,se,null),e(se,Gl),e(se,_t),e(_t,Jl),e(_t,ja),e(ja,Yl),e(_t,Xl),f(a,Rn,m),f(a,U,m),_(vt,U,null),e(U,Kl),e(U,Et),e(Et,Ql),e(Et,Wa),e(Wa,Zl),e(Et,ei),e(U,ti),e(U,H),e(H,ai),e(H,za),e(za,ri),e(H,ni),e(H,$r),e($r,oi),e(H,si),e(H,Ba),e(Ba,li),e(H,ii),f(a,qn,m),f(a,le,m),_(kt,le,null),e(le,ci),e(le,ie),e(ie,di),e(ie,Va),e(Va,mi),e(ie,fi),e(ie,Tt),e(Tt,hi),e(ie,pi),f(a,Un,m),f(a,G,m),_($t,G,null),e(G,gi),e(G,ce),e(ce,bi),e(ce,Ra),e(Ra,ui),e(ce,_i),e(ce,Ct),e(Ct,vi),e(ce,Ei),e(G,ki),e(G,W),_(wt,W,null),e(W,Ti),e(W,yt),e(yt,$i),e(yt,Cr),e(Cr,Ci),e(yt,wi),e(W,yi),e(W,At),e(At,Ai),e(At,Dt),e(Dt,Di),e(At,Li),e(W,Si),e(W,h),e(h,xi),e(h,wr),e(wr,Oi),e(h,Pi),e(h,yr),e(yr,Ii),e(h,Mi),e(h,Ar),e(Ar,Fi),e(h,Ni),e(h,Dr),e(Dr,ji),e(h,Wi),e(h,Lr),e(Lr,zi),e(h,Bi),e(h,Sr),e(Sr,Vi),e(h,Ri),e(h,xr),e(xr,qi),e(h,Ui),e(h,Or),e(Or,Hi),e(h,Gi),e(h,Pr),e(Pr,Ji),e(h,Yi),e(h,Ir),e(Ir,Xi),e(h,Ki),e(h,Mr),e(Mr,Qi),e(h,Zi),e(h,Fr),e(Fr,ec),e(h,tc),e(h,Nr),e(Nr,ac),e(h,rc),e(h,jr),e(jr,nc),e(h,oc),e(h,Wr),e(Wr,sc),e(h,lc),e(h,zr),e(zr,ic),e(h,cc),e(h,Br),e(Br,dc),e(h,mc),e(h,Vr),e(Vr,fc),e(h,hc),e(h,Rr),e(Rr,pc),e(h,gc),f(a,Hn,m),f(a,J,m),_(Lt,J,null),e(J,bc),e(J,Y),e(Y,uc),e(Y,qa),e(qa,_c),e(Y,vc),e(Y,St),e(St,Ec),e(Y,kc),e(Y,qr),e(qr,Tc),e(Y,$c),e(J,Cc),e(J,z),_(xt,z,null),e(z,wc),e(z,Ur),e(Ur,yc),e(z,Ac),e(z,de),e(de,Dc),e(de,Hr),e(Hr,Lc),e(de,Sc),e(de,Gr),e(Gr,xc),e(de,Oc),e(z,Pc),e(z,M),e(M,Ic),e(M,Jr),e(Jr,Mc),e(M,Fc),e(M,Yr),e(Yr,Nc),e(M,jc),e(M,Ua),e(Ua,Wc),e(M,zc),e(M,Xr),e(Xr,Bc),e(M,Vc),f(a,Gn,m),f(a,me,m),_(Ot,me,null),e(me,Rc),e(me,fe),e(fe,qc),e(fe,Ha),e(Ha,Uc),e(fe,Hc),e(fe,Pt),e(Pt,Gc),e(fe,Jc),f(a,Jn,m),f(a,he,m),_(It,he,null),e(he,Yc),e(he,Mt),e(Mt,Xc),e(Mt,Ga),e(Ga,Kc),e(Mt,Qc),f(a,Yn,m),f(a,pe,m),e(pe,Le),e(Le,Kr),_(Ft,Kr,null),e(pe,Zc),e(pe,Qr),e(Qr,ed),f(a,Xn,m),f(a,p,m),_(Nt,p,null),e(p,td),e(p,Zr),e(Zr,ad),e(p,rd),e(p,jt),e(jt,nd),e(jt,en),e(en,od),e(jt,sd),e(p,ld),e(p,x),e(x,id),e(x,tn),e(tn,cd),e(x,dd),e(x,an),e(an,md),e(x,fd),e(x,rn),e(rn,hd),e(x,pd),e(x,nn),e(nn,gd),e(x,bd),e(x,on),e(on,ud),e(x,_d),e(p,vd),e(p,sn),e(sn,Ed),e(p,kd),_(Wt,p,null),e(p,Td),e(p,Se),_(zt,Se,null),e(Se,$d),e(Se,ln),e(ln,Cd),e(p,wd),e(p,xe),_(Bt,xe,null),e(xe,yd),e(xe,cn),e(cn,Ad),e(p,Dd),e(p,Oe),_(Vt,Oe,null),e(Oe,Ld),e(Oe,dn),e(dn,Sd),e(p,xd),e(p,Pe),_(Rt,Pe,null),e(Pe,Od),e(Pe,qt),e(qt,Pd),e(qt,Ja),e(Ja,Id),e(qt,Md),e(p,Fd),e(p,Ie),_(Ut,Ie,null),e(Ie,Nd),e(Ie,mn),e(mn,jd),e(p,Wd),e(p,Me),_(Ht,Me,null),e(Me,zd),e(Me,fn),e(fn,Bd),e(p,Vd),e(p,Fe),_(Gt,Fe,null),e(Fe,Rd),e(Fe,hn),e(hn,qd),e(p,Ud),e(p,Ne),_(Jt,Ne,null),e(Ne,Hd),e(Ne,pn),e(pn,Gd),e(p,Jd),e(p,je),_(Yt,je,null),e(je,Yd),e(je,gn),e(gn,Xd),e(p,Kd),e(p,We),_(Xt,We,null),e(We,Qd),e(We,bn),e(bn,Zd),e(p,em),e(p,ze),_(Kt,ze,null),e(ze,tm),e(ze,un),e(un,am),e(p,rm),e(p,Be),_(Qt,Be,null),e(Be,nm),e(Be,_n),e(_n,om),f(a,Kn,m),f(a,Ve,m),e(Ve,sm),e(Ve,Ya),e(Ya,lm),e(Ve,im),f(a,Qn,m),_(Zt,a,m),f(a,Zn,m),f(a,Re,m),e(Re,cm),e(Re,vn),e(vn,dm),e(Re,mm),f(a,eo,m),_(ea,a,m),f(a,to,m),f(a,ge,m),e(ge,qe),e(qe,En),_(ta,En,null),e(ge,fm),e(ge,kn),e(kn,hm),f(a,ao,m),f(a,O,m),_(aa,O,null),e(O,pm),e(O,be),e(be,gm),e(be,Xa),e(Xa,bm),e(be,um),e(be,Ka),e(Ka,_m),e(be,vm),e(O,Em),_(Ue,O,null),e(O,km),e(O,He),_(ra,He,null),e(He,Tm),e(He,na),e(na,$m),e(na,Tn),e(Tn,Cm),e(na,wm),e(O,ym),e(O,Ge),_(oa,Ge,null),e(Ge,Am),e(Ge,sa),e(sa,Dm),e(sa,$n),e($n,Lm),e(sa,Sm),f(a,ro,m),f(a,ue,m),e(ue,Je),e(Je,Cn),_(la,Cn,null),e(ue,xm),e(ue,wn),e(wn,Om),f(a,no,m),f(a,_e,m),_(ia,_e,null),e(_e,Pm),e(_e,ve),e(ve,Im),e(ve,Qa),e(Qa,Mm),e(ve,Fm),e(ve,Za),e(Za,Nm),e(ve,jm),oo=!0},p(a,[m]){const ca={};m&2&&(ca.$$scope={dirty:m,ctx:a}),Ue.$set(ca)},i(a){oo||(v(P.$$.fragment,a),v(lt.$$.fragment,a),v(it.$$.fragment,a),v(dt.$$.fragment,a),v(ht.$$.fragment,a),v(gt.$$.fragment,a),v(ut.$$.fragment,a),v(vt.$$.fragment,a),v(kt.$$.fragment,a),v($t.$$.fragment,a),v(wt.$$.fragment,a),v(Lt.$$.fragment,a),v(xt.$$.fragment,a),v(Ot.$$.fragment,a),v(It.$$.fragment,a),v(Ft.$$.fragment,a),v(Nt.$$.fragment,a),v(Wt.$$.fragment,a),v(zt.$$.fragment,a),v(Bt.$$.fragment,a),v(Vt.$$.fragment,a),v(Rt.$$.fragment,a),v(Ut.$$.fragment,a),v(Ht.$$.fragment,a),v(Gt.$$.fragment,a),v(Jt.$$.fragment,a),v(Yt.$$.fragment,a),v(Xt.$$.fragment,a),v(Kt.$$.fragment,a),v(Qt.$$.fragment,a),v(Zt.$$.fragment,a),v(ea.$$.fragment,a),v(ta.$$.fragment,a),v(aa.$$.fragment,a),v(Ue.$$.fragment,a),v(ra.$$.fragment,a),v(oa.$$.fragment,a),v(la.$$.fragment,a),v(ia.$$.fragment,a),oo=!0)},o(a){E(P.$$.fragment,a),E(lt.$$.fragment,a),E(it.$$.fragment,a),E(dt.$$.fragment,a),E(ht.$$.fragment,a),E(gt.$$.fragment,a),E(ut.$$.fragment,a),E(vt.$$.fragment,a),E(kt.$$.fragment,a),E($t.$$.fragment,a),E(wt.$$.fragment,a),E(Lt.$$.fragment,a),E(xt.$$.fragment,a),E(Ot.$$.fragment,a),E(It.$$.fragment,a),E(Ft.$$.fragment,a),E(Nt.$$.fragment,a),E(Wt.$$.fragment,a),E(zt.$$.fragment,a),E(Bt.$$.fragment,a),E(Vt.$$.fragment,a),E(Rt.$$.fragment,a),E(Ut.$$.fragment,a),E(Ht.$$.fragment,a),E(Gt.$$.fragment,a),E(Jt.$$.fragment,a),E(Yt.$$.fragment,a),E(Xt.$$.fragment,a),E(Kt.$$.fragment,a),E(Qt.$$.fragment,a),E(Zt.$$.fragment,a),E(ea.$$.fragment,a),E(ta.$$.fragment,a),E(aa.$$.fragment,a),E(Ue.$$.fragment,a),E(ra.$$.fragment,a),E(oa.$$.fragment,a),E(la.$$.fragment,a),E(ia.$$.fragment,a),oo=!1},d(a){t(w),a&&t(Ee),a&&t(S),k(P),a&&t(I),a&&t(R),a&&t(Pn),a&&t(N),a&&t(In),a&&t(ke),a&&t(Mn),a&&t(y),a&&t(Fn),a&&t(D),a&&t(Nn),a&&t(ae),k(lt),a&&t(jn),a&&t(De),a&&t(Wn),a&&t(q),k(it),k(dt),a&&t(zn),a&&t(ne),k(ht),a&&t(Bn),a&&t(oe),k(gt),a&&t(Vn),a&&t(se),k(ut),a&&t(Rn),a&&t(U),k(vt),a&&t(qn),a&&t(le),k(kt),a&&t(Un),a&&t(G),k($t),k(wt),a&&t(Hn),a&&t(J),k(Lt),k(xt),a&&t(Gn),a&&t(me),k(Ot),a&&t(Jn),a&&t(he),k(It),a&&t(Yn),a&&t(pe),k(Ft),a&&t(Xn),a&&t(p),k(Nt),k(Wt),k(zt),k(Bt),k(Vt),k(Rt),k(Ut),k(Ht),k(Gt),k(Jt),k(Yt),k(Xt),k(Kt),k(Qt),a&&t(Kn),a&&t(Ve),a&&t(Qn),k(Zt,a),a&&t(Zn),a&&t(Re),a&&t(eo),k(ea,a),a&&t(to),a&&t(ge),k(ta),a&&t(ao),a&&t(O),k(aa),k(Ue),k(ra),k(oa),a&&t(ro),a&&t(ue),k(la),a&&t(no),a&&t(_e),k(ia)}}}const bp={local:"callbacks",sections:[{local:"transformers.integrations.CometCallback",title:"Available Callbacks"},{local:"transformers.TrainerCallback",title:"TrainerCallback"},{local:"transformers.TrainerState",title:"TrainerState"},{local:"transformers.TrainerControl",title:"TrainerControl"}],title:"Callbacks"};function up(On){return fp(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class $p extends ip{constructor(w){super();cp(this,w,up,gp,dp,{})}}export{$p as default,bp as metadata};
