import{S as x4,i as P4,s as $4,e as s,k as h,w as c,t as m,U as G,M as M4,c as i,d as t,m as f,a as n,x as d,h as p,V as I,b as o,N as u,F as a,g as l,y as v,L as L4,q as g,o as b,B as w}from"../chunks/vendor-68651a14.js";import{I as _}from"../chunks/IconCopyLink-8ff17449.js";function R4(gd){let B,gi,L,N,An,_t,bd,Tn,wd,Gh,k,_d,yt,yd,Ed,Et,kd,Ad,bi,Td,xd,kt,Pd,$d,Ih,wi,Md,Bh,A,xn,_i,Ld,Rd,Pn,yi,Sd,qd,$n,Ei,Nd,Gd,Mn,ki,Id,Bd,Ln,Ai,Dd,Dh,x,O_,Ch,Ti,Cd,zh,xi,zd,Hh,Pi,Hd,jh,$i,jd,Fh,Mi,Fd,Uh,Li,Xh,K,Le,Rn,At,Ud,Sn,Xd,Yh,Ri,Yd,Zh,P,W_,Kh,O,Re,qn,Tt,Zd,Nn,Kd,Oh,xt,Si,J_,Wh,Pt,qi,Q_,Jh,$t,Mt,Od,Wd,Qh,Ni,Jd,Vh,Gi,Qd,ef,W,Se,Gn,Lt,Vd,In,ev,tf,Rt,Ii,V_,af,St,Bi,ey,sf,qt,Nt,tv,av,rf,Di,sv,lf,Ci,iv,nf,J,qe,Bn,Gt,rv,Dn,lv,of,It,zi,ty,hf,Bt,Hi,ay,ff,Dt,Ct,nv,ov,mf,ji,hv,pf,Fi,fv,uf,Q,Ne,Cn,zt,mv,zn,pv,cf,Ht,Ui,sy,df,jt,Xi,iy,vf,Ft,Ut,uv,cv,gf,Yi,dv,bf,Zi,vv,wf,Ki,gv,_f,Oi,bv,yf,Wi,Ef,V,Ge,Hn,Xt,wv,jn,_v,kf,Yt,Ji,ry,Af,Zt,Qi,ly,Tf,Kt,Ot,yv,Ev,xf,Vi,kv,Pf,R,Wt,Av,er,Tv,xv,Pv,Jt,$v,tr,Mv,Lv,Rv,Fn,Sv,qv,Un,Nv,$f,ar,Gv,Mf,Qt,Xn,Iv,Bv,Lf,sr,Dv,Rf,ee,Ie,Yn,Vt,Cv,Zn,zv,Sf,ea,ir,ny,qf,ta,rr,oy,Nf,aa,sa,Hv,jv,Gf,lr,Fv,If,nr,Uv,Bf,or,Xv,Df,hr,Cf,te,Be,Kn,ia,Yv,On,Zv,zf,fr,Kv,Hf,$,hy,jf,ae,De,Wn,ra,Ov,Jn,Wv,Ff,la,mr,fy,Uf,na,pr,my,Xf,oa,ha,Jv,Qv,Yf,ur,Vv,Zf,D,Qn,eg,tg,Vn,ag,sg,eo,ig,Kf,cr,rg,Of,dr,lg,Wf,se,Ce,to,fa,ng,ao,og,Jf,ma,vr,py,Qf,pa,gr,uy,Vf,ua,ca,hg,fg,em,br,mg,tm,C,so,pg,ug,io,cg,dg,ro,vg,am,wr,gg,sm,ie,ze,lo,da,bg,no,wg,im,va,_r,cy,rm,ga,yr,dy,lm,ba,wa,_g,yg,nm,Er,Eg,om,S,oo,kg,Ag,ho,Tg,xg,fo,Pg,$g,mo,Mg,hm,kr,Lg,fm,re,He,po,_a,Rg,uo,Sg,mm,ya,Ar,vy,pm,Ea,Tr,gy,um,ka,Aa,qg,Ng,cm,xr,Gg,dm,z,co,Ig,Bg,vo,Dg,Cg,go,zg,vm,Pr,Hg,gm,le,je,bo,Ta,jg,wo,Fg,bm,xa,$r,by,wm,Pa,Mr,wy,_m,$a,Ma,Ug,Xg,ym,Lr,Yg,Em,Rr,Zg,km,ne,Fe,_o,La,Kg,yo,Og,Am,Ra,Sr,_y,Tm,Sa,qr,yy,xm,qa,Na,Wg,Jg,Pm,Nr,Qg,$m,H,Eo,Vg,e1,ko,t1,a1,Ao,s1,Mm,q,i1,To,r1,l1,xo,n1,o1,Po,h1,f1,Lm,Gr,m1,Rm,oe,Ue,$o,Ga,p1,Mo,u1,Sm,Ia,Ir,Ey,qm,Ba,Br,ky,Nm,Da,Ca,c1,d1,Gm,Dr,v1,Im,Cr,g1,Bm,he,Xe,Lo,za,b1,Ro,w1,Dm,Ha,zr,Ay,Cm,ja,Hr,Ty,zm,Fa,Ua,_1,y1,Hm,jr,E1,jm,Fr,k1,Fm,fe,Ye,So,Xa,A1,qo,T1,Um,Ya,Ur,xy,Xm,Za,Xr,Py,Ym,Ka,Oa,x1,P1,Zm,Yr,$1,Km,Zr,M1,Om,me,Ze,No,Wa,L1,Go,R1,Wm,Ja,Kr,$y,Jm,Qa,Or,My,Qm,Va,es,S1,q1,Vm,Wr,N1,ep,Jr,G1,tp,Qr,I1,ap,Vr,B1,sp,el,ip,pe,Ke,Io,ts,D1,Bo,C1,rp,as,tl,Ly,lp,ss,al,Ry,np,is,rs,z1,H1,op,Oe,j1,sl,F1,U1,hp,il,X1,fp,ls,Do,Y1,Z1,mp,rl,K1,pp,ll,up,ue,We,Co,ns,O1,zo,W1,cp,nl,J1,dp,M,Sy,vp,ce,Je,Ho,os,Q1,jo,V1,gp,hs,ol,qy,bp,fs,hl,Ny,wp,ms,ps,eb,tb,_p,fl,ab,yp,T,Fo,sb,ib,Uo,rb,lb,Xo,nb,ob,Yo,hb,fb,Zo,mb,Ep,ml,pb,kp,de,Qe,Ko,us,ub,Oo,cb,Ap,cs,pl,Gy,Tp,ds,ul,Iy,xp,vs,gs,db,vb,Pp,cl,gb,$p,Ve,Wo,bb,wb,Jo,_b,Mp,dl,yb,Lp,vl,Eb,Rp,ve,et,Qo,bs,kb,Vo,Ab,Sp,ws,gl,By,qp,_s,bl,Dy,Np,ys,Es,Tb,xb,Gp,wl,Pb,Ip,_l,$b,Bp,ge,tt,eh,ks,Mb,th,Lb,Dp,As,yl,Cy,Cp,Ts,El,zy,zp,xs,Ps,Rb,Sb,Hp,kl,qb,jp,Al,Nb,Fp,Tl,Gb,Up,xl,Ib,Xp,Pl,Bb,Yp,be,at,ah,$s,Db,sh,Cb,Zp,Ms,$l,Hy,Kp,Ls,Ml,jy,Op,Rs,Ss,zb,Hb,Wp,Ll,jb,Jp,Rl,Fb,Qp,we,st,ih,qs,Ub,rh,Xb,Vp,Ns,Sl,Fy,eu,Gs,ql,Uy,tu,Is,Bs,Yb,Zb,au,Nl,Kb,su,Gl,Ob,iu,it,Wb,Ds,Jb,Qb,ru,j,Vb,Cs,ew,tw,lh,aw,sw,lu,_e,rt,nh,zs,iw,oh,rw,nu,Hs,Il,Xy,ou,js,Bl,Yy,hu,Fs,Us,lw,nw,fu,F,ow,hh,hw,fw,fh,mw,pw,mu,Dl,uw,pu,ye,lt,mh,Xs,cw,ph,dw,uu,Ys,Cl,Zy,cu,Zs,zl,Ky,du,Ks,Os,vw,gw,vu,nt,bw,Ws,ww,_w,gu,Hl,yw,bu,jl,wu,Ee,ot,uh,Js,Ew,ch,kw,_u,Fl,Aw,yu,ke,ht,dh,Qs,Tw,vh,xw,Eu,Vs,ei,Pw,$w,ku,Ul,Mw,Au,Xl,Lw,Tu,Yl,Rw,xu,Zl,Pu,Ae,ft,gh,ti,Sw,bh,qw,$u,Kl,Nw,Mu,Te,mt,wh,ai,Gw,_h,Iw,Lu,si,Ol,Oy,Ru,ii,Wl,Wy,Su,ri,li,Bw,Dw,qu,Jl,Cw,Nu,Ql,zw,Gu,U,yh,Hw,jw,Eh,Fw,Uw,kh,Xw,Iu,Vl,Yw,Bu,xe,pt,Ah,ni,Zw,Th,Kw,Du,oi,en,Jy,Cu,hi,tn,Qy,zu,fi,mi,Ow,Ww,Hu,an,Jw,ju,sn,Qw,Fu,Pe,ut,xh,pi,Vw,Ph,e_,Uu,$e,ct,$h,ui,t_,Mh,a_,Xu,rn,s_,Yu,ln,Zu,nn,Lh,i_,Ku,ci,on,r_,l_,Ou,hn,Wu,fn,Rh,n_,Ju,di,mn,o_,h_,Qu,pn,f_,Vu,dt,Vy,ec,un,m_,tc,Me,vt,Sh,vi,p_,qh,u_,ac,cn,sc,dn,Nh,c_,ic,y,vn,d_,v_,rc,d4='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span>',lc,nc,v4='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span>',oc,hc,g4='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span>',fc,mc,b4='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span>',pc,uc,w4='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mn>1</mn></msub><mo>\xD7</mo><msub><mi>d</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">l_{1} \\times d_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">\xD7</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>',cc,dc,_4='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mn>2</mn></msub><mo>\xD7</mo><msub><mi>d</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">l_{2} \\times d_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">\xD7</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>',vc,gc,y4='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mn>1</mn></msub><mo>\xD7</mo><msub><mi>l</mi><mn>2</mn></msub><mo>=</mo><mi>l</mi></mrow><annotation encoding="application/x-tex">l_{1} \\times l_{2} = l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">\xD7</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span>',bc,wc,E4='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mn>1</mn></msub><mo>+</mo><msub><mi>d</mi><mn>2</mn></msub><mo>=</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">d_{1} + d_{2} = d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span>',_c,yc,k4='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>',Ec,kc,A4='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mi mathvariant="normal">%</mi><mi>l</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">j \\% l1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9444em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord">%</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord">1</span></span></span></span>',Ac,Tc,T4='<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>l</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">j // l1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord">//</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord">1</span></span></span></span>',xc,Pc;return _t=new _({}),At=new _({}),Tt=new _({}),Lt=new _({}),Gt=new _({}),zt=new _({}),Xt=new _({}),Vt=new _({}),ia=new _({}),ra=new _({}),fa=new _({}),da=new _({}),_a=new _({}),Ta=new _({}),La=new _({}),Ga=new _({}),za=new _({}),Xa=new _({}),Wa=new _({}),ts=new _({}),ns=new _({}),os=new _({}),us=new _({}),bs=new _({}),ks=new _({}),$s=new _({}),qs=new _({}),zs=new _({}),Xs=new _({}),Js=new _({}),Qs=new _({}),ti=new _({}),ai=new _({}),ni=new _({}),pi=new _({}),ui=new _({}),vi=new _({}),{c(){B=s("meta"),gi=h(),L=s("h1"),N=s("a"),An=s("span"),c(_t.$$.fragment),bd=h(),Tn=s("span"),wd=m("Summary of the models"),Gh=h(),k=s("p"),_d=m("This is a summary of the models available in \u{1F917} Transformers. It assumes you\u2019re familiar with the original "),yt=s("a"),yd=m(`transformer
model`),Ed=m(". For a gentle introduction check the "),Et=s("a"),kd=m("annotated transformer"),Ad=m(`. Here we focus on the high-level differences between the
models. You can check them more in detail in their respective documentation. Also check out the `),bi=s("a"),Td=m(`pretrained model
page`),xd=m(" to see the checkpoints available for each type of model and all "),kt=s("a"),Pd=m("the community models"),$d=m("."),Ih=h(),wi=s("p"),Md=m("Each one of the models in the library falls into one of the following categories:"),Bh=h(),A=s("ul"),xn=s("li"),_i=s("a"),Ld=m("autoregressive-models"),Rd=h(),Pn=s("li"),yi=s("a"),Sd=m("autoencoding-models"),qd=h(),$n=s("li"),Ei=s("a"),Nd=m("seq-to-seq-models"),Gd=h(),Mn=s("li"),ki=s("a"),Id=m("multimodal-models"),Bd=h(),Ln=s("li"),Ai=s("a"),Dd=m("retrieval-based-models"),Dh=h(),x=s("iframe"),Ch=h(),Ti=s("p"),Cd=m(`Autoregressive models are pretrained on the classic language modeling task: guess the next token having read all the
previous ones. They correspond to the decoder of the original transformer model, and a mask is used on top of the full
sentence so that the attention heads can only see what was before in the text, and not what\u2019s after. Although those
models can be fine-tuned and achieve great results on many tasks, the most natural application is text generation. A
typical example of such models is GPT.`),zh=h(),xi=s("p"),zd=m(`Autoencoding models are pretrained by corrupting the input tokens in some way and trying to reconstruct the original
sentence. They correspond to the encoder of the original transformer model in the sense that they get access to the
full inputs without any mask. Those models usually build a bidirectional representation of the whole sentence. They can
be fine-tuned and achieve great results on many tasks such as text generation, but their most natural application is
sentence classification or token classification. A typical example of such models is BERT.`),Hh=h(),Pi=s("p"),Hd=m(`Note that the only difference between autoregressive models and autoencoding models is in the way the model is
pretrained. Therefore, the same architecture can be used for both autoregressive and autoencoding models. When a given
model has been used for both types of pretraining, we have put it in the category corresponding to the article where it
was first introduced.`),jh=h(),$i=s("p"),jd=m(`Sequence-to-sequence models use both the encoder and the decoder of the original transformer, either for translation
tasks or by transforming other tasks to sequence-to-sequence problems. They can be fine-tuned to many tasks but their
most natural applications are translation, summarization and question answering. The original transformer model is an
example of such a model (only for translation), T5 is an example that can be fine-tuned on other tasks.`),Fh=h(),Mi=s("p"),Fd=m("Multimodal models mix text inputs with other kinds (e.g. images) and are more specific to a given task."),Uh=h(),Li=s("a"),Xh=h(),K=s("h2"),Le=s("a"),Rn=s("span"),c(At.$$.fragment),Ud=h(),Sn=s("span"),Xd=m("Decoders or autoregressive models"),Yh=h(),Ri=s("p"),Yd=m(`As mentioned before, these models rely on the decoder part of the original transformer and use an attention mask so
that at each position, the model can only look at the tokens before the attention heads.`),Zh=h(),P=s("iframe"),Kh=h(),O=s("h3"),Re=s("a"),qn=s("span"),c(Tt.$$.fragment),Zd=h(),Nn=s("span"),Kd=m("Original GPT"),Oh=h(),xt=s("a"),Si=s("img"),Wh=h(),Pt=s("a"),qi=s("img"),Jh=h(),$t=s("p"),Mt=s("a"),Od=m("Improving Language Understanding by Generative Pre-Training"),Wd=m(", Alec Radford et al."),Qh=h(),Ni=s("p"),Jd=m("The first autoregressive model based on the transformer architecture, pretrained on the Book Corpus dataset."),Vh=h(),Gi=s("p"),Qd=m(`The library provides versions of the model for language modeling and multitask language modeling/multiple choice
classification.`),ef=h(),W=s("h3"),Se=s("a"),Gn=s("span"),c(Lt.$$.fragment),Vd=h(),In=s("span"),ev=m("GPT-2"),tf=h(),Rt=s("a"),Ii=s("img"),af=h(),St=s("a"),Bi=s("img"),sf=h(),qt=s("p"),Nt=s("a"),tv=m("Language Models are Unsupervised Multitask Learners"),av=m(`,
Alec Radford et al.`),rf=h(),Di=s("p"),sv=m(`A bigger and better version of GPT, pretrained on WebText (web pages from outgoing links in Reddit with 3 karmas or
more).`),lf=h(),Ci=s("p"),iv=m(`The library provides versions of the model for language modeling and multitask language modeling/multiple choice
classification.`),nf=h(),J=s("h3"),qe=s("a"),Bn=s("span"),c(Gt.$$.fragment),rv=h(),Dn=s("span"),lv=m("CTRL"),of=h(),It=s("a"),zi=s("img"),hf=h(),Bt=s("a"),Hi=s("img"),ff=h(),Dt=s("p"),Ct=s("a"),nv=m("CTRL: A Conditional Transformer Language Model for Controllable Generation"),ov=m(`,
Nitish Shirish Keskar et al.`),mf=h(),ji=s("p"),hv=m(`Same as the GPT model but adds the idea of control codes. Text is generated from a prompt (can be empty) and one (or
several) of those control codes which are then used to influence the text generation: generate with the style of
wikipedia article, a book or a movie review.`),pf=h(),Fi=s("p"),fv=m("The library provides a version of the model for language modeling only."),uf=h(),Q=s("h3"),Ne=s("a"),Cn=s("span"),c(zt.$$.fragment),mv=h(),zn=s("span"),pv=m("Transformer-XL"),cf=h(),Ht=s("a"),Ui=s("img"),df=h(),jt=s("a"),Xi=s("img"),vf=h(),Ft=s("p"),Ut=s("a"),uv=m("Transformer-XL: Attentive Language Models Beyond a Fixed-Length Context"),cv=m(`, Zihang
Dai et al.`),gf=h(),Yi=s("p"),dv=m(`Same as a regular GPT model, but introduces a recurrence mechanism for two consecutive segments (similar to a regular
RNNs with two consecutive inputs). In this context, a segment is a number of consecutive tokens (for instance 512) that
may span across multiple documents, and segments are fed in order to the model.`),bf=h(),Zi=s("p"),vv=m(`Basically, the hidden states of the previous segment are concatenated to the current input to compute the attention
scores. This allows the model to pay attention to information that was in the previous segment as well as the current
one. By stacking multiple attention layers, the receptive field can be increased to multiple previous segments.`),wf=h(),Ki=s("p"),gv=m(`This changes the positional embeddings to positional relative embeddings (as the regular positional embeddings would
give the same results in the current input and the current hidden state at a given position) and needs to make some
adjustments in the way attention scores are computed.`),_f=h(),Oi=s("p"),bv=m("The library provides a version of the model for language modeling only."),yf=h(),Wi=s("a"),Ef=h(),V=s("h3"),Ge=s("a"),Hn=s("span"),c(Xt.$$.fragment),wv=h(),jn=s("span"),_v=m("Reformer"),kf=h(),Yt=s("a"),Ji=s("img"),Af=h(),Zt=s("a"),Qi=s("img"),Tf=h(),Kt=s("p"),Ot=s("a"),yv=m("Reformer: The Efficient Transformer"),Ev=m(", Nikita Kitaev et al ."),xf=h(),Vi=s("p"),kv=m(`An autoregressive transformer model with lots of tricks to reduce memory footprint and compute time. Those tricks
include:`),Pf=h(),R=s("ul"),Wt=s("li"),Av=m("Use "),er=s("a"),Tv=m("Axial position encoding"),xv=m(` (see below for more details). It\u2019s a mechanism to avoid
having a huge positional encoding matrix (when the sequence length is very big) by factorizing it into smaller
matrices.`),Pv=h(),Jt=s("li"),$v=m("Replace traditional attention by "),tr=s("a"),Mv=m("LSH (local-sensitive hashing) attention"),Lv=m(` (see below for more
details). It\u2019s a technique to avoid computing the full product query-key in the attention layers.`),Rv=h(),Fn=s("li"),Sv=m(`Avoid storing the intermediate results of each layer by using reversible transformer layers to obtain them during
the backward pass (subtracting the residuals from the input of the next layer gives them back) or recomputing them
for results inside a given layer (less efficient than storing them but saves memory).`),qv=h(),Un=s("li"),Nv=m("Compute the feedforward operations by chunks and not on the whole batch."),$f=h(),ar=s("p"),Gv=m("With those tricks, the model can be fed much larger sentences than traditional transformer autoregressive models."),Mf=h(),Qt=s("p"),Xn=s("strong"),Iv=m("Note:"),Bv=m(` This model could be very well be used in an autoencoding setting, there is no checkpoint for such a
pretraining yet, though.`),Lf=h(),sr=s("p"),Dv=m("The library provides a version of the model for language modeling only."),Rf=h(),ee=s("h3"),Ie=s("a"),Yn=s("span"),c(Vt.$$.fragment),Cv=h(),Zn=s("span"),zv=m("XLNet"),Sf=h(),ea=s("a"),ir=s("img"),qf=h(),ta=s("a"),rr=s("img"),Nf=h(),aa=s("p"),sa=s("a"),Hv=m("XLNet: Generalized Autoregressive Pretraining for Language Understanding"),jv=m(`, Zhilin
Yang et al.`),Gf=h(),lr=s("p"),Fv=m(`XLNet is not a traditional autoregressive model but uses a training strategy that builds on that. It permutes the
tokens in the sentence, then allows the model to use the last n tokens to predict the token n+1. Since this is all done
with a mask, the sentence is actually fed in the model in the right order, but instead of masking the first n tokens
for n+1, XLNet uses a mask that hides the previous tokens in some given permutation of 1,\u2026,sequence length.`),If=h(),nr=s("p"),Uv=m("XLNet also uses the same recurrence mechanism as Transformer-XL to build long-term dependencies."),Bf=h(),or=s("p"),Xv=m(`The library provides a version of the model for language modeling, token classification, sentence classification,
multiple choice classification and question answering.`),Df=h(),hr=s("a"),Cf=h(),te=s("h2"),Be=s("a"),Kn=s("span"),c(ia.$$.fragment),Yv=h(),On=s("span"),Zv=m("Encoders or autoencoding models"),zf=h(),fr=s("p"),Kv=m(`As mentioned before, these models rely on the encoder part of the original transformer and use no mask so the model can
look at all the tokens in the attention heads. For pretraining, targets are the original sentences and inputs are their
corrupted versions.`),Hf=h(),$=s("iframe"),jf=h(),ae=s("h3"),De=s("a"),Wn=s("span"),c(ra.$$.fragment),Ov=h(),Jn=s("span"),Wv=m("BERT"),Ff=h(),la=s("a"),mr=s("img"),Uf=h(),na=s("a"),pr=s("img"),Xf=h(),oa=s("p"),ha=s("a"),Jv=m("BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding"),Qv=m(`,
Jacob Devlin et al.`),Yf=h(),ur=s("p"),Vv=m(`Corrupts the inputs by using random masking, more precisely, during pretraining, a given percentage of tokens (usually
15%) is masked by:`),Zf=h(),D=s("ul"),Qn=s("li"),eg=m("a special mask token with probability 0.8"),tg=h(),Vn=s("li"),ag=m("a random token different from the one masked with probability 0.1"),sg=h(),eo=s("li"),ig=m("the same token with probability 0.1"),Kf=h(),cr=s("p"),rg=m(`The model must predict the original sentence, but has a second objective: inputs are two sentences A and B (with a
separation token in between). With probability 50%, the sentences are consecutive in the corpus, in the remaining 50%
they are not related. The model has to predict if the sentences are consecutive or not.`),Of=h(),dr=s("p"),lg=m(`The library provides a version of the model for language modeling (traditional or masked), next sentence prediction,
token classification, sentence classification, multiple choice classification and question answering.`),Wf=h(),se=s("h3"),Ce=s("a"),to=s("span"),c(fa.$$.fragment),ng=h(),ao=s("span"),og=m("ALBERT"),Jf=h(),ma=s("a"),vr=s("img"),Qf=h(),pa=s("a"),gr=s("img"),Vf=h(),ua=s("p"),ca=s("a"),hg=m("ALBERT: A Lite BERT for Self-supervised Learning of Language Representations"),fg=m(`,
Zhenzhong Lan et al.`),em=h(),br=s("p"),mg=m("Same as BERT but with a few tweaks:"),tm=h(),C=s("ul"),so=s("li"),pg=m(`Embedding size E is different from hidden size H justified because the embeddings are context independent (one
embedding vector represents one token), whereas hidden states are context dependent (one hidden state represents a
sequence of tokens) so it\u2019s more logical to have H >> E. Also, the embedding matrix is large since it\u2019s V x E (V
being the vocab size). If E < H, it has less parameters.`),ug=h(),io=s("li"),cg=m("Layers are split in groups that share parameters (to save memory)."),dg=h(),ro=s("li"),vg=m(`Next sentence prediction is replaced by a sentence ordering prediction: in the inputs, we have two sentences A and
B (that are consecutive) and we either feed A followed by B or B followed by A. The model must predict if they have
been swapped or not.`),am=h(),wr=s("p"),gg=m(`The library provides a version of the model for masked language modeling, token classification, sentence
classification, multiple choice classification and question answering.`),sm=h(),ie=s("h3"),ze=s("a"),lo=s("span"),c(da.$$.fragment),bg=h(),no=s("span"),wg=m("RoBERTa"),im=h(),va=s("a"),_r=s("img"),rm=h(),ga=s("a"),yr=s("img"),lm=h(),ba=s("p"),wa=s("a"),_g=m("RoBERTa: A Robustly Optimized BERT Pretraining Approach"),yg=m(", Yinhan Liu et al."),nm=h(),Er=s("p"),Eg=m("Same as BERT with better pretraining tricks:"),om=h(),S=s("ul"),oo=s("li"),kg=m("dynamic masking: tokens are masked differently at each epoch, whereas BERT does it once and for all"),Ag=h(),ho=s("li"),Tg=m(`no NSP (next sentence prediction) loss and instead of putting just two sentences together, put a chunk of
contiguous texts together to reach 512 tokens (so the sentences are in an order than may span several documents)`),xg=h(),fo=s("li"),Pg=m("train with larger batches"),$g=h(),mo=s("li"),Mg=m("use BPE with bytes as a subunit and not characters (because of unicode characters)"),hm=h(),kr=s("p"),Lg=m(`The library provides a version of the model for masked language modeling, token classification, sentence
classification, multiple choice classification and question answering.`),fm=h(),re=s("h3"),He=s("a"),po=s("span"),c(_a.$$.fragment),Rg=h(),uo=s("span"),Sg=m("DistilBERT"),mm=h(),ya=s("a"),Ar=s("img"),pm=h(),Ea=s("a"),Tr=s("img"),um=h(),ka=s("p"),Aa=s("a"),qg=m("DistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter"),Ng=m(`,
Victor Sanh et al.`),cm=h(),xr=s("p"),Gg=m(`Same as BERT but smaller. Trained by distillation of the pretrained BERT model, meaning it\u2019s been trained to predict
the same probabilities as the larger model. The actual objective is a combination of:`),dm=h(),z=s("ul"),co=s("li"),Ig=m("finding the same probabilities as the teacher model"),Bg=h(),vo=s("li"),Dg=m("predicting the masked tokens correctly (but no next-sentence objective)"),Cg=h(),go=s("li"),zg=m("a cosine similarity between the hidden states of the student and the teacher model"),vm=h(),Pr=s("p"),Hg=m(`The library provides a version of the model for masked language modeling, token classification, sentence classification
and question answering.`),gm=h(),le=s("h3"),je=s("a"),bo=s("span"),c(Ta.$$.fragment),jg=h(),wo=s("span"),Fg=m("ConvBERT"),bm=h(),xa=s("a"),$r=s("img"),wm=h(),Pa=s("a"),Mr=s("img"),_m=h(),$a=s("p"),Ma=s("a"),Ug=m("ConvBERT: Improving BERT with Span-based Dynamic Convolution"),Xg=m(`, Zihang Jiang,
Weihao Yu, Daquan Zhou, Yunpeng Chen, Jiashi Feng, Shuicheng Yan.`),ym=h(),Lr=s("p"),Yg=m(`Pre-trained language models like BERT and its variants have recently achieved impressive performance in various natural
language understanding tasks. However, BERT heavily relies on the global self-attention block and thus suffers large
memory footprint and computation cost. Although all its attention heads query on the whole input sequence for
generating the attention map from a global perspective, we observe some heads only need to learn local dependencies,
which means the existence of computation redundancy. We therefore propose a novel span-based dynamic convolution to
replace these self-attention heads to directly model local dependencies. The novel convolution heads, together with the
rest self-attention heads, form a new mixed attention block that is more efficient at both global and local context
learning. We equip BERT with this mixed attention design and build a ConvBERT model. Experiments have shown that
ConvBERT significantly outperforms BERT and its variants in various downstream tasks, with lower training cost and
fewer model parameters. Remarkably, ConvBERTbase model achieves 86.4 GLUE score, 0.7 higher than ELECTRAbase, while
using less than 1/4 training cost.`),Em=h(),Rr=s("p"),Zg=m(`The library provides a version of the model for masked language modeling, token classification, sentence classification
and question answering.`),km=h(),ne=s("h3"),Fe=s("a"),_o=s("span"),c(La.$$.fragment),Kg=h(),yo=s("span"),Og=m("XLM"),Am=h(),Ra=s("a"),Sr=s("img"),Tm=h(),Sa=s("a"),qr=s("img"),xm=h(),qa=s("p"),Na=s("a"),Wg=m("Cross-lingual Language Model Pretraining"),Jg=m(", Guillaume Lample and Alexis Conneau"),Pm=h(),Nr=s("p"),Qg=m(`A transformer model trained on several languages. There are three different type of training for this model and the
library provides checkpoints for all of them:`),$m=h(),H=s("ul"),Eo=s("li"),Vg=m(`Causal language modeling (CLM) which is the traditional autoregressive training (so this model could be in the
previous section as well). One of the languages is selected for each training sample, and the model input is a
sentence of 256 tokens, that may span over several documents in one of those languages.`),e1=h(),ko=s("li"),t1=m(`Masked language modeling (MLM) which is like RoBERTa. One of the languages is selected for each training sample,
and the model input is a sentence of 256 tokens, that may span over several documents in one of those languages,
with dynamic masking of the tokens.`),a1=h(),Ao=s("li"),s1=m(`A combination of MLM and translation language modeling (TLM). This consists of concatenating a sentence in two
different languages, with random masking. To predict one of the masked tokens, the model can use both, the
surrounding context in language 1 and the context given by language 2.`),Mm=h(),q=s("p"),i1=m("Checkpoints refer to which method was used for pretraining by having "),To=s("em"),r1=m("clm"),l1=m(", "),xo=s("em"),n1=m("mlm"),o1=m(" or "),Po=s("em"),h1=m("mlm-tlm"),f1=m(` in their names. On top
of positional embeddings, the model has language embeddings. When training using MLM/CLM, this gives the model an
indication of the language used, and when training using MLM+TLM, an indication of the language used for each part.`),Lm=h(),Gr=s("p"),m1=m(`The library provides a version of the model for language modeling, token classification, sentence classification and
question answering.`),Rm=h(),oe=s("h3"),Ue=s("a"),$o=s("span"),c(Ga.$$.fragment),p1=h(),Mo=s("span"),u1=m("XLM-RoBERTa"),Sm=h(),Ia=s("a"),Ir=s("img"),qm=h(),Ba=s("a"),Br=s("img"),Nm=h(),Da=s("p"),Ca=s("a"),c1=m("Unsupervised Cross-lingual Representation Learning at Scale"),d1=m(`, Alexis Conneau et
al.`),Gm=h(),Dr=s("p"),v1=m(`Uses RoBERTa tricks on the XLM approach, but does not use the translation language modeling objective. It only uses
masked language modeling on sentences coming from one language. However, the model is trained on many more languages
(100) and doesn\u2019t use the language embeddings, so it\u2019s capable of detecting the input language by itself.`),Im=h(),Cr=s("p"),g1=m(`The library provides a version of the model for masked language modeling, token classification, sentence
classification, multiple choice classification and question answering.`),Bm=h(),he=s("h3"),Xe=s("a"),Lo=s("span"),c(za.$$.fragment),b1=h(),Ro=s("span"),w1=m("FlauBERT"),Dm=h(),Ha=s("a"),zr=s("img"),Cm=h(),ja=s("a"),Hr=s("img"),zm=h(),Fa=s("p"),Ua=s("a"),_1=m("FlauBERT: Unsupervised Language Model Pre-training for French"),y1=m(", Hang Le et al."),Hm=h(),jr=s("p"),E1=m("Like RoBERTa, without the sentence ordering prediction (so just trained on the MLM objective)."),jm=h(),Fr=s("p"),k1=m("The library provides a version of the model for language modeling and sentence classification."),Fm=h(),fe=s("h3"),Ye=s("a"),So=s("span"),c(Xa.$$.fragment),A1=h(),qo=s("span"),T1=m("ELECTRA"),Um=h(),Ya=s("a"),Ur=s("img"),Xm=h(),Za=s("a"),Xr=s("img"),Ym=h(),Ka=s("p"),Oa=s("a"),x1=m("ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators"),P1=m(`,
Kevin Clark et al.`),Zm=h(),Yr=s("p"),$1=m(`ELECTRA is a transformer model pretrained with the use of another (small) masked language model. The inputs are
corrupted by that language model, which takes an input text that is randomly masked and outputs a text in which ELECTRA
has to predict which token is an original and which one has been replaced. Like for GAN training, the small language
model is trained for a few steps (but with the original texts as objective, not to fool the ELECTRA model like in a
traditional GAN setting) then the ELECTRA model is trained for a few steps.`),Km=h(),Zr=s("p"),M1=m(`The library provides a version of the model for masked language modeling, token classification and sentence
classification.`),Om=h(),me=s("h3"),Ze=s("a"),No=s("span"),c(Wa.$$.fragment),L1=h(),Go=s("span"),R1=m("Funnel Transformer"),Wm=h(),Ja=s("a"),Kr=s("img"),Jm=h(),Qa=s("a"),Or=s("img"),Qm=h(),Va=s("p"),es=s("a"),S1=m("Funnel-Transformer: Filtering out Sequential Redundancy for Efficient Language Processing"),q1=m(", Zihang Dai et al."),Vm=h(),Wr=s("p"),N1=m(`Funnel Transformer is a transformer model using pooling, a bit like a ResNet model: layers are grouped in blocks, and
at the beginning of each block (except the first one), the hidden states are pooled among the sequence dimension. This
way, their length is divided by 2, which speeds up the computation of the next hidden states. All pretrained models
have three blocks, which means the final hidden state has a sequence length that is one fourth of the original sequence
length.`),ep=h(),Jr=s("p"),G1=m(`For tasks such as classification, this is not a problem, but for tasks like masked language modeling or token
classification, we need a hidden state with the same sequence length as the original input. In those cases, the final
hidden states are upsampled to the input sequence length and go through two additional layers. That\u2019s why there are two
versions of each checkpoint. The version suffixed with \u201C-base\u201D contains only the three blocks, while the version
without that suffix contains the three blocks and the upsampling head with its additional layers.`),tp=h(),Qr=s("p"),I1=m("The pretrained models available use the same pretraining objective as ELECTRA."),ap=h(),Vr=s("p"),B1=m(`The library provides a version of the model for masked language modeling, token classification, sentence
classification, multiple choice classification and question answering.`),sp=h(),el=s("a"),ip=h(),pe=s("h3"),Ke=s("a"),Io=s("span"),c(ts.$$.fragment),D1=h(),Bo=s("span"),C1=m("Longformer"),rp=h(),as=s("a"),tl=s("img"),lp=h(),ss=s("a"),al=s("img"),np=h(),is=s("p"),rs=s("a"),z1=m("Longformer: The Long-Document Transformer"),H1=m(", Iz Beltagy et al."),op=h(),Oe=s("p"),j1=m(`A transformer model replacing the attention matrices by sparse matrices to go faster. Often, the local context (e.g.,
what are the two tokens left and right?) is enough to take action for a given token. Some preselected input tokens are
still given global attention, but the attention matrix has way less parameters, resulting in a speed-up. See the
`),sl=s("a"),F1=m("local attention section"),U1=m(" for more information."),hp=h(),il=s("p"),X1=m("It is pretrained the same way a RoBERTa otherwise."),fp=h(),ls=s("p"),Do=s("strong"),Y1=m("Note:"),Z1=m(` This model could be very well be used in an autoregressive setting, there is no checkpoint for such a
pretraining yet, though.`),mp=h(),rl=s("p"),K1=m(`The library provides a version of the model for masked language modeling, token classification, sentence
classification, multiple choice classification and question answering.`),pp=h(),ll=s("a"),up=h(),ue=s("h2"),We=s("a"),Co=s("span"),c(ns.$$.fragment),O1=h(),zo=s("span"),W1=m("Sequence-to-sequence models"),cp=h(),nl=s("p"),J1=m("As mentioned before, these models keep both the encoder and the decoder of the original transformer."),dp=h(),M=s("iframe"),vp=h(),ce=s("h3"),Je=s("a"),Ho=s("span"),c(os.$$.fragment),Q1=h(),jo=s("span"),V1=m("BART"),gp=h(),hs=s("a"),ol=s("img"),bp=h(),fs=s("a"),hl=s("img"),wp=h(),ms=s("p"),ps=s("a"),eb=m("BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension"),tb=m(", Mike Lewis et al."),_p=h(),fl=s("p"),ab=m(`Sequence-to-sequence model with an encoder and a decoder. Encoder is fed a corrupted version of the tokens, decoder is
fed the original tokens (but has a mask to hide the future words like a regular transformers decoder). A composition of
the following transformations are applied on the pretraining tasks for the encoder:`),yp=h(),T=s("ul"),Fo=s("li"),sb=m("mask random tokens (like in BERT)"),ib=h(),Uo=s("li"),rb=m("delete random tokens"),lb=h(),Xo=s("li"),nb=m("mask a span of k tokens with a single mask token (a span of 0 tokens is an insertion of a mask token)"),ob=h(),Yo=s("li"),hb=m("permute sentences"),fb=h(),Zo=s("li"),mb=m("rotate the document to make it start at a specific token"),Ep=h(),ml=s("p"),pb=m("The library provides a version of this model for conditional generation and sequence classification."),kp=h(),de=s("h3"),Qe=s("a"),Ko=s("span"),c(us.$$.fragment),ub=h(),Oo=s("span"),cb=m("Pegasus"),Ap=h(),cs=s("a"),pl=s("img"),Tp=h(),ds=s("a"),ul=s("img"),xp=h(),vs=s("p"),gs=s("a"),db=m("PEGASUS: Pre-training with Extracted Gap-sentences forAbstractive Summarization"),vb=m(", Jingqing Zhang, Yao Zhao, Mohammad Saleh and Peter J. Liu on Dec 18, 2019."),Pp=h(),cl=s("p"),gb=m(`Sequence-to-sequence model with the same encoder-decoder model architecture as BART. Pegasus is pre-trained jointly on
two self-supervised objective functions: Masked Language Modeling (MLM) and a novel summarization specific pretraining
objective, called Gap Sentence Generation (GSG).`),$p=h(),Ve=s("ul"),Wo=s("li"),bb=m(`MLM: encoder input tokens are randomly replaced by a mask tokens and have to be predicted by the encoder (like in
BERT)`),wb=h(),Jo=s("li"),_b=m(`GSG: whole encoder input sentences are replaced by a second mask token and fed to the decoder, but which has a
causal mask to hide the future words like a regular auto-regressive transformer decoder.`),Mp=h(),dl=s("p"),yb=m(`In contrast to BART, Pegasus\u2019 pretraining task is intentionally similar to summarization: important sentences are
masked and are generated together as one output sequence from the remaining sentences, similar to an extractive
summary.`),Lp=h(),vl=s("p"),Eb=m("The library provides a version of this model for conditional generation, which should be used for summarization."),Rp=h(),ve=s("h3"),et=s("a"),Qo=s("span"),c(bs.$$.fragment),kb=h(),Vo=s("span"),Ab=m("MarianMT"),Sp=h(),ws=s("a"),gl=s("img"),qp=h(),_s=s("a"),bl=s("img"),Np=h(),ys=s("p"),Es=s("a"),Tb=m("Marian: Fast Neural Machine Translation in C++"),xb=m(", Marcin Junczys-Dowmunt et al."),Gp=h(),wl=s("p"),Pb=m("A framework for translation models, using the same models as BART"),Ip=h(),_l=s("p"),$b=m("The library provides a version of this model for conditional generation."),Bp=h(),ge=s("h3"),tt=s("a"),eh=s("span"),c(ks.$$.fragment),Mb=h(),th=s("span"),Lb=m("T5"),Dp=h(),As=s("a"),yl=s("img"),Cp=h(),Ts=s("a"),El=s("img"),zp=h(),xs=s("p"),Ps=s("a"),Rb=m("Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer"),Sb=m(", Colin Raffel et al."),Hp=h(),kl=s("p"),qb=m(`Uses the traditional transformer model (with a slight change in the positional embeddings, which are learned at each
layer). To be able to operate on all NLP tasks, it transforms them into text-to-text problems by using specific
prefixes: \u201Csummarize: \u201D, \u201Cquestion: \u201D, \u201Ctranslate English to German: \u201D and so forth.`),jp=h(),Al=s("p"),Nb=m(`The pretraining includes both supervised and self-supervised training. Supervised training is conducted on downstream
tasks provided by the GLUE and SuperGLUE benchmarks (converting them into text-to-text tasks as explained above).`),Fp=h(),Tl=s("p"),Gb=m(`Self-supervised training uses corrupted tokens, by randomly removing 15% of the tokens and replacing them with
individual sentinel tokens (if several consecutive tokens are marked for removal, the whole group is replaced with a
single sentinel token). The input of the encoder is the corrupted sentence, the input of the decoder is the original
sentence and the target is then the dropped out tokens delimited by their sentinel tokens.`),Up=h(),xl=s("p"),Ib=m(`For instance, if we have the sentence \u201CMy dog is very cute .\u201D, and we decide to remove the tokens: \u201Cdog\u201D, \u201Cis\u201D and
\u201Ccute\u201D, the encoder input becomes \u201CMy <x> very <y> .\u201D and the target input becomes \u201C<x> dog is <y> cute .<z>\u201D`),Xp=h(),Pl=s("p"),Bb=m("The library provides a version of this model for conditional generation."),Yp=h(),be=s("h3"),at=s("a"),ah=s("span"),c($s.$$.fragment),Db=h(),sh=s("span"),Cb=m("MT5"),Zp=h(),Ms=s("a"),$l=s("img"),Kp=h(),Ls=s("a"),Ml=s("img"),Op=h(),Rs=s("p"),Ss=s("a"),zb=m("mT5: A massively multilingual pre-trained text-to-text transformer"),Hb=m(`, Linting Xue
et al.`),Wp=h(),Ll=s("p"),jb=m(`The model architecture is same as T5. mT5\u2019s pretraining objective includes T5\u2019s self-supervised training, but not T5\u2019s
supervised training. mT5 is trained on 101 languages.`),Jp=h(),Rl=s("p"),Fb=m("The library provides a version of this model for conditional generation."),Qp=h(),we=s("h3"),st=s("a"),ih=s("span"),c(qs.$$.fragment),Ub=h(),rh=s("span"),Xb=m("MBart"),Vp=h(),Ns=s("a"),Sl=s("img"),eu=h(),Gs=s("a"),ql=s("img"),tu=h(),Is=s("p"),Bs=s("a"),Yb=m("Multilingual Denoising Pre-training for Neural Machine Translation"),Zb=m(` by Yinhan Liu,
Jiatao Gu, Naman Goyal, Xian Li, Sergey Edunov Marjan Ghazvininejad, Mike Lewis, Luke Zettlemoyer.`),au=h(),Nl=s("p"),Kb=m(`The model architecture and pretraining objective is same as BART, but MBart is trained on 25 languages and is intended
for supervised and unsupervised machine translation. MBart is one of the first methods for pretraining a complete
sequence-to-sequence model by denoising full texts in multiple languages,`),su=h(),Gl=s("p"),Ob=m("The library provides a version of this model for conditional generation."),iu=h(),it=s("p"),Wb=m("The "),Ds=s("a"),Jb=m("mbart-large-en-ro checkpoint"),Qb=m(` can be used for english ->
romanian translation.`),ru=h(),j=s("p"),Vb=m("The "),Cs=s("a"),ew=m("mbart-large-cc25"),tw=m(` checkpoint can be finetuned for other
translation and summarization tasks, using code in `),lh=s("code"),aw=m("examples/pytorch/translation/"),sw=m(` , but is not very useful without
finetuning.`),lu=h(),_e=s("h3"),rt=s("a"),nh=s("span"),c(zs.$$.fragment),iw=h(),oh=s("span"),rw=m("ProphetNet"),nu=h(),Hs=s("a"),Il=s("img"),ou=h(),js=s("a"),Bl=s("img"),hu=h(),Fs=s("p"),Us=s("a"),lw=m("ProphetNet: Predicting Future N-gram for Sequence-to-Sequence Pre-training,"),nw=m(` by
Yu Yan, Weizhen Qi, Yeyun Gong, Dayiheng Liu, Nan Duan, Jiusheng Chen, Ruofei Zhang, Ming Zhou.`),fu=h(),F=s("p"),ow=m("ProphetNet introduces a novel "),hh=s("em"),hw=m("sequence-to-sequence"),fw=m(" pretraining objective, called "),fh=s("em"),mw=m("future n-gram prediction"),pw=m(`. In
future n-gram prediction, the model predicts the next n tokens simultaneously based on previous context tokens at each
time step instead instead of just the single next token. The future n-gram prediction explicitly encourages the model
to plan for the future tokens and prevent overfitting on strong local correlations. The model architecture is based on
the original Transformer, but replaces the \u201Cstandard\u201D self-attention mechanism in the decoder by a a main
self-attention mechanism and a self and n-stream (predict) self-attention mechanism.`),mu=h(),Dl=s("p"),uw=m(`The library provides a pre-trained version of this model for conditional generation and a fine-tuned version for
summarization.`),pu=h(),ye=s("h3"),lt=s("a"),mh=s("span"),c(Xs.$$.fragment),cw=h(),ph=s("span"),dw=m("XLM-ProphetNet"),uu=h(),Ys=s("a"),Cl=s("img"),cu=h(),Zs=s("a"),zl=s("img"),du=h(),Ks=s("p"),Os=s("a"),vw=m("ProphetNet: Predicting Future N-gram for Sequence-to-Sequence Pre-training,"),gw=m(` by
Yu Yan, Weizhen Qi, Yeyun Gong, Dayiheng Liu, Nan Duan, Jiusheng Chen, Ruofei Zhang, Ming Zhou.`),vu=h(),nt=s("p"),bw=m(`XLM-ProphetNet\u2019s model architecture and pretraining objective is same as ProphetNet, but XLM-ProphetNet was pre-trained
on the cross-lingual dataset `),Ws=s("a"),ww=m("XGLUE"),_w=m("."),gu=h(),Hl=s("p"),yw=m(`The library provides a pre-trained version of this model for multi-lingual conditional generation and fine-tuned
versions for headline generation and question generation, respectively.`),bu=h(),jl=s("a"),wu=h(),Ee=s("h2"),ot=s("a"),uh=s("span"),c(Js.$$.fragment),Ew=h(),ch=s("span"),kw=m("Multimodal models"),_u=h(),Fl=s("p"),Aw=m(`There is one multimodal model in the library which has not been pretrained in the self-supervised fashion like the
others.`),yu=h(),ke=s("h3"),ht=s("a"),dh=s("span"),c(Qs.$$.fragment),Tw=h(),vh=s("span"),xw=m("MMBT"),Eu=h(),Vs=s("p"),ei=s("a"),Pw=m("Supervised Multimodal Bitransformers for Classifying Images and Text"),$w=m(`, Douwe Kiela
et al.`),ku=h(),Ul=s("p"),Mw=m(`A transformers model used in multimodal settings, combining a text and an image to make predictions. The transformer
model takes as inputs the embeddings of the tokenized text and the final activations of a pretrained on images resnet
(after the pooling layer) that goes through a linear layer (to go from number of features at the end of the resnet to
the hidden state dimension of the transformer).`),Au=h(),Xl=s("p"),Lw=m(`The different inputs are concatenated, and on top of the positional embeddings, a segment embedding is added to let the
model know which part of the input vector corresponds to the text and which to the image.`),Tu=h(),Yl=s("p"),Rw=m("The pretrained model only works for classification."),xu=h(),Zl=s("a"),Pu=h(),Ae=s("h2"),ft=s("a"),gh=s("span"),c(ti.$$.fragment),Sw=h(),bh=s("span"),qw=m("Retrieval-based models"),$u=h(),Kl=s("p"),Nw=m("Some models use documents retrieval during (pre)training and inference for open-domain question answering, for example."),Mu=h(),Te=s("h3"),mt=s("a"),wh=s("span"),c(ai.$$.fragment),Gw=h(),_h=s("span"),Iw=m("DPR"),Lu=h(),si=s("a"),Ol=s("img"),Ru=h(),ii=s("a"),Wl=s("img"),Su=h(),ri=s("p"),li=s("a"),Bw=m("Dense Passage Retrieval for Open-Domain Question Answering"),Dw=m(`, Vladimir Karpukhin et
al.`),qu=h(),Jl=s("p"),Cw=m(`Dense Passage Retrieval (DPR) - is a set of tools and models for state-of-the-art open-domain question-answering
research.`),Nu=h(),Ql=s("p"),zw=m("DPR consists in three models:"),Gu=h(),U=s("ul"),yh=s("li"),Hw=m("Question encoder: encode questions as vectors"),jw=h(),Eh=s("li"),Fw=m("Context encoder: encode contexts as vectors"),Uw=h(),kh=s("li"),Xw=m(`Reader: extract the answer of the questions inside retrieved contexts, along with a relevance score (high if the
inferred span actually answers the question).`),Iu=h(),Vl=s("p"),Yw=m(`DPR\u2019s pipeline (not implemented yet) uses a retrieval step to find the top k contexts given a certain question, and
then it calls the reader with the question and the retrieved documents to get the answer.`),Bu=h(),xe=s("h3"),pt=s("a"),Ah=s("span"),c(ni.$$.fragment),Zw=h(),Th=s("span"),Kw=m("RAG"),Du=h(),oi=s("a"),en=s("img"),Cu=h(),hi=s("a"),tn=s("img"),zu=h(),fi=s("p"),mi=s("a"),Ow=m("Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks"),Ww=m(`, Patrick Lewis,
Ethan Perez, Aleksandara Piktus, Fabio Petroni, Vladimir Karpukhin, Naman Goyal, Heinrich K\xFCttler, Mike Lewis, Wen-tau
Yih, Tim Rockt\xE4schel, Sebastian Riedel, Douwe Kiela`),Hu=h(),an=s("p"),Jw=m(`Retrieval-augmented generation (\u201CRAG\u201D) models combine the powers of pretrained dense retrieval (DPR) and Seq2Seq
models. RAG models retrieve docs, pass them to a seq2seq model, then marginalize to generate outputs. The retriever and
seq2seq modules are initialized from pretrained models, and fine-tuned jointly, allowing both retrieval and generation
to adapt to downstream tasks.`),ju=h(),sn=s("p"),Qw=m("The two models RAG-Token and RAG-Sequence are available for generation."),Fu=h(),Pe=s("h2"),ut=s("a"),xh=s("span"),c(pi.$$.fragment),Vw=h(),Ph=s("span"),e_=m("More technical aspects"),Uu=h(),$e=s("h3"),ct=s("a"),$h=s("span"),c(ui.$$.fragment),t_=h(),Mh=s("span"),a_=m("Full vs sparse attention"),Xu=h(),rn=s("p"),s_=m(`Most transformer models use full attention in the sense that the attention matrix is square. It can be a big
computational bottleneck when you have long texts. Longformer and reformer are models that try to be more efficient and
use a sparse version of the attention matrix to speed up training.`),Yu=h(),ln=s("a"),Zu=h(),nn=s("p"),Lh=s("strong"),i_=m("LSH attention"),Ku=h(),ci=s("p"),on=s("a"),r_=m("Reformer"),l_=m(` uses LSH attention. In the softmax(QK^t), only the biggest elements (in the softmax
dimension) of the matrix QK^t are going to give useful contributions. So for each query q in Q, we can consider only
the keys k in K that are close to q. A hash function is used to determine if q and k are close. The attention mask is
modified to mask the current token (except at the first position), because it will give a query and a key equal (so
very similar to each other). Since the hash can be a bit random, several hash functions are used in practice
(determined by a n_rounds parameter) and then are averaged together.`),Ou=h(),hn=s("a"),Wu=h(),fn=s("p"),Rh=s("strong"),n_=m("Local attention"),Ju=h(),di=s("p"),mn=s("a"),o_=m("Longformer"),h_=m(` uses local attention: often, the local context (e.g., what are the two tokens to the
left and right?) is enough to take action for a given token. Also, by stacking attention layers that have a small
window, the last layer will have a receptive field of more than just the tokens in the window, allowing them to build a
representation of the whole sentence.`),Qu=h(),pn=s("p"),f_=m(`Some preselected input tokens are also given global attention: for those few tokens, the attention matrix can access
all tokens and this process is symmetric: all other tokens have access to those specific tokens (on top of the ones in
their local window). This is shown in Figure 2d of the paper, see below for a sample attention mask:`),Vu=h(),dt=s("img"),ec=h(),un=s("p"),m_=m(`Using those attention matrices with less parameters then allows the model to have inputs having a bigger sequence
length.`),tc=h(),Me=s("h3"),vt=s("a"),Sh=s("span"),c(vi.$$.fragment),p_=h(),qh=s("span"),u_=m("Other tricks"),ac=h(),cn=s("a"),sc=h(),dn=s("p"),Nh=s("strong"),c_=m("Axial positional encodings"),ic=h(),y=s("p"),vn=s("a"),d_=m("Reformer"),v_=m(` uses axial positional encodings: in traditional transformer models, the positional encoding
E is a matrix of size `),rc=new G,lc=m(" by "),nc=new G,oc=m(", "),hc=new G,fc=m(" being the sequence length and "),mc=new G,pc=m(` the dimension of the
hidden state. If you have very long texts, this matrix can be huge and take way too much space on the GPU. To alleviate
that, axial positional encodings consist of factorizing that big matrix E in two smaller matrices E1 and E2, with
dimensions `),uc=new G,cc=m(" and "),dc=new G,vc=m(", such that "),gc=new G,bc=m(` and
`),wc=new G,_c=m(` (with the product for the lengths, this ends up being way smaller). The embedding for time
step `),yc=new G,Ec=m(" in E is obtained by concatenating the embeddings for timestep "),kc=new G,Ac=m(" in E1 and "),Tc=new G,xc=m(`
in E2.`),this.h()},l(e){const r=M4('[data-svelte="svelte-1phssyn"]',document.head);B=i(r,"META",{name:!0,content:!0}),r.forEach(t),gi=f(e),L=i(e,"H1",{class:!0});var $c=n(L);N=i($c,"A",{id:!0,class:!0,href:!0});var e2=n(N);An=i(e2,"SPAN",{});var t2=n(An);d(_t.$$.fragment,t2),t2.forEach(t),e2.forEach(t),bd=f($c),Tn=i($c,"SPAN",{});var a2=n(Tn);wd=p(a2,"Summary of the models"),a2.forEach(t),$c.forEach(t),Gh=f(e),k=i(e,"P",{});var X=n(k);_d=p(X,"This is a summary of the models available in \u{1F917} Transformers. It assumes you\u2019re familiar with the original "),yt=i(X,"A",{href:!0,rel:!0});var s2=n(yt);yd=p(s2,`transformer
model`),s2.forEach(t),Ed=p(X,". For a gentle introduction check the "),Et=i(X,"A",{href:!0,rel:!0});var i2=n(Et);kd=p(i2,"annotated transformer"),i2.forEach(t),Ad=p(X,`. Here we focus on the high-level differences between the
models. You can check them more in detail in their respective documentation. Also check out the `),bi=i(X,"A",{href:!0});var r2=n(bi);Td=p(r2,`pretrained model
page`),r2.forEach(t),xd=p(X," to see the checkpoints available for each type of model and all "),kt=i(X,"A",{href:!0,rel:!0});var l2=n(kt);Pd=p(l2,"the community models"),l2.forEach(t),$d=p(X,"."),X.forEach(t),Ih=f(e),wi=i(e,"P",{});var n2=n(wi);Md=p(n2,"Each one of the models in the library falls into one of the following categories:"),n2.forEach(t),Bh=f(e),A=i(e,"UL",{});var Y=n(A);xn=i(Y,"LI",{});var o2=n(xn);_i=i(o2,"A",{href:!0});var h2=n(_i);Ld=p(h2,"autoregressive-models"),h2.forEach(t),o2.forEach(t),Rd=f(Y),Pn=i(Y,"LI",{});var f2=n(Pn);yi=i(f2,"A",{href:!0});var m2=n(yi);Sd=p(m2,"autoencoding-models"),m2.forEach(t),f2.forEach(t),qd=f(Y),$n=i(Y,"LI",{});var p2=n($n);Ei=i(p2,"A",{href:!0});var u2=n(Ei);Nd=p(u2,"seq-to-seq-models"),u2.forEach(t),p2.forEach(t),Gd=f(Y),Mn=i(Y,"LI",{});var c2=n(Mn);ki=i(c2,"A",{href:!0});var d2=n(ki);Id=p(d2,"multimodal-models"),d2.forEach(t),c2.forEach(t),Bd=f(Y),Ln=i(Y,"LI",{});var v2=n(Ln);Ai=i(v2,"A",{href:!0});var g2=n(Ai);Dd=p(g2,"retrieval-based-models"),g2.forEach(t),v2.forEach(t),Y.forEach(t),Dh=f(e),x=i(e,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),n(x).forEach(t),Ch=f(e),Ti=i(e,"P",{});var b2=n(Ti);Cd=p(b2,`Autoregressive models are pretrained on the classic language modeling task: guess the next token having read all the
previous ones. They correspond to the decoder of the original transformer model, and a mask is used on top of the full
sentence so that the attention heads can only see what was before in the text, and not what\u2019s after. Although those
models can be fine-tuned and achieve great results on many tasks, the most natural application is text generation. A
typical example of such models is GPT.`),b2.forEach(t),zh=f(e),xi=i(e,"P",{});var w2=n(xi);zd=p(w2,`Autoencoding models are pretrained by corrupting the input tokens in some way and trying to reconstruct the original
sentence. They correspond to the encoder of the original transformer model in the sense that they get access to the
full inputs without any mask. Those models usually build a bidirectional representation of the whole sentence. They can
be fine-tuned and achieve great results on many tasks such as text generation, but their most natural application is
sentence classification or token classification. A typical example of such models is BERT.`),w2.forEach(t),Hh=f(e),Pi=i(e,"P",{});var _2=n(Pi);Hd=p(_2,`Note that the only difference between autoregressive models and autoencoding models is in the way the model is
pretrained. Therefore, the same architecture can be used for both autoregressive and autoencoding models. When a given
model has been used for both types of pretraining, we have put it in the category corresponding to the article where it
was first introduced.`),_2.forEach(t),jh=f(e),$i=i(e,"P",{});var y2=n($i);jd=p(y2,`Sequence-to-sequence models use both the encoder and the decoder of the original transformer, either for translation
tasks or by transforming other tasks to sequence-to-sequence problems. They can be fine-tuned to many tasks but their
most natural applications are translation, summarization and question answering. The original transformer model is an
example of such a model (only for translation), T5 is an example that can be fine-tuned on other tasks.`),y2.forEach(t),Fh=f(e),Mi=i(e,"P",{});var E2=n(Mi);Fd=p(E2,"Multimodal models mix text inputs with other kinds (e.g. images) and are more specific to a given task."),E2.forEach(t),Uh=f(e),Li=i(e,"A",{id:!0}),n(Li).forEach(t),Xh=f(e),K=i(e,"H2",{class:!0});var Mc=n(K);Le=i(Mc,"A",{id:!0,class:!0,href:!0});var k2=n(Le);Rn=i(k2,"SPAN",{});var A2=n(Rn);d(At.$$.fragment,A2),A2.forEach(t),k2.forEach(t),Ud=f(Mc),Sn=i(Mc,"SPAN",{});var T2=n(Sn);Xd=p(T2,"Decoders or autoregressive models"),T2.forEach(t),Mc.forEach(t),Yh=f(e),Ri=i(e,"P",{});var x2=n(Ri);Yd=p(x2,`As mentioned before, these models rely on the decoder part of the original transformer and use an attention mask so
that at each position, the model can only look at the tokens before the attention heads.`),x2.forEach(t),Zh=f(e),P=i(e,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),n(P).forEach(t),Kh=f(e),O=i(e,"H3",{class:!0});var Lc=n(O);Re=i(Lc,"A",{id:!0,class:!0,href:!0});var P2=n(Re);qn=i(P2,"SPAN",{});var $2=n(qn);d(Tt.$$.fragment,$2),$2.forEach(t),P2.forEach(t),Zd=f(Lc),Nn=i(Lc,"SPAN",{});var M2=n(Nn);Kd=p(M2,"Original GPT"),M2.forEach(t),Lc.forEach(t),Oh=f(e),xt=i(e,"A",{href:!0});var L2=n(xt);Si=i(L2,"IMG",{alt:!0,src:!0}),L2.forEach(t),Wh=f(e),Pt=i(e,"A",{href:!0});var R2=n(Pt);qi=i(R2,"IMG",{alt:!0,src:!0}),R2.forEach(t),Jh=f(e),$t=i(e,"P",{});var g_=n($t);Mt=i(g_,"A",{href:!0,rel:!0});var S2=n(Mt);Od=p(S2,"Improving Language Understanding by Generative Pre-Training"),S2.forEach(t),Wd=p(g_,", Alec Radford et al."),g_.forEach(t),Qh=f(e),Ni=i(e,"P",{});var q2=n(Ni);Jd=p(q2,"The first autoregressive model based on the transformer architecture, pretrained on the Book Corpus dataset."),q2.forEach(t),Vh=f(e),Gi=i(e,"P",{});var N2=n(Gi);Qd=p(N2,`The library provides versions of the model for language modeling and multitask language modeling/multiple choice
classification.`),N2.forEach(t),ef=f(e),W=i(e,"H3",{class:!0});var Rc=n(W);Se=i(Rc,"A",{id:!0,class:!0,href:!0});var G2=n(Se);Gn=i(G2,"SPAN",{});var I2=n(Gn);d(Lt.$$.fragment,I2),I2.forEach(t),G2.forEach(t),Vd=f(Rc),In=i(Rc,"SPAN",{});var B2=n(In);ev=p(B2,"GPT-2"),B2.forEach(t),Rc.forEach(t),tf=f(e),Rt=i(e,"A",{href:!0});var D2=n(Rt);Ii=i(D2,"IMG",{alt:!0,src:!0}),D2.forEach(t),af=f(e),St=i(e,"A",{href:!0});var C2=n(St);Bi=i(C2,"IMG",{alt:!0,src:!0}),C2.forEach(t),sf=f(e),qt=i(e,"P",{});var b_=n(qt);Nt=i(b_,"A",{href:!0,rel:!0});var z2=n(Nt);tv=p(z2,"Language Models are Unsupervised Multitask Learners"),z2.forEach(t),av=p(b_,`,
Alec Radford et al.`),b_.forEach(t),rf=f(e),Di=i(e,"P",{});var H2=n(Di);sv=p(H2,`A bigger and better version of GPT, pretrained on WebText (web pages from outgoing links in Reddit with 3 karmas or
more).`),H2.forEach(t),lf=f(e),Ci=i(e,"P",{});var j2=n(Ci);iv=p(j2,`The library provides versions of the model for language modeling and multitask language modeling/multiple choice
classification.`),j2.forEach(t),nf=f(e),J=i(e,"H3",{class:!0});var Sc=n(J);qe=i(Sc,"A",{id:!0,class:!0,href:!0});var F2=n(qe);Bn=i(F2,"SPAN",{});var U2=n(Bn);d(Gt.$$.fragment,U2),U2.forEach(t),F2.forEach(t),rv=f(Sc),Dn=i(Sc,"SPAN",{});var X2=n(Dn);lv=p(X2,"CTRL"),X2.forEach(t),Sc.forEach(t),of=f(e),It=i(e,"A",{href:!0});var Y2=n(It);zi=i(Y2,"IMG",{alt:!0,src:!0}),Y2.forEach(t),hf=f(e),Bt=i(e,"A",{href:!0});var Z2=n(Bt);Hi=i(Z2,"IMG",{alt:!0,src:!0}),Z2.forEach(t),ff=f(e),Dt=i(e,"P",{});var w_=n(Dt);Ct=i(w_,"A",{href:!0,rel:!0});var K2=n(Ct);nv=p(K2,"CTRL: A Conditional Transformer Language Model for Controllable Generation"),K2.forEach(t),ov=p(w_,`,
Nitish Shirish Keskar et al.`),w_.forEach(t),mf=f(e),ji=i(e,"P",{});var O2=n(ji);hv=p(O2,`Same as the GPT model but adds the idea of control codes. Text is generated from a prompt (can be empty) and one (or
several) of those control codes which are then used to influence the text generation: generate with the style of
wikipedia article, a book or a movie review.`),O2.forEach(t),pf=f(e),Fi=i(e,"P",{});var W2=n(Fi);fv=p(W2,"The library provides a version of the model for language modeling only."),W2.forEach(t),uf=f(e),Q=i(e,"H3",{class:!0});var qc=n(Q);Ne=i(qc,"A",{id:!0,class:!0,href:!0});var J2=n(Ne);Cn=i(J2,"SPAN",{});var Q2=n(Cn);d(zt.$$.fragment,Q2),Q2.forEach(t),J2.forEach(t),mv=f(qc),zn=i(qc,"SPAN",{});var V2=n(zn);pv=p(V2,"Transformer-XL"),V2.forEach(t),qc.forEach(t),cf=f(e),Ht=i(e,"A",{href:!0});var eE=n(Ht);Ui=i(eE,"IMG",{alt:!0,src:!0}),eE.forEach(t),df=f(e),jt=i(e,"A",{href:!0});var tE=n(jt);Xi=i(tE,"IMG",{alt:!0,src:!0}),tE.forEach(t),vf=f(e),Ft=i(e,"P",{});var __=n(Ft);Ut=i(__,"A",{href:!0,rel:!0});var aE=n(Ut);uv=p(aE,"Transformer-XL: Attentive Language Models Beyond a Fixed-Length Context"),aE.forEach(t),cv=p(__,`, Zihang
Dai et al.`),__.forEach(t),gf=f(e),Yi=i(e,"P",{});var sE=n(Yi);dv=p(sE,`Same as a regular GPT model, but introduces a recurrence mechanism for two consecutive segments (similar to a regular
RNNs with two consecutive inputs). In this context, a segment is a number of consecutive tokens (for instance 512) that
may span across multiple documents, and segments are fed in order to the model.`),sE.forEach(t),bf=f(e),Zi=i(e,"P",{});var iE=n(Zi);vv=p(iE,`Basically, the hidden states of the previous segment are concatenated to the current input to compute the attention
scores. This allows the model to pay attention to information that was in the previous segment as well as the current
one. By stacking multiple attention layers, the receptive field can be increased to multiple previous segments.`),iE.forEach(t),wf=f(e),Ki=i(e,"P",{});var rE=n(Ki);gv=p(rE,`This changes the positional embeddings to positional relative embeddings (as the regular positional embeddings would
give the same results in the current input and the current hidden state at a given position) and needs to make some
adjustments in the way attention scores are computed.`),rE.forEach(t),_f=f(e),Oi=i(e,"P",{});var lE=n(Oi);bv=p(lE,"The library provides a version of the model for language modeling only."),lE.forEach(t),yf=f(e),Wi=i(e,"A",{id:!0}),n(Wi).forEach(t),Ef=f(e),V=i(e,"H3",{class:!0});var Nc=n(V);Ge=i(Nc,"A",{id:!0,class:!0,href:!0});var nE=n(Ge);Hn=i(nE,"SPAN",{});var oE=n(Hn);d(Xt.$$.fragment,oE),oE.forEach(t),nE.forEach(t),wv=f(Nc),jn=i(Nc,"SPAN",{});var hE=n(jn);_v=p(hE,"Reformer"),hE.forEach(t),Nc.forEach(t),kf=f(e),Yt=i(e,"A",{href:!0});var fE=n(Yt);Ji=i(fE,"IMG",{alt:!0,src:!0}),fE.forEach(t),Af=f(e),Zt=i(e,"A",{href:!0});var mE=n(Zt);Qi=i(mE,"IMG",{alt:!0,src:!0}),mE.forEach(t),Tf=f(e),Kt=i(e,"P",{});var y_=n(Kt);Ot=i(y_,"A",{href:!0,rel:!0});var pE=n(Ot);yv=p(pE,"Reformer: The Efficient Transformer"),pE.forEach(t),Ev=p(y_,", Nikita Kitaev et al ."),y_.forEach(t),xf=f(e),Vi=i(e,"P",{});var uE=n(Vi);kv=p(uE,`An autoregressive transformer model with lots of tricks to reduce memory footprint and compute time. Those tricks
include:`),uE.forEach(t),Pf=f(e),R=i(e,"UL",{});var gt=n(R);Wt=i(gt,"LI",{});var Gc=n(Wt);Av=p(Gc,"Use "),er=i(Gc,"A",{href:!0});var cE=n(er);Tv=p(cE,"Axial position encoding"),cE.forEach(t),xv=p(Gc,` (see below for more details). It\u2019s a mechanism to avoid
having a huge positional encoding matrix (when the sequence length is very big) by factorizing it into smaller
matrices.`),Gc.forEach(t),Pv=f(gt),Jt=i(gt,"LI",{});var Ic=n(Jt);$v=p(Ic,"Replace traditional attention by "),tr=i(Ic,"A",{href:!0});var dE=n(tr);Mv=p(dE,"LSH (local-sensitive hashing) attention"),dE.forEach(t),Lv=p(Ic,` (see below for more
details). It\u2019s a technique to avoid computing the full product query-key in the attention layers.`),Ic.forEach(t),Rv=f(gt),Fn=i(gt,"LI",{});var vE=n(Fn);Sv=p(vE,`Avoid storing the intermediate results of each layer by using reversible transformer layers to obtain them during
the backward pass (subtracting the residuals from the input of the next layer gives them back) or recomputing them
for results inside a given layer (less efficient than storing them but saves memory).`),vE.forEach(t),qv=f(gt),Un=i(gt,"LI",{});var gE=n(Un);Nv=p(gE,"Compute the feedforward operations by chunks and not on the whole batch."),gE.forEach(t),gt.forEach(t),$f=f(e),ar=i(e,"P",{});var bE=n(ar);Gv=p(bE,"With those tricks, the model can be fed much larger sentences than traditional transformer autoregressive models."),bE.forEach(t),Mf=f(e),Qt=i(e,"P",{});var E_=n(Qt);Xn=i(E_,"STRONG",{});var wE=n(Xn);Iv=p(wE,"Note:"),wE.forEach(t),Bv=p(E_,` This model could be very well be used in an autoencoding setting, there is no checkpoint for such a
pretraining yet, though.`),E_.forEach(t),Lf=f(e),sr=i(e,"P",{});var _E=n(sr);Dv=p(_E,"The library provides a version of the model for language modeling only."),_E.forEach(t),Rf=f(e),ee=i(e,"H3",{class:!0});var Bc=n(ee);Ie=i(Bc,"A",{id:!0,class:!0,href:!0});var yE=n(Ie);Yn=i(yE,"SPAN",{});var EE=n(Yn);d(Vt.$$.fragment,EE),EE.forEach(t),yE.forEach(t),Cv=f(Bc),Zn=i(Bc,"SPAN",{});var kE=n(Zn);zv=p(kE,"XLNet"),kE.forEach(t),Bc.forEach(t),Sf=f(e),ea=i(e,"A",{href:!0});var AE=n(ea);ir=i(AE,"IMG",{alt:!0,src:!0}),AE.forEach(t),qf=f(e),ta=i(e,"A",{href:!0});var TE=n(ta);rr=i(TE,"IMG",{alt:!0,src:!0}),TE.forEach(t),Nf=f(e),aa=i(e,"P",{});var k_=n(aa);sa=i(k_,"A",{href:!0,rel:!0});var xE=n(sa);Hv=p(xE,"XLNet: Generalized Autoregressive Pretraining for Language Understanding"),xE.forEach(t),jv=p(k_,`, Zhilin
Yang et al.`),k_.forEach(t),Gf=f(e),lr=i(e,"P",{});var PE=n(lr);Fv=p(PE,`XLNet is not a traditional autoregressive model but uses a training strategy that builds on that. It permutes the
tokens in the sentence, then allows the model to use the last n tokens to predict the token n+1. Since this is all done
with a mask, the sentence is actually fed in the model in the right order, but instead of masking the first n tokens
for n+1, XLNet uses a mask that hides the previous tokens in some given permutation of 1,\u2026,sequence length.`),PE.forEach(t),If=f(e),nr=i(e,"P",{});var $E=n(nr);Uv=p($E,"XLNet also uses the same recurrence mechanism as Transformer-XL to build long-term dependencies."),$E.forEach(t),Bf=f(e),or=i(e,"P",{});var ME=n(or);Xv=p(ME,`The library provides a version of the model for language modeling, token classification, sentence classification,
multiple choice classification and question answering.`),ME.forEach(t),Df=f(e),hr=i(e,"A",{id:!0}),n(hr).forEach(t),Cf=f(e),te=i(e,"H2",{class:!0});var Dc=n(te);Be=i(Dc,"A",{id:!0,class:!0,href:!0});var LE=n(Be);Kn=i(LE,"SPAN",{});var RE=n(Kn);d(ia.$$.fragment,RE),RE.forEach(t),LE.forEach(t),Yv=f(Dc),On=i(Dc,"SPAN",{});var SE=n(On);Zv=p(SE,"Encoders or autoencoding models"),SE.forEach(t),Dc.forEach(t),zf=f(e),fr=i(e,"P",{});var qE=n(fr);Kv=p(qE,`As mentioned before, these models rely on the encoder part of the original transformer and use no mask so the model can
look at all the tokens in the attention heads. For pretraining, targets are the original sentences and inputs are their
corrupted versions.`),qE.forEach(t),Hf=f(e),$=i(e,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),n($).forEach(t),jf=f(e),ae=i(e,"H3",{class:!0});var Cc=n(ae);De=i(Cc,"A",{id:!0,class:!0,href:!0});var NE=n(De);Wn=i(NE,"SPAN",{});var GE=n(Wn);d(ra.$$.fragment,GE),GE.forEach(t),NE.forEach(t),Ov=f(Cc),Jn=i(Cc,"SPAN",{});var IE=n(Jn);Wv=p(IE,"BERT"),IE.forEach(t),Cc.forEach(t),Ff=f(e),la=i(e,"A",{href:!0});var BE=n(la);mr=i(BE,"IMG",{alt:!0,src:!0}),BE.forEach(t),Uf=f(e),na=i(e,"A",{href:!0});var DE=n(na);pr=i(DE,"IMG",{alt:!0,src:!0}),DE.forEach(t),Xf=f(e),oa=i(e,"P",{});var A_=n(oa);ha=i(A_,"A",{href:!0,rel:!0});var CE=n(ha);Jv=p(CE,"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding"),CE.forEach(t),Qv=p(A_,`,
Jacob Devlin et al.`),A_.forEach(t),Yf=f(e),ur=i(e,"P",{});var zE=n(ur);Vv=p(zE,`Corrupts the inputs by using random masking, more precisely, during pretraining, a given percentage of tokens (usually
15%) is masked by:`),zE.forEach(t),Zf=f(e),D=i(e,"UL",{});var gn=n(D);Qn=i(gn,"LI",{});var HE=n(Qn);eg=p(HE,"a special mask token with probability 0.8"),HE.forEach(t),tg=f(gn),Vn=i(gn,"LI",{});var jE=n(Vn);ag=p(jE,"a random token different from the one masked with probability 0.1"),jE.forEach(t),sg=f(gn),eo=i(gn,"LI",{});var FE=n(eo);ig=p(FE,"the same token with probability 0.1"),FE.forEach(t),gn.forEach(t),Kf=f(e),cr=i(e,"P",{});var UE=n(cr);rg=p(UE,`The model must predict the original sentence, but has a second objective: inputs are two sentences A and B (with a
separation token in between). With probability 50%, the sentences are consecutive in the corpus, in the remaining 50%
they are not related. The model has to predict if the sentences are consecutive or not.`),UE.forEach(t),Of=f(e),dr=i(e,"P",{});var XE=n(dr);lg=p(XE,`The library provides a version of the model for language modeling (traditional or masked), next sentence prediction,
token classification, sentence classification, multiple choice classification and question answering.`),XE.forEach(t),Wf=f(e),se=i(e,"H3",{class:!0});var zc=n(se);Ce=i(zc,"A",{id:!0,class:!0,href:!0});var YE=n(Ce);to=i(YE,"SPAN",{});var ZE=n(to);d(fa.$$.fragment,ZE),ZE.forEach(t),YE.forEach(t),ng=f(zc),ao=i(zc,"SPAN",{});var KE=n(ao);og=p(KE,"ALBERT"),KE.forEach(t),zc.forEach(t),Jf=f(e),ma=i(e,"A",{href:!0});var OE=n(ma);vr=i(OE,"IMG",{alt:!0,src:!0}),OE.forEach(t),Qf=f(e),pa=i(e,"A",{href:!0});var WE=n(pa);gr=i(WE,"IMG",{alt:!0,src:!0}),WE.forEach(t),Vf=f(e),ua=i(e,"P",{});var T_=n(ua);ca=i(T_,"A",{href:!0,rel:!0});var JE=n(ca);hg=p(JE,"ALBERT: A Lite BERT for Self-supervised Learning of Language Representations"),JE.forEach(t),fg=p(T_,`,
Zhenzhong Lan et al.`),T_.forEach(t),em=f(e),br=i(e,"P",{});var QE=n(br);mg=p(QE,"Same as BERT but with a few tweaks:"),QE.forEach(t),tm=f(e),C=i(e,"UL",{});var bn=n(C);so=i(bn,"LI",{});var VE=n(so);pg=p(VE,`Embedding size E is different from hidden size H justified because the embeddings are context independent (one
embedding vector represents one token), whereas hidden states are context dependent (one hidden state represents a
sequence of tokens) so it\u2019s more logical to have H >> E. Also, the embedding matrix is large since it\u2019s V x E (V
being the vocab size). If E < H, it has less parameters.`),VE.forEach(t),ug=f(bn),io=i(bn,"LI",{});var ek=n(io);cg=p(ek,"Layers are split in groups that share parameters (to save memory)."),ek.forEach(t),dg=f(bn),ro=i(bn,"LI",{});var tk=n(ro);vg=p(tk,`Next sentence prediction is replaced by a sentence ordering prediction: in the inputs, we have two sentences A and
B (that are consecutive) and we either feed A followed by B or B followed by A. The model must predict if they have
been swapped or not.`),tk.forEach(t),bn.forEach(t),am=f(e),wr=i(e,"P",{});var ak=n(wr);gg=p(ak,`The library provides a version of the model for masked language modeling, token classification, sentence
classification, multiple choice classification and question answering.`),ak.forEach(t),sm=f(e),ie=i(e,"H3",{class:!0});var Hc=n(ie);ze=i(Hc,"A",{id:!0,class:!0,href:!0});var sk=n(ze);lo=i(sk,"SPAN",{});var ik=n(lo);d(da.$$.fragment,ik),ik.forEach(t),sk.forEach(t),bg=f(Hc),no=i(Hc,"SPAN",{});var rk=n(no);wg=p(rk,"RoBERTa"),rk.forEach(t),Hc.forEach(t),im=f(e),va=i(e,"A",{href:!0});var lk=n(va);_r=i(lk,"IMG",{alt:!0,src:!0}),lk.forEach(t),rm=f(e),ga=i(e,"A",{href:!0});var nk=n(ga);yr=i(nk,"IMG",{alt:!0,src:!0}),nk.forEach(t),lm=f(e),ba=i(e,"P",{});var x_=n(ba);wa=i(x_,"A",{href:!0,rel:!0});var ok=n(wa);_g=p(ok,"RoBERTa: A Robustly Optimized BERT Pretraining Approach"),ok.forEach(t),yg=p(x_,", Yinhan Liu et al."),x_.forEach(t),nm=f(e),Er=i(e,"P",{});var hk=n(Er);Eg=p(hk,"Same as BERT with better pretraining tricks:"),hk.forEach(t),om=f(e),S=i(e,"UL",{});var bt=n(S);oo=i(bt,"LI",{});var fk=n(oo);kg=p(fk,"dynamic masking: tokens are masked differently at each epoch, whereas BERT does it once and for all"),fk.forEach(t),Ag=f(bt),ho=i(bt,"LI",{});var mk=n(ho);Tg=p(mk,`no NSP (next sentence prediction) loss and instead of putting just two sentences together, put a chunk of
contiguous texts together to reach 512 tokens (so the sentences are in an order than may span several documents)`),mk.forEach(t),xg=f(bt),fo=i(bt,"LI",{});var pk=n(fo);Pg=p(pk,"train with larger batches"),pk.forEach(t),$g=f(bt),mo=i(bt,"LI",{});var uk=n(mo);Mg=p(uk,"use BPE with bytes as a subunit and not characters (because of unicode characters)"),uk.forEach(t),bt.forEach(t),hm=f(e),kr=i(e,"P",{});var ck=n(kr);Lg=p(ck,`The library provides a version of the model for masked language modeling, token classification, sentence
classification, multiple choice classification and question answering.`),ck.forEach(t),fm=f(e),re=i(e,"H3",{class:!0});var jc=n(re);He=i(jc,"A",{id:!0,class:!0,href:!0});var dk=n(He);po=i(dk,"SPAN",{});var vk=n(po);d(_a.$$.fragment,vk),vk.forEach(t),dk.forEach(t),Rg=f(jc),uo=i(jc,"SPAN",{});var gk=n(uo);Sg=p(gk,"DistilBERT"),gk.forEach(t),jc.forEach(t),mm=f(e),ya=i(e,"A",{href:!0});var bk=n(ya);Ar=i(bk,"IMG",{alt:!0,src:!0}),bk.forEach(t),pm=f(e),Ea=i(e,"A",{href:!0});var wk=n(Ea);Tr=i(wk,"IMG",{alt:!0,src:!0}),wk.forEach(t),um=f(e),ka=i(e,"P",{});var P_=n(ka);Aa=i(P_,"A",{href:!0,rel:!0});var _k=n(Aa);qg=p(_k,"DistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter"),_k.forEach(t),Ng=p(P_,`,
Victor Sanh et al.`),P_.forEach(t),cm=f(e),xr=i(e,"P",{});var yk=n(xr);Gg=p(yk,`Same as BERT but smaller. Trained by distillation of the pretrained BERT model, meaning it\u2019s been trained to predict
the same probabilities as the larger model. The actual objective is a combination of:`),yk.forEach(t),dm=f(e),z=i(e,"UL",{});var wn=n(z);co=i(wn,"LI",{});var Ek=n(co);Ig=p(Ek,"finding the same probabilities as the teacher model"),Ek.forEach(t),Bg=f(wn),vo=i(wn,"LI",{});var kk=n(vo);Dg=p(kk,"predicting the masked tokens correctly (but no next-sentence objective)"),kk.forEach(t),Cg=f(wn),go=i(wn,"LI",{});var Ak=n(go);zg=p(Ak,"a cosine similarity between the hidden states of the student and the teacher model"),Ak.forEach(t),wn.forEach(t),vm=f(e),Pr=i(e,"P",{});var Tk=n(Pr);Hg=p(Tk,`The library provides a version of the model for masked language modeling, token classification, sentence classification
and question answering.`),Tk.forEach(t),gm=f(e),le=i(e,"H3",{class:!0});var Fc=n(le);je=i(Fc,"A",{id:!0,class:!0,href:!0});var xk=n(je);bo=i(xk,"SPAN",{});var Pk=n(bo);d(Ta.$$.fragment,Pk),Pk.forEach(t),xk.forEach(t),jg=f(Fc),wo=i(Fc,"SPAN",{});var $k=n(wo);Fg=p($k,"ConvBERT"),$k.forEach(t),Fc.forEach(t),bm=f(e),xa=i(e,"A",{href:!0});var Mk=n(xa);$r=i(Mk,"IMG",{alt:!0,src:!0}),Mk.forEach(t),wm=f(e),Pa=i(e,"A",{href:!0});var Lk=n(Pa);Mr=i(Lk,"IMG",{alt:!0,src:!0}),Lk.forEach(t),_m=f(e),$a=i(e,"P",{});var $_=n($a);Ma=i($_,"A",{href:!0,rel:!0});var Rk=n(Ma);Ug=p(Rk,"ConvBERT: Improving BERT with Span-based Dynamic Convolution"),Rk.forEach(t),Xg=p($_,`, Zihang Jiang,
Weihao Yu, Daquan Zhou, Yunpeng Chen, Jiashi Feng, Shuicheng Yan.`),$_.forEach(t),ym=f(e),Lr=i(e,"P",{});var Sk=n(Lr);Yg=p(Sk,`Pre-trained language models like BERT and its variants have recently achieved impressive performance in various natural
language understanding tasks. However, BERT heavily relies on the global self-attention block and thus suffers large
memory footprint and computation cost. Although all its attention heads query on the whole input sequence for
generating the attention map from a global perspective, we observe some heads only need to learn local dependencies,
which means the existence of computation redundancy. We therefore propose a novel span-based dynamic convolution to
replace these self-attention heads to directly model local dependencies. The novel convolution heads, together with the
rest self-attention heads, form a new mixed attention block that is more efficient at both global and local context
learning. We equip BERT with this mixed attention design and build a ConvBERT model. Experiments have shown that
ConvBERT significantly outperforms BERT and its variants in various downstream tasks, with lower training cost and
fewer model parameters. Remarkably, ConvBERTbase model achieves 86.4 GLUE score, 0.7 higher than ELECTRAbase, while
using less than 1/4 training cost.`),Sk.forEach(t),Em=f(e),Rr=i(e,"P",{});var qk=n(Rr);Zg=p(qk,`The library provides a version of the model for masked language modeling, token classification, sentence classification
and question answering.`),qk.forEach(t),km=f(e),ne=i(e,"H3",{class:!0});var Uc=n(ne);Fe=i(Uc,"A",{id:!0,class:!0,href:!0});var Nk=n(Fe);_o=i(Nk,"SPAN",{});var Gk=n(_o);d(La.$$.fragment,Gk),Gk.forEach(t),Nk.forEach(t),Kg=f(Uc),yo=i(Uc,"SPAN",{});var Ik=n(yo);Og=p(Ik,"XLM"),Ik.forEach(t),Uc.forEach(t),Am=f(e),Ra=i(e,"A",{href:!0});var Bk=n(Ra);Sr=i(Bk,"IMG",{alt:!0,src:!0}),Bk.forEach(t),Tm=f(e),Sa=i(e,"A",{href:!0});var Dk=n(Sa);qr=i(Dk,"IMG",{alt:!0,src:!0}),Dk.forEach(t),xm=f(e),qa=i(e,"P",{});var M_=n(qa);Na=i(M_,"A",{href:!0,rel:!0});var Ck=n(Na);Wg=p(Ck,"Cross-lingual Language Model Pretraining"),Ck.forEach(t),Jg=p(M_,", Guillaume Lample and Alexis Conneau"),M_.forEach(t),Pm=f(e),Nr=i(e,"P",{});var zk=n(Nr);Qg=p(zk,`A transformer model trained on several languages. There are three different type of training for this model and the
library provides checkpoints for all of them:`),zk.forEach(t),$m=f(e),H=i(e,"UL",{});var _n=n(H);Eo=i(_n,"LI",{});var Hk=n(Eo);Vg=p(Hk,`Causal language modeling (CLM) which is the traditional autoregressive training (so this model could be in the
previous section as well). One of the languages is selected for each training sample, and the model input is a
sentence of 256 tokens, that may span over several documents in one of those languages.`),Hk.forEach(t),e1=f(_n),ko=i(_n,"LI",{});var jk=n(ko);t1=p(jk,`Masked language modeling (MLM) which is like RoBERTa. One of the languages is selected for each training sample,
and the model input is a sentence of 256 tokens, that may span over several documents in one of those languages,
with dynamic masking of the tokens.`),jk.forEach(t),a1=f(_n),Ao=i(_n,"LI",{});var Fk=n(Ao);s1=p(Fk,`A combination of MLM and translation language modeling (TLM). This consists of concatenating a sentence in two
different languages, with random masking. To predict one of the masked tokens, the model can use both, the
surrounding context in language 1 and the context given by language 2.`),Fk.forEach(t),_n.forEach(t),Mm=f(e),q=i(e,"P",{});var wt=n(q);i1=p(wt,"Checkpoints refer to which method was used for pretraining by having "),To=i(wt,"EM",{});var Uk=n(To);r1=p(Uk,"clm"),Uk.forEach(t),l1=p(wt,", "),xo=i(wt,"EM",{});var Xk=n(xo);n1=p(Xk,"mlm"),Xk.forEach(t),o1=p(wt," or "),Po=i(wt,"EM",{});var Yk=n(Po);h1=p(Yk,"mlm-tlm"),Yk.forEach(t),f1=p(wt,` in their names. On top
of positional embeddings, the model has language embeddings. When training using MLM/CLM, this gives the model an
indication of the language used, and when training using MLM+TLM, an indication of the language used for each part.`),wt.forEach(t),Lm=f(e),Gr=i(e,"P",{});var Zk=n(Gr);m1=p(Zk,`The library provides a version of the model for language modeling, token classification, sentence classification and
question answering.`),Zk.forEach(t),Rm=f(e),oe=i(e,"H3",{class:!0});var Xc=n(oe);Ue=i(Xc,"A",{id:!0,class:!0,href:!0});var Kk=n(Ue);$o=i(Kk,"SPAN",{});var Ok=n($o);d(Ga.$$.fragment,Ok),Ok.forEach(t),Kk.forEach(t),p1=f(Xc),Mo=i(Xc,"SPAN",{});var Wk=n(Mo);u1=p(Wk,"XLM-RoBERTa"),Wk.forEach(t),Xc.forEach(t),Sm=f(e),Ia=i(e,"A",{href:!0});var Jk=n(Ia);Ir=i(Jk,"IMG",{alt:!0,src:!0}),Jk.forEach(t),qm=f(e),Ba=i(e,"A",{href:!0});var Qk=n(Ba);Br=i(Qk,"IMG",{alt:!0,src:!0}),Qk.forEach(t),Nm=f(e),Da=i(e,"P",{});var L_=n(Da);Ca=i(L_,"A",{href:!0,rel:!0});var Vk=n(Ca);c1=p(Vk,"Unsupervised Cross-lingual Representation Learning at Scale"),Vk.forEach(t),d1=p(L_,`, Alexis Conneau et
al.`),L_.forEach(t),Gm=f(e),Dr=i(e,"P",{});var e3=n(Dr);v1=p(e3,`Uses RoBERTa tricks on the XLM approach, but does not use the translation language modeling objective. It only uses
masked language modeling on sentences coming from one language. However, the model is trained on many more languages
(100) and doesn\u2019t use the language embeddings, so it\u2019s capable of detecting the input language by itself.`),e3.forEach(t),Im=f(e),Cr=i(e,"P",{});var t3=n(Cr);g1=p(t3,`The library provides a version of the model for masked language modeling, token classification, sentence
classification, multiple choice classification and question answering.`),t3.forEach(t),Bm=f(e),he=i(e,"H3",{class:!0});var Yc=n(he);Xe=i(Yc,"A",{id:!0,class:!0,href:!0});var a3=n(Xe);Lo=i(a3,"SPAN",{});var s3=n(Lo);d(za.$$.fragment,s3),s3.forEach(t),a3.forEach(t),b1=f(Yc),Ro=i(Yc,"SPAN",{});var i3=n(Ro);w1=p(i3,"FlauBERT"),i3.forEach(t),Yc.forEach(t),Dm=f(e),Ha=i(e,"A",{href:!0});var r3=n(Ha);zr=i(r3,"IMG",{alt:!0,src:!0}),r3.forEach(t),Cm=f(e),ja=i(e,"A",{href:!0});var l3=n(ja);Hr=i(l3,"IMG",{alt:!0,src:!0}),l3.forEach(t),zm=f(e),Fa=i(e,"P",{});var R_=n(Fa);Ua=i(R_,"A",{href:!0,rel:!0});var n3=n(Ua);_1=p(n3,"FlauBERT: Unsupervised Language Model Pre-training for French"),n3.forEach(t),y1=p(R_,", Hang Le et al."),R_.forEach(t),Hm=f(e),jr=i(e,"P",{});var o3=n(jr);E1=p(o3,"Like RoBERTa, without the sentence ordering prediction (so just trained on the MLM objective)."),o3.forEach(t),jm=f(e),Fr=i(e,"P",{});var h3=n(Fr);k1=p(h3,"The library provides a version of the model for language modeling and sentence classification."),h3.forEach(t),Fm=f(e),fe=i(e,"H3",{class:!0});var Zc=n(fe);Ye=i(Zc,"A",{id:!0,class:!0,href:!0});var f3=n(Ye);So=i(f3,"SPAN",{});var m3=n(So);d(Xa.$$.fragment,m3),m3.forEach(t),f3.forEach(t),A1=f(Zc),qo=i(Zc,"SPAN",{});var p3=n(qo);T1=p(p3,"ELECTRA"),p3.forEach(t),Zc.forEach(t),Um=f(e),Ya=i(e,"A",{href:!0});var u3=n(Ya);Ur=i(u3,"IMG",{alt:!0,src:!0}),u3.forEach(t),Xm=f(e),Za=i(e,"A",{href:!0});var c3=n(Za);Xr=i(c3,"IMG",{alt:!0,src:!0}),c3.forEach(t),Ym=f(e),Ka=i(e,"P",{});var S_=n(Ka);Oa=i(S_,"A",{href:!0,rel:!0});var d3=n(Oa);x1=p(d3,"ELECTRA: Pre-training Text Encoders as Discriminators Rather Than Generators"),d3.forEach(t),P1=p(S_,`,
Kevin Clark et al.`),S_.forEach(t),Zm=f(e),Yr=i(e,"P",{});var v3=n(Yr);$1=p(v3,`ELECTRA is a transformer model pretrained with the use of another (small) masked language model. The inputs are
corrupted by that language model, which takes an input text that is randomly masked and outputs a text in which ELECTRA
has to predict which token is an original and which one has been replaced. Like for GAN training, the small language
model is trained for a few steps (but with the original texts as objective, not to fool the ELECTRA model like in a
traditional GAN setting) then the ELECTRA model is trained for a few steps.`),v3.forEach(t),Km=f(e),Zr=i(e,"P",{});var g3=n(Zr);M1=p(g3,`The library provides a version of the model for masked language modeling, token classification and sentence
classification.`),g3.forEach(t),Om=f(e),me=i(e,"H3",{class:!0});var Kc=n(me);Ze=i(Kc,"A",{id:!0,class:!0,href:!0});var b3=n(Ze);No=i(b3,"SPAN",{});var w3=n(No);d(Wa.$$.fragment,w3),w3.forEach(t),b3.forEach(t),L1=f(Kc),Go=i(Kc,"SPAN",{});var _3=n(Go);R1=p(_3,"Funnel Transformer"),_3.forEach(t),Kc.forEach(t),Wm=f(e),Ja=i(e,"A",{href:!0});var y3=n(Ja);Kr=i(y3,"IMG",{alt:!0,src:!0}),y3.forEach(t),Jm=f(e),Qa=i(e,"A",{href:!0});var E3=n(Qa);Or=i(E3,"IMG",{alt:!0,src:!0}),E3.forEach(t),Qm=f(e),Va=i(e,"P",{});var q_=n(Va);es=i(q_,"A",{href:!0,rel:!0});var k3=n(es);S1=p(k3,"Funnel-Transformer: Filtering out Sequential Redundancy for Efficient Language Processing"),k3.forEach(t),q1=p(q_,", Zihang Dai et al."),q_.forEach(t),Vm=f(e),Wr=i(e,"P",{});var A3=n(Wr);N1=p(A3,`Funnel Transformer is a transformer model using pooling, a bit like a ResNet model: layers are grouped in blocks, and
at the beginning of each block (except the first one), the hidden states are pooled among the sequence dimension. This
way, their length is divided by 2, which speeds up the computation of the next hidden states. All pretrained models
have three blocks, which means the final hidden state has a sequence length that is one fourth of the original sequence
length.`),A3.forEach(t),ep=f(e),Jr=i(e,"P",{});var T3=n(Jr);G1=p(T3,`For tasks such as classification, this is not a problem, but for tasks like masked language modeling or token
classification, we need a hidden state with the same sequence length as the original input. In those cases, the final
hidden states are upsampled to the input sequence length and go through two additional layers. That\u2019s why there are two
versions of each checkpoint. The version suffixed with \u201C-base\u201D contains only the three blocks, while the version
without that suffix contains the three blocks and the upsampling head with its additional layers.`),T3.forEach(t),tp=f(e),Qr=i(e,"P",{});var x3=n(Qr);I1=p(x3,"The pretrained models available use the same pretraining objective as ELECTRA."),x3.forEach(t),ap=f(e),Vr=i(e,"P",{});var P3=n(Vr);B1=p(P3,`The library provides a version of the model for masked language modeling, token classification, sentence
classification, multiple choice classification and question answering.`),P3.forEach(t),sp=f(e),el=i(e,"A",{id:!0}),n(el).forEach(t),ip=f(e),pe=i(e,"H3",{class:!0});var Oc=n(pe);Ke=i(Oc,"A",{id:!0,class:!0,href:!0});var $3=n(Ke);Io=i($3,"SPAN",{});var M3=n(Io);d(ts.$$.fragment,M3),M3.forEach(t),$3.forEach(t),D1=f(Oc),Bo=i(Oc,"SPAN",{});var L3=n(Bo);C1=p(L3,"Longformer"),L3.forEach(t),Oc.forEach(t),rp=f(e),as=i(e,"A",{href:!0});var R3=n(as);tl=i(R3,"IMG",{alt:!0,src:!0}),R3.forEach(t),lp=f(e),ss=i(e,"A",{href:!0});var S3=n(ss);al=i(S3,"IMG",{alt:!0,src:!0}),S3.forEach(t),np=f(e),is=i(e,"P",{});var N_=n(is);rs=i(N_,"A",{href:!0,rel:!0});var q3=n(rs);z1=p(q3,"Longformer: The Long-Document Transformer"),q3.forEach(t),H1=p(N_,", Iz Beltagy et al."),N_.forEach(t),op=f(e),Oe=i(e,"P",{});var Wc=n(Oe);j1=p(Wc,`A transformer model replacing the attention matrices by sparse matrices to go faster. Often, the local context (e.g.,
what are the two tokens left and right?) is enough to take action for a given token. Some preselected input tokens are
still given global attention, but the attention matrix has way less parameters, resulting in a speed-up. See the
`),sl=i(Wc,"A",{href:!0});var N3=n(sl);F1=p(N3,"local attention section"),N3.forEach(t),U1=p(Wc," for more information."),Wc.forEach(t),hp=f(e),il=i(e,"P",{});var G3=n(il);X1=p(G3,"It is pretrained the same way a RoBERTa otherwise."),G3.forEach(t),fp=f(e),ls=i(e,"P",{});var G_=n(ls);Do=i(G_,"STRONG",{});var I3=n(Do);Y1=p(I3,"Note:"),I3.forEach(t),Z1=p(G_,` This model could be very well be used in an autoregressive setting, there is no checkpoint for such a
pretraining yet, though.`),G_.forEach(t),mp=f(e),rl=i(e,"P",{});var B3=n(rl);K1=p(B3,`The library provides a version of the model for masked language modeling, token classification, sentence
classification, multiple choice classification and question answering.`),B3.forEach(t),pp=f(e),ll=i(e,"A",{id:!0}),n(ll).forEach(t),up=f(e),ue=i(e,"H2",{class:!0});var Jc=n(ue);We=i(Jc,"A",{id:!0,class:!0,href:!0});var D3=n(We);Co=i(D3,"SPAN",{});var C3=n(Co);d(ns.$$.fragment,C3),C3.forEach(t),D3.forEach(t),O1=f(Jc),zo=i(Jc,"SPAN",{});var z3=n(zo);W1=p(z3,"Sequence-to-sequence models"),z3.forEach(t),Jc.forEach(t),cp=f(e),nl=i(e,"P",{});var H3=n(nl);J1=p(H3,"As mentioned before, these models keep both the encoder and the decoder of the original transformer."),H3.forEach(t),dp=f(e),M=i(e,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),n(M).forEach(t),vp=f(e),ce=i(e,"H3",{class:!0});var Qc=n(ce);Je=i(Qc,"A",{id:!0,class:!0,href:!0});var j3=n(Je);Ho=i(j3,"SPAN",{});var F3=n(Ho);d(os.$$.fragment,F3),F3.forEach(t),j3.forEach(t),Q1=f(Qc),jo=i(Qc,"SPAN",{});var U3=n(jo);V1=p(U3,"BART"),U3.forEach(t),Qc.forEach(t),gp=f(e),hs=i(e,"A",{href:!0});var X3=n(hs);ol=i(X3,"IMG",{alt:!0,src:!0}),X3.forEach(t),bp=f(e),fs=i(e,"A",{href:!0});var Y3=n(fs);hl=i(Y3,"IMG",{alt:!0,src:!0}),Y3.forEach(t),wp=f(e),ms=i(e,"P",{});var I_=n(ms);ps=i(I_,"A",{href:!0,rel:!0});var Z3=n(ps);eb=p(Z3,"BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension"),Z3.forEach(t),tb=p(I_,", Mike Lewis et al."),I_.forEach(t),_p=f(e),fl=i(e,"P",{});var K3=n(fl);ab=p(K3,`Sequence-to-sequence model with an encoder and a decoder. Encoder is fed a corrupted version of the tokens, decoder is
fed the original tokens (but has a mask to hide the future words like a regular transformers decoder). A composition of
the following transformations are applied on the pretraining tasks for the encoder:`),K3.forEach(t),yp=f(e),T=i(e,"UL",{});var Z=n(T);Fo=i(Z,"LI",{});var O3=n(Fo);sb=p(O3,"mask random tokens (like in BERT)"),O3.forEach(t),ib=f(Z),Uo=i(Z,"LI",{});var W3=n(Uo);rb=p(W3,"delete random tokens"),W3.forEach(t),lb=f(Z),Xo=i(Z,"LI",{});var J3=n(Xo);nb=p(J3,"mask a span of k tokens with a single mask token (a span of 0 tokens is an insertion of a mask token)"),J3.forEach(t),ob=f(Z),Yo=i(Z,"LI",{});var Q3=n(Yo);hb=p(Q3,"permute sentences"),Q3.forEach(t),fb=f(Z),Zo=i(Z,"LI",{});var V3=n(Zo);mb=p(V3,"rotate the document to make it start at a specific token"),V3.forEach(t),Z.forEach(t),Ep=f(e),ml=i(e,"P",{});var e0=n(ml);pb=p(e0,"The library provides a version of this model for conditional generation and sequence classification."),e0.forEach(t),kp=f(e),de=i(e,"H3",{class:!0});var Vc=n(de);Qe=i(Vc,"A",{id:!0,class:!0,href:!0});var t0=n(Qe);Ko=i(t0,"SPAN",{});var a0=n(Ko);d(us.$$.fragment,a0),a0.forEach(t),t0.forEach(t),ub=f(Vc),Oo=i(Vc,"SPAN",{});var s0=n(Oo);cb=p(s0,"Pegasus"),s0.forEach(t),Vc.forEach(t),Ap=f(e),cs=i(e,"A",{href:!0});var i0=n(cs);pl=i(i0,"IMG",{alt:!0,src:!0}),i0.forEach(t),Tp=f(e),ds=i(e,"A",{href:!0});var r0=n(ds);ul=i(r0,"IMG",{alt:!0,src:!0}),r0.forEach(t),xp=f(e),vs=i(e,"P",{});var B_=n(vs);gs=i(B_,"A",{href:!0,rel:!0});var l0=n(gs);db=p(l0,"PEGASUS: Pre-training with Extracted Gap-sentences forAbstractive Summarization"),l0.forEach(t),vb=p(B_,", Jingqing Zhang, Yao Zhao, Mohammad Saleh and Peter J. Liu on Dec 18, 2019."),B_.forEach(t),Pp=f(e),cl=i(e,"P",{});var n0=n(cl);gb=p(n0,`Sequence-to-sequence model with the same encoder-decoder model architecture as BART. Pegasus is pre-trained jointly on
two self-supervised objective functions: Masked Language Modeling (MLM) and a novel summarization specific pretraining
objective, called Gap Sentence Generation (GSG).`),n0.forEach(t),$p=f(e),Ve=i(e,"UL",{});var ed=n(Ve);Wo=i(ed,"LI",{});var o0=n(Wo);bb=p(o0,`MLM: encoder input tokens are randomly replaced by a mask tokens and have to be predicted by the encoder (like in
BERT)`),o0.forEach(t),wb=f(ed),Jo=i(ed,"LI",{});var h0=n(Jo);_b=p(h0,`GSG: whole encoder input sentences are replaced by a second mask token and fed to the decoder, but which has a
causal mask to hide the future words like a regular auto-regressive transformer decoder.`),h0.forEach(t),ed.forEach(t),Mp=f(e),dl=i(e,"P",{});var f0=n(dl);yb=p(f0,`In contrast to BART, Pegasus\u2019 pretraining task is intentionally similar to summarization: important sentences are
masked and are generated together as one output sequence from the remaining sentences, similar to an extractive
summary.`),f0.forEach(t),Lp=f(e),vl=i(e,"P",{});var m0=n(vl);Eb=p(m0,"The library provides a version of this model for conditional generation, which should be used for summarization."),m0.forEach(t),Rp=f(e),ve=i(e,"H3",{class:!0});var td=n(ve);et=i(td,"A",{id:!0,class:!0,href:!0});var p0=n(et);Qo=i(p0,"SPAN",{});var u0=n(Qo);d(bs.$$.fragment,u0),u0.forEach(t),p0.forEach(t),kb=f(td),Vo=i(td,"SPAN",{});var c0=n(Vo);Ab=p(c0,"MarianMT"),c0.forEach(t),td.forEach(t),Sp=f(e),ws=i(e,"A",{href:!0});var d0=n(ws);gl=i(d0,"IMG",{alt:!0,src:!0}),d0.forEach(t),qp=f(e),_s=i(e,"A",{href:!0});var v0=n(_s);bl=i(v0,"IMG",{alt:!0,src:!0}),v0.forEach(t),Np=f(e),ys=i(e,"P",{});var D_=n(ys);Es=i(D_,"A",{href:!0,rel:!0});var g0=n(Es);Tb=p(g0,"Marian: Fast Neural Machine Translation in C++"),g0.forEach(t),xb=p(D_,", Marcin Junczys-Dowmunt et al."),D_.forEach(t),Gp=f(e),wl=i(e,"P",{});var b0=n(wl);Pb=p(b0,"A framework for translation models, using the same models as BART"),b0.forEach(t),Ip=f(e),_l=i(e,"P",{});var w0=n(_l);$b=p(w0,"The library provides a version of this model for conditional generation."),w0.forEach(t),Bp=f(e),ge=i(e,"H3",{class:!0});var ad=n(ge);tt=i(ad,"A",{id:!0,class:!0,href:!0});var _0=n(tt);eh=i(_0,"SPAN",{});var y0=n(eh);d(ks.$$.fragment,y0),y0.forEach(t),_0.forEach(t),Mb=f(ad),th=i(ad,"SPAN",{});var E0=n(th);Lb=p(E0,"T5"),E0.forEach(t),ad.forEach(t),Dp=f(e),As=i(e,"A",{href:!0});var k0=n(As);yl=i(k0,"IMG",{alt:!0,src:!0}),k0.forEach(t),Cp=f(e),Ts=i(e,"A",{href:!0});var A0=n(Ts);El=i(A0,"IMG",{alt:!0,src:!0}),A0.forEach(t),zp=f(e),xs=i(e,"P",{});var C_=n(xs);Ps=i(C_,"A",{href:!0,rel:!0});var T0=n(Ps);Rb=p(T0,"Exploring the Limits of Transfer Learning with a Unified Text-to-Text Transformer"),T0.forEach(t),Sb=p(C_,", Colin Raffel et al."),C_.forEach(t),Hp=f(e),kl=i(e,"P",{});var x0=n(kl);qb=p(x0,`Uses the traditional transformer model (with a slight change in the positional embeddings, which are learned at each
layer). To be able to operate on all NLP tasks, it transforms them into text-to-text problems by using specific
prefixes: \u201Csummarize: \u201D, \u201Cquestion: \u201D, \u201Ctranslate English to German: \u201D and so forth.`),x0.forEach(t),jp=f(e),Al=i(e,"P",{});var P0=n(Al);Nb=p(P0,`The pretraining includes both supervised and self-supervised training. Supervised training is conducted on downstream
tasks provided by the GLUE and SuperGLUE benchmarks (converting them into text-to-text tasks as explained above).`),P0.forEach(t),Fp=f(e),Tl=i(e,"P",{});var $0=n(Tl);Gb=p($0,`Self-supervised training uses corrupted tokens, by randomly removing 15% of the tokens and replacing them with
individual sentinel tokens (if several consecutive tokens are marked for removal, the whole group is replaced with a
single sentinel token). The input of the encoder is the corrupted sentence, the input of the decoder is the original
sentence and the target is then the dropped out tokens delimited by their sentinel tokens.`),$0.forEach(t),Up=f(e),xl=i(e,"P",{});var M0=n(xl);Ib=p(M0,`For instance, if we have the sentence \u201CMy dog is very cute .\u201D, and we decide to remove the tokens: \u201Cdog\u201D, \u201Cis\u201D and
\u201Ccute\u201D, the encoder input becomes \u201CMy <x> very <y> .\u201D and the target input becomes \u201C<x> dog is <y> cute .<z>\u201D`),M0.forEach(t),Xp=f(e),Pl=i(e,"P",{});var L0=n(Pl);Bb=p(L0,"The library provides a version of this model for conditional generation."),L0.forEach(t),Yp=f(e),be=i(e,"H3",{class:!0});var sd=n(be);at=i(sd,"A",{id:!0,class:!0,href:!0});var R0=n(at);ah=i(R0,"SPAN",{});var S0=n(ah);d($s.$$.fragment,S0),S0.forEach(t),R0.forEach(t),Db=f(sd),sh=i(sd,"SPAN",{});var q0=n(sh);Cb=p(q0,"MT5"),q0.forEach(t),sd.forEach(t),Zp=f(e),Ms=i(e,"A",{href:!0});var N0=n(Ms);$l=i(N0,"IMG",{alt:!0,src:!0}),N0.forEach(t),Kp=f(e),Ls=i(e,"A",{href:!0});var G0=n(Ls);Ml=i(G0,"IMG",{alt:!0,src:!0}),G0.forEach(t),Op=f(e),Rs=i(e,"P",{});var z_=n(Rs);Ss=i(z_,"A",{href:!0,rel:!0});var I0=n(Ss);zb=p(I0,"mT5: A massively multilingual pre-trained text-to-text transformer"),I0.forEach(t),Hb=p(z_,`, Linting Xue
et al.`),z_.forEach(t),Wp=f(e),Ll=i(e,"P",{});var B0=n(Ll);jb=p(B0,`The model architecture is same as T5. mT5\u2019s pretraining objective includes T5\u2019s self-supervised training, but not T5\u2019s
supervised training. mT5 is trained on 101 languages.`),B0.forEach(t),Jp=f(e),Rl=i(e,"P",{});var D0=n(Rl);Fb=p(D0,"The library provides a version of this model for conditional generation."),D0.forEach(t),Qp=f(e),we=i(e,"H3",{class:!0});var id=n(we);st=i(id,"A",{id:!0,class:!0,href:!0});var C0=n(st);ih=i(C0,"SPAN",{});var z0=n(ih);d(qs.$$.fragment,z0),z0.forEach(t),C0.forEach(t),Ub=f(id),rh=i(id,"SPAN",{});var H0=n(rh);Xb=p(H0,"MBart"),H0.forEach(t),id.forEach(t),Vp=f(e),Ns=i(e,"A",{href:!0});var j0=n(Ns);Sl=i(j0,"IMG",{alt:!0,src:!0}),j0.forEach(t),eu=f(e),Gs=i(e,"A",{href:!0});var F0=n(Gs);ql=i(F0,"IMG",{alt:!0,src:!0}),F0.forEach(t),tu=f(e),Is=i(e,"P",{});var H_=n(Is);Bs=i(H_,"A",{href:!0,rel:!0});var U0=n(Bs);Yb=p(U0,"Multilingual Denoising Pre-training for Neural Machine Translation"),U0.forEach(t),Zb=p(H_,` by Yinhan Liu,
Jiatao Gu, Naman Goyal, Xian Li, Sergey Edunov Marjan Ghazvininejad, Mike Lewis, Luke Zettlemoyer.`),H_.forEach(t),au=f(e),Nl=i(e,"P",{});var X0=n(Nl);Kb=p(X0,`The model architecture and pretraining objective is same as BART, but MBart is trained on 25 languages and is intended
for supervised and unsupervised machine translation. MBart is one of the first methods for pretraining a complete
sequence-to-sequence model by denoising full texts in multiple languages,`),X0.forEach(t),su=f(e),Gl=i(e,"P",{});var Y0=n(Gl);Ob=p(Y0,"The library provides a version of this model for conditional generation."),Y0.forEach(t),iu=f(e),it=i(e,"P",{});var rd=n(it);Wb=p(rd,"The "),Ds=i(rd,"A",{href:!0,rel:!0});var Z0=n(Ds);Jb=p(Z0,"mbart-large-en-ro checkpoint"),Z0.forEach(t),Qb=p(rd,` can be used for english ->
romanian translation.`),rd.forEach(t),ru=f(e),j=i(e,"P",{});var yn=n(j);Vb=p(yn,"The "),Cs=i(yn,"A",{href:!0,rel:!0});var K0=n(Cs);ew=p(K0,"mbart-large-cc25"),K0.forEach(t),tw=p(yn,` checkpoint can be finetuned for other
translation and summarization tasks, using code in `),lh=i(yn,"CODE",{});var O0=n(lh);aw=p(O0,"examples/pytorch/translation/"),O0.forEach(t),sw=p(yn,` , but is not very useful without
finetuning.`),yn.forEach(t),lu=f(e),_e=i(e,"H3",{class:!0});var ld=n(_e);rt=i(ld,"A",{id:!0,class:!0,href:!0});var W0=n(rt);nh=i(W0,"SPAN",{});var J0=n(nh);d(zs.$$.fragment,J0),J0.forEach(t),W0.forEach(t),iw=f(ld),oh=i(ld,"SPAN",{});var Q0=n(oh);rw=p(Q0,"ProphetNet"),Q0.forEach(t),ld.forEach(t),nu=f(e),Hs=i(e,"A",{href:!0});var V0=n(Hs);Il=i(V0,"IMG",{alt:!0,src:!0}),V0.forEach(t),ou=f(e),js=i(e,"A",{href:!0});var e5=n(js);Bl=i(e5,"IMG",{alt:!0,src:!0}),e5.forEach(t),hu=f(e),Fs=i(e,"P",{});var j_=n(Fs);Us=i(j_,"A",{href:!0,rel:!0});var t5=n(Us);lw=p(t5,"ProphetNet: Predicting Future N-gram for Sequence-to-Sequence Pre-training,"),t5.forEach(t),nw=p(j_,` by
Yu Yan, Weizhen Qi, Yeyun Gong, Dayiheng Liu, Nan Duan, Jiusheng Chen, Ruofei Zhang, Ming Zhou.`),j_.forEach(t),fu=f(e),F=i(e,"P",{});var En=n(F);ow=p(En,"ProphetNet introduces a novel "),hh=i(En,"EM",{});var a5=n(hh);hw=p(a5,"sequence-to-sequence"),a5.forEach(t),fw=p(En," pretraining objective, called "),fh=i(En,"EM",{});var s5=n(fh);mw=p(s5,"future n-gram prediction"),s5.forEach(t),pw=p(En,`. In
future n-gram prediction, the model predicts the next n tokens simultaneously based on previous context tokens at each
time step instead instead of just the single next token. The future n-gram prediction explicitly encourages the model
to plan for the future tokens and prevent overfitting on strong local correlations. The model architecture is based on
the original Transformer, but replaces the \u201Cstandard\u201D self-attention mechanism in the decoder by a a main
self-attention mechanism and a self and n-stream (predict) self-attention mechanism.`),En.forEach(t),mu=f(e),Dl=i(e,"P",{});var i5=n(Dl);uw=p(i5,`The library provides a pre-trained version of this model for conditional generation and a fine-tuned version for
summarization.`),i5.forEach(t),pu=f(e),ye=i(e,"H3",{class:!0});var nd=n(ye);lt=i(nd,"A",{id:!0,class:!0,href:!0});var r5=n(lt);mh=i(r5,"SPAN",{});var l5=n(mh);d(Xs.$$.fragment,l5),l5.forEach(t),r5.forEach(t),cw=f(nd),ph=i(nd,"SPAN",{});var n5=n(ph);dw=p(n5,"XLM-ProphetNet"),n5.forEach(t),nd.forEach(t),uu=f(e),Ys=i(e,"A",{href:!0});var o5=n(Ys);Cl=i(o5,"IMG",{alt:!0,src:!0}),o5.forEach(t),cu=f(e),Zs=i(e,"A",{href:!0});var h5=n(Zs);zl=i(h5,"IMG",{alt:!0,src:!0}),h5.forEach(t),du=f(e),Ks=i(e,"P",{});var F_=n(Ks);Os=i(F_,"A",{href:!0,rel:!0});var f5=n(Os);vw=p(f5,"ProphetNet: Predicting Future N-gram for Sequence-to-Sequence Pre-training,"),f5.forEach(t),gw=p(F_,` by
Yu Yan, Weizhen Qi, Yeyun Gong, Dayiheng Liu, Nan Duan, Jiusheng Chen, Ruofei Zhang, Ming Zhou.`),F_.forEach(t),vu=f(e),nt=i(e,"P",{});var od=n(nt);bw=p(od,`XLM-ProphetNet\u2019s model architecture and pretraining objective is same as ProphetNet, but XLM-ProphetNet was pre-trained
on the cross-lingual dataset `),Ws=i(od,"A",{href:!0,rel:!0});var m5=n(Ws);ww=p(m5,"XGLUE"),m5.forEach(t),_w=p(od,"."),od.forEach(t),gu=f(e),Hl=i(e,"P",{});var p5=n(Hl);yw=p(p5,`The library provides a pre-trained version of this model for multi-lingual conditional generation and fine-tuned
versions for headline generation and question generation, respectively.`),p5.forEach(t),bu=f(e),jl=i(e,"A",{id:!0}),n(jl).forEach(t),wu=f(e),Ee=i(e,"H2",{class:!0});var hd=n(Ee);ot=i(hd,"A",{id:!0,class:!0,href:!0});var u5=n(ot);uh=i(u5,"SPAN",{});var c5=n(uh);d(Js.$$.fragment,c5),c5.forEach(t),u5.forEach(t),Ew=f(hd),ch=i(hd,"SPAN",{});var d5=n(ch);kw=p(d5,"Multimodal models"),d5.forEach(t),hd.forEach(t),_u=f(e),Fl=i(e,"P",{});var v5=n(Fl);Aw=p(v5,`There is one multimodal model in the library which has not been pretrained in the self-supervised fashion like the
others.`),v5.forEach(t),yu=f(e),ke=i(e,"H3",{class:!0});var fd=n(ke);ht=i(fd,"A",{id:!0,class:!0,href:!0});var g5=n(ht);dh=i(g5,"SPAN",{});var b5=n(dh);d(Qs.$$.fragment,b5),b5.forEach(t),g5.forEach(t),Tw=f(fd),vh=i(fd,"SPAN",{});var w5=n(vh);xw=p(w5,"MMBT"),w5.forEach(t),fd.forEach(t),Eu=f(e),Vs=i(e,"P",{});var U_=n(Vs);ei=i(U_,"A",{href:!0,rel:!0});var _5=n(ei);Pw=p(_5,"Supervised Multimodal Bitransformers for Classifying Images and Text"),_5.forEach(t),$w=p(U_,`, Douwe Kiela
et al.`),U_.forEach(t),ku=f(e),Ul=i(e,"P",{});var y5=n(Ul);Mw=p(y5,`A transformers model used in multimodal settings, combining a text and an image to make predictions. The transformer
model takes as inputs the embeddings of the tokenized text and the final activations of a pretrained on images resnet
(after the pooling layer) that goes through a linear layer (to go from number of features at the end of the resnet to
the hidden state dimension of the transformer).`),y5.forEach(t),Au=f(e),Xl=i(e,"P",{});var E5=n(Xl);Lw=p(E5,`The different inputs are concatenated, and on top of the positional embeddings, a segment embedding is added to let the
model know which part of the input vector corresponds to the text and which to the image.`),E5.forEach(t),Tu=f(e),Yl=i(e,"P",{});var k5=n(Yl);Rw=p(k5,"The pretrained model only works for classification."),k5.forEach(t),xu=f(e),Zl=i(e,"A",{id:!0}),n(Zl).forEach(t),Pu=f(e),Ae=i(e,"H2",{class:!0});var md=n(Ae);ft=i(md,"A",{id:!0,class:!0,href:!0});var A5=n(ft);gh=i(A5,"SPAN",{});var T5=n(gh);d(ti.$$.fragment,T5),T5.forEach(t),A5.forEach(t),Sw=f(md),bh=i(md,"SPAN",{});var x5=n(bh);qw=p(x5,"Retrieval-based models"),x5.forEach(t),md.forEach(t),$u=f(e),Kl=i(e,"P",{});var P5=n(Kl);Nw=p(P5,"Some models use documents retrieval during (pre)training and inference for open-domain question answering, for example."),P5.forEach(t),Mu=f(e),Te=i(e,"H3",{class:!0});var pd=n(Te);mt=i(pd,"A",{id:!0,class:!0,href:!0});var $5=n(mt);wh=i($5,"SPAN",{});var M5=n(wh);d(ai.$$.fragment,M5),M5.forEach(t),$5.forEach(t),Gw=f(pd),_h=i(pd,"SPAN",{});var L5=n(_h);Iw=p(L5,"DPR"),L5.forEach(t),pd.forEach(t),Lu=f(e),si=i(e,"A",{href:!0});var R5=n(si);Ol=i(R5,"IMG",{alt:!0,src:!0}),R5.forEach(t),Ru=f(e),ii=i(e,"A",{href:!0});var S5=n(ii);Wl=i(S5,"IMG",{alt:!0,src:!0}),S5.forEach(t),Su=f(e),ri=i(e,"P",{});var X_=n(ri);li=i(X_,"A",{href:!0,rel:!0});var q5=n(li);Bw=p(q5,"Dense Passage Retrieval for Open-Domain Question Answering"),q5.forEach(t),Dw=p(X_,`, Vladimir Karpukhin et
al.`),X_.forEach(t),qu=f(e),Jl=i(e,"P",{});var N5=n(Jl);Cw=p(N5,`Dense Passage Retrieval (DPR) - is a set of tools and models for state-of-the-art open-domain question-answering
research.`),N5.forEach(t),Nu=f(e),Ql=i(e,"P",{});var G5=n(Ql);zw=p(G5,"DPR consists in three models:"),G5.forEach(t),Gu=f(e),U=i(e,"UL",{});var kn=n(U);yh=i(kn,"LI",{});var I5=n(yh);Hw=p(I5,"Question encoder: encode questions as vectors"),I5.forEach(t),jw=f(kn),Eh=i(kn,"LI",{});var B5=n(Eh);Fw=p(B5,"Context encoder: encode contexts as vectors"),B5.forEach(t),Uw=f(kn),kh=i(kn,"LI",{});var D5=n(kh);Xw=p(D5,`Reader: extract the answer of the questions inside retrieved contexts, along with a relevance score (high if the
inferred span actually answers the question).`),D5.forEach(t),kn.forEach(t),Iu=f(e),Vl=i(e,"P",{});var C5=n(Vl);Yw=p(C5,`DPR\u2019s pipeline (not implemented yet) uses a retrieval step to find the top k contexts given a certain question, and
then it calls the reader with the question and the retrieved documents to get the answer.`),C5.forEach(t),Bu=f(e),xe=i(e,"H3",{class:!0});var ud=n(xe);pt=i(ud,"A",{id:!0,class:!0,href:!0});var z5=n(pt);Ah=i(z5,"SPAN",{});var H5=n(Ah);d(ni.$$.fragment,H5),H5.forEach(t),z5.forEach(t),Zw=f(ud),Th=i(ud,"SPAN",{});var j5=n(Th);Kw=p(j5,"RAG"),j5.forEach(t),ud.forEach(t),Du=f(e),oi=i(e,"A",{href:!0});var F5=n(oi);en=i(F5,"IMG",{alt:!0,src:!0}),F5.forEach(t),Cu=f(e),hi=i(e,"A",{href:!0});var U5=n(hi);tn=i(U5,"IMG",{alt:!0,src:!0}),U5.forEach(t),zu=f(e),fi=i(e,"P",{});var Y_=n(fi);mi=i(Y_,"A",{href:!0,rel:!0});var X5=n(mi);Ow=p(X5,"Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks"),X5.forEach(t),Ww=p(Y_,`, Patrick Lewis,
Ethan Perez, Aleksandara Piktus, Fabio Petroni, Vladimir Karpukhin, Naman Goyal, Heinrich K\xFCttler, Mike Lewis, Wen-tau
Yih, Tim Rockt\xE4schel, Sebastian Riedel, Douwe Kiela`),Y_.forEach(t),Hu=f(e),an=i(e,"P",{});var Y5=n(an);Jw=p(Y5,`Retrieval-augmented generation (\u201CRAG\u201D) models combine the powers of pretrained dense retrieval (DPR) and Seq2Seq
models. RAG models retrieve docs, pass them to a seq2seq model, then marginalize to generate outputs. The retriever and
seq2seq modules are initialized from pretrained models, and fine-tuned jointly, allowing both retrieval and generation
to adapt to downstream tasks.`),Y5.forEach(t),ju=f(e),sn=i(e,"P",{});var Z5=n(sn);Qw=p(Z5,"The two models RAG-Token and RAG-Sequence are available for generation."),Z5.forEach(t),Fu=f(e),Pe=i(e,"H2",{class:!0});var cd=n(Pe);ut=i(cd,"A",{id:!0,class:!0,href:!0});var K5=n(ut);xh=i(K5,"SPAN",{});var O5=n(xh);d(pi.$$.fragment,O5),O5.forEach(t),K5.forEach(t),Vw=f(cd),Ph=i(cd,"SPAN",{});var W5=n(Ph);e_=p(W5,"More technical aspects"),W5.forEach(t),cd.forEach(t),Uu=f(e),$e=i(e,"H3",{class:!0});var dd=n($e);ct=i(dd,"A",{id:!0,class:!0,href:!0});var J5=n(ct);$h=i(J5,"SPAN",{});var Q5=n($h);d(ui.$$.fragment,Q5),Q5.forEach(t),J5.forEach(t),t_=f(dd),Mh=i(dd,"SPAN",{});var V5=n(Mh);a_=p(V5,"Full vs sparse attention"),V5.forEach(t),dd.forEach(t),Xu=f(e),rn=i(e,"P",{});var e4=n(rn);s_=p(e4,`Most transformer models use full attention in the sense that the attention matrix is square. It can be a big
computational bottleneck when you have long texts. Longformer and reformer are models that try to be more efficient and
use a sparse version of the attention matrix to speed up training.`),e4.forEach(t),Yu=f(e),ln=i(e,"A",{id:!0}),n(ln).forEach(t),Zu=f(e),nn=i(e,"P",{});var t4=n(nn);Lh=i(t4,"STRONG",{});var a4=n(Lh);i_=p(a4,"LSH attention"),a4.forEach(t),t4.forEach(t),Ku=f(e),ci=i(e,"P",{});var Z_=n(ci);on=i(Z_,"A",{href:!0});var s4=n(on);r_=p(s4,"Reformer"),s4.forEach(t),l_=p(Z_,` uses LSH attention. In the softmax(QK^t), only the biggest elements (in the softmax
dimension) of the matrix QK^t are going to give useful contributions. So for each query q in Q, we can consider only
the keys k in K that are close to q. A hash function is used to determine if q and k are close. The attention mask is
modified to mask the current token (except at the first position), because it will give a query and a key equal (so
very similar to each other). Since the hash can be a bit random, several hash functions are used in practice
(determined by a n_rounds parameter) and then are averaged together.`),Z_.forEach(t),Ou=f(e),hn=i(e,"A",{id:!0}),n(hn).forEach(t),Wu=f(e),fn=i(e,"P",{});var i4=n(fn);Rh=i(i4,"STRONG",{});var r4=n(Rh);n_=p(r4,"Local attention"),r4.forEach(t),i4.forEach(t),Ju=f(e),di=i(e,"P",{});var K_=n(di);mn=i(K_,"A",{href:!0});var l4=n(mn);o_=p(l4,"Longformer"),l4.forEach(t),h_=p(K_,` uses local attention: often, the local context (e.g., what are the two tokens to the
left and right?) is enough to take action for a given token. Also, by stacking attention layers that have a small
window, the last layer will have a receptive field of more than just the tokens in the window, allowing them to build a
representation of the whole sentence.`),K_.forEach(t),Qu=f(e),pn=i(e,"P",{});var n4=n(pn);f_=p(n4,`Some preselected input tokens are also given global attention: for those few tokens, the attention matrix can access
all tokens and this process is symmetric: all other tokens have access to those specific tokens (on top of the ones in
their local window). This is shown in Figure 2d of the paper, see below for a sample attention mask:`),n4.forEach(t),Vu=f(e),dt=i(e,"IMG",{scale:!0,align:!0,src:!0}),ec=f(e),un=i(e,"P",{});var o4=n(un);m_=p(o4,`Using those attention matrices with less parameters then allows the model to have inputs having a bigger sequence
length.`),o4.forEach(t),tc=f(e),Me=i(e,"H3",{class:!0});var vd=n(Me);vt=i(vd,"A",{id:!0,class:!0,href:!0});var h4=n(vt);Sh=i(h4,"SPAN",{});var f4=n(Sh);d(vi.$$.fragment,f4),f4.forEach(t),h4.forEach(t),p_=f(vd),qh=i(vd,"SPAN",{});var m4=n(qh);u_=p(m4,"Other tricks"),m4.forEach(t),vd.forEach(t),ac=f(e),cn=i(e,"A",{id:!0}),n(cn).forEach(t),sc=f(e),dn=i(e,"P",{});var p4=n(dn);Nh=i(p4,"STRONG",{});var u4=n(Nh);c_=p(u4,"Axial positional encodings"),u4.forEach(t),p4.forEach(t),ic=f(e),y=i(e,"P",{});var E=n(y);vn=i(E,"A",{href:!0});var c4=n(vn);d_=p(c4,"Reformer"),c4.forEach(t),v_=p(E,` uses axial positional encodings: in traditional transformer models, the positional encoding
E is a matrix of size `),rc=I(E),lc=p(E," by "),nc=I(E),oc=p(E,", "),hc=I(E),fc=p(E," being the sequence length and "),mc=I(E),pc=p(E,` the dimension of the
hidden state. If you have very long texts, this matrix can be huge and take way too much space on the GPU. To alleviate
that, axial positional encodings consist of factorizing that big matrix E in two smaller matrices E1 and E2, with
dimensions `),uc=I(E),cc=p(E," and "),dc=I(E),vc=p(E,", such that "),gc=I(E),bc=p(E,` and
`),wc=I(E),_c=p(E,` (with the product for the lengths, this ends up being way smaller). The embedding for time
step `),yc=I(E),Ec=p(E," in E is obtained by concatenating the embeddings for timestep "),kc=I(E),Ac=p(E," in E1 and "),Tc=I(E),xc=p(E,`
in E2.`),E.forEach(t),this.h()},h(){o(B,"name","hf:doc:metadata"),o(B,"content",JSON.stringify(S4)),o(N,"id","summary-of-the-models"),o(N,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(N,"href","#summary-of-the-models"),o(L,"class","relative group"),o(yt,"href","https://arxiv.org/abs/1706.03762"),o(yt,"rel","nofollow"),o(Et,"href","http://nlp.seas.harvard.edu/2018/04/03/attention.html"),o(Et,"rel","nofollow"),o(bi,"href","/docs/transformers/master/en/pretrained_models"),o(kt,"href","https://huggingface.co/models"),o(kt,"rel","nofollow"),o(_i,"href","/docs/transformers/master/en/model_summary#autoregressive-models"),o(yi,"href","/docs/transformers/master/en/model_summary#autoencoding-models"),o(Ei,"href","/docs/transformers/master/en/model_summary#seq-to-seq-models"),o(ki,"href","/docs/transformers/master/en/model_summary#multimodal-models"),o(Ai,"href","/docs/transformers/master/en/model_summary#retrieval-based-models"),o(x,"width","560"),o(x,"height","315"),u(x.src,O_="https://www.youtube.com/embed/H39Z_720T5s")||o(x,"src",O_),o(x,"title","YouTube video player"),o(x,"frameborder","0"),o(x,"allow",`accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope;
picture-in-picture`),x.allowFullscreen=!0,o(Li,"id","autoregressive-models"),o(Le,"id","decoders-or-autoregressive-models"),o(Le,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Le,"href","#decoders-or-autoregressive-models"),o(K,"class","relative group"),o(P,"width","560"),o(P,"height","315"),u(P.src,W_="https://www.youtube.com/embed/d_ixlCubqQw")||o(P,"src",W_),o(P,"title","YouTube video player"),o(P,"frameborder","0"),o(P,"allow",`accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope;
picture-in-picture`),P.allowFullscreen=!0,o(Re,"id","original-gpt"),o(Re,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Re,"href","#original-gpt"),o(O,"class","relative group"),o(Si,"alt","Models"),u(Si.src,J_="https://img.shields.io/badge/All_model_pages-openai--gpt-blueviolet")||o(Si,"src",J_),o(xt,"href","https://huggingface.co/models?filter=openai-gpt"),o(qi,"alt","Doc"),u(qi.src,Q_="https://img.shields.io/badge/Model_documentation-openai--gpt-blueviolet")||o(qi,"src",Q_),o(Pt,"href","model_doc/gpt"),o(Mt,"href","https://cdn.openai.com/research-covers/language-unsupervised/language_understanding_paper.pdf"),o(Mt,"rel","nofollow"),o(Se,"id","gpt2"),o(Se,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Se,"href","#gpt2"),o(W,"class","relative group"),o(Ii,"alt","Models"),u(Ii.src,V_="https://img.shields.io/badge/All_model_pages-gpt2-blueviolet")||o(Ii,"src",V_),o(Rt,"href","https://huggingface.co/models?filter=gpt2"),o(Bi,"alt","Doc"),u(Bi.src,ey="https://img.shields.io/badge/Model_documentation-gpt2-blueviolet")||o(Bi,"src",ey),o(St,"href","model_doc/gpt2"),o(Nt,"href","https://d4mucfpksywv.cloudfront.net/better-language-models/language_models_are_unsupervised_multitask_learners.pdf"),o(Nt,"rel","nofollow"),o(qe,"id","ctrl"),o(qe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(qe,"href","#ctrl"),o(J,"class","relative group"),o(zi,"alt","Models"),u(zi.src,ty="https://img.shields.io/badge/All_model_pages-ctrl-blueviolet")||o(zi,"src",ty),o(It,"href","https://huggingface.co/models?filter=ctrl"),o(Hi,"alt","Doc"),u(Hi.src,ay="https://img.shields.io/badge/Model_documentation-ctrl-blueviolet")||o(Hi,"src",ay),o(Bt,"href","model_doc/ctrl"),o(Ct,"href","https://arxiv.org/abs/1909.05858"),o(Ct,"rel","nofollow"),o(Ne,"id","transformerxl"),o(Ne,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Ne,"href","#transformerxl"),o(Q,"class","relative group"),o(Ui,"alt","Models"),u(Ui.src,sy="https://img.shields.io/badge/All_model_pages-transfo--xl-blueviolet")||o(Ui,"src",sy),o(Ht,"href","https://huggingface.co/models?filter=transfo-xl"),o(Xi,"alt","Doc"),u(Xi.src,iy="https://img.shields.io/badge/Model_documentation-transfo--xl-blueviolet")||o(Xi,"src",iy),o(jt,"href","model_doc/transformerxl"),o(Ut,"href","https://arxiv.org/abs/1901.02860"),o(Ut,"rel","nofollow"),o(Wi,"id","reformer"),o(Ge,"id","reformer"),o(Ge,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Ge,"href","#reformer"),o(V,"class","relative group"),o(Ji,"alt","Models"),u(Ji.src,ry="https://img.shields.io/badge/All_model_pages-reformer-blueviolet")||o(Ji,"src",ry),o(Yt,"href","https://huggingface.co/models?filter=reformer"),o(Qi,"alt","Doc"),u(Qi.src,ly="https://img.shields.io/badge/Model_documentation-reformer-blueviolet")||o(Qi,"src",ly),o(Zt,"href","model_doc/reformer"),o(Ot,"href","https://arxiv.org/abs/2001.04451"),o(Ot,"rel","nofollow"),o(er,"href","/docs/transformers/master/en/model_summary#axial-pos-encoding"),o(tr,"href","/docs/transformers/master/en/model_summary#lsh-attention"),o(Ie,"id","xlnet"),o(Ie,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Ie,"href","#xlnet"),o(ee,"class","relative group"),o(ir,"alt","Models"),u(ir.src,ny="https://img.shields.io/badge/All_model_pages-xlnet-blueviolet")||o(ir,"src",ny),o(ea,"href","https://huggingface.co/models?filter=xlnet"),o(rr,"alt","Doc"),u(rr.src,oy="https://img.shields.io/badge/Model_documentation-xlnet-blueviolet")||o(rr,"src",oy),o(ta,"href","model_doc/xlnet"),o(sa,"href","https://arxiv.org/abs/1906.08237"),o(sa,"rel","nofollow"),o(hr,"id","autoencoding-models"),o(Be,"id","encoders-or-autoencoding-models"),o(Be,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Be,"href","#encoders-or-autoencoding-models"),o(te,"class","relative group"),o($,"width","560"),o($,"height","315"),u($.src,hy="https://www.youtube.com/embed/MUqNwgPjJvQ")||o($,"src",hy),o($,"title","YouTube video player"),o($,"frameborder","0"),o($,"allow",`accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope;
picture-in-picture`),$.allowFullscreen=!0,o(De,"id","bert"),o(De,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(De,"href","#bert"),o(ae,"class","relative group"),o(mr,"alt","Models"),u(mr.src,fy="https://img.shields.io/badge/All_model_pages-bert-blueviolet")||o(mr,"src",fy),o(la,"href","https://huggingface.co/models?filter=bert"),o(pr,"alt","Doc"),u(pr.src,my="https://img.shields.io/badge/Model_documentation-bert-blueviolet")||o(pr,"src",my),o(na,"href","model_doc/bert"),o(ha,"href","https://arxiv.org/abs/1810.04805"),o(ha,"rel","nofollow"),o(Ce,"id","albert"),o(Ce,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Ce,"href","#albert"),o(se,"class","relative group"),o(vr,"alt","Models"),u(vr.src,py="https://img.shields.io/badge/All_model_pages-albert-blueviolet")||o(vr,"src",py),o(ma,"href","https://huggingface.co/models?filter=albert"),o(gr,"alt","Doc"),u(gr.src,uy="https://img.shields.io/badge/Model_documentation-albert-blueviolet")||o(gr,"src",uy),o(pa,"href","model_doc/albert"),o(ca,"href","https://arxiv.org/abs/1909.11942"),o(ca,"rel","nofollow"),o(ze,"id","roberta"),o(ze,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(ze,"href","#roberta"),o(ie,"class","relative group"),o(_r,"alt","Models"),u(_r.src,cy="https://img.shields.io/badge/All_model_pages-roberta-blueviolet")||o(_r,"src",cy),o(va,"href","https://huggingface.co/models?filter=roberta"),o(yr,"alt","Doc"),u(yr.src,dy="https://img.shields.io/badge/Model_documentation-roberta-blueviolet")||o(yr,"src",dy),o(ga,"href","model_doc/roberta"),o(wa,"href","https://arxiv.org/abs/1907.11692"),o(wa,"rel","nofollow"),o(He,"id","distilbert"),o(He,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(He,"href","#distilbert"),o(re,"class","relative group"),o(Ar,"alt","Models"),u(Ar.src,vy="https://img.shields.io/badge/All_model_pages-distilbert-blueviolet")||o(Ar,"src",vy),o(ya,"href","https://huggingface.co/models?filter=distilbert"),o(Tr,"alt","Doc"),u(Tr.src,gy="https://img.shields.io/badge/Model_documentation-distilbert-blueviolet")||o(Tr,"src",gy),o(Ea,"href","model_doc/distilbert"),o(Aa,"href","https://arxiv.org/abs/1910.01108"),o(Aa,"rel","nofollow"),o(je,"id","convbert"),o(je,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(je,"href","#convbert"),o(le,"class","relative group"),o($r,"alt","Models"),u($r.src,by="https://img.shields.io/badge/All_model_pages-convbert-blueviolet")||o($r,"src",by),o(xa,"href","https://huggingface.co/models?filter=convbert"),o(Mr,"alt","Doc"),u(Mr.src,wy="https://img.shields.io/badge/Model_documentation-convbert-blueviolet")||o(Mr,"src",wy),o(Pa,"href","model_doc/convbert"),o(Ma,"href","https://arxiv.org/abs/1910.01108"),o(Ma,"rel","nofollow"),o(Fe,"id","xlm"),o(Fe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Fe,"href","#xlm"),o(ne,"class","relative group"),o(Sr,"alt","Models"),u(Sr.src,_y="https://img.shields.io/badge/All_model_pages-xlm-blueviolet")||o(Sr,"src",_y),o(Ra,"href","https://huggingface.co/models?filter=xlm"),o(qr,"alt","Doc"),u(qr.src,yy="https://img.shields.io/badge/Model_documentation-xlm-blueviolet")||o(qr,"src",yy),o(Sa,"href","model_doc/xlm"),o(Na,"href","https://arxiv.org/abs/1901.07291"),o(Na,"rel","nofollow"),o(Ue,"id","xlmroberta"),o(Ue,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Ue,"href","#xlmroberta"),o(oe,"class","relative group"),o(Ir,"alt","Models"),u(Ir.src,Ey="https://img.shields.io/badge/All_model_pages-xlm--roberta-blueviolet")||o(Ir,"src",Ey),o(Ia,"href","https://huggingface.co/models?filter=xlm-roberta"),o(Br,"alt","Doc"),u(Br.src,ky="https://img.shields.io/badge/Model_documentation-xlm--roberta-blueviolet")||o(Br,"src",ky),o(Ba,"href","model_doc/xlmroberta"),o(Ca,"href","https://arxiv.org/abs/1911.02116"),o(Ca,"rel","nofollow"),o(Xe,"id","flaubert"),o(Xe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Xe,"href","#flaubert"),o(he,"class","relative group"),o(zr,"alt","Models"),u(zr.src,Ay="https://img.shields.io/badge/All_model_pages-flaubert-blueviolet")||o(zr,"src",Ay),o(Ha,"href","https://huggingface.co/models?filter=flaubert"),o(Hr,"alt","Doc"),u(Hr.src,Ty="https://img.shields.io/badge/Model_documentation-flaubert-blueviolet")||o(Hr,"src",Ty),o(ja,"href","model_doc/flaubert"),o(Ua,"href","https://arxiv.org/abs/1912.05372"),o(Ua,"rel","nofollow"),o(Ye,"id","electra"),o(Ye,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Ye,"href","#electra"),o(fe,"class","relative group"),o(Ur,"alt","Models"),u(Ur.src,xy="https://img.shields.io/badge/All_model_pages-electra-blueviolet")||o(Ur,"src",xy),o(Ya,"href","https://huggingface.co/models?filter=electra"),o(Xr,"alt","Doc"),u(Xr.src,Py="https://img.shields.io/badge/Model_documentation-electra-blueviolet")||o(Xr,"src",Py),o(Za,"href","model_doc/electra"),o(Oa,"href","https://arxiv.org/abs/2003.10555"),o(Oa,"rel","nofollow"),o(Ze,"id","funnel-transformer"),o(Ze,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Ze,"href","#funnel-transformer"),o(me,"class","relative group"),o(Kr,"alt","Models"),u(Kr.src,$y="https://img.shields.io/badge/All_model_pages-funnel-blueviolet")||o(Kr,"src",$y),o(Ja,"href","https://huggingface.co/models?filter=funnel"),o(Or,"alt","Doc"),u(Or.src,My="https://img.shields.io/badge/Model_documentation-funnel-blueviolet")||o(Or,"src",My),o(Qa,"href","model_doc/funnel"),o(es,"href","https://arxiv.org/abs/2006.03236"),o(es,"rel","nofollow"),o(el,"id","longformer"),o(Ke,"id","longformer"),o(Ke,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Ke,"href","#longformer"),o(pe,"class","relative group"),o(tl,"alt","Models"),u(tl.src,Ly="https://img.shields.io/badge/All_model_pages-longformer-blueviolet")||o(tl,"src",Ly),o(as,"href","https://huggingface.co/models?filter=longformer"),o(al,"alt","Doc"),u(al.src,Ry="https://img.shields.io/badge/Model_documentation-longformer-blueviolet")||o(al,"src",Ry),o(ss,"href","model_doc/longformer"),o(rs,"href","https://arxiv.org/abs/2004.05150"),o(rs,"rel","nofollow"),o(sl,"href","/docs/transformers/master/en/model_summary#local-attention"),o(ll,"id","seq-to-seq-models"),o(We,"id","sequencetosequence-models"),o(We,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(We,"href","#sequencetosequence-models"),o(ue,"class","relative group"),o(M,"width","560"),o(M,"height","315"),u(M.src,Sy="https://www.youtube.com/embed/0_4KEb08xrE")||o(M,"src",Sy),o(M,"title","YouTube video player"),o(M,"frameborder","0"),o(M,"allow",`accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope;
picture-in-picture`),M.allowFullscreen=!0,o(Je,"id","bart"),o(Je,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Je,"href","#bart"),o(ce,"class","relative group"),o(ol,"alt","Models"),u(ol.src,qy="https://img.shields.io/badge/All_model_pages-bart-blueviolet")||o(ol,"src",qy),o(hs,"href","https://huggingface.co/models?filter=bart"),o(hl,"alt","Doc"),u(hl.src,Ny="https://img.shields.io/badge/Model_documentation-bart-blueviolet")||o(hl,"src",Ny),o(fs,"href","model_doc/bart"),o(ps,"href","https://arxiv.org/abs/1910.13461"),o(ps,"rel","nofollow"),o(Qe,"id","pegasus"),o(Qe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(Qe,"href","#pegasus"),o(de,"class","relative group"),o(pl,"alt","Models"),u(pl.src,Gy="https://img.shields.io/badge/All_model_pages-pegasus-blueviolet")||o(pl,"src",Gy),o(cs,"href","https://huggingface.co/models?filter=pegasus"),o(ul,"alt","Doc"),u(ul.src,Iy="https://img.shields.io/badge/Model_documentation-pegasus-blueviolet")||o(ul,"src",Iy),o(ds,"href","model_doc/pegasus"),o(gs,"href","https://arxiv.org/pdf/1912.08777.pdf"),o(gs,"rel","nofollow"),o(et,"id","marianmt"),o(et,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(et,"href","#marianmt"),o(ve,"class","relative group"),o(gl,"alt","Models"),u(gl.src,By="https://img.shields.io/badge/All_model_pages-marian-blueviolet")||o(gl,"src",By),o(ws,"href","https://huggingface.co/models?filter=marian"),o(bl,"alt","Doc"),u(bl.src,Dy="https://img.shields.io/badge/Model_documentation-marian-blueviolet")||o(bl,"src",Dy),o(_s,"href","model_doc/marian"),o(Es,"href","https://arxiv.org/abs/1804.00344"),o(Es,"rel","nofollow"),o(tt,"id","t5"),o(tt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(tt,"href","#t5"),o(ge,"class","relative group"),o(yl,"alt","Models"),u(yl.src,Cy="https://img.shields.io/badge/All_model_pages-t5-blueviolet")||o(yl,"src",Cy),o(As,"href","https://huggingface.co/models?filter=t5"),o(El,"alt","Doc"),u(El.src,zy="https://img.shields.io/badge/Model_documentation-t5-blueviolet")||o(El,"src",zy),o(Ts,"href","model_doc/t5"),o(Ps,"href","https://arxiv.org/abs/1910.10683"),o(Ps,"rel","nofollow"),o(at,"id","mt5"),o(at,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(at,"href","#mt5"),o(be,"class","relative group"),o($l,"alt","Models"),u($l.src,Hy="https://img.shields.io/badge/All_model_pages-mt5-blueviolet")||o($l,"src",Hy),o(Ms,"href","https://huggingface.co/models?filter=mt5"),o(Ml,"alt","Doc"),u(Ml.src,jy="https://img.shields.io/badge/Model_documentation-mt5-blueviolet")||o(Ml,"src",jy),o(Ls,"href","model_doc/mt5"),o(Ss,"href","https://arxiv.org/abs/2010.11934"),o(Ss,"rel","nofollow"),o(st,"id","mbart"),o(st,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(st,"href","#mbart"),o(we,"class","relative group"),o(Sl,"alt","Models"),u(Sl.src,Fy="https://img.shields.io/badge/All_model_pages-mbart-blueviolet")||o(Sl,"src",Fy),o(Ns,"href","https://huggingface.co/models?filter=mbart"),o(ql,"alt","Doc"),u(ql.src,Uy="https://img.shields.io/badge/Model_documentation-mbart-blueviolet")||o(ql,"src",Uy),o(Gs,"href","model_doc/mbart"),o(Bs,"href","https://arxiv.org/abs/2001.08210"),o(Bs,"rel","nofollow"),o(Ds,"href","https://huggingface.co/facebook/mbart-large-en-ro"),o(Ds,"rel","nofollow"),o(Cs,"href","https://huggingface.co/facebook/mbart-large-cc25"),o(Cs,"rel","nofollow"),o(rt,"id","prophetnet"),o(rt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(rt,"href","#prophetnet"),o(_e,"class","relative group"),o(Il,"alt","Models"),u(Il.src,Xy="https://img.shields.io/badge/All_model_pages-prophetnet-blueviolet")||o(Il,"src",Xy),o(Hs,"href","https://huggingface.co/models?filter=prophetnet"),o(Bl,"alt","Doc"),u(Bl.src,Yy="https://img.shields.io/badge/Model_documentation-prophetnet-blueviolet")||o(Bl,"src",Yy),o(js,"href","model_doc/prophetnet"),o(Us,"href","https://arxiv.org/abs/2001.04063"),o(Us,"rel","nofollow"),o(lt,"id","xlmprophetnet"),o(lt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(lt,"href","#xlmprophetnet"),o(ye,"class","relative group"),o(Cl,"alt","Models"),u(Cl.src,Zy="https://img.shields.io/badge/All_model_pages-xprophetnet-blueviolet")||o(Cl,"src",Zy),o(Ys,"href","https://huggingface.co/models?filter=xprophetnet"),o(zl,"alt","Doc"),u(zl.src,Ky="https://img.shields.io/badge/Model_documentation-xprophetnet-blueviolet")||o(zl,"src",Ky),o(Zs,"href","model_doc/xlmprophetnet"),o(Os,"href","https://arxiv.org/abs/2001.04063"),o(Os,"rel","nofollow"),o(Ws,"href","https://arxiv.org/abs/2004.01401"),o(Ws,"rel","nofollow"),o(jl,"id","multimodal-models"),o(ot,"id","multimodal-models"),o(ot,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(ot,"href","#multimodal-models"),o(Ee,"class","relative group"),o(ht,"id","mmbt"),o(ht,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(ht,"href","#mmbt"),o(ke,"class","relative group"),o(ei,"href","https://arxiv.org/abs/1909.02950"),o(ei,"rel","nofollow"),o(Zl,"id","retrieval-based-models"),o(ft,"id","retrievalbased-models"),o(ft,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(ft,"href","#retrievalbased-models"),o(Ae,"class","relative group"),o(mt,"id","dpr"),o(mt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(mt,"href","#dpr"),o(Te,"class","relative group"),o(Ol,"alt","Models"),u(Ol.src,Oy="https://img.shields.io/badge/All_model_pages-dpr-blueviolet")||o(Ol,"src",Oy),o(si,"href","https://huggingface.co/models?filter=dpr"),o(Wl,"alt","Doc"),u(Wl.src,Wy="https://img.shields.io/badge/Model_documentation-dpr-blueviolet")||o(Wl,"src",Wy),o(ii,"href","model_doc/dpr"),o(li,"href","https://arxiv.org/abs/2004.04906"),o(li,"rel","nofollow"),o(pt,"id","rag"),o(pt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(pt,"href","#rag"),o(xe,"class","relative group"),o(en,"alt","Models"),u(en.src,Jy="https://img.shields.io/badge/All_model_pages-rag-blueviolet")||o(en,"src",Jy),o(oi,"href","https://huggingface.co/models?filter=rag"),o(tn,"alt","Doc"),u(tn.src,Qy="https://img.shields.io/badge/Model_documentation-rag-blueviolet")||o(tn,"src",Qy),o(hi,"href","model_doc/rag"),o(mi,"href","https://arxiv.org/abs/2005.11401"),o(mi,"rel","nofollow"),o(ut,"id","more-technical-aspects"),o(ut,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(ut,"href","#more-technical-aspects"),o(Pe,"class","relative group"),o(ct,"id","full-vs-sparse-attention"),o(ct,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(ct,"href","#full-vs-sparse-attention"),o($e,"class","relative group"),o(ln,"id","lsh-attention"),o(on,"href","/docs/transformers/master/en/model_summary#reformer"),o(hn,"id","local-attention"),o(mn,"href","/docs/transformers/master/en/model_summary#longformer"),o(dt,"scale","50 %"),o(dt,"align","center"),u(dt.src,Vy="/docs/transformers/master/en/imgs/local_attention_mask.png")||o(dt,"src",Vy),o(vt,"id","other-tricks"),o(vt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(vt,"href","#other-tricks"),o(Me,"class","relative group"),o(cn,"id","axial-pos-encoding"),o(vn,"href","/docs/transformers/master/en/model_summary#reformer"),rc.a=lc,nc.a=oc,hc.a=fc,mc.a=pc,uc.a=cc,dc.a=vc,gc.a=bc,wc.a=_c,yc.a=Ec,kc.a=Ac,Tc.a=xc},m(e,r){a(document.head,B),l(e,gi,r),l(e,L,r),a(L,N),a(N,An),v(_t,An,null),a(L,bd),a(L,Tn),a(Tn,wd),l(e,Gh,r),l(e,k,r),a(k,_d),a(k,yt),a(yt,yd),a(k,Ed),a(k,Et),a(Et,kd),a(k,Ad),a(k,bi),a(bi,Td),a(k,xd),a(k,kt),a(kt,Pd),a(k,$d),l(e,Ih,r),l(e,wi,r),a(wi,Md),l(e,Bh,r),l(e,A,r),a(A,xn),a(xn,_i),a(_i,Ld),a(A,Rd),a(A,Pn),a(Pn,yi),a(yi,Sd),a(A,qd),a(A,$n),a($n,Ei),a(Ei,Nd),a(A,Gd),a(A,Mn),a(Mn,ki),a(ki,Id),a(A,Bd),a(A,Ln),a(Ln,Ai),a(Ai,Dd),l(e,Dh,r),l(e,x,r),l(e,Ch,r),l(e,Ti,r),a(Ti,Cd),l(e,zh,r),l(e,xi,r),a(xi,zd),l(e,Hh,r),l(e,Pi,r),a(Pi,Hd),l(e,jh,r),l(e,$i,r),a($i,jd),l(e,Fh,r),l(e,Mi,r),a(Mi,Fd),l(e,Uh,r),l(e,Li,r),l(e,Xh,r),l(e,K,r),a(K,Le),a(Le,Rn),v(At,Rn,null),a(K,Ud),a(K,Sn),a(Sn,Xd),l(e,Yh,r),l(e,Ri,r),a(Ri,Yd),l(e,Zh,r),l(e,P,r),l(e,Kh,r),l(e,O,r),a(O,Re),a(Re,qn),v(Tt,qn,null),a(O,Zd),a(O,Nn),a(Nn,Kd),l(e,Oh,r),l(e,xt,r),a(xt,Si),l(e,Wh,r),l(e,Pt,r),a(Pt,qi),l(e,Jh,r),l(e,$t,r),a($t,Mt),a(Mt,Od),a($t,Wd),l(e,Qh,r),l(e,Ni,r),a(Ni,Jd),l(e,Vh,r),l(e,Gi,r),a(Gi,Qd),l(e,ef,r),l(e,W,r),a(W,Se),a(Se,Gn),v(Lt,Gn,null),a(W,Vd),a(W,In),a(In,ev),l(e,tf,r),l(e,Rt,r),a(Rt,Ii),l(e,af,r),l(e,St,r),a(St,Bi),l(e,sf,r),l(e,qt,r),a(qt,Nt),a(Nt,tv),a(qt,av),l(e,rf,r),l(e,Di,r),a(Di,sv),l(e,lf,r),l(e,Ci,r),a(Ci,iv),l(e,nf,r),l(e,J,r),a(J,qe),a(qe,Bn),v(Gt,Bn,null),a(J,rv),a(J,Dn),a(Dn,lv),l(e,of,r),l(e,It,r),a(It,zi),l(e,hf,r),l(e,Bt,r),a(Bt,Hi),l(e,ff,r),l(e,Dt,r),a(Dt,Ct),a(Ct,nv),a(Dt,ov),l(e,mf,r),l(e,ji,r),a(ji,hv),l(e,pf,r),l(e,Fi,r),a(Fi,fv),l(e,uf,r),l(e,Q,r),a(Q,Ne),a(Ne,Cn),v(zt,Cn,null),a(Q,mv),a(Q,zn),a(zn,pv),l(e,cf,r),l(e,Ht,r),a(Ht,Ui),l(e,df,r),l(e,jt,r),a(jt,Xi),l(e,vf,r),l(e,Ft,r),a(Ft,Ut),a(Ut,uv),a(Ft,cv),l(e,gf,r),l(e,Yi,r),a(Yi,dv),l(e,bf,r),l(e,Zi,r),a(Zi,vv),l(e,wf,r),l(e,Ki,r),a(Ki,gv),l(e,_f,r),l(e,Oi,r),a(Oi,bv),l(e,yf,r),l(e,Wi,r),l(e,Ef,r),l(e,V,r),a(V,Ge),a(Ge,Hn),v(Xt,Hn,null),a(V,wv),a(V,jn),a(jn,_v),l(e,kf,r),l(e,Yt,r),a(Yt,Ji),l(e,Af,r),l(e,Zt,r),a(Zt,Qi),l(e,Tf,r),l(e,Kt,r),a(Kt,Ot),a(Ot,yv),a(Kt,Ev),l(e,xf,r),l(e,Vi,r),a(Vi,kv),l(e,Pf,r),l(e,R,r),a(R,Wt),a(Wt,Av),a(Wt,er),a(er,Tv),a(Wt,xv),a(R,Pv),a(R,Jt),a(Jt,$v),a(Jt,tr),a(tr,Mv),a(Jt,Lv),a(R,Rv),a(R,Fn),a(Fn,Sv),a(R,qv),a(R,Un),a(Un,Nv),l(e,$f,r),l(e,ar,r),a(ar,Gv),l(e,Mf,r),l(e,Qt,r),a(Qt,Xn),a(Xn,Iv),a(Qt,Bv),l(e,Lf,r),l(e,sr,r),a(sr,Dv),l(e,Rf,r),l(e,ee,r),a(ee,Ie),a(Ie,Yn),v(Vt,Yn,null),a(ee,Cv),a(ee,Zn),a(Zn,zv),l(e,Sf,r),l(e,ea,r),a(ea,ir),l(e,qf,r),l(e,ta,r),a(ta,rr),l(e,Nf,r),l(e,aa,r),a(aa,sa),a(sa,Hv),a(aa,jv),l(e,Gf,r),l(e,lr,r),a(lr,Fv),l(e,If,r),l(e,nr,r),a(nr,Uv),l(e,Bf,r),l(e,or,r),a(or,Xv),l(e,Df,r),l(e,hr,r),l(e,Cf,r),l(e,te,r),a(te,Be),a(Be,Kn),v(ia,Kn,null),a(te,Yv),a(te,On),a(On,Zv),l(e,zf,r),l(e,fr,r),a(fr,Kv),l(e,Hf,r),l(e,$,r),l(e,jf,r),l(e,ae,r),a(ae,De),a(De,Wn),v(ra,Wn,null),a(ae,Ov),a(ae,Jn),a(Jn,Wv),l(e,Ff,r),l(e,la,r),a(la,mr),l(e,Uf,r),l(e,na,r),a(na,pr),l(e,Xf,r),l(e,oa,r),a(oa,ha),a(ha,Jv),a(oa,Qv),l(e,Yf,r),l(e,ur,r),a(ur,Vv),l(e,Zf,r),l(e,D,r),a(D,Qn),a(Qn,eg),a(D,tg),a(D,Vn),a(Vn,ag),a(D,sg),a(D,eo),a(eo,ig),l(e,Kf,r),l(e,cr,r),a(cr,rg),l(e,Of,r),l(e,dr,r),a(dr,lg),l(e,Wf,r),l(e,se,r),a(se,Ce),a(Ce,to),v(fa,to,null),a(se,ng),a(se,ao),a(ao,og),l(e,Jf,r),l(e,ma,r),a(ma,vr),l(e,Qf,r),l(e,pa,r),a(pa,gr),l(e,Vf,r),l(e,ua,r),a(ua,ca),a(ca,hg),a(ua,fg),l(e,em,r),l(e,br,r),a(br,mg),l(e,tm,r),l(e,C,r),a(C,so),a(so,pg),a(C,ug),a(C,io),a(io,cg),a(C,dg),a(C,ro),a(ro,vg),l(e,am,r),l(e,wr,r),a(wr,gg),l(e,sm,r),l(e,ie,r),a(ie,ze),a(ze,lo),v(da,lo,null),a(ie,bg),a(ie,no),a(no,wg),l(e,im,r),l(e,va,r),a(va,_r),l(e,rm,r),l(e,ga,r),a(ga,yr),l(e,lm,r),l(e,ba,r),a(ba,wa),a(wa,_g),a(ba,yg),l(e,nm,r),l(e,Er,r),a(Er,Eg),l(e,om,r),l(e,S,r),a(S,oo),a(oo,kg),a(S,Ag),a(S,ho),a(ho,Tg),a(S,xg),a(S,fo),a(fo,Pg),a(S,$g),a(S,mo),a(mo,Mg),l(e,hm,r),l(e,kr,r),a(kr,Lg),l(e,fm,r),l(e,re,r),a(re,He),a(He,po),v(_a,po,null),a(re,Rg),a(re,uo),a(uo,Sg),l(e,mm,r),l(e,ya,r),a(ya,Ar),l(e,pm,r),l(e,Ea,r),a(Ea,Tr),l(e,um,r),l(e,ka,r),a(ka,Aa),a(Aa,qg),a(ka,Ng),l(e,cm,r),l(e,xr,r),a(xr,Gg),l(e,dm,r),l(e,z,r),a(z,co),a(co,Ig),a(z,Bg),a(z,vo),a(vo,Dg),a(z,Cg),a(z,go),a(go,zg),l(e,vm,r),l(e,Pr,r),a(Pr,Hg),l(e,gm,r),l(e,le,r),a(le,je),a(je,bo),v(Ta,bo,null),a(le,jg),a(le,wo),a(wo,Fg),l(e,bm,r),l(e,xa,r),a(xa,$r),l(e,wm,r),l(e,Pa,r),a(Pa,Mr),l(e,_m,r),l(e,$a,r),a($a,Ma),a(Ma,Ug),a($a,Xg),l(e,ym,r),l(e,Lr,r),a(Lr,Yg),l(e,Em,r),l(e,Rr,r),a(Rr,Zg),l(e,km,r),l(e,ne,r),a(ne,Fe),a(Fe,_o),v(La,_o,null),a(ne,Kg),a(ne,yo),a(yo,Og),l(e,Am,r),l(e,Ra,r),a(Ra,Sr),l(e,Tm,r),l(e,Sa,r),a(Sa,qr),l(e,xm,r),l(e,qa,r),a(qa,Na),a(Na,Wg),a(qa,Jg),l(e,Pm,r),l(e,Nr,r),a(Nr,Qg),l(e,$m,r),l(e,H,r),a(H,Eo),a(Eo,Vg),a(H,e1),a(H,ko),a(ko,t1),a(H,a1),a(H,Ao),a(Ao,s1),l(e,Mm,r),l(e,q,r),a(q,i1),a(q,To),a(To,r1),a(q,l1),a(q,xo),a(xo,n1),a(q,o1),a(q,Po),a(Po,h1),a(q,f1),l(e,Lm,r),l(e,Gr,r),a(Gr,m1),l(e,Rm,r),l(e,oe,r),a(oe,Ue),a(Ue,$o),v(Ga,$o,null),a(oe,p1),a(oe,Mo),a(Mo,u1),l(e,Sm,r),l(e,Ia,r),a(Ia,Ir),l(e,qm,r),l(e,Ba,r),a(Ba,Br),l(e,Nm,r),l(e,Da,r),a(Da,Ca),a(Ca,c1),a(Da,d1),l(e,Gm,r),l(e,Dr,r),a(Dr,v1),l(e,Im,r),l(e,Cr,r),a(Cr,g1),l(e,Bm,r),l(e,he,r),a(he,Xe),a(Xe,Lo),v(za,Lo,null),a(he,b1),a(he,Ro),a(Ro,w1),l(e,Dm,r),l(e,Ha,r),a(Ha,zr),l(e,Cm,r),l(e,ja,r),a(ja,Hr),l(e,zm,r),l(e,Fa,r),a(Fa,Ua),a(Ua,_1),a(Fa,y1),l(e,Hm,r),l(e,jr,r),a(jr,E1),l(e,jm,r),l(e,Fr,r),a(Fr,k1),l(e,Fm,r),l(e,fe,r),a(fe,Ye),a(Ye,So),v(Xa,So,null),a(fe,A1),a(fe,qo),a(qo,T1),l(e,Um,r),l(e,Ya,r),a(Ya,Ur),l(e,Xm,r),l(e,Za,r),a(Za,Xr),l(e,Ym,r),l(e,Ka,r),a(Ka,Oa),a(Oa,x1),a(Ka,P1),l(e,Zm,r),l(e,Yr,r),a(Yr,$1),l(e,Km,r),l(e,Zr,r),a(Zr,M1),l(e,Om,r),l(e,me,r),a(me,Ze),a(Ze,No),v(Wa,No,null),a(me,L1),a(me,Go),a(Go,R1),l(e,Wm,r),l(e,Ja,r),a(Ja,Kr),l(e,Jm,r),l(e,Qa,r),a(Qa,Or),l(e,Qm,r),l(e,Va,r),a(Va,es),a(es,S1),a(Va,q1),l(e,Vm,r),l(e,Wr,r),a(Wr,N1),l(e,ep,r),l(e,Jr,r),a(Jr,G1),l(e,tp,r),l(e,Qr,r),a(Qr,I1),l(e,ap,r),l(e,Vr,r),a(Vr,B1),l(e,sp,r),l(e,el,r),l(e,ip,r),l(e,pe,r),a(pe,Ke),a(Ke,Io),v(ts,Io,null),a(pe,D1),a(pe,Bo),a(Bo,C1),l(e,rp,r),l(e,as,r),a(as,tl),l(e,lp,r),l(e,ss,r),a(ss,al),l(e,np,r),l(e,is,r),a(is,rs),a(rs,z1),a(is,H1),l(e,op,r),l(e,Oe,r),a(Oe,j1),a(Oe,sl),a(sl,F1),a(Oe,U1),l(e,hp,r),l(e,il,r),a(il,X1),l(e,fp,r),l(e,ls,r),a(ls,Do),a(Do,Y1),a(ls,Z1),l(e,mp,r),l(e,rl,r),a(rl,K1),l(e,pp,r),l(e,ll,r),l(e,up,r),l(e,ue,r),a(ue,We),a(We,Co),v(ns,Co,null),a(ue,O1),a(ue,zo),a(zo,W1),l(e,cp,r),l(e,nl,r),a(nl,J1),l(e,dp,r),l(e,M,r),l(e,vp,r),l(e,ce,r),a(ce,Je),a(Je,Ho),v(os,Ho,null),a(ce,Q1),a(ce,jo),a(jo,V1),l(e,gp,r),l(e,hs,r),a(hs,ol),l(e,bp,r),l(e,fs,r),a(fs,hl),l(e,wp,r),l(e,ms,r),a(ms,ps),a(ps,eb),a(ms,tb),l(e,_p,r),l(e,fl,r),a(fl,ab),l(e,yp,r),l(e,T,r),a(T,Fo),a(Fo,sb),a(T,ib),a(T,Uo),a(Uo,rb),a(T,lb),a(T,Xo),a(Xo,nb),a(T,ob),a(T,Yo),a(Yo,hb),a(T,fb),a(T,Zo),a(Zo,mb),l(e,Ep,r),l(e,ml,r),a(ml,pb),l(e,kp,r),l(e,de,r),a(de,Qe),a(Qe,Ko),v(us,Ko,null),a(de,ub),a(de,Oo),a(Oo,cb),l(e,Ap,r),l(e,cs,r),a(cs,pl),l(e,Tp,r),l(e,ds,r),a(ds,ul),l(e,xp,r),l(e,vs,r),a(vs,gs),a(gs,db),a(vs,vb),l(e,Pp,r),l(e,cl,r),a(cl,gb),l(e,$p,r),l(e,Ve,r),a(Ve,Wo),a(Wo,bb),a(Ve,wb),a(Ve,Jo),a(Jo,_b),l(e,Mp,r),l(e,dl,r),a(dl,yb),l(e,Lp,r),l(e,vl,r),a(vl,Eb),l(e,Rp,r),l(e,ve,r),a(ve,et),a(et,Qo),v(bs,Qo,null),a(ve,kb),a(ve,Vo),a(Vo,Ab),l(e,Sp,r),l(e,ws,r),a(ws,gl),l(e,qp,r),l(e,_s,r),a(_s,bl),l(e,Np,r),l(e,ys,r),a(ys,Es),a(Es,Tb),a(ys,xb),l(e,Gp,r),l(e,wl,r),a(wl,Pb),l(e,Ip,r),l(e,_l,r),a(_l,$b),l(e,Bp,r),l(e,ge,r),a(ge,tt),a(tt,eh),v(ks,eh,null),a(ge,Mb),a(ge,th),a(th,Lb),l(e,Dp,r),l(e,As,r),a(As,yl),l(e,Cp,r),l(e,Ts,r),a(Ts,El),l(e,zp,r),l(e,xs,r),a(xs,Ps),a(Ps,Rb),a(xs,Sb),l(e,Hp,r),l(e,kl,r),a(kl,qb),l(e,jp,r),l(e,Al,r),a(Al,Nb),l(e,Fp,r),l(e,Tl,r),a(Tl,Gb),l(e,Up,r),l(e,xl,r),a(xl,Ib),l(e,Xp,r),l(e,Pl,r),a(Pl,Bb),l(e,Yp,r),l(e,be,r),a(be,at),a(at,ah),v($s,ah,null),a(be,Db),a(be,sh),a(sh,Cb),l(e,Zp,r),l(e,Ms,r),a(Ms,$l),l(e,Kp,r),l(e,Ls,r),a(Ls,Ml),l(e,Op,r),l(e,Rs,r),a(Rs,Ss),a(Ss,zb),a(Rs,Hb),l(e,Wp,r),l(e,Ll,r),a(Ll,jb),l(e,Jp,r),l(e,Rl,r),a(Rl,Fb),l(e,Qp,r),l(e,we,r),a(we,st),a(st,ih),v(qs,ih,null),a(we,Ub),a(we,rh),a(rh,Xb),l(e,Vp,r),l(e,Ns,r),a(Ns,Sl),l(e,eu,r),l(e,Gs,r),a(Gs,ql),l(e,tu,r),l(e,Is,r),a(Is,Bs),a(Bs,Yb),a(Is,Zb),l(e,au,r),l(e,Nl,r),a(Nl,Kb),l(e,su,r),l(e,Gl,r),a(Gl,Ob),l(e,iu,r),l(e,it,r),a(it,Wb),a(it,Ds),a(Ds,Jb),a(it,Qb),l(e,ru,r),l(e,j,r),a(j,Vb),a(j,Cs),a(Cs,ew),a(j,tw),a(j,lh),a(lh,aw),a(j,sw),l(e,lu,r),l(e,_e,r),a(_e,rt),a(rt,nh),v(zs,nh,null),a(_e,iw),a(_e,oh),a(oh,rw),l(e,nu,r),l(e,Hs,r),a(Hs,Il),l(e,ou,r),l(e,js,r),a(js,Bl),l(e,hu,r),l(e,Fs,r),a(Fs,Us),a(Us,lw),a(Fs,nw),l(e,fu,r),l(e,F,r),a(F,ow),a(F,hh),a(hh,hw),a(F,fw),a(F,fh),a(fh,mw),a(F,pw),l(e,mu,r),l(e,Dl,r),a(Dl,uw),l(e,pu,r),l(e,ye,r),a(ye,lt),a(lt,mh),v(Xs,mh,null),a(ye,cw),a(ye,ph),a(ph,dw),l(e,uu,r),l(e,Ys,r),a(Ys,Cl),l(e,cu,r),l(e,Zs,r),a(Zs,zl),l(e,du,r),l(e,Ks,r),a(Ks,Os),a(Os,vw),a(Ks,gw),l(e,vu,r),l(e,nt,r),a(nt,bw),a(nt,Ws),a(Ws,ww),a(nt,_w),l(e,gu,r),l(e,Hl,r),a(Hl,yw),l(e,bu,r),l(e,jl,r),l(e,wu,r),l(e,Ee,r),a(Ee,ot),a(ot,uh),v(Js,uh,null),a(Ee,Ew),a(Ee,ch),a(ch,kw),l(e,_u,r),l(e,Fl,r),a(Fl,Aw),l(e,yu,r),l(e,ke,r),a(ke,ht),a(ht,dh),v(Qs,dh,null),a(ke,Tw),a(ke,vh),a(vh,xw),l(e,Eu,r),l(e,Vs,r),a(Vs,ei),a(ei,Pw),a(Vs,$w),l(e,ku,r),l(e,Ul,r),a(Ul,Mw),l(e,Au,r),l(e,Xl,r),a(Xl,Lw),l(e,Tu,r),l(e,Yl,r),a(Yl,Rw),l(e,xu,r),l(e,Zl,r),l(e,Pu,r),l(e,Ae,r),a(Ae,ft),a(ft,gh),v(ti,gh,null),a(Ae,Sw),a(Ae,bh),a(bh,qw),l(e,$u,r),l(e,Kl,r),a(Kl,Nw),l(e,Mu,r),l(e,Te,r),a(Te,mt),a(mt,wh),v(ai,wh,null),a(Te,Gw),a(Te,_h),a(_h,Iw),l(e,Lu,r),l(e,si,r),a(si,Ol),l(e,Ru,r),l(e,ii,r),a(ii,Wl),l(e,Su,r),l(e,ri,r),a(ri,li),a(li,Bw),a(ri,Dw),l(e,qu,r),l(e,Jl,r),a(Jl,Cw),l(e,Nu,r),l(e,Ql,r),a(Ql,zw),l(e,Gu,r),l(e,U,r),a(U,yh),a(yh,Hw),a(U,jw),a(U,Eh),a(Eh,Fw),a(U,Uw),a(U,kh),a(kh,Xw),l(e,Iu,r),l(e,Vl,r),a(Vl,Yw),l(e,Bu,r),l(e,xe,r),a(xe,pt),a(pt,Ah),v(ni,Ah,null),a(xe,Zw),a(xe,Th),a(Th,Kw),l(e,Du,r),l(e,oi,r),a(oi,en),l(e,Cu,r),l(e,hi,r),a(hi,tn),l(e,zu,r),l(e,fi,r),a(fi,mi),a(mi,Ow),a(fi,Ww),l(e,Hu,r),l(e,an,r),a(an,Jw),l(e,ju,r),l(e,sn,r),a(sn,Qw),l(e,Fu,r),l(e,Pe,r),a(Pe,ut),a(ut,xh),v(pi,xh,null),a(Pe,Vw),a(Pe,Ph),a(Ph,e_),l(e,Uu,r),l(e,$e,r),a($e,ct),a(ct,$h),v(ui,$h,null),a($e,t_),a($e,Mh),a(Mh,a_),l(e,Xu,r),l(e,rn,r),a(rn,s_),l(e,Yu,r),l(e,ln,r),l(e,Zu,r),l(e,nn,r),a(nn,Lh),a(Lh,i_),l(e,Ku,r),l(e,ci,r),a(ci,on),a(on,r_),a(ci,l_),l(e,Ou,r),l(e,hn,r),l(e,Wu,r),l(e,fn,r),a(fn,Rh),a(Rh,n_),l(e,Ju,r),l(e,di,r),a(di,mn),a(mn,o_),a(di,h_),l(e,Qu,r),l(e,pn,r),a(pn,f_),l(e,Vu,r),l(e,dt,r),l(e,ec,r),l(e,un,r),a(un,m_),l(e,tc,r),l(e,Me,r),a(Me,vt),a(vt,Sh),v(vi,Sh,null),a(Me,p_),a(Me,qh),a(qh,u_),l(e,ac,r),l(e,cn,r),l(e,sc,r),l(e,dn,r),a(dn,Nh),a(Nh,c_),l(e,ic,r),l(e,y,r),a(y,vn),a(vn,d_),a(y,v_),rc.m(d4,y),a(y,lc),nc.m(v4,y),a(y,oc),hc.m(g4,y),a(y,fc),mc.m(b4,y),a(y,pc),uc.m(w4,y),a(y,cc),dc.m(_4,y),a(y,vc),gc.m(y4,y),a(y,bc),wc.m(E4,y),a(y,_c),yc.m(k4,y),a(y,Ec),kc.m(A4,y),a(y,Ac),Tc.m(T4,y),a(y,xc),Pc=!0},p:L4,i(e){Pc||(g(_t.$$.fragment,e),g(At.$$.fragment,e),g(Tt.$$.fragment,e),g(Lt.$$.fragment,e),g(Gt.$$.fragment,e),g(zt.$$.fragment,e),g(Xt.$$.fragment,e),g(Vt.$$.fragment,e),g(ia.$$.fragment,e),g(ra.$$.fragment,e),g(fa.$$.fragment,e),g(da.$$.fragment,e),g(_a.$$.fragment,e),g(Ta.$$.fragment,e),g(La.$$.fragment,e),g(Ga.$$.fragment,e),g(za.$$.fragment,e),g(Xa.$$.fragment,e),g(Wa.$$.fragment,e),g(ts.$$.fragment,e),g(ns.$$.fragment,e),g(os.$$.fragment,e),g(us.$$.fragment,e),g(bs.$$.fragment,e),g(ks.$$.fragment,e),g($s.$$.fragment,e),g(qs.$$.fragment,e),g(zs.$$.fragment,e),g(Xs.$$.fragment,e),g(Js.$$.fragment,e),g(Qs.$$.fragment,e),g(ti.$$.fragment,e),g(ai.$$.fragment,e),g(ni.$$.fragment,e),g(pi.$$.fragment,e),g(ui.$$.fragment,e),g(vi.$$.fragment,e),Pc=!0)},o(e){b(_t.$$.fragment,e),b(At.$$.fragment,e),b(Tt.$$.fragment,e),b(Lt.$$.fragment,e),b(Gt.$$.fragment,e),b(zt.$$.fragment,e),b(Xt.$$.fragment,e),b(Vt.$$.fragment,e),b(ia.$$.fragment,e),b(ra.$$.fragment,e),b(fa.$$.fragment,e),b(da.$$.fragment,e),b(_a.$$.fragment,e),b(Ta.$$.fragment,e),b(La.$$.fragment,e),b(Ga.$$.fragment,e),b(za.$$.fragment,e),b(Xa.$$.fragment,e),b(Wa.$$.fragment,e),b(ts.$$.fragment,e),b(ns.$$.fragment,e),b(os.$$.fragment,e),b(us.$$.fragment,e),b(bs.$$.fragment,e),b(ks.$$.fragment,e),b($s.$$.fragment,e),b(qs.$$.fragment,e),b(zs.$$.fragment,e),b(Xs.$$.fragment,e),b(Js.$$.fragment,e),b(Qs.$$.fragment,e),b(ti.$$.fragment,e),b(ai.$$.fragment,e),b(ni.$$.fragment,e),b(pi.$$.fragment,e),b(ui.$$.fragment,e),b(vi.$$.fragment,e),Pc=!1},d(e){t(B),e&&t(gi),e&&t(L),w(_t),e&&t(Gh),e&&t(k),e&&t(Ih),e&&t(wi),e&&t(Bh),e&&t(A),e&&t(Dh),e&&t(x),e&&t(Ch),e&&t(Ti),e&&t(zh),e&&t(xi),e&&t(Hh),e&&t(Pi),e&&t(jh),e&&t($i),e&&t(Fh),e&&t(Mi),e&&t(Uh),e&&t(Li),e&&t(Xh),e&&t(K),w(At),e&&t(Yh),e&&t(Ri),e&&t(Zh),e&&t(P),e&&t(Kh),e&&t(O),w(Tt),e&&t(Oh),e&&t(xt),e&&t(Wh),e&&t(Pt),e&&t(Jh),e&&t($t),e&&t(Qh),e&&t(Ni),e&&t(Vh),e&&t(Gi),e&&t(ef),e&&t(W),w(Lt),e&&t(tf),e&&t(Rt),e&&t(af),e&&t(St),e&&t(sf),e&&t(qt),e&&t(rf),e&&t(Di),e&&t(lf),e&&t(Ci),e&&t(nf),e&&t(J),w(Gt),e&&t(of),e&&t(It),e&&t(hf),e&&t(Bt),e&&t(ff),e&&t(Dt),e&&t(mf),e&&t(ji),e&&t(pf),e&&t(Fi),e&&t(uf),e&&t(Q),w(zt),e&&t(cf),e&&t(Ht),e&&t(df),e&&t(jt),e&&t(vf),e&&t(Ft),e&&t(gf),e&&t(Yi),e&&t(bf),e&&t(Zi),e&&t(wf),e&&t(Ki),e&&t(_f),e&&t(Oi),e&&t(yf),e&&t(Wi),e&&t(Ef),e&&t(V),w(Xt),e&&t(kf),e&&t(Yt),e&&t(Af),e&&t(Zt),e&&t(Tf),e&&t(Kt),e&&t(xf),e&&t(Vi),e&&t(Pf),e&&t(R),e&&t($f),e&&t(ar),e&&t(Mf),e&&t(Qt),e&&t(Lf),e&&t(sr),e&&t(Rf),e&&t(ee),w(Vt),e&&t(Sf),e&&t(ea),e&&t(qf),e&&t(ta),e&&t(Nf),e&&t(aa),e&&t(Gf),e&&t(lr),e&&t(If),e&&t(nr),e&&t(Bf),e&&t(or),e&&t(Df),e&&t(hr),e&&t(Cf),e&&t(te),w(ia),e&&t(zf),e&&t(fr),e&&t(Hf),e&&t($),e&&t(jf),e&&t(ae),w(ra),e&&t(Ff),e&&t(la),e&&t(Uf),e&&t(na),e&&t(Xf),e&&t(oa),e&&t(Yf),e&&t(ur),e&&t(Zf),e&&t(D),e&&t(Kf),e&&t(cr),e&&t(Of),e&&t(dr),e&&t(Wf),e&&t(se),w(fa),e&&t(Jf),e&&t(ma),e&&t(Qf),e&&t(pa),e&&t(Vf),e&&t(ua),e&&t(em),e&&t(br),e&&t(tm),e&&t(C),e&&t(am),e&&t(wr),e&&t(sm),e&&t(ie),w(da),e&&t(im),e&&t(va),e&&t(rm),e&&t(ga),e&&t(lm),e&&t(ba),e&&t(nm),e&&t(Er),e&&t(om),e&&t(S),e&&t(hm),e&&t(kr),e&&t(fm),e&&t(re),w(_a),e&&t(mm),e&&t(ya),e&&t(pm),e&&t(Ea),e&&t(um),e&&t(ka),e&&t(cm),e&&t(xr),e&&t(dm),e&&t(z),e&&t(vm),e&&t(Pr),e&&t(gm),e&&t(le),w(Ta),e&&t(bm),e&&t(xa),e&&t(wm),e&&t(Pa),e&&t(_m),e&&t($a),e&&t(ym),e&&t(Lr),e&&t(Em),e&&t(Rr),e&&t(km),e&&t(ne),w(La),e&&t(Am),e&&t(Ra),e&&t(Tm),e&&t(Sa),e&&t(xm),e&&t(qa),e&&t(Pm),e&&t(Nr),e&&t($m),e&&t(H),e&&t(Mm),e&&t(q),e&&t(Lm),e&&t(Gr),e&&t(Rm),e&&t(oe),w(Ga),e&&t(Sm),e&&t(Ia),e&&t(qm),e&&t(Ba),e&&t(Nm),e&&t(Da),e&&t(Gm),e&&t(Dr),e&&t(Im),e&&t(Cr),e&&t(Bm),e&&t(he),w(za),e&&t(Dm),e&&t(Ha),e&&t(Cm),e&&t(ja),e&&t(zm),e&&t(Fa),e&&t(Hm),e&&t(jr),e&&t(jm),e&&t(Fr),e&&t(Fm),e&&t(fe),w(Xa),e&&t(Um),e&&t(Ya),e&&t(Xm),e&&t(Za),e&&t(Ym),e&&t(Ka),e&&t(Zm),e&&t(Yr),e&&t(Km),e&&t(Zr),e&&t(Om),e&&t(me),w(Wa),e&&t(Wm),e&&t(Ja),e&&t(Jm),e&&t(Qa),e&&t(Qm),e&&t(Va),e&&t(Vm),e&&t(Wr),e&&t(ep),e&&t(Jr),e&&t(tp),e&&t(Qr),e&&t(ap),e&&t(Vr),e&&t(sp),e&&t(el),e&&t(ip),e&&t(pe),w(ts),e&&t(rp),e&&t(as),e&&t(lp),e&&t(ss),e&&t(np),e&&t(is),e&&t(op),e&&t(Oe),e&&t(hp),e&&t(il),e&&t(fp),e&&t(ls),e&&t(mp),e&&t(rl),e&&t(pp),e&&t(ll),e&&t(up),e&&t(ue),w(ns),e&&t(cp),e&&t(nl),e&&t(dp),e&&t(M),e&&t(vp),e&&t(ce),w(os),e&&t(gp),e&&t(hs),e&&t(bp),e&&t(fs),e&&t(wp),e&&t(ms),e&&t(_p),e&&t(fl),e&&t(yp),e&&t(T),e&&t(Ep),e&&t(ml),e&&t(kp),e&&t(de),w(us),e&&t(Ap),e&&t(cs),e&&t(Tp),e&&t(ds),e&&t(xp),e&&t(vs),e&&t(Pp),e&&t(cl),e&&t($p),e&&t(Ve),e&&t(Mp),e&&t(dl),e&&t(Lp),e&&t(vl),e&&t(Rp),e&&t(ve),w(bs),e&&t(Sp),e&&t(ws),e&&t(qp),e&&t(_s),e&&t(Np),e&&t(ys),e&&t(Gp),e&&t(wl),e&&t(Ip),e&&t(_l),e&&t(Bp),e&&t(ge),w(ks),e&&t(Dp),e&&t(As),e&&t(Cp),e&&t(Ts),e&&t(zp),e&&t(xs),e&&t(Hp),e&&t(kl),e&&t(jp),e&&t(Al),e&&t(Fp),e&&t(Tl),e&&t(Up),e&&t(xl),e&&t(Xp),e&&t(Pl),e&&t(Yp),e&&t(be),w($s),e&&t(Zp),e&&t(Ms),e&&t(Kp),e&&t(Ls),e&&t(Op),e&&t(Rs),e&&t(Wp),e&&t(Ll),e&&t(Jp),e&&t(Rl),e&&t(Qp),e&&t(we),w(qs),e&&t(Vp),e&&t(Ns),e&&t(eu),e&&t(Gs),e&&t(tu),e&&t(Is),e&&t(au),e&&t(Nl),e&&t(su),e&&t(Gl),e&&t(iu),e&&t(it),e&&t(ru),e&&t(j),e&&t(lu),e&&t(_e),w(zs),e&&t(nu),e&&t(Hs),e&&t(ou),e&&t(js),e&&t(hu),e&&t(Fs),e&&t(fu),e&&t(F),e&&t(mu),e&&t(Dl),e&&t(pu),e&&t(ye),w(Xs),e&&t(uu),e&&t(Ys),e&&t(cu),e&&t(Zs),e&&t(du),e&&t(Ks),e&&t(vu),e&&t(nt),e&&t(gu),e&&t(Hl),e&&t(bu),e&&t(jl),e&&t(wu),e&&t(Ee),w(Js),e&&t(_u),e&&t(Fl),e&&t(yu),e&&t(ke),w(Qs),e&&t(Eu),e&&t(Vs),e&&t(ku),e&&t(Ul),e&&t(Au),e&&t(Xl),e&&t(Tu),e&&t(Yl),e&&t(xu),e&&t(Zl),e&&t(Pu),e&&t(Ae),w(ti),e&&t($u),e&&t(Kl),e&&t(Mu),e&&t(Te),w(ai),e&&t(Lu),e&&t(si),e&&t(Ru),e&&t(ii),e&&t(Su),e&&t(ri),e&&t(qu),e&&t(Jl),e&&t(Nu),e&&t(Ql),e&&t(Gu),e&&t(U),e&&t(Iu),e&&t(Vl),e&&t(Bu),e&&t(xe),w(ni),e&&t(Du),e&&t(oi),e&&t(Cu),e&&t(hi),e&&t(zu),e&&t(fi),e&&t(Hu),e&&t(an),e&&t(ju),e&&t(sn),e&&t(Fu),e&&t(Pe),w(pi),e&&t(Uu),e&&t($e),w(ui),e&&t(Xu),e&&t(rn),e&&t(Yu),e&&t(ln),e&&t(Zu),e&&t(nn),e&&t(Ku),e&&t(ci),e&&t(Ou),e&&t(hn),e&&t(Wu),e&&t(fn),e&&t(Ju),e&&t(di),e&&t(Qu),e&&t(pn),e&&t(Vu),e&&t(dt),e&&t(ec),e&&t(un),e&&t(tc),e&&t(Me),w(vi),e&&t(ac),e&&t(cn),e&&t(sc),e&&t(dn),e&&t(ic),e&&t(y)}}}const S4={local:"summary-of-the-models",sections:[{local:"decoders-or-autoregressive-models",sections:[{local:"original-gpt",title:"Original GPT"},{local:"gpt2",title:"GPT-2"},{local:"ctrl",title:"CTRL"},{local:"transformerxl",title:"Transformer-XL"},{local:"reformer",title:"Reformer"},{local:"xlnet",title:"XLNet"}],title:"Decoders or autoregressive models"},{local:"encoders-or-autoencoding-models",sections:[{local:"bert",title:"BERT"},{local:"albert",title:"ALBERT"},{local:"roberta",title:"RoBERTa"},{local:"distilbert",title:"DistilBERT"},{local:"convbert",title:"ConvBERT"},{local:"xlm",title:"XLM"},{local:"xlmroberta",title:"XLM-RoBERTa"},{local:"flaubert",title:"FlauBERT"},{local:"electra",title:"ELECTRA"},{local:"funnel-transformer",title:"Funnel Transformer"},{local:"longformer",title:"Longformer"}],title:"Encoders or autoencoding models"},{local:"sequencetosequence-models",sections:[{local:"bart",title:"BART"},{local:"pegasus",title:"Pegasus"},{local:"marianmt",title:"MarianMT"},{local:"t5",title:"T5"},{local:"mt5",title:"MT5"},{local:"mbart",title:"MBart"},{local:"prophetnet",title:"ProphetNet"},{local:"xlmprophetnet",title:"XLM-ProphetNet"}],title:"Sequence-to-sequence models"},{local:"multimodal-models",sections:[{local:"mmbt",title:"MMBT"}],title:"Multimodal models"},{local:"retrievalbased-models",sections:[{local:"dpr",title:"DPR"},{local:"rag",title:"RAG"}],title:"Retrieval-based models"},{local:"more-technical-aspects",sections:[{local:"full-vs-sparse-attention",title:"Full vs sparse attention"},{local:"other-tricks",title:"Other tricks"}],title:"More technical aspects"}],title:"Summary of the models"};function q4(gd,B,gi){let{fw:L}=B;return gd.$$set=N=>{"fw"in N&&gi(0,L=N.fw)},[L]}class I4 extends x4{constructor(B){super();P4(this,B,q4,R4,$4,{fw:0})}}export{I4 as default,S4 as metadata};
