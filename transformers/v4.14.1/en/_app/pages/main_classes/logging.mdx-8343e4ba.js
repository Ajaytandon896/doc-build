import{S as Rs,i as Is,s as ws,e as o,k as i,w as p,t as n,M as As,c as s,d as r,m as g,a as l,x as _,h as a,b as m,F as t,g as c,y as E,q as $,o as b,B as y}from"../../chunks/vendor-ab4e3193.js";import{T as Os}from"../../chunks/Tip-b5c6375a.js";import{D as W}from"../../chunks/Docstring-b69c0bd4.js";import{C as ys}from"../../chunks/CodeBlock-516df0c5.js";import{I as Co}from"../../chunks/IconCopyLink-d992940d.js";import"../../chunks/CopyButton-204b56db.js";function Ns(ft){let v,H,u,h,w,P,K,Q,Ie,U,Y,we,x,L,X,Z,Ae,C,de,S,Oe,ve,T,ue,d,j,ee,te,Ne,re,q,De,B,Te;return{c(){v=o("p"),H=n("\u{1F917} Transformers has following logging levels:"),u=i(),h=o("ul"),w=o("li"),P=n("50: "),K=o("code"),Q=n("transformers.logging.CRITICAL"),Ie=n(" or "),U=o("code"),Y=n("transformers.logging.FATAL"),we=i(),x=o("li"),L=n("40: "),X=o("code"),Z=n("transformers.logging.ERROR"),Ae=i(),C=o("li"),de=n("30: "),S=o("code"),Oe=n("transformers.logging.WARNING"),ve=n(" or "),T=o("code"),ue=n("transformers.logging.WARN"),d=i(),j=o("li"),ee=n("20: "),te=o("code"),Ne=n("transformers.logging.INFO"),re=i(),q=o("li"),De=n("10: "),B=o("code"),Te=n("transformers.logging.DEBUG")},l(R){v=s(R,"P",{});var F=l(v);H=a(F,"\u{1F917} Transformers has following logging levels:"),F.forEach(r),u=g(R),h=s(R,"UL",{});var A=l(h);w=s(A,"LI",{});var oe=l(w);P=a(oe,"50: "),K=s(oe,"CODE",{});var pe=l(K);Q=a(pe,"transformers.logging.CRITICAL"),pe.forEach(r),Ie=a(oe," or "),U=s(oe,"CODE",{});var Xe=l(U);Y=a(Xe,"transformers.logging.FATAL"),Xe.forEach(r),oe.forEach(r),we=g(A),x=s(A,"LI",{});var Le=l(x);L=a(Le,"40: "),X=s(Le,"CODE",{});var _e=l(X);Z=a(_e,"transformers.logging.ERROR"),_e.forEach(r),Le.forEach(r),Ae=g(A),C=s(A,"LI",{});var se=l(C);de=a(se,"30: "),S=s(se,"CODE",{});var Ze=l(S);Oe=a(Ze,"transformers.logging.WARNING"),Ze.forEach(r),ve=a(se," or "),T=s(se,"CODE",{});var Ce=l(T);ue=a(Ce,"transformers.logging.WARN"),Ce.forEach(r),se.forEach(r),d=g(A),j=s(A,"LI",{});var G=l(j);ee=a(G,"20: "),te=s(G,"CODE",{});var Se=l(te);Ne=a(Se,"transformers.logging.INFO"),Se.forEach(r),G.forEach(r),re=g(A),q=s(A,"LI",{});var O=l(q);De=a(O,"10: "),B=s(O,"CODE",{});var et=l(B);Te=a(et,"transformers.logging.DEBUG"),et.forEach(r),O.forEach(r),A.forEach(r)},m(R,F){c(R,v,F),t(v,H),c(R,u,F),c(R,h,F),t(h,w),t(w,P),t(w,K),t(K,Q),t(w,Ie),t(w,U),t(U,Y),t(h,we),t(h,x),t(x,L),t(x,X),t(X,Z),t(h,Ae),t(h,C),t(C,de),t(C,S),t(S,Oe),t(C,ve),t(C,T),t(T,ue),t(h,d),t(h,j),t(j,ee),t(j,te),t(te,Ne),t(h,re),t(h,q),t(q,De),t(q,B),t(B,Te)},d(R){R&&r(v),R&&r(u),R&&r(h)}}}function Ds(ft){let v,H,u,h,w,P,K,Q,Ie,U,Y,we,x,L,X,Z,Ae,C,de,S,Oe,ve,T,ue,d,j,ee,te,Ne,re,q,De,B,Te,R,F,A,oe,pe,Xe,Le,_e,se,Ze,Ce,G,Se,O,et,tt,vr,ur,rt,pr,_r,Mt,N,Ee,ct,Er,$r,mt,br,yr,Rr,ot,ht,Ir,wr,Ar,$e,dt,Or,Nr,vt,Dr,Tr,Lr,st,ut,Cr,Sr,Fr,lt,pt,Pr,xr,kt,le,be,_t,Fe,Br,Et,Gr,Wt,ne,Pe,Vr,xe,Mr,$t,kr,Wr,Ht,ae,Be,Hr,Ge,Ur,bt,Yr,jr,Ut,ie,Ve,qr,Me,zr,yt,Jr,Kr,Yt,ge,ke,Qr,We,Xr,Rt,Zr,eo,jt,fe,ye,It,He,to,wt,ro,qt,V,Ue,oo,At,so,lo,Re,zt,ce,Ye,no,Ot,ao,Jt,M,je,io,Nt,go,fo,Dt,co,Kt,me,qe,mo,Tt,ho,Qt,he,ze,vo,Lt,uo,Xt,I,Je,po,Ct,_o,Eo,St,$o,bo,Ft,yo,Ro,Pt,Io,Zt,k,Ke,wo,xt,Ao,Oo,Bt,No,er;return P=new Co({}),T=new ys({props:{code:`import transformers
transformers.logging.set_verbosity_info(),`,highlighted:`<span class="hljs-keyword">import</span> transformers
transformers.logging.set_verbosity_info()`}}),G=new ys({props:{code:"TRANSFORMERS_VERBOSITY=error ./myprogram.py,",highlighted:"TRANSFORMERS_VERBOSITY=error ./myprogram.py"}}),Fe=new Co({}),Pe=new W({props:{name:"transformers.utils.logging.set_verbosity_error",anchor:"transformers.utils.logging.set_verbosity_error",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/utils/logging.py#L179"}}),Be=new W({props:{name:"transformers.utils.logging.set_verbosity_warning",anchor:"transformers.utils.logging.set_verbosity_warning",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/utils/logging.py#L169"}}),Ve=new W({props:{name:"transformers.utils.logging.set_verbosity_info",anchor:"transformers.utils.logging.set_verbosity_info",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/utils/logging.py#L164"}}),ke=new W({props:{name:"transformers.utils.logging.set_verbosity_debug",anchor:"transformers.utils.logging.set_verbosity_debug",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/utils/logging.py#L174"}}),He=new Co({}),Ue=new W({props:{name:"transformers.utils.logging.get_verbosity",anchor:"transformers.utils.logging.get_verbosity",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/utils/logging.py#L123",returnDescription:`
<p>The logging level.</p>
`,returnType:`
<p><code>int</code></p>
`}}),Re=new Os({props:{$$slots:{default:[Ns]},$$scope:{ctx:ft}}}),Ye=new W({props:{name:"transformers.utils.logging.set_verbosity",anchor:"transformers.utils.logging.set_verbosity",parameters:[{name:"verbosity",val:": int"}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/utils/logging.py#L145",parametersDescription:[{anchor:"transformers.utils.logging.set_verbosity.verbosity",description:`<strong>verbosity</strong> (<code>int</code>) &#x2014;
Logging level, e.g., one of:</p>
<ul>
<li><code>transformers.logging.CRITICAL</code> or <code>transformers.logging.FATAL</code></li>
<li><code>transformers.logging.ERROR</code></li>
<li><code>transformers.logging.WARNING</code> or <code>transformers.logging.WARN</code></li>
<li><code>transformers.logging.INFO</code></li>
<li><code>transformers.logging.DEBUG</code></li>
</ul>`,name:"verbosity"}]}}),je=new W({props:{name:"transformers.utils.logging.get_logger",anchor:"transformers.utils.logging.get_logger",parameters:[{name:"name",val:": typing.Optional[str] = None"}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/utils/logging.py#L109"}}),qe=new W({props:{name:"transformers.utils.logging.enable_default_handler",anchor:"transformers.utils.logging.enable_default_handler",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/utils/logging.py#L193"}}),ze=new W({props:{name:"transformers.utils.logging.disable_default_handler",anchor:"transformers.utils.logging.disable_default_handler",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/utils/logging.py#L184"}}),Je=new W({props:{name:"transformers.utils.logging.enable_explicit_format",anchor:"transformers.utils.logging.enable_explicit_format",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/utils/logging.py#L239"}}),Ke=new W({props:{name:"transformers.utils.logging.reset_format",anchor:"transformers.utils.logging.reset_format",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/utils/logging.py#L256"}}),{c(){v=o("meta"),H=i(),u=o("h1"),h=o("a"),w=o("span"),p(P.$$.fragment),K=i(),Q=o("span"),Ie=n("Logging"),U=i(),Y=o("p"),we=n("\u{1F917} Transformers has a centralized logging system, so that you can setup the verbosity of the library easily."),x=i(),L=o("p"),X=n("Currently the default verbosity of the library is "),Z=o("code"),Ae=n("WARNING"),C=n("."),de=i(),S=o("p"),Oe=n(`To change the level of verbosity, just use one of the direct setters. For instance, here is how to change the verbosity
to the INFO level.`),ve=i(),p(T.$$.fragment),ue=i(),d=o("p"),j=n("You can also use the environment variable "),ee=o("code"),te=n("TRANSFORMERS_VERBOSITY"),Ne=n(` to override the default verbosity. You can set it
to one of the following: `),re=o("code"),q=n("debug"),De=n(", "),B=o("code"),Te=n("info"),R=n(", "),F=o("code"),A=n("warning"),oe=n(", "),pe=o("code"),Xe=n("error"),Le=n(", "),_e=o("code"),se=n("critical"),Ze=n(". For example:"),Ce=i(),p(G.$$.fragment),Se=i(),O=o("p"),et=n(`All the methods of this logging module are documented below, the main ones are
`),tt=o("a"),vr=n("transformers.logging.get_verbosity()"),ur=n(` to get the current level of verbosity in the logger and
`),rt=o("a"),pr=n("transformers.logging.set_verbosity()"),_r=n(` to set the verbosity to the level of your choice. In order (from the least
verbose to the most verbose), those levels (with their corresponding int values in parenthesis) are:`),Mt=i(),N=o("ul"),Ee=o("li"),ct=o("code"),Er=n("transformers.logging.CRITICAL"),$r=n(" or "),mt=o("code"),br=n("transformers.logging.FATAL"),yr=n(` (int value, 50): only report the most
critical errors.`),Rr=i(),ot=o("li"),ht=o("code"),Ir=n("transformers.logging.ERROR"),wr=n(" (int value, 40): only report errors."),Ar=i(),$e=o("li"),dt=o("code"),Or=n("transformers.logging.WARNING"),Nr=n(" or "),vt=o("code"),Dr=n("transformers.logging.WARN"),Tr=n(` (int value, 30): only reports error and
warnings. This the default level used by the library.`),Lr=i(),st=o("li"),ut=o("code"),Cr=n("transformers.logging.INFO"),Sr=n(" (int value, 20): reports error, warnings and basic information."),Fr=i(),lt=o("li"),pt=o("code"),Pr=n("transformers.logging.DEBUG"),xr=n(" (int value, 10): report all information."),kt=i(),le=o("h2"),be=o("a"),_t=o("span"),p(Fe.$$.fragment),Br=i(),Et=o("span"),Gr=n("Base setters"),Wt=i(),ne=o("div"),p(Pe.$$.fragment),Vr=i(),xe=o("p"),Mr=n("Set the verbosity to the "),$t=o("code"),kr=n("ERROR"),Wr=n(" level."),Ht=i(),ae=o("div"),p(Be.$$.fragment),Hr=i(),Ge=o("p"),Ur=n("Set the verbosity to the "),bt=o("code"),Yr=n("WARNING"),jr=n(" level."),Ut=i(),ie=o("div"),p(Ve.$$.fragment),qr=i(),Me=o("p"),zr=n("Set the verbosity to the "),yt=o("code"),Jr=n("INFO"),Kr=n(" level."),Yt=i(),ge=o("div"),p(ke.$$.fragment),Qr=i(),We=o("p"),Xr=n("Set the verbosity to the "),Rt=o("code"),Zr=n("DEBUG"),eo=n(" level."),jt=i(),fe=o("h2"),ye=o("a"),It=o("span"),p(He.$$.fragment),to=i(),wt=o("span"),ro=n("Other functions"),qt=i(),V=o("div"),p(Ue.$$.fragment),oo=i(),At=o("p"),so=n("Return the current level for the \u{1F917} Transformers\u2019s root logger as an int."),lo=i(),p(Re.$$.fragment),zt=i(),ce=o("div"),p(Ye.$$.fragment),no=i(),Ot=o("p"),ao=n("Set the verbosity level for the \u{1F917} Transformers\u2019s root logger."),Jt=i(),M=o("div"),p(je.$$.fragment),io=i(),Nt=o("p"),go=n("Return a logger with the specified name."),fo=i(),Dt=o("p"),co=n("This function is not supposed to be directly accessed unless you are writing a custom transformers module."),Kt=i(),me=o("div"),p(qe.$$.fragment),mo=i(),Tt=o("p"),ho=n("Enable the default handler of the HuggingFace Transformers\u2019s root logger."),Qt=i(),he=o("div"),p(ze.$$.fragment),vo=i(),Lt=o("p"),uo=n("Disable the default handler of the HuggingFace Transformers\u2019s root logger."),Xt=i(),I=o("div"),p(Je.$$.fragment),po=i(),Ct=o("p"),_o=n("Enable explicit formatting for every HuggingFace Transformers\u2019s logger. The explicit formatter is as follows:"),Eo=i(),St=o("p"),$o=n("::"),bo=i(),Ft=o("p"),yo=n("[LEVELNAME|FILENAME|LINE NUMBER] TIME >> MESSAGE"),Ro=i(),Pt=o("p"),Io=n("All handlers currently bound to the root logger are affected by this method."),Zt=i(),k=o("div"),p(Ke.$$.fragment),wo=i(),xt=o("p"),Ao=n("Resets the formatting for HuggingFace Transformers\u2019s loggers."),Oo=i(),Bt=o("p"),No=n("All handlers currently bound to the root logger are affected by this method."),this.h()},l(e){const f=As('[data-svelte="svelte-1phssyn"]',document.head);v=s(f,"META",{name:!0,content:!0}),f.forEach(r),H=g(e),u=s(e,"H1",{class:!0});var Qe=l(u);h=s(Qe,"A",{id:!0,class:!0,href:!0});var So=l(h);w=s(So,"SPAN",{});var Fo=l(w);_(P.$$.fragment,Fo),Fo.forEach(r),So.forEach(r),K=g(Qe),Q=s(Qe,"SPAN",{});var Po=l(Q);Ie=a(Po,"Logging"),Po.forEach(r),Qe.forEach(r),U=g(e),Y=s(e,"P",{});var xo=l(Y);we=a(xo,"\u{1F917} Transformers has a centralized logging system, so that you can setup the verbosity of the library easily."),xo.forEach(r),x=g(e),L=s(e,"P",{});var tr=l(L);X=a(tr,"Currently the default verbosity of the library is "),Z=s(tr,"CODE",{});var Bo=l(Z);Ae=a(Bo,"WARNING"),Bo.forEach(r),C=a(tr,"."),tr.forEach(r),de=g(e),S=s(e,"P",{});var Go=l(S);Oe=a(Go,`To change the level of verbosity, just use one of the direct setters. For instance, here is how to change the verbosity
to the INFO level.`),Go.forEach(r),ve=g(e),_(T.$$.fragment,e),ue=g(e),d=s(e,"P",{});var D=l(d);j=a(D,"You can also use the environment variable "),ee=s(D,"CODE",{});var Vo=l(ee);te=a(Vo,"TRANSFORMERS_VERBOSITY"),Vo.forEach(r),Ne=a(D,` to override the default verbosity. You can set it
to one of the following: `),re=s(D,"CODE",{});var Mo=l(re);q=a(Mo,"debug"),Mo.forEach(r),De=a(D,", "),B=s(D,"CODE",{});var ko=l(B);Te=a(ko,"info"),ko.forEach(r),R=a(D,", "),F=s(D,"CODE",{});var Wo=l(F);A=a(Wo,"warning"),Wo.forEach(r),oe=a(D,", "),pe=s(D,"CODE",{});var Ho=l(pe);Xe=a(Ho,"error"),Ho.forEach(r),Le=a(D,", "),_e=s(D,"CODE",{});var Uo=l(_e);se=a(Uo,"critical"),Uo.forEach(r),Ze=a(D,". For example:"),D.forEach(r),Ce=g(e),_(G.$$.fragment,e),Se=g(e),O=s(e,"P",{});var nt=l(O);et=a(nt,`All the methods of this logging module are documented below, the main ones are
`),tt=s(nt,"A",{href:!0});var Yo=l(tt);vr=a(Yo,"transformers.logging.get_verbosity()"),Yo.forEach(r),ur=a(nt,` to get the current level of verbosity in the logger and
`),rt=s(nt,"A",{href:!0});var jo=l(rt);pr=a(jo,"transformers.logging.set_verbosity()"),jo.forEach(r),_r=a(nt,` to set the verbosity to the level of your choice. In order (from the least
verbose to the most verbose), those levels (with their corresponding int values in parenthesis) are:`),nt.forEach(r),Mt=g(e),N=s(e,"UL",{});var z=l(N);Ee=s(z,"LI",{});var Gt=l(Ee);ct=s(Gt,"CODE",{});var qo=l(ct);Er=a(qo,"transformers.logging.CRITICAL"),qo.forEach(r),$r=a(Gt," or "),mt=s(Gt,"CODE",{});var zo=l(mt);br=a(zo,"transformers.logging.FATAL"),zo.forEach(r),yr=a(Gt,` (int value, 50): only report the most
critical errors.`),Gt.forEach(r),Rr=g(z),ot=s(z,"LI",{});var Do=l(ot);ht=s(Do,"CODE",{});var Jo=l(ht);Ir=a(Jo,"transformers.logging.ERROR"),Jo.forEach(r),wr=a(Do," (int value, 40): only report errors."),Do.forEach(r),Ar=g(z),$e=s(z,"LI",{});var Vt=l($e);dt=s(Vt,"CODE",{});var Ko=l(dt);Or=a(Ko,"transformers.logging.WARNING"),Ko.forEach(r),Nr=a(Vt," or "),vt=s(Vt,"CODE",{});var Qo=l(vt);Dr=a(Qo,"transformers.logging.WARN"),Qo.forEach(r),Tr=a(Vt,` (int value, 30): only reports error and
warnings. This the default level used by the library.`),Vt.forEach(r),Lr=g(z),st=s(z,"LI",{});var To=l(st);ut=s(To,"CODE",{});var Xo=l(ut);Cr=a(Xo,"transformers.logging.INFO"),Xo.forEach(r),Sr=a(To," (int value, 20): reports error, warnings and basic information."),To.forEach(r),Fr=g(z),lt=s(z,"LI",{});var Lo=l(lt);pt=s(Lo,"CODE",{});var Zo=l(pt);Pr=a(Zo,"transformers.logging.DEBUG"),Zo.forEach(r),xr=a(Lo," (int value, 10): report all information."),Lo.forEach(r),z.forEach(r),kt=g(e),le=s(e,"H2",{class:!0});var rr=l(le);be=s(rr,"A",{id:!0,class:!0,href:!0});var es=l(be);_t=s(es,"SPAN",{});var ts=l(_t);_(Fe.$$.fragment,ts),ts.forEach(r),es.forEach(r),Br=g(rr),Et=s(rr,"SPAN",{});var rs=l(Et);Gr=a(rs,"Base setters"),rs.forEach(r),rr.forEach(r),Wt=g(e),ne=s(e,"DIV",{class:!0});var or=l(ne);_(Pe.$$.fragment,or),Vr=g(or),xe=s(or,"P",{});var sr=l(xe);Mr=a(sr,"Set the verbosity to the "),$t=s(sr,"CODE",{});var os=l($t);kr=a(os,"ERROR"),os.forEach(r),Wr=a(sr," level."),sr.forEach(r),or.forEach(r),Ht=g(e),ae=s(e,"DIV",{class:!0});var lr=l(ae);_(Be.$$.fragment,lr),Hr=g(lr),Ge=s(lr,"P",{});var nr=l(Ge);Ur=a(nr,"Set the verbosity to the "),bt=s(nr,"CODE",{});var ss=l(bt);Yr=a(ss,"WARNING"),ss.forEach(r),jr=a(nr," level."),nr.forEach(r),lr.forEach(r),Ut=g(e),ie=s(e,"DIV",{class:!0});var ar=l(ie);_(Ve.$$.fragment,ar),qr=g(ar),Me=s(ar,"P",{});var ir=l(Me);zr=a(ir,"Set the verbosity to the "),yt=s(ir,"CODE",{});var ls=l(yt);Jr=a(ls,"INFO"),ls.forEach(r),Kr=a(ir," level."),ir.forEach(r),ar.forEach(r),Yt=g(e),ge=s(e,"DIV",{class:!0});var gr=l(ge);_(ke.$$.fragment,gr),Qr=g(gr),We=s(gr,"P",{});var fr=l(We);Xr=a(fr,"Set the verbosity to the "),Rt=s(fr,"CODE",{});var ns=l(Rt);Zr=a(ns,"DEBUG"),ns.forEach(r),eo=a(fr," level."),fr.forEach(r),gr.forEach(r),jt=g(e),fe=s(e,"H2",{class:!0});var cr=l(fe);ye=s(cr,"A",{id:!0,class:!0,href:!0});var as=l(ye);It=s(as,"SPAN",{});var is=l(It);_(He.$$.fragment,is),is.forEach(r),as.forEach(r),to=g(cr),wt=s(cr,"SPAN",{});var gs=l(wt);ro=a(gs,"Other functions"),gs.forEach(r),cr.forEach(r),qt=g(e),V=s(e,"DIV",{class:!0});var at=l(V);_(Ue.$$.fragment,at),oo=g(at),At=s(at,"P",{});var fs=l(At);so=a(fs,"Return the current level for the \u{1F917} Transformers\u2019s root logger as an int."),fs.forEach(r),lo=g(at),_(Re.$$.fragment,at),at.forEach(r),zt=g(e),ce=s(e,"DIV",{class:!0});var mr=l(ce);_(Ye.$$.fragment,mr),no=g(mr),Ot=s(mr,"P",{});var cs=l(Ot);ao=a(cs,"Set the verbosity level for the \u{1F917} Transformers\u2019s root logger."),cs.forEach(r),mr.forEach(r),Jt=g(e),M=s(e,"DIV",{class:!0});var it=l(M);_(je.$$.fragment,it),io=g(it),Nt=s(it,"P",{});var ms=l(Nt);go=a(ms,"Return a logger with the specified name."),ms.forEach(r),fo=g(it),Dt=s(it,"P",{});var hs=l(Dt);co=a(hs,"This function is not supposed to be directly accessed unless you are writing a custom transformers module."),hs.forEach(r),it.forEach(r),Kt=g(e),me=s(e,"DIV",{class:!0});var hr=l(me);_(qe.$$.fragment,hr),mo=g(hr),Tt=s(hr,"P",{});var ds=l(Tt);ho=a(ds,"Enable the default handler of the HuggingFace Transformers\u2019s root logger."),ds.forEach(r),hr.forEach(r),Qt=g(e),he=s(e,"DIV",{class:!0});var dr=l(he);_(ze.$$.fragment,dr),vo=g(dr),Lt=s(dr,"P",{});var vs=l(Lt);uo=a(vs,"Disable the default handler of the HuggingFace Transformers\u2019s root logger."),vs.forEach(r),dr.forEach(r),Xt=g(e),I=s(e,"DIV",{class:!0});var J=l(I);_(Je.$$.fragment,J),po=g(J),Ct=s(J,"P",{});var us=l(Ct);_o=a(us,"Enable explicit formatting for every HuggingFace Transformers\u2019s logger. The explicit formatter is as follows:"),us.forEach(r),Eo=g(J),St=s(J,"P",{});var ps=l(St);$o=a(ps,"::"),ps.forEach(r),bo=g(J),Ft=s(J,"P",{});var _s=l(Ft);yo=a(_s,"[LEVELNAME|FILENAME|LINE NUMBER] TIME >> MESSAGE"),_s.forEach(r),Ro=g(J),Pt=s(J,"P",{});var Es=l(Pt);Io=a(Es,"All handlers currently bound to the root logger are affected by this method."),Es.forEach(r),J.forEach(r),Zt=g(e),k=s(e,"DIV",{class:!0});var gt=l(k);_(Ke.$$.fragment,gt),wo=g(gt),xt=s(gt,"P",{});var $s=l(xt);Ao=a($s,"Resets the formatting for HuggingFace Transformers\u2019s loggers."),$s.forEach(r),Oo=g(gt),Bt=s(gt,"P",{});var bs=l(Bt);No=a(bs,"All handlers currently bound to the root logger are affected by this method."),bs.forEach(r),gt.forEach(r),this.h()},h(){m(v,"name","hf:doc:metadata"),m(v,"content",JSON.stringify(Ts)),m(h,"id","logging"),m(h,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),m(h,"href","#logging"),m(u,"class","relative group"),m(tt,"href","/docs/transformers/v4.14.1/en/main_classes/logging#transformers.utils.logging.get_verbosity"),m(rt,"href","/docs/transformers/v4.14.1/en/main_classes/logging#transformers.utils.logging.set_verbosity"),m(be,"id","transformers.utils.logging.set_verbosity_error"),m(be,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),m(be,"href","#transformers.utils.logging.set_verbosity_error"),m(le,"class","relative group"),m(ne,"class","docstring"),m(ae,"class","docstring"),m(ie,"class","docstring"),m(ge,"class","docstring"),m(ye,"id","transformers.utils.logging.get_verbosity"),m(ye,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),m(ye,"href","#transformers.utils.logging.get_verbosity"),m(fe,"class","relative group"),m(V,"class","docstring"),m(ce,"class","docstring"),m(M,"class","docstring"),m(me,"class","docstring"),m(he,"class","docstring"),m(I,"class","docstring"),m(k,"class","docstring")},m(e,f){t(document.head,v),c(e,H,f),c(e,u,f),t(u,h),t(h,w),E(P,w,null),t(u,K),t(u,Q),t(Q,Ie),c(e,U,f),c(e,Y,f),t(Y,we),c(e,x,f),c(e,L,f),t(L,X),t(L,Z),t(Z,Ae),t(L,C),c(e,de,f),c(e,S,f),t(S,Oe),c(e,ve,f),E(T,e,f),c(e,ue,f),c(e,d,f),t(d,j),t(d,ee),t(ee,te),t(d,Ne),t(d,re),t(re,q),t(d,De),t(d,B),t(B,Te),t(d,R),t(d,F),t(F,A),t(d,oe),t(d,pe),t(pe,Xe),t(d,Le),t(d,_e),t(_e,se),t(d,Ze),c(e,Ce,f),E(G,e,f),c(e,Se,f),c(e,O,f),t(O,et),t(O,tt),t(tt,vr),t(O,ur),t(O,rt),t(rt,pr),t(O,_r),c(e,Mt,f),c(e,N,f),t(N,Ee),t(Ee,ct),t(ct,Er),t(Ee,$r),t(Ee,mt),t(mt,br),t(Ee,yr),t(N,Rr),t(N,ot),t(ot,ht),t(ht,Ir),t(ot,wr),t(N,Ar),t(N,$e),t($e,dt),t(dt,Or),t($e,Nr),t($e,vt),t(vt,Dr),t($e,Tr),t(N,Lr),t(N,st),t(st,ut),t(ut,Cr),t(st,Sr),t(N,Fr),t(N,lt),t(lt,pt),t(pt,Pr),t(lt,xr),c(e,kt,f),c(e,le,f),t(le,be),t(be,_t),E(Fe,_t,null),t(le,Br),t(le,Et),t(Et,Gr),c(e,Wt,f),c(e,ne,f),E(Pe,ne,null),t(ne,Vr),t(ne,xe),t(xe,Mr),t(xe,$t),t($t,kr),t(xe,Wr),c(e,Ht,f),c(e,ae,f),E(Be,ae,null),t(ae,Hr),t(ae,Ge),t(Ge,Ur),t(Ge,bt),t(bt,Yr),t(Ge,jr),c(e,Ut,f),c(e,ie,f),E(Ve,ie,null),t(ie,qr),t(ie,Me),t(Me,zr),t(Me,yt),t(yt,Jr),t(Me,Kr),c(e,Yt,f),c(e,ge,f),E(ke,ge,null),t(ge,Qr),t(ge,We),t(We,Xr),t(We,Rt),t(Rt,Zr),t(We,eo),c(e,jt,f),c(e,fe,f),t(fe,ye),t(ye,It),E(He,It,null),t(fe,to),t(fe,wt),t(wt,ro),c(e,qt,f),c(e,V,f),E(Ue,V,null),t(V,oo),t(V,At),t(At,so),t(V,lo),E(Re,V,null),c(e,zt,f),c(e,ce,f),E(Ye,ce,null),t(ce,no),t(ce,Ot),t(Ot,ao),c(e,Jt,f),c(e,M,f),E(je,M,null),t(M,io),t(M,Nt),t(Nt,go),t(M,fo),t(M,Dt),t(Dt,co),c(e,Kt,f),c(e,me,f),E(qe,me,null),t(me,mo),t(me,Tt),t(Tt,ho),c(e,Qt,f),c(e,he,f),E(ze,he,null),t(he,vo),t(he,Lt),t(Lt,uo),c(e,Xt,f),c(e,I,f),E(Je,I,null),t(I,po),t(I,Ct),t(Ct,_o),t(I,Eo),t(I,St),t(St,$o),t(I,bo),t(I,Ft),t(Ft,yo),t(I,Ro),t(I,Pt),t(Pt,Io),c(e,Zt,f),c(e,k,f),E(Ke,k,null),t(k,wo),t(k,xt),t(xt,Ao),t(k,Oo),t(k,Bt),t(Bt,No),er=!0},p(e,[f]){const Qe={};f&2&&(Qe.$$scope={dirty:f,ctx:e}),Re.$set(Qe)},i(e){er||($(P.$$.fragment,e),$(T.$$.fragment,e),$(G.$$.fragment,e),$(Fe.$$.fragment,e),$(Pe.$$.fragment,e),$(Be.$$.fragment,e),$(Ve.$$.fragment,e),$(ke.$$.fragment,e),$(He.$$.fragment,e),$(Ue.$$.fragment,e),$(Re.$$.fragment,e),$(Ye.$$.fragment,e),$(je.$$.fragment,e),$(qe.$$.fragment,e),$(ze.$$.fragment,e),$(Je.$$.fragment,e),$(Ke.$$.fragment,e),er=!0)},o(e){b(P.$$.fragment,e),b(T.$$.fragment,e),b(G.$$.fragment,e),b(Fe.$$.fragment,e),b(Pe.$$.fragment,e),b(Be.$$.fragment,e),b(Ve.$$.fragment,e),b(ke.$$.fragment,e),b(He.$$.fragment,e),b(Ue.$$.fragment,e),b(Re.$$.fragment,e),b(Ye.$$.fragment,e),b(je.$$.fragment,e),b(qe.$$.fragment,e),b(ze.$$.fragment,e),b(Je.$$.fragment,e),b(Ke.$$.fragment,e),er=!1},d(e){r(v),e&&r(H),e&&r(u),y(P),e&&r(U),e&&r(Y),e&&r(x),e&&r(L),e&&r(de),e&&r(S),e&&r(ve),y(T,e),e&&r(ue),e&&r(d),e&&r(Ce),y(G,e),e&&r(Se),e&&r(O),e&&r(Mt),e&&r(N),e&&r(kt),e&&r(le),y(Fe),e&&r(Wt),e&&r(ne),y(Pe),e&&r(Ht),e&&r(ae),y(Be),e&&r(Ut),e&&r(ie),y(Ve),e&&r(Yt),e&&r(ge),y(ke),e&&r(jt),e&&r(fe),y(He),e&&r(qt),e&&r(V),y(Ue),y(Re),e&&r(zt),e&&r(ce),y(Ye),e&&r(Jt),e&&r(M),y(je),e&&r(Kt),e&&r(me),y(qe),e&&r(Qt),e&&r(he),y(ze),e&&r(Xt),e&&r(I),y(Je),e&&r(Zt),e&&r(k),y(Ke)}}}const Ts={local:"logging",sections:[{local:"transformers.utils.logging.set_verbosity_error",title:"Base setters"},{local:"transformers.utils.logging.get_verbosity",title:"Other functions"}],title:"Logging"};function Ls(ft,v,H){let{fw:u}=v;return ft.$$set=h=>{"fw"in h&&H(0,u=h.fw)},[u]}class Gs extends Rs{constructor(v){super();Is(this,v,Ls,Ds,ws,{fw:0})}}export{Gs as default,Ts as metadata};
