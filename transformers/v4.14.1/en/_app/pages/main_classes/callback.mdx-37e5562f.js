import{S as xd,i as Fd,s as jd,e as s,k as c,w as p,t as r,L as Nd,c as o,d as t,m as f,a as l,x as g,h as n,b as i,J as e,g as m,y as v,q as u,o as _,B as b}from"../../chunks/vendor-b1433968.js";import{T as Wd}from"../../chunks/Tip-c3840994.js";import{D as $}from"../../chunks/Docstring-ff504c58.js";import{C as Dh}from"../../chunks/CodeBlock-a320dbd7.js";import{I as Tn}from"../../chunks/IconCopyLink-7029626d.js";import"../../chunks/CopyButton-f65cb278.js";function zd(mr){let C,Y,w,D,Z,I,Ke,ee;return{c(){C=s("p"),Y=r(`In all this class, one step is to be understood as one update step. When using gradient accumulation, one
update step may require several forward and backward passes: if you use `),w=s("code"),D=r("gradient_accumulation_steps=n"),Z=r(`,
then one update step requires going through `),I=s("em"),Ke=r("n"),ee=r(" batches.")},l(te){C=o(te,"P",{});var M=l(C);Y=n(M,`In all this class, one step is to be understood as one update step. When using gradient accumulation, one
update step may require several forward and backward passes: if you use `),w=o(M,"CODE",{});var q=l(w);D=n(q,"gradient_accumulation_steps=n"),q.forEach(t),Z=n(M,`,
then one update step requires going through `),I=o(M,"EM",{});var pa=l(I);Ke=n(pa,"n"),pa.forEach(t),ee=n(M," batches."),M.forEach(t)},m(te,M){m(te,C,M),e(C,Y),e(C,w),e(w,D),e(C,Z),e(C,I),e(I,Ke),e(C,ee)},d(te){te&&t(C)}}}function Bd(mr){let C,Y,w,D,Z,I,Ke,ee,te,M,q,pa,ga,Hs,Us,$n,F,Gs,va,Js,Ys,ua,Xs,Ks,_a,Qs,Zs,Cn,be,eo,ba,to,ao,wn,y,Ea,ka,ro,no,so,X,Ta,oo,lo,$a,io,co,Ca,fo,ho,mo,wa,ya,po,go,vo,Ee,Aa,uo,_o,Qe,bo,Eo,ko,ke,Da,To,$o,Ze,Co,wo,yo,Te,La,Ao,Do,et,Lo,So,Po,$e,Sa,Oo,Io,tt,Mo,xo,yn,A,Fo,Pa,jo,No,Oa,Wo,zo,Ia,Bo,Vo,Ma,qo,Ro,xa,Ho,Uo,An,ae,Ce,dr,at,Go,pr,Jo,Dn,we,Yo,Fa,Xo,Ko,Ln,R,rt,Qo,re,Zo,ja,el,tl,nt,al,rl,nl,j,st,sl,gr,ol,ll,L,il,ot,cl,vr,fl,hl,ml,lt,dl,ur,pl,gl,vl,it,ul,_r,_l,bl,El,br,kl,Tl,ct,$l,Er,Cl,wl,yl,Al,ft,Dl,ht,Ll,Sl,Sn,ne,mt,Pl,dt,Ol,Na,Il,Ml,Pn,se,pt,xl,gt,Fl,Wa,jl,Nl,On,oe,vt,Wl,ut,zl,za,Bl,Vl,In,H,_t,ql,bt,Rl,Ba,Hl,Ul,Gl,U,Jl,Va,Yl,Xl,kr,Kl,Ql,qa,Zl,ei,Mn,le,Et,ti,ie,ai,Ra,ri,ni,kt,si,oi,xn,G,Tt,li,ce,ii,Ha,ci,fi,$t,hi,mi,di,N,Ct,pi,wt,gi,Tr,vi,ui,_i,yt,bi,At,Ei,ki,Ti,k,$i,Dt,Ci,$r,wi,yi,Ai,Cr,Di,Li,wr,Si,Pi,Lt,Oi,yr,Ii,Mi,xi,Ar,Fi,ji,Dr,Ni,Wi,Lr,zi,Bi,Sr,Vi,qi,Pr,Ri,Hi,Or,Ui,Gi,St,Ji,Ir,Yi,Xi,Ki,Mr,Qi,Zi,Pt,ec,xr,tc,ac,rc,Fr,nc,sc,jr,oc,lc,Fn,J,Ot,ic,fe,cc,Ua,fc,hc,It,mc,dc,pc,W,Mt,gc,Nr,vc,uc,xt,_c,Ft,bc,Wr,Ec,kc,Tc,$c,x,Cc,zr,wc,yc,Br,Ac,Dc,Ga,Lc,Sc,Vr,Pc,Oc,jn,he,jt,Ic,me,Mc,Ja,xc,Fc,Nt,jc,Nc,Nn,de,ye,qr,Wt,Wc,Rr,zc,Wn,d,zt,Bc,Hr,Vc,qc,Bt,Rc,Ur,Hc,Uc,Gc,S,Jc,Gr,Yc,Xc,Jr,Kc,Qc,Yr,Zc,ef,Xr,tf,af,Kr,rf,nf,sf,Qr,of,lf,Vt,cf,Ae,qt,ff,Zr,hf,mf,De,Rt,df,en,pf,gf,Le,Ht,vf,tn,uf,_f,Se,Ut,bf,Gt,Ef,Ya,kf,Tf,$f,Pe,Jt,Cf,an,wf,yf,Oe,Yt,Af,rn,Df,Lf,Ie,Xt,Sf,nn,Pf,Of,Me,Kt,If,sn,Mf,xf,xe,Qt,Ff,on,jf,Nf,Fe,Zt,Wf,ln,zf,Bf,je,ea,Vf,cn,qf,Rf,Ne,ta,Hf,fn,Uf,zn,We,Gf,Xa,Jf,Yf,Bn,aa,Vn,ze,Xf,hn,Kf,Qf,qn,ra,Rn,pe,Be,mn,na,Zf,dn,eh,Hn,P,sa,th,ge,ah,Ka,rh,nh,Qa,sh,oh,lh,Ve,ih,qe,oa,ch,la,fh,pn,hh,mh,dh,Re,ia,ph,ca,gh,gn,vh,uh,Un,ve,He,vn,fa,_h,un,bh,Gn,ue,ha,Eh,_e,kh,Za,Th,$h,er,Ch,wh,Jn;return I=new Tn({}),at=new Tn({}),rt=new $({props:{name:"class transformers.integrations.CometCallback",anchor:"transformers.integrations.CometCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/integrations.py#L586"}}),st=new $({props:{name:"setup",anchor:"transformers.integrations.CometCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/integrations.py#L597"}}),mt=new $({props:{name:"class transformers.DefaultFlowCallback",anchor:"transformers.DefaultFlowCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L405"}}),pt=new $({props:{name:"class transformers.PrinterCallback",anchor:"transformers.PrinterCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L494"}}),vt=new $({props:{name:"class transformers.ProgressCallback",anchor:"transformers.ProgressCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L452"}}),_t=new $({props:{name:"class transformers.EarlyStoppingCallback",anchor:"transformers.EarlyStoppingCallback",parameters:[{name:"early_stopping_patience",val:": int = 1"},{name:"early_stopping_threshold",val:": typing.Optional[float] = 0.0"}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L505",parametersDescription:[{anchor:"transformers.EarlyStoppingCallback.early_stopping_patience",description:`<strong>early_stopping_patience</strong> (<code>int</code>) &#x2014;
Use with <code>metric_for_best_model</code> to stop training when the specified metric worsens for
<code>early_stopping_patience</code> evaluation calls.`,name:"early_stopping_patience"},{anchor:"transformers.EarlyStoppingCallback.early_stopping_threshold(float,",description:`<strong>early_stopping_threshold(<code>float</code>,</strong> <em>optional</em>) &#x2014;
Use with TrainingArguments <code>metric_for_best_model</code> and <code>early_stopping_patience</code> to denote how
much the specified metric must improve to satisfy early stopping conditions. \``,name:"early_stopping_threshold(float,"}]}}),Et=new $({props:{name:"class transformers.integrations.TensorBoardCallback",anchor:"transformers.integrations.TensorBoardCallback",parameters:[{name:"tb_writer",val:" = None"}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/integrations.py#L373",parametersDescription:[{anchor:"transformers.integrations.TensorBoardCallback.tb_writer",description:`<strong>tb_writer</strong> (<code>SummaryWriter</code>, <em>optional</em>) &#x2014;
The writer to use. Will instantiate one if not set.`,name:"tb_writer"}]}}),Tt=new $({props:{name:"class transformers.integrations.WandbCallback",anchor:"transformers.integrations.WandbCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/integrations.py#L462"}}),Ct=new $({props:{name:"setup",anchor:"transformers.integrations.WandbCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/integrations.py#L479"}}),Ot=new $({props:{name:"class transformers.integrations.MLflowCallback",anchor:"transformers.integrations.MLflowCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/integrations.py#L686"}}),Mt=new $({props:{name:"setup",anchor:"transformers.integrations.MLflowCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/integrations.py#L703"}}),jt=new $({props:{name:"class transformers.integrations.AzureMLCallback",anchor:"transformers.integrations.AzureMLCallback",parameters:[{name:"azureml_run",val:" = None"}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/integrations.py#L662"}}),Wt=new Tn({}),zt=new $({props:{name:"class transformers.TrainerCallback",anchor:"transformers.TrainerCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L158",parametersDescription:[{anchor:"transformers.TrainerCallback.args",description:`<strong>args</strong> (<a href="/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a>) &#x2014;
The training arguments used to instantiate the <a href="/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"args"},{anchor:"transformers.TrainerCallback.state",description:`<strong>state</strong> (<a href="/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerState">TrainerState</a>) &#x2014;
The current state of the <a href="/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"state"},{anchor:"transformers.TrainerCallback.control",description:`<strong>control</strong> (<a href="/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerControl">TrainerControl</a>) &#x2014;
The object that is returned to the <a href="/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.Trainer">Trainer</a> and can be used to make some decisions.`,name:"control"},{anchor:"transformers.TrainerCallback.model",description:`<strong>model</strong> (<a href="/docs/transformers/v4.14.1/en/main_classes/model#transformers.PreTrainedModel">PreTrainedModel</a> or <code>torch.nn.Module</code>) &#x2014;
The model being trained.`,name:"model"},{anchor:"transformers.TrainerCallback.tokenizer",description:`<strong>tokenizer</strong> (<a href="/docs/transformers/v4.14.1/en/main_classes/tokenizer#transformers.PreTrainedTokenizer">PreTrainedTokenizer</a>) &#x2014;
The tokenizer used for encoding the data.`,name:"tokenizer"},{anchor:"transformers.TrainerCallback.optimizer",description:`<strong>optimizer</strong> (<code>torch.optim.Optimizer</code>) &#x2014;
The optimizer used for the training steps.`,name:"optimizer"},{anchor:"transformers.TrainerCallback.lr_scheduler",description:`<strong>lr_scheduler</strong> (<code>torch.optim.lr_scheduler.LambdaLR</code>) &#x2014;
The scheduler used for setting the learning rate.`,name:"lr_scheduler"},{anchor:"transformers.TrainerCallback.train_dataloader",description:`<strong>train_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"train_dataloader"},{anchor:"transformers.TrainerCallback.eval_dataloader",description:`<strong>eval_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"eval_dataloader"},{anchor:"transformers.TrainerCallback.metrics",description:`<strong>metrics</strong> (<code>Dict[str, float]</code>) &#x2014;
The metrics computed by the last evaluation phase.</p>
<p>Those are only accessible in the event <code>on_evaluate</code>.`,name:"metrics"},{anchor:"transformers.TrainerCallback.logs",description:`<strong>logs</strong>  (<code>Dict[str, float]</code>) &#x2014;
The values to log.</p>
<p>Those are only accessible in the event <code>on_log</code>.`,name:"logs"}]}}),Vt=new Dh({props:{code:`class PrinterCallback(TrainerCallback):

def on_log(self, args, state, control, logs=None, **kwargs):
_ = logs.pop("total_flos", None)
if state.is_local_process_zero:
print(logs),`,highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">PrinterCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):

<span class="hljs-keyword">def</span> <span class="hljs-title function_">on_log</span>(<span class="hljs-params">self, args, state, control, logs=<span class="hljs-literal">None</span>, **kwargs</span>):
_ = logs.pop(<span class="hljs-string">&quot;total_flos&quot;</span>, <span class="hljs-literal">None</span>)
<span class="hljs-keyword">if</span> state.is_local_process_zero:
<span class="hljs-built_in">print</span>(logs)`}}),qt=new $({props:{name:"on_epoch_begin",anchor:"transformers.TrainerCallback.on_epoch_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L226"}}),Rt=new $({props:{name:"on_epoch_end",anchor:"transformers.TrainerCallback.on_epoch_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L232"}}),Ht=new $({props:{name:"on_evaluate",anchor:"transformers.TrainerCallback.on_evaluate",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L258"}}),Ut=new $({props:{name:"on_init_end",anchor:"transformers.TrainerCallback.on_init_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L208"}}),Jt=new $({props:{name:"on_log",anchor:"transformers.TrainerCallback.on_log",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L270"}}),Yt=new $({props:{name:"on_prediction_step",anchor:"transformers.TrainerCallback.on_prediction_step",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L276"}}),Xt=new $({props:{name:"on_save",anchor:"transformers.TrainerCallback.on_save",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L264"}}),Kt=new $({props:{name:"on_step_begin",anchor:"transformers.TrainerCallback.on_step_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L238"}}),Qt=new $({props:{name:"on_step_end",anchor:"transformers.TrainerCallback.on_step_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L251"}}),Zt=new $({props:{name:"on_substep_end",anchor:"transformers.TrainerCallback.on_substep_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L245"}}),ea=new $({props:{name:"on_train_begin",anchor:"transformers.TrainerCallback.on_train_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L214"}}),ta=new $({props:{name:"on_train_end",anchor:"transformers.TrainerCallback.on_train_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L220"}}),aa=new Dh({props:{code:`class MyCallback(TrainerCallback):
    "A callback that prints a message at the beginning of training"

    def on_train_begin(self, args, state, control, **kwargs):
        print("Starting training")

trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback]  # We can either pass the callback class this way or an instance of it (MyCallback())
),`,highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">MyCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-string">&quot;A callback that prints a message at the beginning of training&quot;</span>

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_train_begin</span>(<span class="hljs-params">self, args, state, control, **kwargs</span>):
        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Starting training&quot;</span>)

trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback]  <span class="hljs-comment"># We can either pass the callback class this way or an instance of it (MyCallback())</span>
)`}}),ra=new Dh({props:{code:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
# Alternatively, we can pass an instance of the callback class
trainer.add_callback(MyCallback()),`,highlighted:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
<span class="hljs-comment"># Alternatively, we can pass an instance of the callback class</span>
trainer.add_callback(MyCallback())`}}),na=new Tn({}),sa=new $({props:{name:"class transformers.TrainerState",anchor:"transformers.TrainerState",parameters:[{name:"epoch",val:": typing.Optional[float] = None"},{name:"global_step",val:": int = 0"},{name:"max_steps",val:": int = 0"},{name:"num_train_epochs",val:": int = 0"},{name:"total_flos",val:": float = 0"},{name:"log_history",val:": typing.List[typing.Dict[str, float]] = None"},{name:"best_metric",val:": typing.Optional[float] = None"},{name:"best_model_checkpoint",val:": typing.Optional[str] = None"},{name:"is_local_process_zero",val:": bool = True"},{name:"is_world_process_zero",val:": bool = True"},{name:"is_hyper_param_search",val:": bool = False"},{name:"trial_name",val:": str = None"},{name:"trial_params",val:": typing.Dict[str, typing.Union[str, float, int, bool]] = None"}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L36",parametersDescription:[{anchor:"transformers.TrainerState.epoch",description:`<strong>epoch</strong> (<code>float</code>, <em>optional</em>) &#x2014;
Only set during training, will represent the epoch the training is at (the decimal part being the
percentage of the current epoch completed).`,name:"epoch"},{anchor:"transformers.TrainerState.global_step",description:`<strong>global_step</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
During training, represents the number of update steps completed.`,name:"global_step"},{anchor:"transformers.TrainerState.max_steps",description:`<strong>max_steps</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
The number of update steps to do during the current training.`,name:"max_steps"},{anchor:"transformers.TrainerState.total_flos",description:`<strong>total_flos</strong> (<code>float</code>, <em>optional</em>, defaults to 0) &#x2014;
The total number of floating operations done by the model since the beginning of training (stored as floats
to avoid overflow).`,name:"total_flos"},{anchor:"transformers.TrainerState.log_history",description:`<strong>log_history</strong> (<code>List[Dict[str, float]]</code>, <em>optional</em>) &#x2014;
The list of logs done since the beginning of training.`,name:"log_history"},{anchor:"transformers.TrainerState.best_metric",description:`<strong>best_metric</strong> (<code>float</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the best metric encountered so far.`,name:"best_metric"},{anchor:"transformers.TrainerState.best_model_checkpoint",description:`<strong>best_model_checkpoint</strong> (<code>str</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the name of the checkpoint for the best model encountered so
far.`,name:"best_model_checkpoint"},{anchor:"transformers.TrainerState.is_local_process_zero",description:`<strong>is_local_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the local (e.g., on one machine if training in a distributed fashion on
several machines) main process.`,name:"is_local_process_zero"},{anchor:"transformers.TrainerState.is_world_process_zero",description:`<strong>is_world_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the global main process (when training in a distributed fashion on several
machines, this is only going to be <code>True</code> for one process).`,name:"is_world_process_zero"},{anchor:"transformers.TrainerState.is_hyper_param_search",description:`<strong>is_hyper_param_search</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether we are in the process of a hyper parameter search using Trainer.hyperparameter_search. This will
impact the way data will be logged in TensorBoard.`,name:"is_hyper_param_search"}]}}),Ve=new Wd({props:{$$slots:{default:[zd]},$$scope:{ctx:mr}}}),oa=new $({props:{name:"load_from_json",anchor:"transformers.TrainerState.load_from_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L100"}}),ia=new $({props:{name:"save_to_json",anchor:"transformers.TrainerState.save_to_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L94"}}),fa=new Tn({}),ha=new $({props:{name:"class transformers.TrainerControl",anchor:"transformers.TrainerControl",parameters:[{name:"should_training_stop",val:": bool = False"},{name:"should_epoch_stop",val:": bool = False"},{name:"should_save",val:": bool = False"},{name:"should_evaluate",val:": bool = False"},{name:"should_log",val:": bool = False"}],source:"https://github.com/huggingface/transformers/blob/v4.14.1/src/transformers/trainer_callback.py#L109",parametersDescription:[{anchor:"transformers.TrainerControl.should_training_stop",description:`<strong>should_training_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the training should be interrupted.</p>
<p>If <code>True</code>, this variable will not be set back to <code>False</code>. The training will just stop.`,name:"should_training_stop"},{anchor:"transformers.TrainerControl.should_epoch_stop",description:`<strong>should_epoch_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the current epoch should be interrupted.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next epoch.`,name:"should_epoch_stop"},{anchor:"transformers.TrainerControl.should_save",description:`<strong>should_save</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be saved at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_save"},{anchor:"transformers.TrainerControl.should_evaluate",description:`<strong>should_evaluate</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be evaluated at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_evaluate"},{anchor:"transformers.TrainerControl.should_log",description:`<strong>should_log</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the logs should be reported at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_log"}]}}),{c(){C=s("meta"),Y=c(),w=s("h1"),D=s("a"),Z=s("span"),p(I.$$.fragment),Ke=c(),ee=s("span"),te=r("Callbacks"),M=c(),q=s("p"),pa=r(`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
`),ga=s("a"),Hs=r("Trainer"),Us=r(` (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms\u2026) and take decisions (like early
stopping).`),$n=c(),F=s("p"),Gs=r("Callbacks are \u201Cread only\u201D pieces of code, apart from the "),va=s("a"),Js=r("TrainerControl"),Ys=r(` object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass `),ua=s("a"),Xs=r("Trainer"),Ks=r(" and override the methods you need (see "),_a=s("a"),Qs=r("trainer"),Zs=r(" for examples)."),Cn=c(),be=s("p"),eo=r("By default a "),ba=s("a"),to=r("Trainer"),ao=r(" will use the following callbacks:"),wn=c(),y=s("ul"),Ea=s("li"),ka=s("a"),ro=r("DefaultFlowCallback"),no=r(" which handles the default behavior for logging, saving and evaluation."),so=c(),X=s("li"),Ta=s("a"),oo=r("PrinterCallback"),lo=r(" or "),$a=s("a"),io=r("ProgressCallback"),co=r(` to display progress and print the
logs (the first one is used if you deactivate tqdm through the `),Ca=s("a"),fo=r("TrainingArguments"),ho=r(`, otherwise
it\u2019s the second one).`),mo=c(),wa=s("li"),ya=s("a"),po=r("TensorBoardCallback"),go=r(` if tensorboard is accessible (either through PyTorch >= 1.4
or tensorboardX).`),vo=c(),Ee=s("li"),Aa=s("a"),uo=r("WandbCallback"),_o=r(" if "),Qe=s("a"),bo=r("wandb"),Eo=r(" is installed."),ko=c(),ke=s("li"),Da=s("a"),To=r("CometCallback"),$o=r(" if "),Ze=s("a"),Co=r("comet_ml"),wo=r(" is installed."),yo=c(),Te=s("li"),La=s("a"),Ao=r("MLflowCallback"),Do=r(" if "),et=s("a"),Lo=r("mlflow"),So=r(" is installed."),Po=c(),$e=s("li"),Sa=s("a"),Oo=r("AzureMLCallback"),Io=r(" if "),tt=s("a"),Mo=r("azureml-sdk"),xo=r(` is
installed.`),yn=c(),A=s("p"),Fo=r("The main class that implements callbacks is "),Pa=s("a"),jo=r("TrainerCallback"),No=r(`. It gets the
`),Oa=s("a"),Wo=r("TrainingArguments"),zo=r(" used to instantiate the "),Ia=s("a"),Bo=r("Trainer"),Vo=r(`, can access that
Trainer\u2019s internal state via `),Ma=s("a"),qo=r("TrainerState"),Ro=r(`, and can take some actions on the training loop via
`),xa=s("a"),Ho=r("TrainerControl"),Uo=r("."),An=c(),ae=s("h2"),Ce=s("a"),dr=s("span"),p(at.$$.fragment),Go=c(),pr=s("span"),Jo=r("Available Callbacks"),Dn=c(),we=s("p"),Yo=r("Here is the list of the available "),Fa=s("a"),Xo=r("TrainerCallback"),Ko=r(" in the library:"),Ln=c(),R=s("div"),p(rt.$$.fragment),Qo=c(),re=s("p"),Zo=r("A "),ja=s("a"),el=r("TrainerCallback"),tl=r(" that sends the logs to "),nt=s("a"),al=r("Comet ML"),rl=r("."),nl=c(),j=s("div"),p(st.$$.fragment),sl=c(),gr=s("p"),ol=r("Setup the optional Comet.ml integration."),ll=c(),L=s("p"),il=r(`Environment:
COMET`),ot=s("em"),cl=r("MODE ("),vr=s("code"),fl=r("str"),hl=r(", _optional"),ml=r(`):
Whether to create an online, offline experiment or disable Comet logging. Can be \u201COFFLINE\u201D, \u201CONLINE\u201D,
or \u201CDISABLED\u201D. Defaults to \u201CONLINE\u201D.
COMET`),lt=s("em"),dl=r("PROJECT_NAME ("),ur=s("code"),pl=r("str"),gl=r(", _optional"),vl=r(`):
Comet project name for experiments
COMET`),it=s("em"),ul=r("OFFLINE_DIRECTORY ("),_r=s("code"),_l=r("str"),bl=r(", _optional"),El=r(`):
Folder to use for saving offline experiments when `),br=s("code"),kl=r("COMET_MODE"),Tl=r(` is \u201COFFLINE\u201D
COMET`),ct=s("em"),$l=r("LOG_ASSETS ("),Er=s("code"),Cl=r("str"),wl=r(", _optional"),yl=r(`):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be \u201CTRUE\u201D, or
\u201CFALSE\u201D. Defaults to \u201CTRUE\u201D.`),Al=c(),ft=s("p"),Dl=r("For a number of configurable items in the environment, see "),ht=s("a"),Ll=r("here"),Sl=r("."),Sn=c(),ne=s("div"),p(mt.$$.fragment),Pl=c(),dt=s("p"),Ol=r("A "),Na=s("a"),Il=r("TrainerCallback"),Ml=r(` that handles the default flow of the training loop for logs, evaluation
and checkpoints.`),Pn=c(),se=s("div"),p(pt.$$.fragment),xl=c(),gt=s("p"),Fl=r("A bare "),Wa=s("a"),jl=r("TrainerCallback"),Nl=r(" that just prints the logs."),On=c(),oe=s("div"),p(vt.$$.fragment),Wl=c(),ut=s("p"),zl=r("A "),za=s("a"),Bl=r("TrainerCallback"),Vl=r(" that displays the progress of training or evaluation."),In=c(),H=s("div"),p(_t.$$.fragment),ql=c(),bt=s("p"),Rl=r("A "),Ba=s("a"),Hl=r("TrainerCallback"),Ul=r(" that handles early stopping."),Gl=c(),U=s("p"),Jl=r("This callback depends on "),Va=s("a"),Yl=r("TrainingArguments"),Xl=r(" argument "),kr=s("em"),Kl=r("load_best_model_at_end"),Ql=r(` functionality
to set best_metric in `),qa=s("a"),Zl=r("TrainerState"),ei=r("."),Mn=c(),le=s("div"),p(Et.$$.fragment),ti=c(),ie=s("p"),ai=r("A "),Ra=s("a"),ri=r("TrainerCallback"),ni=r(" that sends the logs to "),kt=s("a"),si=r("TensorBoard"),oi=r("."),xn=c(),G=s("div"),p(Tt.$$.fragment),li=c(),ce=s("p"),ii=r("A "),Ha=s("a"),ci=r("TrainerCallback"),fi=r(" that sends the logs to "),$t=s("a"),hi=r("Weight and Biases"),mi=r("."),di=c(),N=s("div"),p(Ct.$$.fragment),pi=c(),wt=s("p"),gi=r("Setup the optional Weights & Biases ("),Tr=s("em"),vi=r("wandb"),ui=r(") integration."),_i=c(),yt=s("p"),bi=r("One can subclass and override this method to customize the setup if needed. Find more information "),At=s("a"),Ei=r("here"),ki=r(". You can also override the following environment variables:"),Ti=c(),k=s("p"),$i=r(`Environment:
WANDB`),Dt=s("em"),Ci=r("LOG_MODEL ("),$r=s("code"),wi=r("bool"),yi=r(", _optional"),Ai=r(", defaults to "),Cr=s("code"),Di=r("False"),Li=r(`):
Whether or not to log model as artifact at the end of training. Use along with
`),wr=s("em"),Si=r("TrainingArguments.load_best_model_at_end"),Pi=r(` to upload best model.
WANDB`),Lt=s("em"),Oi=r("WATCH ("),yr=s("code"),Ii=r("str"),Mi=r(", _optional"),xi=r(" defaults to "),Ar=s("code"),Fi=r('"gradients"'),ji=r(`):
Can be `),Dr=s("code"),Ni=r('"gradients"'),Wi=r(", "),Lr=s("code"),zi=r('"all"'),Bi=r(" or "),Sr=s("code"),Vi=r('"false"'),qi=r(". Set to "),Pr=s("code"),Ri=r('"false"'),Hi=r(` to disable gradient
logging or `),Or=s("code"),Ui=r('"all"'),Gi=r(` to log gradients and parameters.
WANDB`),St=s("em"),Ji=r("PROJECT ("),Ir=s("code"),Yi=r("str"),Xi=r(", _optional"),Ki=r(", defaults to "),Mr=s("code"),Qi=r('"huggingface"'),Zi=r(`):
Set this to a custom string to store results in a different project.
WANDB`),Pt=s("em"),ec=r("DISABLED ("),xr=s("code"),tc=r("bool"),ac=r(", _optional"),rc=r(", defaults to "),Fr=s("code"),nc=r("False"),sc=r(`):
Whether or not to disable wandb entirely. Set `),jr=s("em"),oc=r("WANDB_DISABLED=true"),lc=r(" to disable."),Fn=c(),J=s("div"),p(Ot.$$.fragment),ic=c(),fe=s("p"),cc=r("A "),Ua=s("a"),fc=r("TrainerCallback"),hc=r(" that sends the logs to "),It=s("a"),mc=r("MLflow"),dc=r("."),pc=c(),W=s("div"),p(Mt.$$.fragment),gc=c(),Nr=s("p"),vc=r("Setup the optional MLflow integration."),uc=c(),xt=s("p"),_c=r(`Environment:
HF`),Ft=s("em"),bc=r("MLFLOW_LOG_ARTIFACTS ("),Wr=s("code"),Ec=r("str"),kc=r(", _optional"),Tc=r(`):
Whether to use MLflow .log_artifact() facility to log artifacts.`),$c=c(),x=s("p"),Cc=r("This only makes sense if logging to a remote server, e.g. s3 or GCS. If set to "),zr=s("em"),wc=r("True"),yc=r(" or "),Br=s("em"),Ac=r("1"),Dc=r(`, will copy
whatever is in `),Ga=s("a"),Lc=r("TrainingArguments"),Sc=r("\u2019s "),Vr=s("code"),Pc=r("output_dir"),Oc=r(` to the local or remote
artifact storage. Using it without a remote storage will just copy the files to your artifact location.`),jn=c(),he=s("div"),p(jt.$$.fragment),Ic=c(),me=s("p"),Mc=r("A "),Ja=s("a"),xc=r("TrainerCallback"),Fc=r(" that sends the logs to "),Nt=s("a"),jc=r("AzureML"),Nc=r("."),Nn=c(),de=s("h2"),ye=s("a"),qr=s("span"),p(Wt.$$.fragment),Wc=c(),Rr=s("span"),zc=r("TrainerCallback"),Wn=c(),d=s("div"),p(zt.$$.fragment),Bc=c(),Hr=s("p"),Vc=r(`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`),qc=c(),Bt=s("p"),Rc=r("The "),Ur=s("code"),Hc=r("control"),Uc=r(` object is the only one that can be changed by the callback, in which case the event that changes
it should return the modified version.`),Gc=c(),S=s("p"),Jc=r("The argument "),Gr=s("code"),Yc=r("args"),Xc=r(", "),Jr=s("code"),Kc=r("state"),Qc=r(" and "),Yr=s("code"),Zc=r("control"),ef=r(` are positionals for all events, all the others are
grouped in `),Xr=s("code"),tf=r("kwargs"),af=r(`. You can unpack the ones you need in the signature of the event using them. As an example,
see the code of the simple `),Kr=s("code"),rf=r("PrinterCallback"),nf=r("."),sf=c(),Qr=s("p"),of=r("Example:"),lf=c(),p(Vt.$$.fragment),cf=c(),Ae=s("div"),p(qt.$$.fragment),ff=c(),Zr=s("p"),hf=r("Event called at the beginning of an epoch."),mf=c(),De=s("div"),p(Rt.$$.fragment),df=c(),en=s("p"),pf=r("Event called at the end of an epoch."),gf=c(),Le=s("div"),p(Ht.$$.fragment),vf=c(),tn=s("p"),uf=r("Event called after an evaluation phase."),_f=c(),Se=s("div"),p(Ut.$$.fragment),bf=c(),Gt=s("p"),Ef=r("Event called at the end of the initialization of the "),Ya=s("a"),kf=r("Trainer"),Tf=r("."),$f=c(),Pe=s("div"),p(Jt.$$.fragment),Cf=c(),an=s("p"),wf=r("Event called after logging the last logs."),yf=c(),Oe=s("div"),p(Yt.$$.fragment),Af=c(),rn=s("p"),Df=r("Event called after a prediction step."),Lf=c(),Ie=s("div"),p(Xt.$$.fragment),Sf=c(),nn=s("p"),Pf=r("Event called after a checkpoint save."),Of=c(),Me=s("div"),p(Kt.$$.fragment),If=c(),sn=s("p"),Mf=r(`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`),xf=c(),xe=s("div"),p(Qt.$$.fragment),Ff=c(),on=s("p"),jf=r(`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`),Nf=c(),Fe=s("div"),p(Zt.$$.fragment),Wf=c(),ln=s("p"),zf=r("Event called at the end of an substep during gradient accumulation."),Bf=c(),je=s("div"),p(ea.$$.fragment),Vf=c(),cn=s("p"),qf=r("Event called at the beginning of training."),Rf=c(),Ne=s("div"),p(ta.$$.fragment),Hf=c(),fn=s("p"),Uf=r("Event called at the end of training."),zn=c(),We=s("p"),Gf=r("Here is an example of how to register a custom callback with the PyTorch "),Xa=s("a"),Jf=r("Trainer"),Yf=r(":"),Bn=c(),p(aa.$$.fragment),Vn=c(),ze=s("p"),Xf=r("Another way to register a callback is to call "),hn=s("code"),Kf=r("trainer.add_callback()"),Qf=r(" as follows:"),qn=c(),p(ra.$$.fragment),Rn=c(),pe=s("h2"),Be=s("a"),mn=s("span"),p(na.$$.fragment),Zf=c(),dn=s("span"),eh=r("TrainerState"),Hn=c(),P=s("div"),p(sa.$$.fragment),th=c(),ge=s("p"),ah=r("A class containing the "),Ka=s("a"),rh=r("Trainer"),nh=r(` inner state that will be saved along the model and optimizer
when checkpointing and passed to the `),Qa=s("a"),sh=r("TrainerCallback"),oh=r("."),lh=c(),p(Ve.$$.fragment),ih=c(),qe=s("div"),p(oa.$$.fragment),ch=c(),la=s("p"),fh=r("Create an instance from the content of "),pn=s("code"),hh=r("json_path"),mh=r("."),dh=c(),Re=s("div"),p(ia.$$.fragment),ph=c(),ca=s("p"),gh=r("Save the content of this instance in JSON format inside "),gn=s("code"),vh=r("json_path"),uh=r("."),Un=c(),ve=s("h2"),He=s("a"),vn=s("span"),p(fa.$$.fragment),_h=c(),un=s("span"),bh=r("TrainerControl"),Gn=c(),ue=s("div"),p(ha.$$.fragment),Eh=c(),_e=s("p"),kh=r("A class that handles the "),Za=s("a"),Th=r("Trainer"),$h=r(` control flow. This class is used by the
`),er=s("a"),Ch=r("TrainerCallback"),wh=r(" to activate some switches in the training loop."),this.h()},l(a){const h=Nd('[data-svelte="svelte-1phssyn"]',document.head);C=o(h,"META",{name:!0,content:!0}),h.forEach(t),Y=f(a),w=o(a,"H1",{class:!0});var ma=l(w);D=o(ma,"A",{id:!0,class:!0,href:!0});var Lh=l(D);Z=o(Lh,"SPAN",{});var Sh=l(Z);g(I.$$.fragment,Sh),Sh.forEach(t),Lh.forEach(t),Ke=f(ma),ee=o(ma,"SPAN",{});var Ph=l(ee);te=n(Ph,"Callbacks"),Ph.forEach(t),ma.forEach(t),M=f(a),q=o(a,"P",{});var Yn=l(q);pa=n(Yn,`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
`),ga=o(Yn,"A",{href:!0});var Oh=l(ga);Hs=n(Oh,"Trainer"),Oh.forEach(t),Us=n(Yn,` (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms\u2026) and take decisions (like early
stopping).`),Yn.forEach(t),$n=f(a),F=o(a,"P",{});var Ue=l(F);Gs=n(Ue,"Callbacks are \u201Cread only\u201D pieces of code, apart from the "),va=o(Ue,"A",{href:!0});var Ih=l(va);Js=n(Ih,"TrainerControl"),Ih.forEach(t),Ys=n(Ue,` object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass `),ua=o(Ue,"A",{href:!0});var Mh=l(ua);Xs=n(Mh,"Trainer"),Mh.forEach(t),Ks=n(Ue," and override the methods you need (see "),_a=o(Ue,"A",{href:!0});var xh=l(_a);Qs=n(xh,"trainer"),xh.forEach(t),Zs=n(Ue," for examples)."),Ue.forEach(t),Cn=f(a),be=o(a,"P",{});var Xn=l(be);eo=n(Xn,"By default a "),ba=o(Xn,"A",{href:!0});var Fh=l(ba);to=n(Fh,"Trainer"),Fh.forEach(t),ao=n(Xn," will use the following callbacks:"),Xn.forEach(t),wn=f(a),y=o(a,"UL",{});var O=l(y);Ea=o(O,"LI",{});var yh=l(Ea);ka=o(yh,"A",{href:!0});var jh=l(ka);ro=n(jh,"DefaultFlowCallback"),jh.forEach(t),no=n(yh," which handles the default behavior for logging, saving and evaluation."),yh.forEach(t),so=f(O),X=o(O,"LI",{});var da=l(X);Ta=o(da,"A",{href:!0});var Nh=l(Ta);oo=n(Nh,"PrinterCallback"),Nh.forEach(t),lo=n(da," or "),$a=o(da,"A",{href:!0});var Wh=l($a);io=n(Wh,"ProgressCallback"),Wh.forEach(t),co=n(da,` to display progress and print the
logs (the first one is used if you deactivate tqdm through the `),Ca=o(da,"A",{href:!0});var zh=l(Ca);fo=n(zh,"TrainingArguments"),zh.forEach(t),ho=n(da,`, otherwise
it\u2019s the second one).`),da.forEach(t),mo=f(O),wa=o(O,"LI",{});var Ah=l(wa);ya=o(Ah,"A",{href:!0});var Bh=l(ya);po=n(Bh,"TensorBoardCallback"),Bh.forEach(t),go=n(Ah,` if tensorboard is accessible (either through PyTorch >= 1.4
or tensorboardX).`),Ah.forEach(t),vo=f(O),Ee=o(O,"LI",{});var _n=l(Ee);Aa=o(_n,"A",{href:!0});var Vh=l(Aa);uo=n(Vh,"WandbCallback"),Vh.forEach(t),_o=n(_n," if "),Qe=o(_n,"A",{href:!0,rel:!0});var qh=l(Qe);bo=n(qh,"wandb"),qh.forEach(t),Eo=n(_n," is installed."),_n.forEach(t),ko=f(O),ke=o(O,"LI",{});var bn=l(ke);Da=o(bn,"A",{href:!0});var Rh=l(Da);To=n(Rh,"CometCallback"),Rh.forEach(t),$o=n(bn," if "),Ze=o(bn,"A",{href:!0,rel:!0});var Hh=l(Ze);Co=n(Hh,"comet_ml"),Hh.forEach(t),wo=n(bn," is installed."),bn.forEach(t),yo=f(O),Te=o(O,"LI",{});var En=l(Te);La=o(En,"A",{href:!0});var Uh=l(La);Ao=n(Uh,"MLflowCallback"),Uh.forEach(t),Do=n(En," if "),et=o(En,"A",{href:!0,rel:!0});var Gh=l(et);Lo=n(Gh,"mlflow"),Gh.forEach(t),So=n(En," is installed."),En.forEach(t),Po=f(O),$e=o(O,"LI",{});var kn=l($e);Sa=o(kn,"A",{href:!0});var Jh=l(Sa);Oo=n(Jh,"AzureMLCallback"),Jh.forEach(t),Io=n(kn," if "),tt=o(kn,"A",{href:!0,rel:!0});var Yh=l(tt);Mo=n(Yh,"azureml-sdk"),Yh.forEach(t),xo=n(kn,` is
installed.`),kn.forEach(t),O.forEach(t),yn=f(a),A=o(a,"P",{});var z=l(A);Fo=n(z,"The main class that implements callbacks is "),Pa=o(z,"A",{href:!0});var Xh=l(Pa);jo=n(Xh,"TrainerCallback"),Xh.forEach(t),No=n(z,`. It gets the
`),Oa=o(z,"A",{href:!0});var Kh=l(Oa);Wo=n(Kh,"TrainingArguments"),Kh.forEach(t),zo=n(z," used to instantiate the "),Ia=o(z,"A",{href:!0});var Qh=l(Ia);Bo=n(Qh,"Trainer"),Qh.forEach(t),Vo=n(z,`, can access that
Trainer\u2019s internal state via `),Ma=o(z,"A",{href:!0});var Zh=l(Ma);qo=n(Zh,"TrainerState"),Zh.forEach(t),Ro=n(z,`, and can take some actions on the training loop via
`),xa=o(z,"A",{href:!0});var em=l(xa);Ho=n(em,"TrainerControl"),em.forEach(t),Uo=n(z,"."),z.forEach(t),An=f(a),ae=o(a,"H2",{class:!0});var Kn=l(ae);Ce=o(Kn,"A",{id:!0,class:!0,href:!0});var tm=l(Ce);dr=o(tm,"SPAN",{});var am=l(dr);g(at.$$.fragment,am),am.forEach(t),tm.forEach(t),Go=f(Kn),pr=o(Kn,"SPAN",{});var rm=l(pr);Jo=n(rm,"Available Callbacks"),rm.forEach(t),Kn.forEach(t),Dn=f(a),we=o(a,"P",{});var Qn=l(we);Yo=n(Qn,"Here is the list of the available "),Fa=o(Qn,"A",{href:!0});var nm=l(Fa);Xo=n(nm,"TrainerCallback"),nm.forEach(t),Ko=n(Qn," in the library:"),Qn.forEach(t),Ln=f(a),R=o(a,"DIV",{class:!0});var tr=l(R);g(rt.$$.fragment,tr),Qo=f(tr),re=o(tr,"P",{});var ar=l(re);Zo=n(ar,"A "),ja=o(ar,"A",{href:!0});var sm=l(ja);el=n(sm,"TrainerCallback"),sm.forEach(t),tl=n(ar," that sends the logs to "),nt=o(ar,"A",{href:!0,rel:!0});var om=l(nt);al=n(om,"Comet ML"),om.forEach(t),rl=n(ar,"."),ar.forEach(t),nl=f(tr),j=o(tr,"DIV",{class:!0});var Ge=l(j);g(st.$$.fragment,Ge),sl=f(Ge),gr=o(Ge,"P",{});var lm=l(gr);ol=n(lm,"Setup the optional Comet.ml integration."),lm.forEach(t),ll=f(Ge),L=o(Ge,"P",{});var B=l(L);il=n(B,`Environment:
COMET`),ot=o(B,"EM",{});var Zn=l(ot);cl=n(Zn,"MODE ("),vr=o(Zn,"CODE",{});var im=l(vr);fl=n(im,"str"),im.forEach(t),hl=n(Zn,", _optional"),Zn.forEach(t),ml=n(B,`):
Whether to create an online, offline experiment or disable Comet logging. Can be \u201COFFLINE\u201D, \u201CONLINE\u201D,
or \u201CDISABLED\u201D. Defaults to \u201CONLINE\u201D.
COMET`),lt=o(B,"EM",{});var es=l(lt);dl=n(es,"PROJECT_NAME ("),ur=o(es,"CODE",{});var cm=l(ur);pl=n(cm,"str"),cm.forEach(t),gl=n(es,", _optional"),es.forEach(t),vl=n(B,`):
Comet project name for experiments
COMET`),it=o(B,"EM",{});var ts=l(it);ul=n(ts,"OFFLINE_DIRECTORY ("),_r=o(ts,"CODE",{});var fm=l(_r);_l=n(fm,"str"),fm.forEach(t),bl=n(ts,", _optional"),ts.forEach(t),El=n(B,`):
Folder to use for saving offline experiments when `),br=o(B,"CODE",{});var hm=l(br);kl=n(hm,"COMET_MODE"),hm.forEach(t),Tl=n(B,` is \u201COFFLINE\u201D
COMET`),ct=o(B,"EM",{});var as=l(ct);$l=n(as,"LOG_ASSETS ("),Er=o(as,"CODE",{});var mm=l(Er);Cl=n(mm,"str"),mm.forEach(t),wl=n(as,", _optional"),as.forEach(t),yl=n(B,`):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be \u201CTRUE\u201D, or
\u201CFALSE\u201D. Defaults to \u201CTRUE\u201D.`),B.forEach(t),Al=f(Ge),ft=o(Ge,"P",{});var rs=l(ft);Dl=n(rs,"For a number of configurable items in the environment, see "),ht=o(rs,"A",{href:!0,rel:!0});var dm=l(ht);Ll=n(dm,"here"),dm.forEach(t),Sl=n(rs,"."),rs.forEach(t),Ge.forEach(t),tr.forEach(t),Sn=f(a),ne=o(a,"DIV",{class:!0});var ns=l(ne);g(mt.$$.fragment,ns),Pl=f(ns),dt=o(ns,"P",{});var ss=l(dt);Ol=n(ss,"A "),Na=o(ss,"A",{href:!0});var pm=l(Na);Il=n(pm,"TrainerCallback"),pm.forEach(t),Ml=n(ss,` that handles the default flow of the training loop for logs, evaluation
and checkpoints.`),ss.forEach(t),ns.forEach(t),Pn=f(a),se=o(a,"DIV",{class:!0});var os=l(se);g(pt.$$.fragment,os),xl=f(os),gt=o(os,"P",{});var ls=l(gt);Fl=n(ls,"A bare "),Wa=o(ls,"A",{href:!0});var gm=l(Wa);jl=n(gm,"TrainerCallback"),gm.forEach(t),Nl=n(ls," that just prints the logs."),ls.forEach(t),os.forEach(t),On=f(a),oe=o(a,"DIV",{class:!0});var is=l(oe);g(vt.$$.fragment,is),Wl=f(is),ut=o(is,"P",{});var cs=l(ut);zl=n(cs,"A "),za=o(cs,"A",{href:!0});var vm=l(za);Bl=n(vm,"TrainerCallback"),vm.forEach(t),Vl=n(cs," that displays the progress of training or evaluation."),cs.forEach(t),is.forEach(t),In=f(a),H=o(a,"DIV",{class:!0});var rr=l(H);g(_t.$$.fragment,rr),ql=f(rr),bt=o(rr,"P",{});var fs=l(bt);Rl=n(fs,"A "),Ba=o(fs,"A",{href:!0});var um=l(Ba);Hl=n(um,"TrainerCallback"),um.forEach(t),Ul=n(fs," that handles early stopping."),fs.forEach(t),Gl=f(rr),U=o(rr,"P",{});var Je=l(U);Jl=n(Je,"This callback depends on "),Va=o(Je,"A",{href:!0});var _m=l(Va);Yl=n(_m,"TrainingArguments"),_m.forEach(t),Xl=n(Je," argument "),kr=o(Je,"EM",{});var bm=l(kr);Kl=n(bm,"load_best_model_at_end"),bm.forEach(t),Ql=n(Je,` functionality
to set best_metric in `),qa=o(Je,"A",{href:!0});var Em=l(qa);Zl=n(Em,"TrainerState"),Em.forEach(t),ei=n(Je,"."),Je.forEach(t),rr.forEach(t),Mn=f(a),le=o(a,"DIV",{class:!0});var hs=l(le);g(Et.$$.fragment,hs),ti=f(hs),ie=o(hs,"P",{});var nr=l(ie);ai=n(nr,"A "),Ra=o(nr,"A",{href:!0});var km=l(Ra);ri=n(km,"TrainerCallback"),km.forEach(t),ni=n(nr," that sends the logs to "),kt=o(nr,"A",{href:!0,rel:!0});var Tm=l(kt);si=n(Tm,"TensorBoard"),Tm.forEach(t),oi=n(nr,"."),nr.forEach(t),hs.forEach(t),xn=f(a),G=o(a,"DIV",{class:!0});var sr=l(G);g(Tt.$$.fragment,sr),li=f(sr),ce=o(sr,"P",{});var or=l(ce);ii=n(or,"A "),Ha=o(or,"A",{href:!0});var $m=l(Ha);ci=n($m,"TrainerCallback"),$m.forEach(t),fi=n(or," that sends the logs to "),$t=o(or,"A",{href:!0,rel:!0});var Cm=l($t);hi=n(Cm,"Weight and Biases"),Cm.forEach(t),mi=n(or,"."),or.forEach(t),di=f(sr),N=o(sr,"DIV",{class:!0});var Ye=l(N);g(Ct.$$.fragment,Ye),pi=f(Ye),wt=o(Ye,"P",{});var ms=l(wt);gi=n(ms,"Setup the optional Weights & Biases ("),Tr=o(ms,"EM",{});var wm=l(Tr);vi=n(wm,"wandb"),wm.forEach(t),ui=n(ms,") integration."),ms.forEach(t),_i=f(Ye),yt=o(Ye,"P",{});var ds=l(yt);bi=n(ds,"One can subclass and override this method to customize the setup if needed. Find more information "),At=o(ds,"A",{href:!0,rel:!0});var ym=l(At);Ei=n(ym,"here"),ym.forEach(t),ki=n(ds,". You can also override the following environment variables:"),ds.forEach(t),Ti=f(Ye),k=o(Ye,"P",{});var T=l(k);$i=n(T,`Environment:
WANDB`),Dt=o(T,"EM",{});var ps=l(Dt);Ci=n(ps,"LOG_MODEL ("),$r=o(ps,"CODE",{});var Am=l($r);wi=n(Am,"bool"),Am.forEach(t),yi=n(ps,", _optional"),ps.forEach(t),Ai=n(T,", defaults to "),Cr=o(T,"CODE",{});var Dm=l(Cr);Di=n(Dm,"False"),Dm.forEach(t),Li=n(T,`):
Whether or not to log model as artifact at the end of training. Use along with
`),wr=o(T,"EM",{});var Lm=l(wr);Si=n(Lm,"TrainingArguments.load_best_model_at_end"),Lm.forEach(t),Pi=n(T,` to upload best model.
WANDB`),Lt=o(T,"EM",{});var gs=l(Lt);Oi=n(gs,"WATCH ("),yr=o(gs,"CODE",{});var Sm=l(yr);Ii=n(Sm,"str"),Sm.forEach(t),Mi=n(gs,", _optional"),gs.forEach(t),xi=n(T," defaults to "),Ar=o(T,"CODE",{});var Pm=l(Ar);Fi=n(Pm,'"gradients"'),Pm.forEach(t),ji=n(T,`):
Can be `),Dr=o(T,"CODE",{});var Om=l(Dr);Ni=n(Om,'"gradients"'),Om.forEach(t),Wi=n(T,", "),Lr=o(T,"CODE",{});var Im=l(Lr);zi=n(Im,'"all"'),Im.forEach(t),Bi=n(T," or "),Sr=o(T,"CODE",{});var Mm=l(Sr);Vi=n(Mm,'"false"'),Mm.forEach(t),qi=n(T,". Set to "),Pr=o(T,"CODE",{});var xm=l(Pr);Ri=n(xm,'"false"'),xm.forEach(t),Hi=n(T,` to disable gradient
logging or `),Or=o(T,"CODE",{});var Fm=l(Or);Ui=n(Fm,'"all"'),Fm.forEach(t),Gi=n(T,` to log gradients and parameters.
WANDB`),St=o(T,"EM",{});var vs=l(St);Ji=n(vs,"PROJECT ("),Ir=o(vs,"CODE",{});var jm=l(Ir);Yi=n(jm,"str"),jm.forEach(t),Xi=n(vs,", _optional"),vs.forEach(t),Ki=n(T,", defaults to "),Mr=o(T,"CODE",{});var Nm=l(Mr);Qi=n(Nm,'"huggingface"'),Nm.forEach(t),Zi=n(T,`):
Set this to a custom string to store results in a different project.
WANDB`),Pt=o(T,"EM",{});var us=l(Pt);ec=n(us,"DISABLED ("),xr=o(us,"CODE",{});var Wm=l(xr);tc=n(Wm,"bool"),Wm.forEach(t),ac=n(us,", _optional"),us.forEach(t),rc=n(T,", defaults to "),Fr=o(T,"CODE",{});var zm=l(Fr);nc=n(zm,"False"),zm.forEach(t),sc=n(T,`):
Whether or not to disable wandb entirely. Set `),jr=o(T,"EM",{});var Bm=l(jr);oc=n(Bm,"WANDB_DISABLED=true"),Bm.forEach(t),lc=n(T," to disable."),T.forEach(t),Ye.forEach(t),sr.forEach(t),Fn=f(a),J=o(a,"DIV",{class:!0});var lr=l(J);g(Ot.$$.fragment,lr),ic=f(lr),fe=o(lr,"P",{});var ir=l(fe);cc=n(ir,"A "),Ua=o(ir,"A",{href:!0});var Vm=l(Ua);fc=n(Vm,"TrainerCallback"),Vm.forEach(t),hc=n(ir," that sends the logs to "),It=o(ir,"A",{href:!0,rel:!0});var qm=l(It);mc=n(qm,"MLflow"),qm.forEach(t),dc=n(ir,"."),ir.forEach(t),pc=f(lr),W=o(lr,"DIV",{class:!0});var Xe=l(W);g(Mt.$$.fragment,Xe),gc=f(Xe),Nr=o(Xe,"P",{});var Rm=l(Nr);vc=n(Rm,"Setup the optional MLflow integration."),Rm.forEach(t),uc=f(Xe),xt=o(Xe,"P",{});var _s=l(xt);_c=n(_s,`Environment:
HF`),Ft=o(_s,"EM",{});var bs=l(Ft);bc=n(bs,"MLFLOW_LOG_ARTIFACTS ("),Wr=o(bs,"CODE",{});var Hm=l(Wr);Ec=n(Hm,"str"),Hm.forEach(t),kc=n(bs,", _optional"),bs.forEach(t),Tc=n(_s,`):
Whether to use MLflow .log_artifact() facility to log artifacts.`),_s.forEach(t),$c=f(Xe),x=o(Xe,"P",{});var K=l(x);Cc=n(K,"This only makes sense if logging to a remote server, e.g. s3 or GCS. If set to "),zr=o(K,"EM",{});var Um=l(zr);wc=n(Um,"True"),Um.forEach(t),yc=n(K," or "),Br=o(K,"EM",{});var Gm=l(Br);Ac=n(Gm,"1"),Gm.forEach(t),Dc=n(K,`, will copy
whatever is in `),Ga=o(K,"A",{href:!0});var Jm=l(Ga);Lc=n(Jm,"TrainingArguments"),Jm.forEach(t),Sc=n(K,"\u2019s "),Vr=o(K,"CODE",{});var Ym=l(Vr);Pc=n(Ym,"output_dir"),Ym.forEach(t),Oc=n(K,` to the local or remote
artifact storage. Using it without a remote storage will just copy the files to your artifact location.`),K.forEach(t),Xe.forEach(t),lr.forEach(t),jn=f(a),he=o(a,"DIV",{class:!0});var Es=l(he);g(jt.$$.fragment,Es),Ic=f(Es),me=o(Es,"P",{});var cr=l(me);Mc=n(cr,"A "),Ja=o(cr,"A",{href:!0});var Xm=l(Ja);xc=n(Xm,"TrainerCallback"),Xm.forEach(t),Fc=n(cr," that sends the logs to "),Nt=o(cr,"A",{href:!0,rel:!0});var Km=l(Nt);jc=n(Km,"AzureML"),Km.forEach(t),Nc=n(cr,"."),cr.forEach(t),Es.forEach(t),Nn=f(a),de=o(a,"H2",{class:!0});var ks=l(de);ye=o(ks,"A",{id:!0,class:!0,href:!0});var Qm=l(ye);qr=o(Qm,"SPAN",{});var Zm=l(qr);g(Wt.$$.fragment,Zm),Zm.forEach(t),Qm.forEach(t),Wc=f(ks),Rr=o(ks,"SPAN",{});var ed=l(Rr);zc=n(ed,"TrainerCallback"),ed.forEach(t),ks.forEach(t),Wn=f(a),d=o(a,"DIV",{class:!0});var E=l(d);g(zt.$$.fragment,E),Bc=f(E),Hr=o(E,"P",{});var td=l(Hr);Vc=n(td,`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`),td.forEach(t),qc=f(E),Bt=o(E,"P",{});var Ts=l(Bt);Rc=n(Ts,"The "),Ur=o(Ts,"CODE",{});var ad=l(Ur);Hc=n(ad,"control"),ad.forEach(t),Uc=n(Ts,` object is the only one that can be changed by the callback, in which case the event that changes
it should return the modified version.`),Ts.forEach(t),Gc=f(E),S=o(E,"P",{});var V=l(S);Jc=n(V,"The argument "),Gr=o(V,"CODE",{});var rd=l(Gr);Yc=n(rd,"args"),rd.forEach(t),Xc=n(V,", "),Jr=o(V,"CODE",{});var nd=l(Jr);Kc=n(nd,"state"),nd.forEach(t),Qc=n(V," and "),Yr=o(V,"CODE",{});var sd=l(Yr);Zc=n(sd,"control"),sd.forEach(t),ef=n(V,` are positionals for all events, all the others are
grouped in `),Xr=o(V,"CODE",{});var od=l(Xr);tf=n(od,"kwargs"),od.forEach(t),af=n(V,`. You can unpack the ones you need in the signature of the event using them. As an example,
see the code of the simple `),Kr=o(V,"CODE",{});var ld=l(Kr);rf=n(ld,"PrinterCallback"),ld.forEach(t),nf=n(V,"."),V.forEach(t),sf=f(E),Qr=o(E,"P",{});var id=l(Qr);of=n(id,"Example:"),id.forEach(t),lf=f(E),g(Vt.$$.fragment,E),cf=f(E),Ae=o(E,"DIV",{class:!0});var $s=l(Ae);g(qt.$$.fragment,$s),ff=f($s),Zr=o($s,"P",{});var cd=l(Zr);hf=n(cd,"Event called at the beginning of an epoch."),cd.forEach(t),$s.forEach(t),mf=f(E),De=o(E,"DIV",{class:!0});var Cs=l(De);g(Rt.$$.fragment,Cs),df=f(Cs),en=o(Cs,"P",{});var fd=l(en);pf=n(fd,"Event called at the end of an epoch."),fd.forEach(t),Cs.forEach(t),gf=f(E),Le=o(E,"DIV",{class:!0});var ws=l(Le);g(Ht.$$.fragment,ws),vf=f(ws),tn=o(ws,"P",{});var hd=l(tn);uf=n(hd,"Event called after an evaluation phase."),hd.forEach(t),ws.forEach(t),_f=f(E),Se=o(E,"DIV",{class:!0});var ys=l(Se);g(Ut.$$.fragment,ys),bf=f(ys),Gt=o(ys,"P",{});var As=l(Gt);Ef=n(As,"Event called at the end of the initialization of the "),Ya=o(As,"A",{href:!0});var md=l(Ya);kf=n(md,"Trainer"),md.forEach(t),Tf=n(As,"."),As.forEach(t),ys.forEach(t),$f=f(E),Pe=o(E,"DIV",{class:!0});var Ds=l(Pe);g(Jt.$$.fragment,Ds),Cf=f(Ds),an=o(Ds,"P",{});var dd=l(an);wf=n(dd,"Event called after logging the last logs."),dd.forEach(t),Ds.forEach(t),yf=f(E),Oe=o(E,"DIV",{class:!0});var Ls=l(Oe);g(Yt.$$.fragment,Ls),Af=f(Ls),rn=o(Ls,"P",{});var pd=l(rn);Df=n(pd,"Event called after a prediction step."),pd.forEach(t),Ls.forEach(t),Lf=f(E),Ie=o(E,"DIV",{class:!0});var Ss=l(Ie);g(Xt.$$.fragment,Ss),Sf=f(Ss),nn=o(Ss,"P",{});var gd=l(nn);Pf=n(gd,"Event called after a checkpoint save."),gd.forEach(t),Ss.forEach(t),Of=f(E),Me=o(E,"DIV",{class:!0});var Ps=l(Me);g(Kt.$$.fragment,Ps),If=f(Ps),sn=o(Ps,"P",{});var vd=l(sn);Mf=n(vd,`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`),vd.forEach(t),Ps.forEach(t),xf=f(E),xe=o(E,"DIV",{class:!0});var Os=l(xe);g(Qt.$$.fragment,Os),Ff=f(Os),on=o(Os,"P",{});var ud=l(on);jf=n(ud,`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`),ud.forEach(t),Os.forEach(t),Nf=f(E),Fe=o(E,"DIV",{class:!0});var Is=l(Fe);g(Zt.$$.fragment,Is),Wf=f(Is),ln=o(Is,"P",{});var _d=l(ln);zf=n(_d,"Event called at the end of an substep during gradient accumulation."),_d.forEach(t),Is.forEach(t),Bf=f(E),je=o(E,"DIV",{class:!0});var Ms=l(je);g(ea.$$.fragment,Ms),Vf=f(Ms),cn=o(Ms,"P",{});var bd=l(cn);qf=n(bd,"Event called at the beginning of training."),bd.forEach(t),Ms.forEach(t),Rf=f(E),Ne=o(E,"DIV",{class:!0});var xs=l(Ne);g(ta.$$.fragment,xs),Hf=f(xs),fn=o(xs,"P",{});var Ed=l(fn);Uf=n(Ed,"Event called at the end of training."),Ed.forEach(t),xs.forEach(t),E.forEach(t),zn=f(a),We=o(a,"P",{});var Fs=l(We);Gf=n(Fs,"Here is an example of how to register a custom callback with the PyTorch "),Xa=o(Fs,"A",{href:!0});var kd=l(Xa);Jf=n(kd,"Trainer"),kd.forEach(t),Yf=n(Fs,":"),Fs.forEach(t),Bn=f(a),g(aa.$$.fragment,a),Vn=f(a),ze=o(a,"P",{});var js=l(ze);Xf=n(js,"Another way to register a callback is to call "),hn=o(js,"CODE",{});var Td=l(hn);Kf=n(Td,"trainer.add_callback()"),Td.forEach(t),Qf=n(js," as follows:"),js.forEach(t),qn=f(a),g(ra.$$.fragment,a),Rn=f(a),pe=o(a,"H2",{class:!0});var Ns=l(pe);Be=o(Ns,"A",{id:!0,class:!0,href:!0});var $d=l(Be);mn=o($d,"SPAN",{});var Cd=l(mn);g(na.$$.fragment,Cd),Cd.forEach(t),$d.forEach(t),Zf=f(Ns),dn=o(Ns,"SPAN",{});var wd=l(dn);eh=n(wd,"TrainerState"),wd.forEach(t),Ns.forEach(t),Hn=f(a),P=o(a,"DIV",{class:!0});var Q=l(P);g(sa.$$.fragment,Q),th=f(Q),ge=o(Q,"P",{});var fr=l(ge);ah=n(fr,"A class containing the "),Ka=o(fr,"A",{href:!0});var yd=l(Ka);rh=n(yd,"Trainer"),yd.forEach(t),nh=n(fr,` inner state that will be saved along the model and optimizer
when checkpointing and passed to the `),Qa=o(fr,"A",{href:!0});var Ad=l(Qa);sh=n(Ad,"TrainerCallback"),Ad.forEach(t),oh=n(fr,"."),fr.forEach(t),lh=f(Q),g(Ve.$$.fragment,Q),ih=f(Q),qe=o(Q,"DIV",{class:!0});var Ws=l(qe);g(oa.$$.fragment,Ws),ch=f(Ws),la=o(Ws,"P",{});var zs=l(la);fh=n(zs,"Create an instance from the content of "),pn=o(zs,"CODE",{});var Dd=l(pn);hh=n(Dd,"json_path"),Dd.forEach(t),mh=n(zs,"."),zs.forEach(t),Ws.forEach(t),dh=f(Q),Re=o(Q,"DIV",{class:!0});var Bs=l(Re);g(ia.$$.fragment,Bs),ph=f(Bs),ca=o(Bs,"P",{});var Vs=l(ca);gh=n(Vs,"Save the content of this instance in JSON format inside "),gn=o(Vs,"CODE",{});var Ld=l(gn);vh=n(Ld,"json_path"),Ld.forEach(t),uh=n(Vs,"."),Vs.forEach(t),Bs.forEach(t),Q.forEach(t),Un=f(a),ve=o(a,"H2",{class:!0});var qs=l(ve);He=o(qs,"A",{id:!0,class:!0,href:!0});var Sd=l(He);vn=o(Sd,"SPAN",{});var Pd=l(vn);g(fa.$$.fragment,Pd),Pd.forEach(t),Sd.forEach(t),_h=f(qs),un=o(qs,"SPAN",{});var Od=l(un);bh=n(Od,"TrainerControl"),Od.forEach(t),qs.forEach(t),Gn=f(a),ue=o(a,"DIV",{class:!0});var Rs=l(ue);g(ha.$$.fragment,Rs),Eh=f(Rs),_e=o(Rs,"P",{});var hr=l(_e);kh=n(hr,"A class that handles the "),Za=o(hr,"A",{href:!0});var Id=l(Za);Th=n(Id,"Trainer"),Id.forEach(t),$h=n(hr,` control flow. This class is used by the
`),er=o(hr,"A",{href:!0});var Md=l(er);Ch=n(Md,"TrainerCallback"),Md.forEach(t),wh=n(hr," to activate some switches in the training loop."),hr.forEach(t),Rs.forEach(t),this.h()},h(){i(C,"name","hf:doc:metadata"),i(C,"content",JSON.stringify(Vd)),i(D,"id","callbacks"),i(D,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(D,"href","#callbacks"),i(w,"class","relative group"),i(ga,"href","/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.Trainer"),i(va,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerControl"),i(ua,"href","/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.Trainer"),i(_a,"href","/docs/transformers/v4.14.1/en/trainer"),i(ba,"href","/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.Trainer"),i(ka,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.DefaultFlowCallback"),i(Ta,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.PrinterCallback"),i($a,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.ProgressCallback"),i(Ca,"href","/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.TrainingArguments"),i(ya,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.integrations.TensorBoardCallback"),i(Aa,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.integrations.WandbCallback"),i(Qe,"href","https://www.wandb.com/"),i(Qe,"rel","nofollow"),i(Da,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.integrations.CometCallback"),i(Ze,"href","https://www.comet.ml/site/"),i(Ze,"rel","nofollow"),i(La,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.integrations.MLflowCallback"),i(et,"href","https://www.mlflow.org/"),i(et,"rel","nofollow"),i(Sa,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.integrations.AzureMLCallback"),i(tt,"href","https://pypi.org/project/azureml-sdk/"),i(tt,"rel","nofollow"),i(Pa,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerCallback"),i(Oa,"href","/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.TrainingArguments"),i(Ia,"href","/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.Trainer"),i(Ma,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerState"),i(xa,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerControl"),i(Ce,"id","transformers.integrations.CometCallback"),i(Ce,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ce,"href","#transformers.integrations.CometCallback"),i(ae,"class","relative group"),i(Fa,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerCallback"),i(ja,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerCallback"),i(nt,"href","https://www.comet.ml/site/"),i(nt,"rel","nofollow"),i(ht,"href","https://www.comet.ml/docs/python-sdk/advanced/#comet-configuration-variables"),i(ht,"rel","nofollow"),i(j,"class","docstring"),i(R,"class","docstring"),i(Na,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerCallback"),i(ne,"class","docstring"),i(Wa,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerCallback"),i(se,"class","docstring"),i(za,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerCallback"),i(oe,"class","docstring"),i(Ba,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerCallback"),i(Va,"href","/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.TrainingArguments"),i(qa,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerState"),i(H,"class","docstring"),i(Ra,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerCallback"),i(kt,"href","https://www.tensorflow.org/tensorboard"),i(kt,"rel","nofollow"),i(le,"class","docstring"),i(Ha,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerCallback"),i($t,"href","https://www.wandb.com/"),i($t,"rel","nofollow"),i(At,"href","https://docs.wandb.ai/integrations/huggingface"),i(At,"rel","nofollow"),i(N,"class","docstring"),i(G,"class","docstring"),i(Ua,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerCallback"),i(It,"href","https://www.mlflow.org/"),i(It,"rel","nofollow"),i(Ga,"href","/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.TrainingArguments"),i(W,"class","docstring"),i(J,"class","docstring"),i(Ja,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerCallback"),i(Nt,"href","https://pypi.org/project/azureml-sdk/"),i(Nt,"rel","nofollow"),i(he,"class","docstring"),i(ye,"id","transformers.TrainerCallback"),i(ye,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(ye,"href","#transformers.TrainerCallback"),i(de,"class","relative group"),i(Ae,"class","docstring"),i(De,"class","docstring"),i(Le,"class","docstring"),i(Ya,"href","/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.Trainer"),i(Se,"class","docstring"),i(Pe,"class","docstring"),i(Oe,"class","docstring"),i(Ie,"class","docstring"),i(Me,"class","docstring"),i(xe,"class","docstring"),i(Fe,"class","docstring"),i(je,"class","docstring"),i(Ne,"class","docstring"),i(d,"class","docstring"),i(Xa,"href","/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.Trainer"),i(Be,"id","transformers.TrainerState"),i(Be,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Be,"href","#transformers.TrainerState"),i(pe,"class","relative group"),i(Ka,"href","/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.Trainer"),i(Qa,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerCallback"),i(qe,"class","docstring"),i(Re,"class","docstring"),i(P,"class","docstring"),i(He,"id","transformers.TrainerControl"),i(He,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(He,"href","#transformers.TrainerControl"),i(ve,"class","relative group"),i(Za,"href","/docs/transformers/v4.14.1/en/main_classes/trainer#transformers.Trainer"),i(er,"href","/docs/transformers/v4.14.1/en/main_classes/callback#transformers.TrainerCallback"),i(ue,"class","docstring")},m(a,h){e(document.head,C),m(a,Y,h),m(a,w,h),e(w,D),e(D,Z),v(I,Z,null),e(w,Ke),e(w,ee),e(ee,te),m(a,M,h),m(a,q,h),e(q,pa),e(q,ga),e(ga,Hs),e(q,Us),m(a,$n,h),m(a,F,h),e(F,Gs),e(F,va),e(va,Js),e(F,Ys),e(F,ua),e(ua,Xs),e(F,Ks),e(F,_a),e(_a,Qs),e(F,Zs),m(a,Cn,h),m(a,be,h),e(be,eo),e(be,ba),e(ba,to),e(be,ao),m(a,wn,h),m(a,y,h),e(y,Ea),e(Ea,ka),e(ka,ro),e(Ea,no),e(y,so),e(y,X),e(X,Ta),e(Ta,oo),e(X,lo),e(X,$a),e($a,io),e(X,co),e(X,Ca),e(Ca,fo),e(X,ho),e(y,mo),e(y,wa),e(wa,ya),e(ya,po),e(wa,go),e(y,vo),e(y,Ee),e(Ee,Aa),e(Aa,uo),e(Ee,_o),e(Ee,Qe),e(Qe,bo),e(Ee,Eo),e(y,ko),e(y,ke),e(ke,Da),e(Da,To),e(ke,$o),e(ke,Ze),e(Ze,Co),e(ke,wo),e(y,yo),e(y,Te),e(Te,La),e(La,Ao),e(Te,Do),e(Te,et),e(et,Lo),e(Te,So),e(y,Po),e(y,$e),e($e,Sa),e(Sa,Oo),e($e,Io),e($e,tt),e(tt,Mo),e($e,xo),m(a,yn,h),m(a,A,h),e(A,Fo),e(A,Pa),e(Pa,jo),e(A,No),e(A,Oa),e(Oa,Wo),e(A,zo),e(A,Ia),e(Ia,Bo),e(A,Vo),e(A,Ma),e(Ma,qo),e(A,Ro),e(A,xa),e(xa,Ho),e(A,Uo),m(a,An,h),m(a,ae,h),e(ae,Ce),e(Ce,dr),v(at,dr,null),e(ae,Go),e(ae,pr),e(pr,Jo),m(a,Dn,h),m(a,we,h),e(we,Yo),e(we,Fa),e(Fa,Xo),e(we,Ko),m(a,Ln,h),m(a,R,h),v(rt,R,null),e(R,Qo),e(R,re),e(re,Zo),e(re,ja),e(ja,el),e(re,tl),e(re,nt),e(nt,al),e(re,rl),e(R,nl),e(R,j),v(st,j,null),e(j,sl),e(j,gr),e(gr,ol),e(j,ll),e(j,L),e(L,il),e(L,ot),e(ot,cl),e(ot,vr),e(vr,fl),e(ot,hl),e(L,ml),e(L,lt),e(lt,dl),e(lt,ur),e(ur,pl),e(lt,gl),e(L,vl),e(L,it),e(it,ul),e(it,_r),e(_r,_l),e(it,bl),e(L,El),e(L,br),e(br,kl),e(L,Tl),e(L,ct),e(ct,$l),e(ct,Er),e(Er,Cl),e(ct,wl),e(L,yl),e(j,Al),e(j,ft),e(ft,Dl),e(ft,ht),e(ht,Ll),e(ft,Sl),m(a,Sn,h),m(a,ne,h),v(mt,ne,null),e(ne,Pl),e(ne,dt),e(dt,Ol),e(dt,Na),e(Na,Il),e(dt,Ml),m(a,Pn,h),m(a,se,h),v(pt,se,null),e(se,xl),e(se,gt),e(gt,Fl),e(gt,Wa),e(Wa,jl),e(gt,Nl),m(a,On,h),m(a,oe,h),v(vt,oe,null),e(oe,Wl),e(oe,ut),e(ut,zl),e(ut,za),e(za,Bl),e(ut,Vl),m(a,In,h),m(a,H,h),v(_t,H,null),e(H,ql),e(H,bt),e(bt,Rl),e(bt,Ba),e(Ba,Hl),e(bt,Ul),e(H,Gl),e(H,U),e(U,Jl),e(U,Va),e(Va,Yl),e(U,Xl),e(U,kr),e(kr,Kl),e(U,Ql),e(U,qa),e(qa,Zl),e(U,ei),m(a,Mn,h),m(a,le,h),v(Et,le,null),e(le,ti),e(le,ie),e(ie,ai),e(ie,Ra),e(Ra,ri),e(ie,ni),e(ie,kt),e(kt,si),e(ie,oi),m(a,xn,h),m(a,G,h),v(Tt,G,null),e(G,li),e(G,ce),e(ce,ii),e(ce,Ha),e(Ha,ci),e(ce,fi),e(ce,$t),e($t,hi),e(ce,mi),e(G,di),e(G,N),v(Ct,N,null),e(N,pi),e(N,wt),e(wt,gi),e(wt,Tr),e(Tr,vi),e(wt,ui),e(N,_i),e(N,yt),e(yt,bi),e(yt,At),e(At,Ei),e(yt,ki),e(N,Ti),e(N,k),e(k,$i),e(k,Dt),e(Dt,Ci),e(Dt,$r),e($r,wi),e(Dt,yi),e(k,Ai),e(k,Cr),e(Cr,Di),e(k,Li),e(k,wr),e(wr,Si),e(k,Pi),e(k,Lt),e(Lt,Oi),e(Lt,yr),e(yr,Ii),e(Lt,Mi),e(k,xi),e(k,Ar),e(Ar,Fi),e(k,ji),e(k,Dr),e(Dr,Ni),e(k,Wi),e(k,Lr),e(Lr,zi),e(k,Bi),e(k,Sr),e(Sr,Vi),e(k,qi),e(k,Pr),e(Pr,Ri),e(k,Hi),e(k,Or),e(Or,Ui),e(k,Gi),e(k,St),e(St,Ji),e(St,Ir),e(Ir,Yi),e(St,Xi),e(k,Ki),e(k,Mr),e(Mr,Qi),e(k,Zi),e(k,Pt),e(Pt,ec),e(Pt,xr),e(xr,tc),e(Pt,ac),e(k,rc),e(k,Fr),e(Fr,nc),e(k,sc),e(k,jr),e(jr,oc),e(k,lc),m(a,Fn,h),m(a,J,h),v(Ot,J,null),e(J,ic),e(J,fe),e(fe,cc),e(fe,Ua),e(Ua,fc),e(fe,hc),e(fe,It),e(It,mc),e(fe,dc),e(J,pc),e(J,W),v(Mt,W,null),e(W,gc),e(W,Nr),e(Nr,vc),e(W,uc),e(W,xt),e(xt,_c),e(xt,Ft),e(Ft,bc),e(Ft,Wr),e(Wr,Ec),e(Ft,kc),e(xt,Tc),e(W,$c),e(W,x),e(x,Cc),e(x,zr),e(zr,wc),e(x,yc),e(x,Br),e(Br,Ac),e(x,Dc),e(x,Ga),e(Ga,Lc),e(x,Sc),e(x,Vr),e(Vr,Pc),e(x,Oc),m(a,jn,h),m(a,he,h),v(jt,he,null),e(he,Ic),e(he,me),e(me,Mc),e(me,Ja),e(Ja,xc),e(me,Fc),e(me,Nt),e(Nt,jc),e(me,Nc),m(a,Nn,h),m(a,de,h),e(de,ye),e(ye,qr),v(Wt,qr,null),e(de,Wc),e(de,Rr),e(Rr,zc),m(a,Wn,h),m(a,d,h),v(zt,d,null),e(d,Bc),e(d,Hr),e(Hr,Vc),e(d,qc),e(d,Bt),e(Bt,Rc),e(Bt,Ur),e(Ur,Hc),e(Bt,Uc),e(d,Gc),e(d,S),e(S,Jc),e(S,Gr),e(Gr,Yc),e(S,Xc),e(S,Jr),e(Jr,Kc),e(S,Qc),e(S,Yr),e(Yr,Zc),e(S,ef),e(S,Xr),e(Xr,tf),e(S,af),e(S,Kr),e(Kr,rf),e(S,nf),e(d,sf),e(d,Qr),e(Qr,of),e(d,lf),v(Vt,d,null),e(d,cf),e(d,Ae),v(qt,Ae,null),e(Ae,ff),e(Ae,Zr),e(Zr,hf),e(d,mf),e(d,De),v(Rt,De,null),e(De,df),e(De,en),e(en,pf),e(d,gf),e(d,Le),v(Ht,Le,null),e(Le,vf),e(Le,tn),e(tn,uf),e(d,_f),e(d,Se),v(Ut,Se,null),e(Se,bf),e(Se,Gt),e(Gt,Ef),e(Gt,Ya),e(Ya,kf),e(Gt,Tf),e(d,$f),e(d,Pe),v(Jt,Pe,null),e(Pe,Cf),e(Pe,an),e(an,wf),e(d,yf),e(d,Oe),v(Yt,Oe,null),e(Oe,Af),e(Oe,rn),e(rn,Df),e(d,Lf),e(d,Ie),v(Xt,Ie,null),e(Ie,Sf),e(Ie,nn),e(nn,Pf),e(d,Of),e(d,Me),v(Kt,Me,null),e(Me,If),e(Me,sn),e(sn,Mf),e(d,xf),e(d,xe),v(Qt,xe,null),e(xe,Ff),e(xe,on),e(on,jf),e(d,Nf),e(d,Fe),v(Zt,Fe,null),e(Fe,Wf),e(Fe,ln),e(ln,zf),e(d,Bf),e(d,je),v(ea,je,null),e(je,Vf),e(je,cn),e(cn,qf),e(d,Rf),e(d,Ne),v(ta,Ne,null),e(Ne,Hf),e(Ne,fn),e(fn,Uf),m(a,zn,h),m(a,We,h),e(We,Gf),e(We,Xa),e(Xa,Jf),e(We,Yf),m(a,Bn,h),v(aa,a,h),m(a,Vn,h),m(a,ze,h),e(ze,Xf),e(ze,hn),e(hn,Kf),e(ze,Qf),m(a,qn,h),v(ra,a,h),m(a,Rn,h),m(a,pe,h),e(pe,Be),e(Be,mn),v(na,mn,null),e(pe,Zf),e(pe,dn),e(dn,eh),m(a,Hn,h),m(a,P,h),v(sa,P,null),e(P,th),e(P,ge),e(ge,ah),e(ge,Ka),e(Ka,rh),e(ge,nh),e(ge,Qa),e(Qa,sh),e(ge,oh),e(P,lh),v(Ve,P,null),e(P,ih),e(P,qe),v(oa,qe,null),e(qe,ch),e(qe,la),e(la,fh),e(la,pn),e(pn,hh),e(la,mh),e(P,dh),e(P,Re),v(ia,Re,null),e(Re,ph),e(Re,ca),e(ca,gh),e(ca,gn),e(gn,vh),e(ca,uh),m(a,Un,h),m(a,ve,h),e(ve,He),e(He,vn),v(fa,vn,null),e(ve,_h),e(ve,un),e(un,bh),m(a,Gn,h),m(a,ue,h),v(ha,ue,null),e(ue,Eh),e(ue,_e),e(_e,kh),e(_e,Za),e(Za,Th),e(_e,$h),e(_e,er),e(er,Ch),e(_e,wh),Jn=!0},p(a,[h]){const ma={};h&2&&(ma.$$scope={dirty:h,ctx:a}),Ve.$set(ma)},i(a){Jn||(u(I.$$.fragment,a),u(at.$$.fragment,a),u(rt.$$.fragment,a),u(st.$$.fragment,a),u(mt.$$.fragment,a),u(pt.$$.fragment,a),u(vt.$$.fragment,a),u(_t.$$.fragment,a),u(Et.$$.fragment,a),u(Tt.$$.fragment,a),u(Ct.$$.fragment,a),u(Ot.$$.fragment,a),u(Mt.$$.fragment,a),u(jt.$$.fragment,a),u(Wt.$$.fragment,a),u(zt.$$.fragment,a),u(Vt.$$.fragment,a),u(qt.$$.fragment,a),u(Rt.$$.fragment,a),u(Ht.$$.fragment,a),u(Ut.$$.fragment,a),u(Jt.$$.fragment,a),u(Yt.$$.fragment,a),u(Xt.$$.fragment,a),u(Kt.$$.fragment,a),u(Qt.$$.fragment,a),u(Zt.$$.fragment,a),u(ea.$$.fragment,a),u(ta.$$.fragment,a),u(aa.$$.fragment,a),u(ra.$$.fragment,a),u(na.$$.fragment,a),u(sa.$$.fragment,a),u(Ve.$$.fragment,a),u(oa.$$.fragment,a),u(ia.$$.fragment,a),u(fa.$$.fragment,a),u(ha.$$.fragment,a),Jn=!0)},o(a){_(I.$$.fragment,a),_(at.$$.fragment,a),_(rt.$$.fragment,a),_(st.$$.fragment,a),_(mt.$$.fragment,a),_(pt.$$.fragment,a),_(vt.$$.fragment,a),_(_t.$$.fragment,a),_(Et.$$.fragment,a),_(Tt.$$.fragment,a),_(Ct.$$.fragment,a),_(Ot.$$.fragment,a),_(Mt.$$.fragment,a),_(jt.$$.fragment,a),_(Wt.$$.fragment,a),_(zt.$$.fragment,a),_(Vt.$$.fragment,a),_(qt.$$.fragment,a),_(Rt.$$.fragment,a),_(Ht.$$.fragment,a),_(Ut.$$.fragment,a),_(Jt.$$.fragment,a),_(Yt.$$.fragment,a),_(Xt.$$.fragment,a),_(Kt.$$.fragment,a),_(Qt.$$.fragment,a),_(Zt.$$.fragment,a),_(ea.$$.fragment,a),_(ta.$$.fragment,a),_(aa.$$.fragment,a),_(ra.$$.fragment,a),_(na.$$.fragment,a),_(sa.$$.fragment,a),_(Ve.$$.fragment,a),_(oa.$$.fragment,a),_(ia.$$.fragment,a),_(fa.$$.fragment,a),_(ha.$$.fragment,a),Jn=!1},d(a){t(C),a&&t(Y),a&&t(w),b(I),a&&t(M),a&&t(q),a&&t($n),a&&t(F),a&&t(Cn),a&&t(be),a&&t(wn),a&&t(y),a&&t(yn),a&&t(A),a&&t(An),a&&t(ae),b(at),a&&t(Dn),a&&t(we),a&&t(Ln),a&&t(R),b(rt),b(st),a&&t(Sn),a&&t(ne),b(mt),a&&t(Pn),a&&t(se),b(pt),a&&t(On),a&&t(oe),b(vt),a&&t(In),a&&t(H),b(_t),a&&t(Mn),a&&t(le),b(Et),a&&t(xn),a&&t(G),b(Tt),b(Ct),a&&t(Fn),a&&t(J),b(Ot),b(Mt),a&&t(jn),a&&t(he),b(jt),a&&t(Nn),a&&t(de),b(Wt),a&&t(Wn),a&&t(d),b(zt),b(Vt),b(qt),b(Rt),b(Ht),b(Ut),b(Jt),b(Yt),b(Xt),b(Kt),b(Qt),b(Zt),b(ea),b(ta),a&&t(zn),a&&t(We),a&&t(Bn),b(aa,a),a&&t(Vn),a&&t(ze),a&&t(qn),b(ra,a),a&&t(Rn),a&&t(pe),b(na),a&&t(Hn),a&&t(P),b(sa),b(Ve),b(oa),b(ia),a&&t(Un),a&&t(ve),b(fa),a&&t(Gn),a&&t(ue),b(ha)}}}const Vd={local:"callbacks",sections:[{local:"transformers.integrations.CometCallback",title:"Available Callbacks"},{local:"transformers.TrainerCallback",title:"TrainerCallback"},{local:"transformers.TrainerState",title:"TrainerState"},{local:"transformers.TrainerControl",title:"TrainerControl"}],title:"Callbacks"};function qd(mr,C,Y){let{fw:w}=C;return mr.$$set=D=>{"fw"in D&&Y(0,w=D.fw)},[w]}class Xd extends xd{constructor(C){super();Fd(this,C,qd,Bd,jd,{fw:0})}}export{Xd as default,Vd as metadata};
