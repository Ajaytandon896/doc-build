import{S as Ec,i as wc,s as yc,e as o,k as h,w as m,t,M as $c,c as n,d as s,m as f,a as i,x as u,h as l,b as d,G as a,g as r,y as b,q as g,o as v,B as _,v as kc}from"../chunks/vendor-hf-doc-builder.js";import{T as _c}from"../chunks/Tip-hf-doc-builder.js";import{I as U}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as q}from"../chunks/CodeBlock-hf-doc-builder.js";function Cc(Ze){let p,D,E,y,A,w,k,C;return{c(){p=o("p"),D=t(`Revision hashes are unique across all repositories. This means you don\u2019t need to
provide any `),E=o("code"),y=t("repo_id"),A=t(" or "),w=o("code"),k=t("repo_type"),C=t(" when removing revisions.")},l(K){p=n(K,"P",{});var j=i(p);D=l(j,`Revision hashes are unique across all repositories. This means you don\u2019t need to
provide any `),E=n(j,"CODE",{});var We=i(E);y=l(We,"repo_id"),We.forEach(s),A=l(j," or "),w=n(j,"CODE",{});var Ve=i(w);k=l(Ve,"repo_type"),Ve.forEach(s),C=l(j," when removing revisions."),j.forEach(s)},m(K,j){r(K,p,j),a(p,D),a(p,E),a(E,y),a(p,A),a(p,w),a(w,k),a(p,C)},d(K){K&&s(p)}}}function jc(Ze){let p,D,E,y,A;return{c(){p=o("p"),D=t(`If a revision is not found in the cache, it will be silently ignored. Besides, if a file
or folder cannot be found while trying to delete it, a warning will be logged but no
error is thrown. The deletion continues for other paths contained in the
`),E=o("a"),y=t("DeleteCacheStrategy"),A=t(" object."),this.h()},l(w){p=n(w,"P",{});var k=i(p);D=l(k,`If a revision is not found in the cache, it will be silently ignored. Besides, if a file
or folder cannot be found while trying to delete it, a warning will be logged but no
error is thrown. The deletion continues for other paths contained in the
`),E=n(k,"A",{href:!0});var C=i(E);y=l(C,"DeleteCacheStrategy"),C.forEach(s),A=l(k," object."),k.forEach(s),this.h()},h(){d(E,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.DeleteCacheStrategy")},m(w,k){r(w,p,k),a(p,D),a(p,E),a(E,y),a(p,A)},d(w){w&&s(p)}}}function Ic(Ze){let p,D,E,y,A,w,k,C,K,j,We,Ve,Ds,z,se,Ia,Ce,Vt,Pa,Qt,Ss,Qe,Xt,xs,Xe,el,Os,je,Hs,I,al,Aa,sl,tl,Da,ll,ol,Sa,nl,il,xa,cl,rl,Rs,ea,hl,Us,Ie,Ts,aa,fl,Ms,sa,dl,Fs,Pe,Ns,ta,pl,Gs,J,te,Oa,Ae,ml,Ha,ul,Ls,P,bl,Ra,gl,vl,Ua,_l,El,Ta,wl,yl,Ma,$l,kl,Bs,S,Cl,Fa,jl,Il,Na,Pl,Al,Ga,Dl,Sl,qs,x,xl,La,Ol,Hl,Ba,Rl,Ul,qa,Tl,Ml,Ks,Y,le,Ka,De,Fl,za,Nl,zs,oe,Gl,Ja,Ll,Bl,Js,Z,ne,Ya,Se,ql,Za,Kl,Ys,ie,zl,Wa,Jl,Yl,Zs,$,Zl,Va,Wl,Vl,Qa,Ql,Xl,Xa,eo,ao,es,so,to,as,lo,oo,Ws,T,no,ss,io,co,ts,ro,ho,Vs,xe,Qs,ce,fo,ls,po,mo,Xs,re,uo,os,bo,go,et,W,he,ns,Oe,vo,is,_o,at,la,Eo,st,He,tt,V,fe,cs,Re,wo,rs,yo,lt,M,$o,hs,ko,Co,fs,jo,Io,ot,Q,de,ds,Ue,Po,ps,Ao,nt,F,Do,ms,So,xo,us,Oo,Ho,it,oa,Ro,ct,Te,rt,N,Uo,bs,To,Mo,gs,Fo,No,ht,Me,ft,X,pe,vs,Fe,Go,_s,Lo,dt,me,Bo,Es,qo,Ko,pt,Ne,mt,ee,ue,ws,Ge,zo,ys,Jo,ut,be,Yo,na,Zo,Wo,bt,ia,Vo,gt,O,Le,ca,Qo,Xo,ra,en,an,ha,fa,sn,tn,ln,da,pa,on,nn,cn,ma,ua,rn,hn,vt,ba,fn,_t,Be,Et,ae,ge,$s,qe,dn,ks,pn,wt,G,mn,ga,un,bn,va,gn,vn,yt,ve,_n,_a,En,wn,$t,Ea,yn,kt,H,Ke,$n,Cs,kn,Cn,jn,js,In,Pn,ze,An,Is,Dn,Sn,xn,Ps,On,Ct,wa,Hn,jt,Je,It,_e,Pt,Ee,At;return w=new U({}),Ce=new U({}),je=new q({props:{code:`<CACHE_DIR>
\u251C\u2500 <MODELS>
\u251C\u2500 <DATASETS>
\u251C\u2500 <SPACES>`,highlighted:`<span class="hljs-tag">&lt;<span class="hljs-name">CACHE_DIR</span>&gt;</span>
\u251C\u2500 <span class="hljs-tag">&lt;<span class="hljs-name">MODELS</span>&gt;</span>
\u251C\u2500 <span class="hljs-tag">&lt;<span class="hljs-name">DATASETS</span>&gt;</span>
\u251C\u2500 <span class="hljs-tag">&lt;<span class="hljs-name">SPACES</span>&gt;</span>`}}),Ie=new q({props:{code:`<CACHE_DIR>
\u251C\u2500 models--julien-c--EsperBERTo-small
\u251C\u2500 models--lysandrejik--arxiv-nlp
\u251C\u2500 models--bert-base-cased
\u251C\u2500 datasets--glue
\u251C\u2500 datasets--huggingface--DataMeasurementsFiles
\u251C\u2500 spaces--dalle-mini--dalle-mini`,highlighted:`&lt;<span class="hljs-comment">CACHE_DIR</span>&gt;
<span class="hljs-comment">\u251C\u2500</span> <span class="hljs-comment">models</span>--<span class="hljs-comment">julien</span><span class="hljs-literal">-</span><span class="hljs-comment">c</span>--<span class="hljs-comment">EsperBERTo</span><span class="hljs-literal">-</span><span class="hljs-comment">small</span>
<span class="hljs-comment">\u251C\u2500</span> <span class="hljs-comment">models</span>--<span class="hljs-comment">lysandrejik</span>--<span class="hljs-comment">arxiv</span><span class="hljs-literal">-</span><span class="hljs-comment">nlp</span>
<span class="hljs-comment">\u251C\u2500</span> <span class="hljs-comment">models</span>--<span class="hljs-comment">bert</span><span class="hljs-literal">-</span><span class="hljs-comment">base</span><span class="hljs-literal">-</span><span class="hljs-comment">cased</span>
<span class="hljs-comment">\u251C\u2500</span> <span class="hljs-comment">datasets</span>--<span class="hljs-comment">glue</span>
<span class="hljs-comment">\u251C\u2500</span> <span class="hljs-comment">datasets</span>--<span class="hljs-comment">huggingface</span>--<span class="hljs-comment">DataMeasurementsFiles</span>
<span class="hljs-comment">\u251C\u2500</span> <span class="hljs-comment">spaces</span>--<span class="hljs-comment">dalle</span><span class="hljs-literal">-</span><span class="hljs-comment">mini</span>--<span class="hljs-comment">dalle</span><span class="hljs-literal">-</span><span class="hljs-comment">mini</span>`}}),Pe=new q({props:{code:`<CACHE_DIR>
\u251C\u2500 datasets--glue
\u2502  \u251C\u2500 refs
\u2502  \u251C\u2500 blobs
\u2502  \u251C\u2500 snapshots
...`,highlighted:`&lt;CACHE_DIR&gt;
\u251C\u2500 datasets<span class="hljs-params">--glue</span>
\u2502  \u251C\u2500 refs
\u2502  \u251C\u2500 blobs
\u2502  \u251C\u2500 snapshots
<span class="hljs-string">...</span>`}}),Ae=new U({}),De=new U({}),Se=new U({}),xe=new q({props:{code:"<CACHE_DIR>/<REPO_NAME>/snapshots/aaaaaa/README.md",highlighted:'&lt;CACHE_DIR&gt;<span class="hljs-regexp">/&lt;REPO_NAME&gt;/</span>snapshots<span class="hljs-regexp">/aaaaaa/</span>README.md'}}),Oe=new U({}),He=new q({props:{code:`    [  96]  .
    \u2514\u2500\u2500 [ 160]  models--julien-c--EsperBERTo-small
        \u251C\u2500\u2500 [ 160]  blobs
        \u2502   \u251C\u2500\u2500 [321M]  403450e234d65943a7dcf7e05a771ce3c92faa84dd07db4ac20f592037a1e4bd
        \u2502   \u251C\u2500\u2500 [ 398]  7cb18dc9bafbfcf74629a4b760af1b160957a83e
        \u2502   \u2514\u2500\u2500 [1.4K]  d7edf6bd2a681fb0175f7735299831ee1b22b812
        \u251C\u2500\u2500 [  96]  refs
        \u2502   \u2514\u2500\u2500 [  40]  main
        \u2514\u2500\u2500 [ 128]  snapshots
            \u251C\u2500\u2500 [ 128]  2439f60ef33a0d46d85da5001d52aeda5b00ce9f
            \u2502   \u251C\u2500\u2500 [  52]  README.md -> ../../blobs/d7edf6bd2a681fb0175f7735299831ee1b22b812
            \u2502   \u2514\u2500\u2500 [  76]  pytorch_model.bin -> ../../blobs/403450e234d65943a7dcf7e05a771ce3c92faa84dd07db4ac20f592037a1e4bd
            \u2514\u2500\u2500 [ 128]  bbc77c8132af1cc5cf678da3f1ddf2de43606d48
                \u251C\u2500\u2500 [  52]  README.md -> ../../blobs/7cb18dc9bafbfcf74629a4b760af1b160957a83e
                \u2514\u2500\u2500 [  76]  pytorch_model.bin -> ../../blobs/403450e234d65943a7dcf7e05a771ce3c92faa84dd07db4ac20f592037a1e4bd`,highlighted:`    [  96]  .
    \u2514\u2500\u2500 [ 160]  models--julien-c--EsperBERTo-small
        \u251C\u2500\u2500 [ 160]  blobs
        \u2502   \u251C\u2500\u2500 [321M]  403450e234d65943a7dcf7e05a771ce3c92faa84dd07db4ac20f592037a1e4bd
        \u2502   \u251C\u2500\u2500 [ 398]  7cb18dc9bafbfcf74629a4b760af1b160957a83e
        \u2502   \u2514\u2500\u2500 [1.4K]  d7edf6bd2a681fb0175f7735299831ee1b22b812
        \u251C\u2500\u2500 [  96]  refs
        \u2502   \u2514\u2500\u2500 [  40]  main
        \u2514\u2500\u2500 [ 128]  snapshots
            \u251C\u2500\u2500 [ 128]  2439f60ef33a0d46d85da5001d52aeda5b00ce9f
            \u2502   \u251C\u2500\u2500 [  52]  README.md -&gt; ../../blobs/d7edf6bd2a681fb0175f7735299831ee1b22b812
            \u2502   \u2514\u2500\u2500 [  76]  pytorch_model.bin -&gt; ../../blobs/403450e234d65943a7dcf7e05a771ce3c92faa84dd07db4ac20f592037a1e4bd
            \u2514\u2500\u2500 [ 128]  bbc77c8132af1cc5cf678da3f1ddf2de43606d48
                \u251C\u2500\u2500 [  52]  README.md -&gt; ../../blobs/7cb18dc9bafbfcf74629a4b760af1b160957a83e
                \u2514\u2500\u2500 [  76]  pytorch_model.bin -&gt; ../../blobs/403450e234d65943a7dcf7e05a771ce3c92faa84dd07db4ac20f592037a1e4bd`}}),Re=new U({}),Ue=new U({}),Te=new q({props:{code:`\u279C huggingface-cli scan-cache
REPO ID                     REPO TYPE SIZE ON DISK NB FILES REFS                LOCAL PATH
--------------------------- --------- ------------ -------- ------------------- -------------------------------------------------------------------------
glue                        dataset         116.3K       15 2.4.0, main, 1.17.0 /Users/lucain/.cache/huggingface/hub/datasets--glue
google/fleurs               dataset          64.9M        6 refs/pr/1, main     /Users/lucain/.cache/huggingface/hub/datasets--google--fleurs
Jean-Baptiste/camembert-ner model           441.0M        7 main                /Users/lucain/.cache/huggingface/hub/models--Jean-Baptiste--camembert-ner
bert-base-cased             model             1.9G       13 main                /Users/lucain/.cache/huggingface/hub/models--bert-base-cased
t5-base                     model            10.1K        3 main                /Users/lucain/.cache/huggingface/hub/models--t5-base
t5-small                    model           970.7M       11 refs/pr/1, main     /Users/lucain/.cache/huggingface/hub/models--t5-small

Done in 0.0s. Scanned 6 repo(s) for a total of 3.4G.
Got 1 warning(s) while scanning. Use -vvv to print details.`,highlighted:`\u279C huggingface-cli scan-cache
REPO ID                     REPO TYPE SIZE ON DISK NB FILES REFS                LOCAL PATH
--------------------------- --------- ------------ -------- ------------------- -------------------------------------------------------------------------
glue                        dataset         116.3K       15 2.4.0, main, 1.17.0 /Users/lucain/.cache/huggingface/hub/datasets--glue
google/fleurs               dataset          64.9M        6 refs/pr/1, main     /Users/lucain/.cache/huggingface/hub/datasets--google--fleurs
Jean-Baptiste/camembert-ner model           441.0M        7 main                /Users/lucain/.cache/huggingface/hub/models--Jean-Baptiste--camembert-ner
bert-base-cased             model             1.9G       13 main                /Users/lucain/.cache/huggingface/hub/models--bert-base-cased
t5-base                     model            10.1K        3 main                /Users/lucain/.cache/huggingface/hub/models--t5-base
t5-small                    model           970.7M       11 refs/pr/1, main     /Users/lucain/.cache/huggingface/hub/models--t5-small

Done in 0.0s. Scanned 6 repo(s) for a total of 3.4G.
Got 1 warning(s) while scanning. Use -vvv to print details.`}}),Me=new q({props:{code:`\u279C huggingface-cli scan-cache -v
REPO ID                     REPO TYPE REVISION                                 SIZE ON DISK NB FILES REFS        LOCAL PATH
--------------------------- --------- ---------------------------------------- ------------ -------- ----------- ----------------------------------------------------------------------------------------------------------------------------
glue                        dataset   9338f7b671827df886678df2bdd7cc7b4f36dffd        97.7K       14 main, 2.4.0 /Users/lucain/.cache/huggingface/hub/datasets--glue/snapshots/9338f7b671827df886678df2bdd7cc7b4f36dffd
glue                        dataset   f021ae41c879fcabcf823648ec685e3fead91fe7        97.8K       14 1.17.0      /Users/lucain/.cache/huggingface/hub/datasets--glue/snapshots/f021ae41c879fcabcf823648ec685e3fead91fe7
google/fleurs               dataset   129b6e96cf1967cd5d2b9b6aec75ce6cce7c89e8        25.4K        3 refs/pr/1   /Users/lucain/.cache/huggingface/hub/datasets--google--fleurs/snapshots/129b6e96cf1967cd5d2b9b6aec75ce6cce7c89e8
google/fleurs               dataset   24f85a01eb955224ca3946e70050869c56446805        64.9M        4 main        /Users/lucain/.cache/huggingface/hub/datasets--google--fleurs/snapshots/24f85a01eb955224ca3946e70050869c56446805
Jean-Baptiste/camembert-ner model     dbec8489a1c44ecad9da8a9185115bccabd799fe       441.0M        7 main        /Users/lucain/.cache/huggingface/hub/models--Jean-Baptiste--camembert-ner/snapshots/dbec8489a1c44ecad9da8a9185115bccabd799fe
bert-base-cased             model     378aa1bda6387fd00e824948ebe3488630ad8565         1.5G        9             /Users/lucain/.cache/huggingface/hub/models--bert-base-cased/snapshots/378aa1bda6387fd00e824948ebe3488630ad8565
bert-base-cased             model     a8d257ba9925ef39f3036bfc338acf5283c512d9         1.4G        9 main        /Users/lucain/.cache/huggingface/hub/models--bert-base-cased/snapshots/a8d257ba9925ef39f3036bfc338acf5283c512d9
t5-base                     model     23aa4f41cb7c08d4b05c8f327b22bfa0eb8c7ad9        10.1K        3 main        /Users/lucain/.cache/huggingface/hub/models--t5-base/snapshots/23aa4f41cb7c08d4b05c8f327b22bfa0eb8c7ad9
t5-small                    model     98ffebbb27340ec1b1abd7c45da12c253ee1882a       726.2M        6 refs/pr/1   /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/98ffebbb27340ec1b1abd7c45da12c253ee1882a
t5-small                    model     d0a119eedb3718e34c648e594394474cf95e0617       485.8M        6             /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d0a119eedb3718e34c648e594394474cf95e0617
t5-small                    model     d78aea13fa7ecd06c29e3e46195d6341255065d5       970.7M        9 main        /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d78aea13fa7ecd06c29e3e46195d6341255065d5

Done in 0.0s. Scanned 6 repo(s) for a total of 3.4G.
Got 1 warning(s) while scanning. Use -vvv to print details.`,highlighted:`\u279C huggingface-cli scan-cache -v
REPO ID                     REPO TYPE REVISION                                 SIZE ON DISK NB FILES REFS        LOCAL PATH
--------------------------- --------- ---------------------------------------- ------------ -------- ----------- ----------------------------------------------------------------------------------------------------------------------------
glue                        dataset   9338f7b671827df886678df2bdd7cc7b4f36dffd        97.7K       14 main, 2.4.0 /Users/lucain/.cache/huggingface/hub/datasets--glue/snapshots/9338f7b671827df886678df2bdd7cc7b4f36dffd
glue                        dataset   f021ae41c879fcabcf823648ec685e3fead91fe7        97.8K       14 1.17.0      /Users/lucain/.cache/huggingface/hub/datasets--glue/snapshots/f021ae41c879fcabcf823648ec685e3fead91fe7
google/fleurs               dataset   129b6e96cf1967cd5d2b9b6aec75ce6cce7c89e8        25.4K        3 refs/pr/1   /Users/lucain/.cache/huggingface/hub/datasets--google--fleurs/snapshots/129b6e96cf1967cd5d2b9b6aec75ce6cce7c89e8
google/fleurs               dataset   24f85a01eb955224ca3946e70050869c56446805        64.9M        4 main        /Users/lucain/.cache/huggingface/hub/datasets--google--fleurs/snapshots/24f85a01eb955224ca3946e70050869c56446805
Jean-Baptiste/camembert-ner model     dbec8489a1c44ecad9da8a9185115bccabd799fe       441.0M        7 main        /Users/lucain/.cache/huggingface/hub/models--Jean-Baptiste--camembert-ner/snapshots/dbec8489a1c44ecad9da8a9185115bccabd799fe
bert-base-cased             model     378aa1bda6387fd00e824948ebe3488630ad8565         1.5G        9             /Users/lucain/.cache/huggingface/hub/models--bert-base-cased/snapshots/378aa1bda6387fd00e824948ebe3488630ad8565
bert-base-cased             model     a8d257ba9925ef39f3036bfc338acf5283c512d9         1.4G        9 main        /Users/lucain/.cache/huggingface/hub/models--bert-base-cased/snapshots/a8d257ba9925ef39f3036bfc338acf5283c512d9
t5-base                     model     23aa4f41cb7c08d4b05c8f327b22bfa0eb8c7ad9        10.1K        3 main        /Users/lucain/.cache/huggingface/hub/models--t5-base/snapshots/23aa4f41cb7c08d4b05c8f327b22bfa0eb8c7ad9
t5-small                    model     98ffebbb27340ec1b1abd7c45da12c253ee1882a       726.2M        6 refs/pr/1   /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/98ffebbb27340ec1b1abd7c45da12c253ee1882a
t5-small                    model     d0a119eedb3718e34c648e594394474cf95e0617       485.8M        6             /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d0a119eedb3718e34c648e594394474cf95e0617
t5-small                    model     d78aea13fa7ecd06c29e3e46195d6341255065d5       970.7M        9 main        /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d78aea13fa7ecd06c29e3e46195d6341255065d5

Done in 0.0s. Scanned 6 repo(s) for a total of 3.4G.
Got 1 warning(s) while scanning. Use -vvv to print details.`}}),Fe=new U({}),Ne=new q({props:{code:`\u279C eval "huggingface-cli scan-cache -v" | grep "t5-small"
t5-small                    model     98ffebbb27340ec1b1abd7c45da12c253ee1882a       726.2M        6 refs/pr/1   /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/98ffebbb27340ec1b1abd7c45da12c253ee1882a
t5-small                    model     d0a119eedb3718e34c648e594394474cf95e0617       485.8M        6             /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d0a119eedb3718e34c648e594394474cf95e0617
t5-small                    model     d78aea13fa7ecd06c29e3e46195d6341255065d5       970.7M        9 main        /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d78aea13fa7ecd06c29e3e46195d6341255065d5`,highlighted:`\u279C eval &quot;huggingface-cli scan-cache -v&quot; | grep &quot;t5-small&quot;
t5-small                    model     98ffebbb27340ec1b1abd7c45da12c253ee1882a       726.2M        6 refs/pr/1   /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/98ffebbb27340ec1b1abd7c45da12c253ee1882a
t5-small                    model     d0a119eedb3718e34c648e594394474cf95e0617       485.8M        6             /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d0a119eedb3718e34c648e594394474cf95e0617
t5-small                    model     d78aea13fa7ecd06c29e3e46195d6341255065d5       970.7M        9 main        /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d78aea13fa7ecd06c29e3e46195d6341255065d5`}}),Ge=new U({}),Be=new q({props:{code:`from huggingface_hub import scan_cache_dir

hf_cache_info = scan_cache_dir()`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> scan_cache_dir

<span class="hljs-meta">&gt;&gt;&gt; </span>hf_cache_info = scan_cache_dir()
HFCacheInfo(
    size_on_disk=<span class="hljs-number">3398085269</span>,
    repos=<span class="hljs-built_in">frozenset</span>({
        CachedRepoInfo(
            repo_id=<span class="hljs-string">&#x27;t5-small&#x27;</span>,
            repo_type=<span class="hljs-string">&#x27;model&#x27;</span>,
            repo_path=PosixPath(...),
            size_on_disk=<span class="hljs-number">970726914</span>,
            nb_files=<span class="hljs-number">11</span>,
            revisions=<span class="hljs-built_in">frozenset</span>({
                CachedRevisionInfo(
                    commit_hash=<span class="hljs-string">&#x27;d78aea13fa7ecd06c29e3e46195d6341255065d5&#x27;</span>,
                    size_on_disk=<span class="hljs-number">970726339</span>,
                    snapshot_path=PosixPath(...),
                    files=<span class="hljs-built_in">frozenset</span>({
                        CachedFileInfo(
                            file_name=<span class="hljs-string">&#x27;config.json&#x27;</span>,
                            size_on_disk=<span class="hljs-number">1197</span>
                            file_path=PosixPath(...),
                            blob_path=PosixPath(...),
                        ),
                        CachedFileInfo(...),
                        ...
                    }),
                ),
                CachedRevisionInfo(...),
                ...
            }),
        ),
        CachedRepoInfo(...),
        ...
    }),
    warnings=[
        CorruptedCacheException(<span class="hljs-string">&quot;Snapshots dir doesn&#x27;t exist in cached repo: ...&quot;</span>),
        CorruptedCacheException(...),
        ...
    ],
)`}}),qe=new U({}),Je=new q({props:{code:`from huggingface_hub import scan_cache_dir

delete_strategy = scan_cache_dir().delete_revisions(
    "81fd1d6e7847c99f5862c9fb81387956d99ec7aa"
    "e2983b237dccf3ab4937c97fa717319a9ca1a96d",
    "6c0e6080953db56375760c0471a8c5f2929baf11",
)
print("Will free " + delete_strategy.expected_freed_size_str)

delete_strategy.execute()`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> scan_cache_dir

<span class="hljs-meta">&gt;&gt;&gt; </span>delete_strategy = scan_cache_dir().delete_revisions(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;81fd1d6e7847c99f5862c9fb81387956d99ec7aa&quot;</span>
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;e2983b237dccf3ab4937c97fa717319a9ca1a96d&quot;</span>,
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;6c0e6080953db56375760c0471a8c5f2929baf11&quot;</span>,
<span class="hljs-meta">... </span>)
<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Will free &quot;</span> + delete_strategy.expected_freed_size_str)
Will free <span class="hljs-number">8.6</span>G

<span class="hljs-meta">&gt;&gt;&gt; </span>delete_strategy.execute()
Cache deletion done. Saved <span class="hljs-number">8.6</span>G.`}}),_e=new _c({props:{$$slots:{default:[Cc]},$$scope:{ctx:Ze}}}),Ee=new _c({props:{warning:!0,$$slots:{default:[jc]},$$scope:{ctx:Ze}}}),{c(){p=o("meta"),D=h(),E=o("h1"),y=o("a"),A=o("span"),m(w.$$.fragment),k=h(),C=o("span"),K=t("Manage "),j=o("code"),We=t("huggingface_hub"),Ve=t(" cache-system"),Ds=h(),z=o("h2"),se=o("a"),Ia=o("span"),m(Ce.$$.fragment),Vt=h(),Pa=o("span"),Qt=t("Understand caching"),Ss=h(),Qe=o("p"),Xt=t(`The Hugging Face Hub cache-system is designed to be the central cache shared across libraries
that depend on the Hub. It has been updated in v0.8.0 to prevent re-downloading same files
between revisions.`),xs=h(),Xe=o("p"),el=t("The caching system is designed as follows:"),Os=h(),m(je.$$.fragment),Hs=h(),I=o("p"),al=t("The "),Aa=o("code"),sl=t("<CACHE_DIR>"),tl=t(` is usually your user\u2019s home directory. However, it is customizable with the
`),Da=o("code"),ll=t("cache_dir"),ol=t(" argument on all methods, or by specifying either "),Sa=o("code"),nl=t("HF_HOME"),il=t(` or
`),xa=o("code"),cl=t("HUGGINGFACE_HUB_CACHE"),rl=t(" environment variable."),Rs=h(),ea=o("p"),hl=t(`Models, datasets and spaces share a common root. Each of these repositories contains the
repository type, the namespace (organization or username) if it exists and the
repository name:`),Us=h(),m(Ie.$$.fragment),Ts=h(),aa=o("p"),fl=t(`It is within these folders that all files will now be downloaded from the Hub. Caching ensures that
a file isn\u2019t downloaded twice if it already exists and wasn\u2019t updated; but if it was updated,
and you\u2019re asking for the latest file, then it will download the latest file (while keeping
the previous file intact in case you need it again).`),Ms=h(),sa=o("p"),dl=t("In order to achieve this, all folders contain the same skeleton:"),Fs=h(),m(Pe.$$.fragment),Ns=h(),ta=o("p"),pl=t("Each folder is designed to contain the following:"),Gs=h(),J=o("h3"),te=o("a"),Oa=o("span"),m(Ae.$$.fragment),ml=h(),Ha=o("span"),ul=t("Refs"),Ls=h(),P=o("p"),bl=t("The "),Ra=o("code"),gl=t("refs"),vl=t(` folder contains files which indicates the latest revision of the given reference. For example,
if we have previously fetched a file from the `),Ua=o("code"),_l=t("main"),El=t(" branch of a repository, the "),Ta=o("code"),wl=t("refs"),yl=t(`
folder will contain a file named `),Ma=o("code"),$l=t("main"),kl=t(", which will itself contain the commit identifier of the current head."),Bs=h(),S=o("p"),Cl=t("If the latest commit of "),Fa=o("code"),jl=t("main"),Il=t(" has "),Na=o("code"),Pl=t("aaaaaa"),Al=t(" as identifier, then it will contain "),Ga=o("code"),Dl=t("aaaaaa"),Sl=t("."),qs=h(),x=o("p"),xl=t("If that same branch gets updated with a new commit, that has "),La=o("code"),Ol=t("bbbbbb"),Hl=t(` as an identifier, then
re-downloading a file from that reference will update the `),Ba=o("code"),Rl=t("refs/main"),Ul=t(" file to contain "),qa=o("code"),Tl=t("bbbbbb"),Ml=t("."),Ks=h(),Y=o("h3"),le=o("a"),Ka=o("span"),m(De.$$.fragment),Fl=h(),za=o("span"),Nl=t("Blobs"),zs=h(),oe=o("p"),Gl=t("The "),Ja=o("code"),Ll=t("blobs"),Bl=t(" folder contains the actual files that we have downloaded. The name of each file is their hash."),Js=h(),Z=o("h3"),ne=o("a"),Ya=o("span"),m(Se.$$.fragment),ql=h(),Za=o("span"),Kl=t("Snapshots"),Ys=h(),ie=o("p"),zl=t("The "),Wa=o("code"),Jl=t("snapshots"),Yl=t(` folder contains symlinks to the blobs mentioned above. It is itself made up of several folders:
one per known revision!`),Zs=h(),$=o("p"),Zl=t("In the explanation above, we had initially fetched a file from the "),Va=o("code"),Wl=t("aaaaaa"),Vl=t(` revision, before fetching a file from
the `),Qa=o("code"),Ql=t("bbbbbb"),Xl=t(" revision. In this situation, we would now have two folders in the "),Xa=o("code"),eo=t("snapshots"),ao=t(" folder: "),es=o("code"),so=t("aaaaaa"),to=t(`
and `),as=o("code"),lo=t("bbbbbb"),oo=t("."),Ws=h(),T=o("p"),no=t(`In each of these folders, live symlinks that have the names of the files that we have downloaded. For example,
if we had downloaded the `),ss=o("code"),io=t("README.md"),co=t(" file at revision "),ts=o("code"),ro=t("aaaaaa"),ho=t(", we would have the following path:"),Vs=h(),m(xe.$$.fragment),Qs=h(),ce=o("p"),fo=t("That "),ls=o("code"),po=t("README.md"),mo=t(" file is actually a symlink linking to the blob that has the hash of the file."),Xs=h(),re=o("p"),uo=t(`By creating the skeleton this way we open the mechanism to file sharing: if the same file was fetched in
revision `),os=o("code"),bo=t("bbbbbb"),go=t(", it would have the same hash and the file would not need to be re-downloaded."),et=h(),W=o("h3"),he=o("a"),ns=o("span"),m(Oe.$$.fragment),vo=h(),is=o("span"),_o=t("In practice"),at=h(),la=o("p"),Eo=t("In practice, your cache should look like the following tree:"),st=h(),m(He.$$.fragment),tt=h(),V=o("h2"),fe=o("a"),cs=o("span"),m(Re.$$.fragment),wo=h(),rs=o("span"),yo=t("Scan your cache"),lt=h(),M=o("p"),$o=t(`At the moment, cached files are never deleted from your local directory: when you download
a new revision of a branch, previous files are kept in case you need them again.
Therefore it can be useful to scan your cache directory in order to know which repos
and revisions are taking the most disk space. `),hs=o("code"),ko=t("huggingface_hub"),Co=t(` provides an helper to
do so that can be used via `),fs=o("code"),jo=t("huggingface-cli"),Io=t(" or in a python script."),ot=h(),Q=o("h3"),de=o("a"),ds=o("span"),m(Ue.$$.fragment),Po=h(),ps=o("span"),Ao=t("From the terminal"),nt=h(),F=o("p"),Do=t("The easiest way to scan your HF cache-system is to use the "),ms=o("code"),So=t("scan-cache"),xo=t(` command from
`),us=o("code"),Oo=t("huggingface-cli"),Ho=t(` tool. This command scans the cache and prints a report with information
like repo id, repo type, disk usage, refs and full local path.`),it=h(),oa=o("p"),Ro=t(`The snippet below shows a scan report in a folder in which 4 models and 2 datasets are
cached.`),ct=h(),m(Te.$$.fragment),rt=h(),N=o("p"),Uo=t("To get a more detailed report, use the "),bs=o("code"),To=t("--verbose"),Mo=t(` option. For each repo, you get a
list of all revisions that have been downloaded. As explained above, the files that don\u2019t
change between 2 revisions are shared thanks to the symlinks. This means that the size of
the repo on disk is expected to be less than the sum of the size of each of its revisions.
For example, here `),gs=o("code"),Fo=t("bert-base-cased"),No=t(` has 2 revisions of 1.4G and 1.5G but the total disk
usage is only 1.9G.`),ht=h(),m(Me.$$.fragment),ft=h(),X=o("h4"),pe=o("a"),vs=o("span"),m(Fe.$$.fragment),Go=h(),_s=o("span"),Lo=t("Grep example"),dt=h(),me=o("p"),Bo=t("Since the output is in tabular format, you can combine it with any "),Es=o("code"),qo=t("grep"),Ko=t(`-like tools to
filter the entries. Here is an example to filter only revisions from the \u201Ct5-small\u201D
model on a Unix-based machine.`),pt=h(),m(Ne.$$.fragment),mt=h(),ee=o("h3"),ue=o("a"),ws=o("span"),m(Ge.$$.fragment),zo=h(),ys=o("span"),Jo=t("From Python"),ut=h(),be=o("p"),Yo=t("For a more advanced usage, use "),na=o("a"),Zo=t("scan_cache_dir()"),Wo=t(` which is the python utility called by
the CLI tool.`),bt=h(),ia=o("p"),Vo=t("You can use it to get a detailed report structured around 4 dataclasses:"),gt=h(),O=o("ul"),Le=o("li"),ca=o("a"),Qo=t("HFCacheInfo"),Xo=t(": complete report returned by "),ra=o("a"),en=t("scan_cache_dir()"),an=h(),ha=o("li"),fa=o("a"),sn=t("CachedRepoInfo"),tn=t(": information about a cached repo"),ln=h(),da=o("li"),pa=o("a"),on=t("CachedRevisionInfo"),nn=t(": information about a cached revision (e.g. \u201Csnapshot\u201D) inside a repo"),cn=h(),ma=o("li"),ua=o("a"),rn=t("CachedFileInfo"),hn=t(": information about a cached file in a snapshot"),vt=h(),ba=o("p"),fn=t("Here is a simple usage example. See reference for details."),_t=h(),m(Be.$$.fragment),Et=h(),ae=o("h2"),ge=o("a"),$s=o("span"),m(qe.$$.fragment),dn=h(),ks=o("span"),pn=t("Clean your cache"),wt=h(),G=o("p"),mn=t(`Scanning your cache is interesting but what you really want to do next is usually to
delete some portions to free up some space on your drive. This is possible using the
`),ga=o("a"),un=t("delete_revisions()"),bn=t(" helper from "),va=o("a"),gn=t("HFCacheInfo"),vn=t(` object returned when
scanning the cache.`),yt=h(),ve=o("p"),_n=t(`Pass a list of revisions to delete and the tool will define a strategy to free up the
space. It returns a `),_a=o("a"),En=t("DeleteCacheStrategy"),wn=t(` object that describes which files and
folders will be deleted and the expected freed space. Once you agree with the deletion,
you must execute it to make the deletion effective. In order to avoid discrepancies, you
cannot edit a strategy manually.`),$t=h(),Ea=o("p"),yn=t("The strategy to delete revisions is the following:"),kt=h(),H=o("ul"),Ke=o("li"),$n=t("the "),Cs=o("code"),kn=t("snapshot"),Cn=t(" folder containing the revision symlinks is deleted."),jn=h(),js=o("li"),In=t("blobs files that are targeted only by revisions to be deleted are deleted as well."),Pn=h(),ze=o("li"),An=t("if a revision is linked to 1 or more "),Is=o("code"),Dn=t("refs"),Sn=t(", references are deleted."),xn=h(),Ps=o("li"),On=t("if all revisions from a repo are deleted, the entire cached repository is deleted."),Ct=h(),wa=o("p"),Hn=t("Here is a simple usage example. See reference for details."),jt=h(),m(Je.$$.fragment),It=h(),m(_e.$$.fragment),Pt=h(),m(Ee.$$.fragment),this.h()},l(e){const c=$c('[data-svelte="svelte-1phssyn"]',document.head);p=n(c,"META",{name:!0,content:!0}),c.forEach(s),D=f(e),E=n(e,"H1",{class:!0});var Ye=i(E);y=n(Ye,"A",{id:!0,class:!0,href:!0});var As=i(y);A=n(As,"SPAN",{});var Mn=i(A);u(w.$$.fragment,Mn),Mn.forEach(s),As.forEach(s),k=f(Ye),C=n(Ye,"SPAN",{});var Dt=i(C);K=l(Dt,"Manage "),j=n(Dt,"CODE",{});var Fn=i(j);We=l(Fn,"huggingface_hub"),Fn.forEach(s),Ve=l(Dt," cache-system"),Dt.forEach(s),Ye.forEach(s),Ds=f(e),z=n(e,"H2",{class:!0});var St=i(z);se=n(St,"A",{id:!0,class:!0,href:!0});var Nn=i(se);Ia=n(Nn,"SPAN",{});var Gn=i(Ia);u(Ce.$$.fragment,Gn),Gn.forEach(s),Nn.forEach(s),Vt=f(St),Pa=n(St,"SPAN",{});var Ln=i(Pa);Qt=l(Ln,"Understand caching"),Ln.forEach(s),St.forEach(s),Ss=f(e),Qe=n(e,"P",{});var Bn=i(Qe);Xt=l(Bn,`The Hugging Face Hub cache-system is designed to be the central cache shared across libraries
that depend on the Hub. It has been updated in v0.8.0 to prevent re-downloading same files
between revisions.`),Bn.forEach(s),xs=f(e),Xe=n(e,"P",{});var qn=i(Xe);el=l(qn,"The caching system is designed as follows:"),qn.forEach(s),Os=f(e),u(je.$$.fragment,e),Hs=f(e),I=n(e,"P",{});var L=i(I);al=l(L,"The "),Aa=n(L,"CODE",{});var Kn=i(Aa);sl=l(Kn,"<CACHE_DIR>"),Kn.forEach(s),tl=l(L,` is usually your user\u2019s home directory. However, it is customizable with the
`),Da=n(L,"CODE",{});var zn=i(Da);ll=l(zn,"cache_dir"),zn.forEach(s),ol=l(L," argument on all methods, or by specifying either "),Sa=n(L,"CODE",{});var Jn=i(Sa);nl=l(Jn,"HF_HOME"),Jn.forEach(s),il=l(L,` or
`),xa=n(L,"CODE",{});var Yn=i(xa);cl=l(Yn,"HUGGINGFACE_HUB_CACHE"),Yn.forEach(s),rl=l(L," environment variable."),L.forEach(s),Rs=f(e),ea=n(e,"P",{});var Zn=i(ea);hl=l(Zn,`Models, datasets and spaces share a common root. Each of these repositories contains the
repository type, the namespace (organization or username) if it exists and the
repository name:`),Zn.forEach(s),Us=f(e),u(Ie.$$.fragment,e),Ts=f(e),aa=n(e,"P",{});var Wn=i(aa);fl=l(Wn,`It is within these folders that all files will now be downloaded from the Hub. Caching ensures that
a file isn\u2019t downloaded twice if it already exists and wasn\u2019t updated; but if it was updated,
and you\u2019re asking for the latest file, then it will download the latest file (while keeping
the previous file intact in case you need it again).`),Wn.forEach(s),Ms=f(e),sa=n(e,"P",{});var Vn=i(sa);dl=l(Vn,"In order to achieve this, all folders contain the same skeleton:"),Vn.forEach(s),Fs=f(e),u(Pe.$$.fragment,e),Ns=f(e),ta=n(e,"P",{});var Qn=i(ta);pl=l(Qn,"Each folder is designed to contain the following:"),Qn.forEach(s),Gs=f(e),J=n(e,"H3",{class:!0});var xt=i(J);te=n(xt,"A",{id:!0,class:!0,href:!0});var Xn=i(te);Oa=n(Xn,"SPAN",{});var ei=i(Oa);u(Ae.$$.fragment,ei),ei.forEach(s),Xn.forEach(s),ml=f(xt),Ha=n(xt,"SPAN",{});var ai=i(Ha);ul=l(ai,"Refs"),ai.forEach(s),xt.forEach(s),Ls=f(e),P=n(e,"P",{});var B=i(P);bl=l(B,"The "),Ra=n(B,"CODE",{});var si=i(Ra);gl=l(si,"refs"),si.forEach(s),vl=l(B,` folder contains files which indicates the latest revision of the given reference. For example,
if we have previously fetched a file from the `),Ua=n(B,"CODE",{});var ti=i(Ua);_l=l(ti,"main"),ti.forEach(s),El=l(B," branch of a repository, the "),Ta=n(B,"CODE",{});var li=i(Ta);wl=l(li,"refs"),li.forEach(s),yl=l(B,`
folder will contain a file named `),Ma=n(B,"CODE",{});var oi=i(Ma);$l=l(oi,"main"),oi.forEach(s),kl=l(B,", which will itself contain the commit identifier of the current head."),B.forEach(s),Bs=f(e),S=n(e,"P",{});var we=i(S);Cl=l(we,"If the latest commit of "),Fa=n(we,"CODE",{});var ni=i(Fa);jl=l(ni,"main"),ni.forEach(s),Il=l(we," has "),Na=n(we,"CODE",{});var ii=i(Na);Pl=l(ii,"aaaaaa"),ii.forEach(s),Al=l(we," as identifier, then it will contain "),Ga=n(we,"CODE",{});var ci=i(Ga);Dl=l(ci,"aaaaaa"),ci.forEach(s),Sl=l(we,"."),we.forEach(s),qs=f(e),x=n(e,"P",{});var ye=i(x);xl=l(ye,"If that same branch gets updated with a new commit, that has "),La=n(ye,"CODE",{});var ri=i(La);Ol=l(ri,"bbbbbb"),ri.forEach(s),Hl=l(ye,` as an identifier, then
re-downloading a file from that reference will update the `),Ba=n(ye,"CODE",{});var hi=i(Ba);Rl=l(hi,"refs/main"),hi.forEach(s),Ul=l(ye," file to contain "),qa=n(ye,"CODE",{});var fi=i(qa);Tl=l(fi,"bbbbbb"),fi.forEach(s),Ml=l(ye,"."),ye.forEach(s),Ks=f(e),Y=n(e,"H3",{class:!0});var Ot=i(Y);le=n(Ot,"A",{id:!0,class:!0,href:!0});var di=i(le);Ka=n(di,"SPAN",{});var pi=i(Ka);u(De.$$.fragment,pi),pi.forEach(s),di.forEach(s),Fl=f(Ot),za=n(Ot,"SPAN",{});var mi=i(za);Nl=l(mi,"Blobs"),mi.forEach(s),Ot.forEach(s),zs=f(e),oe=n(e,"P",{});var Ht=i(oe);Gl=l(Ht,"The "),Ja=n(Ht,"CODE",{});var ui=i(Ja);Ll=l(ui,"blobs"),ui.forEach(s),Bl=l(Ht," folder contains the actual files that we have downloaded. The name of each file is their hash."),Ht.forEach(s),Js=f(e),Z=n(e,"H3",{class:!0});var Rt=i(Z);ne=n(Rt,"A",{id:!0,class:!0,href:!0});var bi=i(ne);Ya=n(bi,"SPAN",{});var gi=i(Ya);u(Se.$$.fragment,gi),gi.forEach(s),bi.forEach(s),ql=f(Rt),Za=n(Rt,"SPAN",{});var vi=i(Za);Kl=l(vi,"Snapshots"),vi.forEach(s),Rt.forEach(s),Ys=f(e),ie=n(e,"P",{});var Ut=i(ie);zl=l(Ut,"The "),Wa=n(Ut,"CODE",{});var _i=i(Wa);Jl=l(_i,"snapshots"),_i.forEach(s),Yl=l(Ut,` folder contains symlinks to the blobs mentioned above. It is itself made up of several folders:
one per known revision!`),Ut.forEach(s),Zs=f(e),$=n(e,"P",{});var R=i($);Zl=l(R,"In the explanation above, we had initially fetched a file from the "),Va=n(R,"CODE",{});var Ei=i(Va);Wl=l(Ei,"aaaaaa"),Ei.forEach(s),Vl=l(R,` revision, before fetching a file from
the `),Qa=n(R,"CODE",{});var wi=i(Qa);Ql=l(wi,"bbbbbb"),wi.forEach(s),Xl=l(R," revision. In this situation, we would now have two folders in the "),Xa=n(R,"CODE",{});var yi=i(Xa);eo=l(yi,"snapshots"),yi.forEach(s),ao=l(R," folder: "),es=n(R,"CODE",{});var $i=i(es);so=l($i,"aaaaaa"),$i.forEach(s),to=l(R,`
and `),as=n(R,"CODE",{});var ki=i(as);lo=l(ki,"bbbbbb"),ki.forEach(s),oo=l(R,"."),R.forEach(s),Ws=f(e),T=n(e,"P",{});var ya=i(T);no=l(ya,`In each of these folders, live symlinks that have the names of the files that we have downloaded. For example,
if we had downloaded the `),ss=n(ya,"CODE",{});var Ci=i(ss);io=l(Ci,"README.md"),Ci.forEach(s),co=l(ya," file at revision "),ts=n(ya,"CODE",{});var ji=i(ts);ro=l(ji,"aaaaaa"),ji.forEach(s),ho=l(ya,", we would have the following path:"),ya.forEach(s),Vs=f(e),u(xe.$$.fragment,e),Qs=f(e),ce=n(e,"P",{});var Tt=i(ce);fo=l(Tt,"That "),ls=n(Tt,"CODE",{});var Ii=i(ls);po=l(Ii,"README.md"),Ii.forEach(s),mo=l(Tt," file is actually a symlink linking to the blob that has the hash of the file."),Tt.forEach(s),Xs=f(e),re=n(e,"P",{});var Mt=i(re);uo=l(Mt,`By creating the skeleton this way we open the mechanism to file sharing: if the same file was fetched in
revision `),os=n(Mt,"CODE",{});var Pi=i(os);bo=l(Pi,"bbbbbb"),Pi.forEach(s),go=l(Mt,", it would have the same hash and the file would not need to be re-downloaded."),Mt.forEach(s),et=f(e),W=n(e,"H3",{class:!0});var Ft=i(W);he=n(Ft,"A",{id:!0,class:!0,href:!0});var Ai=i(he);ns=n(Ai,"SPAN",{});var Di=i(ns);u(Oe.$$.fragment,Di),Di.forEach(s),Ai.forEach(s),vo=f(Ft),is=n(Ft,"SPAN",{});var Si=i(is);_o=l(Si,"In practice"),Si.forEach(s),Ft.forEach(s),at=f(e),la=n(e,"P",{});var xi=i(la);Eo=l(xi,"In practice, your cache should look like the following tree:"),xi.forEach(s),st=f(e),u(He.$$.fragment,e),tt=f(e),V=n(e,"H2",{class:!0});var Nt=i(V);fe=n(Nt,"A",{id:!0,class:!0,href:!0});var Oi=i(fe);cs=n(Oi,"SPAN",{});var Hi=i(cs);u(Re.$$.fragment,Hi),Hi.forEach(s),Oi.forEach(s),wo=f(Nt),rs=n(Nt,"SPAN",{});var Ri=i(rs);yo=l(Ri,"Scan your cache"),Ri.forEach(s),Nt.forEach(s),lt=f(e),M=n(e,"P",{});var $a=i(M);$o=l($a,`At the moment, cached files are never deleted from your local directory: when you download
a new revision of a branch, previous files are kept in case you need them again.
Therefore it can be useful to scan your cache directory in order to know which repos
and revisions are taking the most disk space. `),hs=n($a,"CODE",{});var Ui=i(hs);ko=l(Ui,"huggingface_hub"),Ui.forEach(s),Co=l($a,` provides an helper to
do so that can be used via `),fs=n($a,"CODE",{});var Ti=i(fs);jo=l(Ti,"huggingface-cli"),Ti.forEach(s),Io=l($a," or in a python script."),$a.forEach(s),ot=f(e),Q=n(e,"H3",{class:!0});var Gt=i(Q);de=n(Gt,"A",{id:!0,class:!0,href:!0});var Mi=i(de);ds=n(Mi,"SPAN",{});var Fi=i(ds);u(Ue.$$.fragment,Fi),Fi.forEach(s),Mi.forEach(s),Po=f(Gt),ps=n(Gt,"SPAN",{});var Ni=i(ps);Ao=l(Ni,"From the terminal"),Ni.forEach(s),Gt.forEach(s),nt=f(e),F=n(e,"P",{});var ka=i(F);Do=l(ka,"The easiest way to scan your HF cache-system is to use the "),ms=n(ka,"CODE",{});var Gi=i(ms);So=l(Gi,"scan-cache"),Gi.forEach(s),xo=l(ka,` command from
`),us=n(ka,"CODE",{});var Li=i(us);Oo=l(Li,"huggingface-cli"),Li.forEach(s),Ho=l(ka,` tool. This command scans the cache and prints a report with information
like repo id, repo type, disk usage, refs and full local path.`),ka.forEach(s),it=f(e),oa=n(e,"P",{});var Bi=i(oa);Ro=l(Bi,`The snippet below shows a scan report in a folder in which 4 models and 2 datasets are
cached.`),Bi.forEach(s),ct=f(e),u(Te.$$.fragment,e),rt=f(e),N=n(e,"P",{});var Ca=i(N);Uo=l(Ca,"To get a more detailed report, use the "),bs=n(Ca,"CODE",{});var qi=i(bs);To=l(qi,"--verbose"),qi.forEach(s),Mo=l(Ca,` option. For each repo, you get a
list of all revisions that have been downloaded. As explained above, the files that don\u2019t
change between 2 revisions are shared thanks to the symlinks. This means that the size of
the repo on disk is expected to be less than the sum of the size of each of its revisions.
For example, here `),gs=n(Ca,"CODE",{});var Ki=i(gs);Fo=l(Ki,"bert-base-cased"),Ki.forEach(s),No=l(Ca,` has 2 revisions of 1.4G and 1.5G but the total disk
usage is only 1.9G.`),Ca.forEach(s),ht=f(e),u(Me.$$.fragment,e),ft=f(e),X=n(e,"H4",{class:!0});var Lt=i(X);pe=n(Lt,"A",{id:!0,class:!0,href:!0});var zi=i(pe);vs=n(zi,"SPAN",{});var Ji=i(vs);u(Fe.$$.fragment,Ji),Ji.forEach(s),zi.forEach(s),Go=f(Lt),_s=n(Lt,"SPAN",{});var Yi=i(_s);Lo=l(Yi,"Grep example"),Yi.forEach(s),Lt.forEach(s),dt=f(e),me=n(e,"P",{});var Bt=i(me);Bo=l(Bt,"Since the output is in tabular format, you can combine it with any "),Es=n(Bt,"CODE",{});var Zi=i(Es);qo=l(Zi,"grep"),Zi.forEach(s),Ko=l(Bt,`-like tools to
filter the entries. Here is an example to filter only revisions from the \u201Ct5-small\u201D
model on a Unix-based machine.`),Bt.forEach(s),pt=f(e),u(Ne.$$.fragment,e),mt=f(e),ee=n(e,"H3",{class:!0});var qt=i(ee);ue=n(qt,"A",{id:!0,class:!0,href:!0});var Wi=i(ue);ws=n(Wi,"SPAN",{});var Vi=i(ws);u(Ge.$$.fragment,Vi),Vi.forEach(s),Wi.forEach(s),zo=f(qt),ys=n(qt,"SPAN",{});var Qi=i(ys);Jo=l(Qi,"From Python"),Qi.forEach(s),qt.forEach(s),ut=f(e),be=n(e,"P",{});var Kt=i(be);Yo=l(Kt,"For a more advanced usage, use "),na=n(Kt,"A",{href:!0});var Xi=i(na);Zo=l(Xi,"scan_cache_dir()"),Xi.forEach(s),Wo=l(Kt,` which is the python utility called by
the CLI tool.`),Kt.forEach(s),bt=f(e),ia=n(e,"P",{});var ec=i(ia);Vo=l(ec,"You can use it to get a detailed report structured around 4 dataclasses:"),ec.forEach(s),gt=f(e),O=n(e,"UL",{});var $e=i(O);Le=n($e,"LI",{});var zt=i(Le);ca=n(zt,"A",{href:!0});var ac=i(ca);Qo=l(ac,"HFCacheInfo"),ac.forEach(s),Xo=l(zt,": complete report returned by "),ra=n(zt,"A",{href:!0});var sc=i(ra);en=l(sc,"scan_cache_dir()"),sc.forEach(s),zt.forEach(s),an=f($e),ha=n($e,"LI",{});var Rn=i(ha);fa=n(Rn,"A",{href:!0});var tc=i(fa);sn=l(tc,"CachedRepoInfo"),tc.forEach(s),tn=l(Rn,": information about a cached repo"),Rn.forEach(s),ln=f($e),da=n($e,"LI",{});var Un=i(da);pa=n(Un,"A",{href:!0});var lc=i(pa);on=l(lc,"CachedRevisionInfo"),lc.forEach(s),nn=l(Un,": information about a cached revision (e.g. \u201Csnapshot\u201D) inside a repo"),Un.forEach(s),cn=f($e),ma=n($e,"LI",{});var Tn=i(ma);ua=n(Tn,"A",{href:!0});var oc=i(ua);rn=l(oc,"CachedFileInfo"),oc.forEach(s),hn=l(Tn,": information about a cached file in a snapshot"),Tn.forEach(s),$e.forEach(s),vt=f(e),ba=n(e,"P",{});var nc=i(ba);fn=l(nc,"Here is a simple usage example. See reference for details."),nc.forEach(s),_t=f(e),u(Be.$$.fragment,e),Et=f(e),ae=n(e,"H2",{class:!0});var Jt=i(ae);ge=n(Jt,"A",{id:!0,class:!0,href:!0});var ic=i(ge);$s=n(ic,"SPAN",{});var cc=i($s);u(qe.$$.fragment,cc),cc.forEach(s),ic.forEach(s),dn=f(Jt),ks=n(Jt,"SPAN",{});var rc=i(ks);pn=l(rc,"Clean your cache"),rc.forEach(s),Jt.forEach(s),wt=f(e),G=n(e,"P",{});var ja=i(G);mn=l(ja,`Scanning your cache is interesting but what you really want to do next is usually to
delete some portions to free up some space on your drive. This is possible using the
`),ga=n(ja,"A",{href:!0});var hc=i(ga);un=l(hc,"delete_revisions()"),hc.forEach(s),bn=l(ja," helper from "),va=n(ja,"A",{href:!0});var fc=i(va);gn=l(fc,"HFCacheInfo"),fc.forEach(s),vn=l(ja,` object returned when
scanning the cache.`),ja.forEach(s),yt=f(e),ve=n(e,"P",{});var Yt=i(ve);_n=l(Yt,`Pass a list of revisions to delete and the tool will define a strategy to free up the
space. It returns a `),_a=n(Yt,"A",{href:!0});var dc=i(_a);En=l(dc,"DeleteCacheStrategy"),dc.forEach(s),wn=l(Yt,` object that describes which files and
folders will be deleted and the expected freed space. Once you agree with the deletion,
you must execute it to make the deletion effective. In order to avoid discrepancies, you
cannot edit a strategy manually.`),Yt.forEach(s),$t=f(e),Ea=n(e,"P",{});var pc=i(Ea);yn=l(pc,"The strategy to delete revisions is the following:"),pc.forEach(s),kt=f(e),H=n(e,"UL",{});var ke=i(H);Ke=n(ke,"LI",{});var Zt=i(Ke);$n=l(Zt,"the "),Cs=n(Zt,"CODE",{});var mc=i(Cs);kn=l(mc,"snapshot"),mc.forEach(s),Cn=l(Zt," folder containing the revision symlinks is deleted."),Zt.forEach(s),jn=f(ke),js=n(ke,"LI",{});var uc=i(js);In=l(uc,"blobs files that are targeted only by revisions to be deleted are deleted as well."),uc.forEach(s),Pn=f(ke),ze=n(ke,"LI",{});var Wt=i(ze);An=l(Wt,"if a revision is linked to 1 or more "),Is=n(Wt,"CODE",{});var bc=i(Is);Dn=l(bc,"refs"),bc.forEach(s),Sn=l(Wt,", references are deleted."),Wt.forEach(s),xn=f(ke),Ps=n(ke,"LI",{});var gc=i(Ps);On=l(gc,"if all revisions from a repo are deleted, the entire cached repository is deleted."),gc.forEach(s),ke.forEach(s),Ct=f(e),wa=n(e,"P",{});var vc=i(wa);Hn=l(vc,"Here is a simple usage example. See reference for details."),vc.forEach(s),jt=f(e),u(Je.$$.fragment,e),It=f(e),u(_e.$$.fragment,e),Pt=f(e),u(Ee.$$.fragment,e),this.h()},h(){d(p,"name","hf:doc:metadata"),d(p,"content",JSON.stringify(Pc)),d(y,"id","manage-huggingfacehub-cachesystem"),d(y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(y,"href","#manage-huggingfacehub-cachesystem"),d(E,"class","relative group"),d(se,"id","understand-caching"),d(se,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(se,"href","#understand-caching"),d(z,"class","relative group"),d(te,"id","refs"),d(te,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(te,"href","#refs"),d(J,"class","relative group"),d(le,"id","blobs"),d(le,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(le,"href","#blobs"),d(Y,"class","relative group"),d(ne,"id","snapshots"),d(ne,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(ne,"href","#snapshots"),d(Z,"class","relative group"),d(he,"id","in-practice"),d(he,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(he,"href","#in-practice"),d(W,"class","relative group"),d(fe,"id","scan-your-cache"),d(fe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(fe,"href","#scan-your-cache"),d(V,"class","relative group"),d(de,"id","from-the-terminal"),d(de,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(de,"href","#from-the-terminal"),d(Q,"class","relative group"),d(pe,"id","grep-example"),d(pe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(pe,"href","#grep-example"),d(X,"class","relative group"),d(ue,"id","from-python"),d(ue,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(ue,"href","#from-python"),d(ee,"class","relative group"),d(na,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.scan_cache_dir"),d(ca,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.HFCacheInfo"),d(ra,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.scan_cache_dir"),d(fa,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.CachedRepoInfo"),d(pa,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.CachedRevisionInfo"),d(ua,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.CachedFileInfo"),d(ge,"id","clean-your-cache"),d(ge,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(ge,"href","#clean-your-cache"),d(ae,"class","relative group"),d(ga,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.HFCacheInfo.delete_revisions"),d(va,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.HFCacheInfo"),d(_a,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.DeleteCacheStrategy")},m(e,c){a(document.head,p),r(e,D,c),r(e,E,c),a(E,y),a(y,A),b(w,A,null),a(E,k),a(E,C),a(C,K),a(C,j),a(j,We),a(C,Ve),r(e,Ds,c),r(e,z,c),a(z,se),a(se,Ia),b(Ce,Ia,null),a(z,Vt),a(z,Pa),a(Pa,Qt),r(e,Ss,c),r(e,Qe,c),a(Qe,Xt),r(e,xs,c),r(e,Xe,c),a(Xe,el),r(e,Os,c),b(je,e,c),r(e,Hs,c),r(e,I,c),a(I,al),a(I,Aa),a(Aa,sl),a(I,tl),a(I,Da),a(Da,ll),a(I,ol),a(I,Sa),a(Sa,nl),a(I,il),a(I,xa),a(xa,cl),a(I,rl),r(e,Rs,c),r(e,ea,c),a(ea,hl),r(e,Us,c),b(Ie,e,c),r(e,Ts,c),r(e,aa,c),a(aa,fl),r(e,Ms,c),r(e,sa,c),a(sa,dl),r(e,Fs,c),b(Pe,e,c),r(e,Ns,c),r(e,ta,c),a(ta,pl),r(e,Gs,c),r(e,J,c),a(J,te),a(te,Oa),b(Ae,Oa,null),a(J,ml),a(J,Ha),a(Ha,ul),r(e,Ls,c),r(e,P,c),a(P,bl),a(P,Ra),a(Ra,gl),a(P,vl),a(P,Ua),a(Ua,_l),a(P,El),a(P,Ta),a(Ta,wl),a(P,yl),a(P,Ma),a(Ma,$l),a(P,kl),r(e,Bs,c),r(e,S,c),a(S,Cl),a(S,Fa),a(Fa,jl),a(S,Il),a(S,Na),a(Na,Pl),a(S,Al),a(S,Ga),a(Ga,Dl),a(S,Sl),r(e,qs,c),r(e,x,c),a(x,xl),a(x,La),a(La,Ol),a(x,Hl),a(x,Ba),a(Ba,Rl),a(x,Ul),a(x,qa),a(qa,Tl),a(x,Ml),r(e,Ks,c),r(e,Y,c),a(Y,le),a(le,Ka),b(De,Ka,null),a(Y,Fl),a(Y,za),a(za,Nl),r(e,zs,c),r(e,oe,c),a(oe,Gl),a(oe,Ja),a(Ja,Ll),a(oe,Bl),r(e,Js,c),r(e,Z,c),a(Z,ne),a(ne,Ya),b(Se,Ya,null),a(Z,ql),a(Z,Za),a(Za,Kl),r(e,Ys,c),r(e,ie,c),a(ie,zl),a(ie,Wa),a(Wa,Jl),a(ie,Yl),r(e,Zs,c),r(e,$,c),a($,Zl),a($,Va),a(Va,Wl),a($,Vl),a($,Qa),a(Qa,Ql),a($,Xl),a($,Xa),a(Xa,eo),a($,ao),a($,es),a(es,so),a($,to),a($,as),a(as,lo),a($,oo),r(e,Ws,c),r(e,T,c),a(T,no),a(T,ss),a(ss,io),a(T,co),a(T,ts),a(ts,ro),a(T,ho),r(e,Vs,c),b(xe,e,c),r(e,Qs,c),r(e,ce,c),a(ce,fo),a(ce,ls),a(ls,po),a(ce,mo),r(e,Xs,c),r(e,re,c),a(re,uo),a(re,os),a(os,bo),a(re,go),r(e,et,c),r(e,W,c),a(W,he),a(he,ns),b(Oe,ns,null),a(W,vo),a(W,is),a(is,_o),r(e,at,c),r(e,la,c),a(la,Eo),r(e,st,c),b(He,e,c),r(e,tt,c),r(e,V,c),a(V,fe),a(fe,cs),b(Re,cs,null),a(V,wo),a(V,rs),a(rs,yo),r(e,lt,c),r(e,M,c),a(M,$o),a(M,hs),a(hs,ko),a(M,Co),a(M,fs),a(fs,jo),a(M,Io),r(e,ot,c),r(e,Q,c),a(Q,de),a(de,ds),b(Ue,ds,null),a(Q,Po),a(Q,ps),a(ps,Ao),r(e,nt,c),r(e,F,c),a(F,Do),a(F,ms),a(ms,So),a(F,xo),a(F,us),a(us,Oo),a(F,Ho),r(e,it,c),r(e,oa,c),a(oa,Ro),r(e,ct,c),b(Te,e,c),r(e,rt,c),r(e,N,c),a(N,Uo),a(N,bs),a(bs,To),a(N,Mo),a(N,gs),a(gs,Fo),a(N,No),r(e,ht,c),b(Me,e,c),r(e,ft,c),r(e,X,c),a(X,pe),a(pe,vs),b(Fe,vs,null),a(X,Go),a(X,_s),a(_s,Lo),r(e,dt,c),r(e,me,c),a(me,Bo),a(me,Es),a(Es,qo),a(me,Ko),r(e,pt,c),b(Ne,e,c),r(e,mt,c),r(e,ee,c),a(ee,ue),a(ue,ws),b(Ge,ws,null),a(ee,zo),a(ee,ys),a(ys,Jo),r(e,ut,c),r(e,be,c),a(be,Yo),a(be,na),a(na,Zo),a(be,Wo),r(e,bt,c),r(e,ia,c),a(ia,Vo),r(e,gt,c),r(e,O,c),a(O,Le),a(Le,ca),a(ca,Qo),a(Le,Xo),a(Le,ra),a(ra,en),a(O,an),a(O,ha),a(ha,fa),a(fa,sn),a(ha,tn),a(O,ln),a(O,da),a(da,pa),a(pa,on),a(da,nn),a(O,cn),a(O,ma),a(ma,ua),a(ua,rn),a(ma,hn),r(e,vt,c),r(e,ba,c),a(ba,fn),r(e,_t,c),b(Be,e,c),r(e,Et,c),r(e,ae,c),a(ae,ge),a(ge,$s),b(qe,$s,null),a(ae,dn),a(ae,ks),a(ks,pn),r(e,wt,c),r(e,G,c),a(G,mn),a(G,ga),a(ga,un),a(G,bn),a(G,va),a(va,gn),a(G,vn),r(e,yt,c),r(e,ve,c),a(ve,_n),a(ve,_a),a(_a,En),a(ve,wn),r(e,$t,c),r(e,Ea,c),a(Ea,yn),r(e,kt,c),r(e,H,c),a(H,Ke),a(Ke,$n),a(Ke,Cs),a(Cs,kn),a(Ke,Cn),a(H,jn),a(H,js),a(js,In),a(H,Pn),a(H,ze),a(ze,An),a(ze,Is),a(Is,Dn),a(ze,Sn),a(H,xn),a(H,Ps),a(Ps,On),r(e,Ct,c),r(e,wa,c),a(wa,Hn),r(e,jt,c),b(Je,e,c),r(e,It,c),b(_e,e,c),r(e,Pt,c),b(Ee,e,c),At=!0},p(e,[c]){const Ye={};c&2&&(Ye.$$scope={dirty:c,ctx:e}),_e.$set(Ye);const As={};c&2&&(As.$$scope={dirty:c,ctx:e}),Ee.$set(As)},i(e){At||(g(w.$$.fragment,e),g(Ce.$$.fragment,e),g(je.$$.fragment,e),g(Ie.$$.fragment,e),g(Pe.$$.fragment,e),g(Ae.$$.fragment,e),g(De.$$.fragment,e),g(Se.$$.fragment,e),g(xe.$$.fragment,e),g(Oe.$$.fragment,e),g(He.$$.fragment,e),g(Re.$$.fragment,e),g(Ue.$$.fragment,e),g(Te.$$.fragment,e),g(Me.$$.fragment,e),g(Fe.$$.fragment,e),g(Ne.$$.fragment,e),g(Ge.$$.fragment,e),g(Be.$$.fragment,e),g(qe.$$.fragment,e),g(Je.$$.fragment,e),g(_e.$$.fragment,e),g(Ee.$$.fragment,e),At=!0)},o(e){v(w.$$.fragment,e),v(Ce.$$.fragment,e),v(je.$$.fragment,e),v(Ie.$$.fragment,e),v(Pe.$$.fragment,e),v(Ae.$$.fragment,e),v(De.$$.fragment,e),v(Se.$$.fragment,e),v(xe.$$.fragment,e),v(Oe.$$.fragment,e),v(He.$$.fragment,e),v(Re.$$.fragment,e),v(Ue.$$.fragment,e),v(Te.$$.fragment,e),v(Me.$$.fragment,e),v(Fe.$$.fragment,e),v(Ne.$$.fragment,e),v(Ge.$$.fragment,e),v(Be.$$.fragment,e),v(qe.$$.fragment,e),v(Je.$$.fragment,e),v(_e.$$.fragment,e),v(Ee.$$.fragment,e),At=!1},d(e){s(p),e&&s(D),e&&s(E),_(w),e&&s(Ds),e&&s(z),_(Ce),e&&s(Ss),e&&s(Qe),e&&s(xs),e&&s(Xe),e&&s(Os),_(je,e),e&&s(Hs),e&&s(I),e&&s(Rs),e&&s(ea),e&&s(Us),_(Ie,e),e&&s(Ts),e&&s(aa),e&&s(Ms),e&&s(sa),e&&s(Fs),_(Pe,e),e&&s(Ns),e&&s(ta),e&&s(Gs),e&&s(J),_(Ae),e&&s(Ls),e&&s(P),e&&s(Bs),e&&s(S),e&&s(qs),e&&s(x),e&&s(Ks),e&&s(Y),_(De),e&&s(zs),e&&s(oe),e&&s(Js),e&&s(Z),_(Se),e&&s(Ys),e&&s(ie),e&&s(Zs),e&&s($),e&&s(Ws),e&&s(T),e&&s(Vs),_(xe,e),e&&s(Qs),e&&s(ce),e&&s(Xs),e&&s(re),e&&s(et),e&&s(W),_(Oe),e&&s(at),e&&s(la),e&&s(st),_(He,e),e&&s(tt),e&&s(V),_(Re),e&&s(lt),e&&s(M),e&&s(ot),e&&s(Q),_(Ue),e&&s(nt),e&&s(F),e&&s(it),e&&s(oa),e&&s(ct),_(Te,e),e&&s(rt),e&&s(N),e&&s(ht),_(Me,e),e&&s(ft),e&&s(X),_(Fe),e&&s(dt),e&&s(me),e&&s(pt),_(Ne,e),e&&s(mt),e&&s(ee),_(Ge),e&&s(ut),e&&s(be),e&&s(bt),e&&s(ia),e&&s(gt),e&&s(O),e&&s(vt),e&&s(ba),e&&s(_t),_(Be,e),e&&s(Et),e&&s(ae),_(qe),e&&s(wt),e&&s(G),e&&s(yt),e&&s(ve),e&&s($t),e&&s(Ea),e&&s(kt),e&&s(H),e&&s(Ct),e&&s(wa),e&&s(jt),_(Je,e),e&&s(It),_(_e,e),e&&s(Pt),_(Ee,e)}}}const Pc={local:"manage-huggingfacehub-cachesystem",sections:[{local:"understand-caching",sections:[{local:"refs",title:"Refs"},{local:"blobs",title:"Blobs"},{local:"snapshots",title:"Snapshots"},{local:"in-practice",title:"In practice"}],title:"Understand caching"},{local:"scan-your-cache",sections:[{local:"from-the-terminal",sections:[{local:"grep-example",title:"Grep example"}],title:"From the terminal"},{local:"from-python",title:"From Python"}],title:"Scan your cache"},{local:"clean-your-cache",title:"Clean your cache"}],title:"Manage `huggingface_hub` cache-system"};function Ac(Ze){return kc(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Hc extends Ec{constructor(p){super();wc(this,p,Ac,Ic,yc,{})}}export{Hc as default,Pc as metadata};
