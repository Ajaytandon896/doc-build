import{S as ac,i as sc,s as tc,e as o,k as h,w as p,t,M as lc,c as n,d as s,m as f,a as c,x as m,h as l,b as d,G as a,g as r,y as b,L as oc,q as u,o as g,B as v,v as nc}from"../chunks/vendor-hf-doc-builder.js";import{I as x}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as K}from"../chunks/CodeBlock-hf-doc-builder.js";function cc(jo){let O,Wa,H,z,ea,he,it,fe,rt,aa,ht,ft,Xa,U,q,sa,de,dt,ta,pt,es,Se,mt,as,xe,bt,ss,pe,ts,_,ut,la,gt,vt,oa,Et,_t,na,wt,$t,ca,yt,kt,ls,Oe,Ct,os,me,ns,He,It,cs,Ue,At,is,be,rs,Re,Pt,hs,R,J,ia,ue,jt,ra,Dt,fs,w,St,ha,xt,Ot,fa,Ht,Ut,da,Rt,Mt,pa,Tt,Ft,ds,$,Nt,ma,Gt,Bt,ba,Lt,Kt,ua,zt,qt,ps,y,Jt,ga,Yt,Zt,va,Vt,Qt,Ea,Wt,Xt,ms,M,Y,_a,ge,el,wa,al,bs,Z,sl,$a,tl,ll,us,T,V,ya,ve,ol,ka,nl,gs,Q,cl,Ca,il,rl,vs,E,hl,Ia,fl,dl,Aa,pl,ml,Pa,bl,ul,ja,gl,vl,Da,El,_l,Es,I,wl,Sa,$l,yl,xa,kl,Cl,_s,Ee,ws,W,Il,Oa,Al,Pl,$s,X,jl,Ha,Dl,Sl,ys,F,ee,Ua,_e,xl,Ra,Ol,ks,Me,Hl,Cs,we,Is,N,ae,Ma,$e,Ul,Ta,Rl,As,A,Ml,Fa,Tl,Fl,Na,Nl,Gl,Ps,G,se,Ga,ye,Bl,Ba,Ll,js,P,Kl,La,zl,ql,Ka,Jl,Yl,Ds,Te,Zl,Ss,ke,xs,j,Vl,za,Ql,Wl,qa,Xl,eo,Os,Ce,Hs,B,te,Ja,Ie,ao,Ya,so,Us,le,to,Za,lo,oo,Rs,Ae,Ms,L,oe,Va,Pe,no,Qa,co,Ts,ne,io,Fe,ro,ho,Fs,Ne,fo,Ns,k,je,Ge,po,mo,Be,bo,uo,Le,Ke,go,vo,Eo,ze,qe,_o,wo,$o,Je,Ye,yo,ko,Gs,Ze,Co,Bs,De,Ls;return he=new x({}),de=new x({}),pe=new K({props:{code:`<CACHE_DIR>
\u251C\u2500 <MODELS>
\u251C\u2500 <DATASETS>
\u251C\u2500 <SPACES>`,highlighted:`<span class="hljs-tag">&lt;<span class="hljs-name">CACHE_DIR</span>&gt;</span>
\u251C\u2500 <span class="hljs-tag">&lt;<span class="hljs-name">MODELS</span>&gt;</span>
\u251C\u2500 <span class="hljs-tag">&lt;<span class="hljs-name">DATASETS</span>&gt;</span>
\u251C\u2500 <span class="hljs-tag">&lt;<span class="hljs-name">SPACES</span>&gt;</span>`}}),me=new K({props:{code:`<CACHE_DIR>
\u251C\u2500 models--julien-c--EsperBERTo-small
\u251C\u2500 models--lysandrejik--arxiv-nlp
\u251C\u2500 models--bert-base-cased
\u251C\u2500 datasets--glue
\u251C\u2500 datasets--huggingface--DataMeasurementsFiles
\u251C\u2500 spaces--dalle-mini--dalle-mini`,highlighted:`&lt;<span class="hljs-comment">CACHE_DIR</span>&gt;
<span class="hljs-comment">\u251C\u2500</span> <span class="hljs-comment">models</span>--<span class="hljs-comment">julien</span><span class="hljs-literal">-</span><span class="hljs-comment">c</span>--<span class="hljs-comment">EsperBERTo</span><span class="hljs-literal">-</span><span class="hljs-comment">small</span>
<span class="hljs-comment">\u251C\u2500</span> <span class="hljs-comment">models</span>--<span class="hljs-comment">lysandrejik</span>--<span class="hljs-comment">arxiv</span><span class="hljs-literal">-</span><span class="hljs-comment">nlp</span>
<span class="hljs-comment">\u251C\u2500</span> <span class="hljs-comment">models</span>--<span class="hljs-comment">bert</span><span class="hljs-literal">-</span><span class="hljs-comment">base</span><span class="hljs-literal">-</span><span class="hljs-comment">cased</span>
<span class="hljs-comment">\u251C\u2500</span> <span class="hljs-comment">datasets</span>--<span class="hljs-comment">glue</span>
<span class="hljs-comment">\u251C\u2500</span> <span class="hljs-comment">datasets</span>--<span class="hljs-comment">huggingface</span>--<span class="hljs-comment">DataMeasurementsFiles</span>
<span class="hljs-comment">\u251C\u2500</span> <span class="hljs-comment">spaces</span>--<span class="hljs-comment">dalle</span><span class="hljs-literal">-</span><span class="hljs-comment">mini</span>--<span class="hljs-comment">dalle</span><span class="hljs-literal">-</span><span class="hljs-comment">mini</span>`}}),be=new K({props:{code:`<CACHE_DIR>
\u251C\u2500 datasets--glue
\u2502  \u251C\u2500 refs
\u2502  \u251C\u2500 blobs
\u2502  \u251C\u2500 snapshots
...`,highlighted:`&lt;CACHE_DIR&gt;
\u251C\u2500 datasets<span class="hljs-params">--glue</span>
\u2502  \u251C\u2500 refs
\u2502  \u251C\u2500 blobs
\u2502  \u251C\u2500 snapshots
<span class="hljs-string">...</span>`}}),ue=new x({}),ge=new x({}),ve=new x({}),Ee=new K({props:{code:"<CACHE_DIR>/<REPO_NAME>/snapshots/aaaaaa/README.md",highlighted:'&lt;CACHE_DIR&gt;<span class="hljs-regexp">/&lt;REPO_NAME&gt;/</span>snapshots<span class="hljs-regexp">/aaaaaa/</span>README.md'}}),_e=new x({}),we=new K({props:{code:`    [  96]  .
    \u2514\u2500\u2500 [ 160]  models--julien-c--EsperBERTo-small
        \u251C\u2500\u2500 [ 160]  blobs
        \u2502   \u251C\u2500\u2500 [321M]  403450e234d65943a7dcf7e05a771ce3c92faa84dd07db4ac20f592037a1e4bd
        \u2502   \u251C\u2500\u2500 [ 398]  7cb18dc9bafbfcf74629a4b760af1b160957a83e
        \u2502   \u2514\u2500\u2500 [1.4K]  d7edf6bd2a681fb0175f7735299831ee1b22b812
        \u251C\u2500\u2500 [  96]  refs
        \u2502   \u2514\u2500\u2500 [  40]  main
        \u2514\u2500\u2500 [ 128]  snapshots
            \u251C\u2500\u2500 [ 128]  2439f60ef33a0d46d85da5001d52aeda5b00ce9f
            \u2502   \u251C\u2500\u2500 [  52]  README.md -> ../../blobs/d7edf6bd2a681fb0175f7735299831ee1b22b812
            \u2502   \u2514\u2500\u2500 [  76]  pytorch_model.bin -> ../../blobs/403450e234d65943a7dcf7e05a771ce3c92faa84dd07db4ac20f592037a1e4bd
            \u2514\u2500\u2500 [ 128]  bbc77c8132af1cc5cf678da3f1ddf2de43606d48
                \u251C\u2500\u2500 [  52]  README.md -> ../../blobs/7cb18dc9bafbfcf74629a4b760af1b160957a83e
                \u2514\u2500\u2500 [  76]  pytorch_model.bin -> ../../blobs/403450e234d65943a7dcf7e05a771ce3c92faa84dd07db4ac20f592037a1e4bd`,highlighted:`    [  96]  .
    \u2514\u2500\u2500 [ 160]  models--julien-c--EsperBERTo-small
        \u251C\u2500\u2500 [ 160]  blobs
        \u2502   \u251C\u2500\u2500 [321M]  403450e234d65943a7dcf7e05a771ce3c92faa84dd07db4ac20f592037a1e4bd
        \u2502   \u251C\u2500\u2500 [ 398]  7cb18dc9bafbfcf74629a4b760af1b160957a83e
        \u2502   \u2514\u2500\u2500 [1.4K]  d7edf6bd2a681fb0175f7735299831ee1b22b812
        \u251C\u2500\u2500 [  96]  refs
        \u2502   \u2514\u2500\u2500 [  40]  main
        \u2514\u2500\u2500 [ 128]  snapshots
            \u251C\u2500\u2500 [ 128]  2439f60ef33a0d46d85da5001d52aeda5b00ce9f
            \u2502   \u251C\u2500\u2500 [  52]  README.md -&gt; ../../blobs/d7edf6bd2a681fb0175f7735299831ee1b22b812
            \u2502   \u2514\u2500\u2500 [  76]  pytorch_model.bin -&gt; ../../blobs/403450e234d65943a7dcf7e05a771ce3c92faa84dd07db4ac20f592037a1e4bd
            \u2514\u2500\u2500 [ 128]  bbc77c8132af1cc5cf678da3f1ddf2de43606d48
                \u251C\u2500\u2500 [  52]  README.md -&gt; ../../blobs/7cb18dc9bafbfcf74629a4b760af1b160957a83e
                \u2514\u2500\u2500 [  76]  pytorch_model.bin -&gt; ../../blobs/403450e234d65943a7dcf7e05a771ce3c92faa84dd07db4ac20f592037a1e4bd`}}),$e=new x({}),ye=new x({}),ke=new K({props:{code:`\u279C huggingface-cli scan-cache
REPO ID                     REPO TYPE SIZE ON DISK NB FILES REFS                LOCAL PATH
--------------------------- --------- ------------ -------- ------------------- -------------------------------------------------------------------------
glue                        dataset         116.3K       15 2.4.0, main, 1.17.0 /Users/lucain/.cache/huggingface/hub/datasets--glue
google/fleurs               dataset          64.9M        6 refs/pr/1, main     /Users/lucain/.cache/huggingface/hub/datasets--google--fleurs
Jean-Baptiste/camembert-ner model           441.0M        7 main                /Users/lucain/.cache/huggingface/hub/models--Jean-Baptiste--camembert-ner
bert-base-cased             model             1.9G       13 main                /Users/lucain/.cache/huggingface/hub/models--bert-base-cased
t5-base                     model            10.1K        3 main                /Users/lucain/.cache/huggingface/hub/models--t5-base
t5-small                    model           970.7M       11 refs/pr/1, main     /Users/lucain/.cache/huggingface/hub/models--t5-small

Done in 0.0s. Scanned 6 repo(s) for a total of 3.4G.
Got 1 warning(s) while scanning. Use -vvv to print details.`,highlighted:`\u279C huggingface-cli scan-cache
REPO ID                     REPO TYPE SIZE ON DISK NB FILES REFS                LOCAL PATH
--------------------------- --------- ------------ -------- ------------------- -------------------------------------------------------------------------
glue                        dataset         116.3K       15 2.4.0, main, 1.17.0 /Users/lucain/.cache/huggingface/hub/datasets--glue
google/fleurs               dataset          64.9M        6 refs/pr/1, main     /Users/lucain/.cache/huggingface/hub/datasets--google--fleurs
Jean-Baptiste/camembert-ner model           441.0M        7 main                /Users/lucain/.cache/huggingface/hub/models--Jean-Baptiste--camembert-ner
bert-base-cased             model             1.9G       13 main                /Users/lucain/.cache/huggingface/hub/models--bert-base-cased
t5-base                     model            10.1K        3 main                /Users/lucain/.cache/huggingface/hub/models--t5-base
t5-small                    model           970.7M       11 refs/pr/1, main     /Users/lucain/.cache/huggingface/hub/models--t5-small

Done in 0.0s. Scanned 6 repo(s) for a total of 3.4G.
Got 1 warning(s) while scanning. Use -vvv to print details.`}}),Ce=new K({props:{code:`\u279C huggingface-cli scan-cache -v
REPO ID                     REPO TYPE REVISION                                 SIZE ON DISK NB FILES REFS        LOCAL PATH
--------------------------- --------- ---------------------------------------- ------------ -------- ----------- ----------------------------------------------------------------------------------------------------------------------------
glue                        dataset   9338f7b671827df886678df2bdd7cc7b4f36dffd        97.7K       14 main, 2.4.0 /Users/lucain/.cache/huggingface/hub/datasets--glue/snapshots/9338f7b671827df886678df2bdd7cc7b4f36dffd
glue                        dataset   f021ae41c879fcabcf823648ec685e3fead91fe7        97.8K       14 1.17.0      /Users/lucain/.cache/huggingface/hub/datasets--glue/snapshots/f021ae41c879fcabcf823648ec685e3fead91fe7
google/fleurs               dataset   129b6e96cf1967cd5d2b9b6aec75ce6cce7c89e8        25.4K        3 refs/pr/1   /Users/lucain/.cache/huggingface/hub/datasets--google--fleurs/snapshots/129b6e96cf1967cd5d2b9b6aec75ce6cce7c89e8
google/fleurs               dataset   24f85a01eb955224ca3946e70050869c56446805        64.9M        4 main        /Users/lucain/.cache/huggingface/hub/datasets--google--fleurs/snapshots/24f85a01eb955224ca3946e70050869c56446805
Jean-Baptiste/camembert-ner model     dbec8489a1c44ecad9da8a9185115bccabd799fe       441.0M        7 main        /Users/lucain/.cache/huggingface/hub/models--Jean-Baptiste--camembert-ner/snapshots/dbec8489a1c44ecad9da8a9185115bccabd799fe
bert-base-cased             model     378aa1bda6387fd00e824948ebe3488630ad8565         1.5G        9             /Users/lucain/.cache/huggingface/hub/models--bert-base-cased/snapshots/378aa1bda6387fd00e824948ebe3488630ad8565
bert-base-cased             model     a8d257ba9925ef39f3036bfc338acf5283c512d9         1.4G        9 main        /Users/lucain/.cache/huggingface/hub/models--bert-base-cased/snapshots/a8d257ba9925ef39f3036bfc338acf5283c512d9
t5-base                     model     23aa4f41cb7c08d4b05c8f327b22bfa0eb8c7ad9        10.1K        3 main        /Users/lucain/.cache/huggingface/hub/models--t5-base/snapshots/23aa4f41cb7c08d4b05c8f327b22bfa0eb8c7ad9
t5-small                    model     98ffebbb27340ec1b1abd7c45da12c253ee1882a       726.2M        6 refs/pr/1   /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/98ffebbb27340ec1b1abd7c45da12c253ee1882a
t5-small                    model     d0a119eedb3718e34c648e594394474cf95e0617       485.8M        6             /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d0a119eedb3718e34c648e594394474cf95e0617
t5-small                    model     d78aea13fa7ecd06c29e3e46195d6341255065d5       970.7M        9 main        /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d78aea13fa7ecd06c29e3e46195d6341255065d5

Done in 0.0s. Scanned 6 repo(s) for a total of 3.4G.
Got 1 warning(s) while scanning. Use -vvv to print details.`,highlighted:`\u279C huggingface-cli scan-cache -v
REPO ID                     REPO TYPE REVISION                                 SIZE ON DISK NB FILES REFS        LOCAL PATH
--------------------------- --------- ---------------------------------------- ------------ -------- ----------- ----------------------------------------------------------------------------------------------------------------------------
glue                        dataset   9338f7b671827df886678df2bdd7cc7b4f36dffd        97.7K       14 main, 2.4.0 /Users/lucain/.cache/huggingface/hub/datasets--glue/snapshots/9338f7b671827df886678df2bdd7cc7b4f36dffd
glue                        dataset   f021ae41c879fcabcf823648ec685e3fead91fe7        97.8K       14 1.17.0      /Users/lucain/.cache/huggingface/hub/datasets--glue/snapshots/f021ae41c879fcabcf823648ec685e3fead91fe7
google/fleurs               dataset   129b6e96cf1967cd5d2b9b6aec75ce6cce7c89e8        25.4K        3 refs/pr/1   /Users/lucain/.cache/huggingface/hub/datasets--google--fleurs/snapshots/129b6e96cf1967cd5d2b9b6aec75ce6cce7c89e8
google/fleurs               dataset   24f85a01eb955224ca3946e70050869c56446805        64.9M        4 main        /Users/lucain/.cache/huggingface/hub/datasets--google--fleurs/snapshots/24f85a01eb955224ca3946e70050869c56446805
Jean-Baptiste/camembert-ner model     dbec8489a1c44ecad9da8a9185115bccabd799fe       441.0M        7 main        /Users/lucain/.cache/huggingface/hub/models--Jean-Baptiste--camembert-ner/snapshots/dbec8489a1c44ecad9da8a9185115bccabd799fe
bert-base-cased             model     378aa1bda6387fd00e824948ebe3488630ad8565         1.5G        9             /Users/lucain/.cache/huggingface/hub/models--bert-base-cased/snapshots/378aa1bda6387fd00e824948ebe3488630ad8565
bert-base-cased             model     a8d257ba9925ef39f3036bfc338acf5283c512d9         1.4G        9 main        /Users/lucain/.cache/huggingface/hub/models--bert-base-cased/snapshots/a8d257ba9925ef39f3036bfc338acf5283c512d9
t5-base                     model     23aa4f41cb7c08d4b05c8f327b22bfa0eb8c7ad9        10.1K        3 main        /Users/lucain/.cache/huggingface/hub/models--t5-base/snapshots/23aa4f41cb7c08d4b05c8f327b22bfa0eb8c7ad9
t5-small                    model     98ffebbb27340ec1b1abd7c45da12c253ee1882a       726.2M        6 refs/pr/1   /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/98ffebbb27340ec1b1abd7c45da12c253ee1882a
t5-small                    model     d0a119eedb3718e34c648e594394474cf95e0617       485.8M        6             /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d0a119eedb3718e34c648e594394474cf95e0617
t5-small                    model     d78aea13fa7ecd06c29e3e46195d6341255065d5       970.7M        9 main        /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d78aea13fa7ecd06c29e3e46195d6341255065d5

Done in 0.0s. Scanned 6 repo(s) for a total of 3.4G.
Got 1 warning(s) while scanning. Use -vvv to print details.`}}),Ie=new x({}),Ae=new K({props:{code:`\u279C eval "huggingface-cli scan-cache -v" | grep "t5-small"
t5-small                    model     98ffebbb27340ec1b1abd7c45da12c253ee1882a       726.2M        6 refs/pr/1   /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/98ffebbb27340ec1b1abd7c45da12c253ee1882a
t5-small                    model     d0a119eedb3718e34c648e594394474cf95e0617       485.8M        6             /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d0a119eedb3718e34c648e594394474cf95e0617
t5-small                    model     d78aea13fa7ecd06c29e3e46195d6341255065d5       970.7M        9 main        /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d78aea13fa7ecd06c29e3e46195d6341255065d5`,highlighted:`\u279C eval &quot;huggingface-cli scan-cache -v&quot; | grep &quot;t5-small&quot;
t5-small                    model     98ffebbb27340ec1b1abd7c45da12c253ee1882a       726.2M        6 refs/pr/1   /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/98ffebbb27340ec1b1abd7c45da12c253ee1882a
t5-small                    model     d0a119eedb3718e34c648e594394474cf95e0617       485.8M        6             /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d0a119eedb3718e34c648e594394474cf95e0617
t5-small                    model     d78aea13fa7ecd06c29e3e46195d6341255065d5       970.7M        9 main        /Users/lucain/.cache/huggingface/hub/models--t5-small/snapshots/d78aea13fa7ecd06c29e3e46195d6341255065d5`}}),Pe=new x({}),De=new K({props:{code:`from huggingface_hub import scan_cache_dir

hf_cache_info = scan_cache_dir()`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> scan_cache_dir

<span class="hljs-meta">&gt;&gt;&gt; </span>hf_cache_info = scan_cache_dir()
HFCacheInfo(
    size_on_disk=<span class="hljs-number">3398085269</span>,
    repos=<span class="hljs-built_in">frozenset</span>({
        CachedRepoInfo(
            repo_id=<span class="hljs-string">&#x27;t5-small&#x27;</span>,
            repo_type=<span class="hljs-string">&#x27;model&#x27;</span>,
            repo_path=PosixPath(...),
            size_on_disk=<span class="hljs-number">970726914</span>,
            nb_files=<span class="hljs-number">11</span>,
            revisions=<span class="hljs-built_in">frozenset</span>({
                CachedRevisionInfo(
                    commit_hash=<span class="hljs-string">&#x27;d78aea13fa7ecd06c29e3e46195d6341255065d5&#x27;</span>,
                    size_on_disk=<span class="hljs-number">970726339</span>,
                    snapshot_path=PosixPath(...),
                    files=<span class="hljs-built_in">frozenset</span>({
                        CachedFileInfo(
                            file_name=<span class="hljs-string">&#x27;config.json&#x27;</span>,
                            size_on_disk=<span class="hljs-number">1197</span>
                            file_path=PosixPath(...),
                            blob_path=PosixPath(...),
                        ),
                        CachedFileInfo(...),
                        ...
                    }),
                ),
                CachedRevisionInfo(...),
                ...
            }),
        ),
        CachedRepoInfo(...),
        ...
    }),
    warnings=[
        CorruptedCacheException(<span class="hljs-string">&quot;Snapshots dir doesn&#x27;t exist in cached repo: ...&quot;</span>),
        CorruptedCacheException(...),
        ...
    ],
)`}}),{c(){O=o("meta"),Wa=h(),H=o("h1"),z=o("a"),ea=o("span"),p(he.$$.fragment),it=h(),fe=o("span"),rt=t("Manage "),aa=o("code"),ht=t("huggingface_hub"),ft=t(" cache-system"),Xa=h(),U=o("h2"),q=o("a"),sa=o("span"),p(de.$$.fragment),dt=h(),ta=o("span"),pt=t("Understand caching"),es=h(),Se=o("p"),mt=t(`The Hugging Face Hub cache-system is designed to be the central cache shared across libraries
that depend on the Hub. It has been updated in v0.8.0 to prevent re-downloading same files
between revisions.`),as=h(),xe=o("p"),bt=t("The caching system is designed as follows:"),ss=h(),p(pe.$$.fragment),ts=h(),_=o("p"),ut=t("The "),la=o("code"),gt=t("<CACHE_DIR>"),vt=t(` is usually your user\u2019s home directory. However, it is customizable with the
`),oa=o("code"),Et=t("cache_dir"),_t=t(" argument on all methods, or by specifying either "),na=o("code"),wt=t("HF_HOME"),$t=t(` or
`),ca=o("code"),yt=t("HUGGINGFACE_HUB_CACHE"),kt=t(" environment variable."),ls=h(),Oe=o("p"),Ct=t(`Models, datasets and spaces share a common root. Each of these repositories contains the
repository type, the namespace (organization or username) if it exists and the
repository name:`),os=h(),p(me.$$.fragment),ns=h(),He=o("p"),It=t(`It is within these folders that all files will now be downloaded from the Hub. Caching ensures that
a file isn\u2019t downloaded twice if it already exists and wasn\u2019t updated; but if it was updated,
and you\u2019re asking for the latest file, then it will download the latest file (while keeping
the previous file intact in case you need it again).`),cs=h(),Ue=o("p"),At=t("In order to achieve this, all folders contain the same skeleton:"),is=h(),p(be.$$.fragment),rs=h(),Re=o("p"),Pt=t("Each folder is designed to contain the following:"),hs=h(),R=o("h3"),J=o("a"),ia=o("span"),p(ue.$$.fragment),jt=h(),ra=o("span"),Dt=t("Refs"),fs=h(),w=o("p"),St=t("The "),ha=o("code"),xt=t("refs"),Ot=t(` folder contains files which indicates the latest revision of the given reference. For example,
if we have previously fetched a file from the `),fa=o("code"),Ht=t("main"),Ut=t(" branch of a repository, the "),da=o("code"),Rt=t("refs"),Mt=t(`
folder will contain a file named `),pa=o("code"),Tt=t("main"),Ft=t(", which will itself contain the commit identifier of the current head."),ds=h(),$=o("p"),Nt=t("If the latest commit of "),ma=o("code"),Gt=t("main"),Bt=t(" has "),ba=o("code"),Lt=t("aaaaaa"),Kt=t(" as identifier, then it will contain "),ua=o("code"),zt=t("aaaaaa"),qt=t("."),ps=h(),y=o("p"),Jt=t("If that same branch gets updated with a new commit, that has "),ga=o("code"),Yt=t("bbbbbb"),Zt=t(` as an identifier, then
re-downloading a file from that reference will update the `),va=o("code"),Vt=t("refs/main"),Qt=t(" file to contain "),Ea=o("code"),Wt=t("bbbbbb"),Xt=t("."),ms=h(),M=o("h3"),Y=o("a"),_a=o("span"),p(ge.$$.fragment),el=h(),wa=o("span"),al=t("Blobs"),bs=h(),Z=o("p"),sl=t("The "),$a=o("code"),tl=t("blobs"),ll=t(" folder contains the actual files that we have downloaded. The name of each file is their hash."),us=h(),T=o("h3"),V=o("a"),ya=o("span"),p(ve.$$.fragment),ol=h(),ka=o("span"),nl=t("Snapshots"),gs=h(),Q=o("p"),cl=t("The "),Ca=o("code"),il=t("snapshots"),rl=t(` folder contains symlinks to the blobs mentioned above. It is itself made up of several folders:
one per known revision!`),vs=h(),E=o("p"),hl=t("In the explanation above, we had initially fetched a file from the "),Ia=o("code"),fl=t("aaaaaa"),dl=t(` revision, before fetching a file from
the `),Aa=o("code"),pl=t("bbbbbb"),ml=t(" revision. In this situation, we would now have two folders in the "),Pa=o("code"),bl=t("snapshots"),ul=t(" folder: "),ja=o("code"),gl=t("aaaaaa"),vl=t(`
and `),Da=o("code"),El=t("bbbbbb"),_l=t("."),Es=h(),I=o("p"),wl=t(`In each of these folders, live symlinks that have the names of the files that we have downloaded. For example,
if we had downloaded the `),Sa=o("code"),$l=t("README.md"),yl=t(" file at revision "),xa=o("code"),kl=t("aaaaaa"),Cl=t(", we would have the following path:"),_s=h(),p(Ee.$$.fragment),ws=h(),W=o("p"),Il=t("That "),Oa=o("code"),Al=t("README.md"),Pl=t(" file is actually a symlink linking to the blob that has the hash of the file."),$s=h(),X=o("p"),jl=t(`By creating the skeleton this way we open the mechanism to file sharing: if the same file was fetched in
revision `),Ha=o("code"),Dl=t("bbbbbb"),Sl=t(", it would have the same hash and the file would not need to be re-downloaded."),ys=h(),F=o("h3"),ee=o("a"),Ua=o("span"),p(_e.$$.fragment),xl=h(),Ra=o("span"),Ol=t("In practice"),ks=h(),Me=o("p"),Hl=t("In practice, your cache should look like the following tree:"),Cs=h(),p(we.$$.fragment),Is=h(),N=o("h2"),ae=o("a"),Ma=o("span"),p($e.$$.fragment),Ul=h(),Ta=o("span"),Rl=t("Scan your cache"),As=h(),A=o("p"),Ml=t(`At the moment, cached files are never deleted from your local directory: when you download
a new revision of a branch, previous files are kept in case you need them again.
Therefore it can be useful to scan your cache directory in order to know which repos
and revisions are taking the most disk space. `),Fa=o("code"),Tl=t("huggingface_hub"),Fl=t(` provides an helper to
do so that can be used via `),Na=o("code"),Nl=t("huggingface-cli"),Gl=t(" or in a python script."),Ps=h(),G=o("h3"),se=o("a"),Ga=o("span"),p(ye.$$.fragment),Bl=h(),Ba=o("span"),Ll=t("From the terminal"),js=h(),P=o("p"),Kl=t("The easiest way to scan your HF cache-system is to use the "),La=o("code"),zl=t("scan-cache"),ql=t(` command from
`),Ka=o("code"),Jl=t("huggingface-cli"),Yl=t(` tool. This command scans the cache and prints a report with information
like repo id, repo type, disk usage, refs and full local path.`),Ds=h(),Te=o("p"),Zl=t(`The snippet below shows a scan report in a folder in which 4 models and 2 datasets are
cached.`),Ss=h(),p(ke.$$.fragment),xs=h(),j=o("p"),Vl=t("To get a more detailed report, use the "),za=o("code"),Ql=t("--verbose"),Wl=t(` option. For each repo, you get a
list of all revisions that have been downloaded. As explained above, the files that don\u2019t
change between 2 revisions are shared thanks to the symlinks. This means that the size of
the repo on disk is expected to be less than the sum of the size of each of its revisions.
For example, here `),qa=o("code"),Xl=t("bert-base-cased"),eo=t(` has 2 revisions of 1.4G and 1.5G but the total disk
usage is only 1.9G.`),Os=h(),p(Ce.$$.fragment),Hs=h(),B=o("h4"),te=o("a"),Ja=o("span"),p(Ie.$$.fragment),ao=h(),Ya=o("span"),so=t("Grep example"),Us=h(),le=o("p"),to=t("Since the output is in tabular format, you can combine it with any "),Za=o("code"),lo=t("grep"),oo=t(`-like tools to
filter the entries. Here is an example to filter only revisions from the \u201Ct5-small\u201D
model on a Unix-based machine.`),Rs=h(),p(Ae.$$.fragment),Ms=h(),L=o("h3"),oe=o("a"),Va=o("span"),p(Pe.$$.fragment),no=h(),Qa=o("span"),co=t("From Python"),Ts=h(),ne=o("p"),io=t("For a more advanced usage, use "),Fe=o("a"),ro=t("scan_cache_dir()"),ho=t(` which is the python utility called by
the CLI tool.`),Fs=h(),Ne=o("p"),fo=t("You can use it to get a detailed report structured around 4 dataclasses:"),Ns=h(),k=o("ul"),je=o("li"),Ge=o("a"),po=t("HFCacheInfo"),mo=t(": complete report returned by "),Be=o("a"),bo=t("scan_cache_dir()"),uo=h(),Le=o("li"),Ke=o("a"),go=t("CachedRepoInfo"),vo=t(": information about a cached repo"),Eo=h(),ze=o("li"),qe=o("a"),_o=t("CachedRevisionInfo"),wo=t(": information about a cached revision (e.g. \u201Csnapshot\u201D) inside a repo"),$o=h(),Je=o("li"),Ye=o("a"),yo=t("CachedFileInfo"),ko=t(": information about a cached file in a snapshot"),Gs=h(),Ze=o("p"),Co=t("Here is a simple usage example. See reference for details."),Bs=h(),p(De.$$.fragment),this.h()},l(e){const i=lc('[data-svelte="svelte-1phssyn"]',document.head);O=n(i,"META",{name:!0,content:!0}),i.forEach(s),Wa=f(e),H=n(e,"H1",{class:!0});var Ks=c(H);z=n(Ks,"A",{id:!0,class:!0,href:!0});var Do=c(z);ea=n(Do,"SPAN",{});var So=c(ea);m(he.$$.fragment,So),So.forEach(s),Do.forEach(s),it=f(Ks),fe=n(Ks,"SPAN",{});var zs=c(fe);rt=l(zs,"Manage "),aa=n(zs,"CODE",{});var xo=c(aa);ht=l(xo,"huggingface_hub"),xo.forEach(s),ft=l(zs," cache-system"),zs.forEach(s),Ks.forEach(s),Xa=f(e),U=n(e,"H2",{class:!0});var qs=c(U);q=n(qs,"A",{id:!0,class:!0,href:!0});var Oo=c(q);sa=n(Oo,"SPAN",{});var Ho=c(sa);m(de.$$.fragment,Ho),Ho.forEach(s),Oo.forEach(s),dt=f(qs),ta=n(qs,"SPAN",{});var Uo=c(ta);pt=l(Uo,"Understand caching"),Uo.forEach(s),qs.forEach(s),es=f(e),Se=n(e,"P",{});var Ro=c(Se);mt=l(Ro,`The Hugging Face Hub cache-system is designed to be the central cache shared across libraries
that depend on the Hub. It has been updated in v0.8.0 to prevent re-downloading same files
between revisions.`),Ro.forEach(s),as=f(e),xe=n(e,"P",{});var Mo=c(xe);bt=l(Mo,"The caching system is designed as follows:"),Mo.forEach(s),ss=f(e),m(pe.$$.fragment,e),ts=f(e),_=n(e,"P",{});var D=c(_);ut=l(D,"The "),la=n(D,"CODE",{});var To=c(la);gt=l(To,"<CACHE_DIR>"),To.forEach(s),vt=l(D,` is usually your user\u2019s home directory. However, it is customizable with the
`),oa=n(D,"CODE",{});var Fo=c(oa);Et=l(Fo,"cache_dir"),Fo.forEach(s),_t=l(D," argument on all methods, or by specifying either "),na=n(D,"CODE",{});var No=c(na);wt=l(No,"HF_HOME"),No.forEach(s),$t=l(D,` or
`),ca=n(D,"CODE",{});var Go=c(ca);yt=l(Go,"HUGGINGFACE_HUB_CACHE"),Go.forEach(s),kt=l(D," environment variable."),D.forEach(s),ls=f(e),Oe=n(e,"P",{});var Bo=c(Oe);Ct=l(Bo,`Models, datasets and spaces share a common root. Each of these repositories contains the
repository type, the namespace (organization or username) if it exists and the
repository name:`),Bo.forEach(s),os=f(e),m(me.$$.fragment,e),ns=f(e),He=n(e,"P",{});var Lo=c(He);It=l(Lo,`It is within these folders that all files will now be downloaded from the Hub. Caching ensures that
a file isn\u2019t downloaded twice if it already exists and wasn\u2019t updated; but if it was updated,
and you\u2019re asking for the latest file, then it will download the latest file (while keeping
the previous file intact in case you need it again).`),Lo.forEach(s),cs=f(e),Ue=n(e,"P",{});var Ko=c(Ue);At=l(Ko,"In order to achieve this, all folders contain the same skeleton:"),Ko.forEach(s),is=f(e),m(be.$$.fragment,e),rs=f(e),Re=n(e,"P",{});var zo=c(Re);Pt=l(zo,"Each folder is designed to contain the following:"),zo.forEach(s),hs=f(e),R=n(e,"H3",{class:!0});var Js=c(R);J=n(Js,"A",{id:!0,class:!0,href:!0});var qo=c(J);ia=n(qo,"SPAN",{});var Jo=c(ia);m(ue.$$.fragment,Jo),Jo.forEach(s),qo.forEach(s),jt=f(Js),ra=n(Js,"SPAN",{});var Yo=c(ra);Dt=l(Yo,"Refs"),Yo.forEach(s),Js.forEach(s),fs=f(e),w=n(e,"P",{});var S=c(w);St=l(S,"The "),ha=n(S,"CODE",{});var Zo=c(ha);xt=l(Zo,"refs"),Zo.forEach(s),Ot=l(S,` folder contains files which indicates the latest revision of the given reference. For example,
if we have previously fetched a file from the `),fa=n(S,"CODE",{});var Vo=c(fa);Ht=l(Vo,"main"),Vo.forEach(s),Ut=l(S," branch of a repository, the "),da=n(S,"CODE",{});var Qo=c(da);Rt=l(Qo,"refs"),Qo.forEach(s),Mt=l(S,`
folder will contain a file named `),pa=n(S,"CODE",{});var Wo=c(pa);Tt=l(Wo,"main"),Wo.forEach(s),Ft=l(S,", which will itself contain the commit identifier of the current head."),S.forEach(s),ds=f(e),$=n(e,"P",{});var ce=c($);Nt=l(ce,"If the latest commit of "),ma=n(ce,"CODE",{});var Xo=c(ma);Gt=l(Xo,"main"),Xo.forEach(s),Bt=l(ce," has "),ba=n(ce,"CODE",{});var en=c(ba);Lt=l(en,"aaaaaa"),en.forEach(s),Kt=l(ce," as identifier, then it will contain "),ua=n(ce,"CODE",{});var an=c(ua);zt=l(an,"aaaaaa"),an.forEach(s),qt=l(ce,"."),ce.forEach(s),ps=f(e),y=n(e,"P",{});var ie=c(y);Jt=l(ie,"If that same branch gets updated with a new commit, that has "),ga=n(ie,"CODE",{});var sn=c(ga);Yt=l(sn,"bbbbbb"),sn.forEach(s),Zt=l(ie,` as an identifier, then
re-downloading a file from that reference will update the `),va=n(ie,"CODE",{});var tn=c(va);Vt=l(tn,"refs/main"),tn.forEach(s),Qt=l(ie," file to contain "),Ea=n(ie,"CODE",{});var ln=c(Ea);Wt=l(ln,"bbbbbb"),ln.forEach(s),Xt=l(ie,"."),ie.forEach(s),ms=f(e),M=n(e,"H3",{class:!0});var Ys=c(M);Y=n(Ys,"A",{id:!0,class:!0,href:!0});var on=c(Y);_a=n(on,"SPAN",{});var nn=c(_a);m(ge.$$.fragment,nn),nn.forEach(s),on.forEach(s),el=f(Ys),wa=n(Ys,"SPAN",{});var cn=c(wa);al=l(cn,"Blobs"),cn.forEach(s),Ys.forEach(s),bs=f(e),Z=n(e,"P",{});var Zs=c(Z);sl=l(Zs,"The "),$a=n(Zs,"CODE",{});var rn=c($a);tl=l(rn,"blobs"),rn.forEach(s),ll=l(Zs," folder contains the actual files that we have downloaded. The name of each file is their hash."),Zs.forEach(s),us=f(e),T=n(e,"H3",{class:!0});var Vs=c(T);V=n(Vs,"A",{id:!0,class:!0,href:!0});var hn=c(V);ya=n(hn,"SPAN",{});var fn=c(ya);m(ve.$$.fragment,fn),fn.forEach(s),hn.forEach(s),ol=f(Vs),ka=n(Vs,"SPAN",{});var dn=c(ka);nl=l(dn,"Snapshots"),dn.forEach(s),Vs.forEach(s),gs=f(e),Q=n(e,"P",{});var Qs=c(Q);cl=l(Qs,"The "),Ca=n(Qs,"CODE",{});var pn=c(Ca);il=l(pn,"snapshots"),pn.forEach(s),rl=l(Qs,` folder contains symlinks to the blobs mentioned above. It is itself made up of several folders:
one per known revision!`),Qs.forEach(s),vs=f(e),E=n(e,"P",{});var C=c(E);hl=l(C,"In the explanation above, we had initially fetched a file from the "),Ia=n(C,"CODE",{});var mn=c(Ia);fl=l(mn,"aaaaaa"),mn.forEach(s),dl=l(C,` revision, before fetching a file from
the `),Aa=n(C,"CODE",{});var bn=c(Aa);pl=l(bn,"bbbbbb"),bn.forEach(s),ml=l(C," revision. In this situation, we would now have two folders in the "),Pa=n(C,"CODE",{});var un=c(Pa);bl=l(un,"snapshots"),un.forEach(s),ul=l(C," folder: "),ja=n(C,"CODE",{});var gn=c(ja);gl=l(gn,"aaaaaa"),gn.forEach(s),vl=l(C,`
and `),Da=n(C,"CODE",{});var vn=c(Da);El=l(vn,"bbbbbb"),vn.forEach(s),_l=l(C,"."),C.forEach(s),Es=f(e),I=n(e,"P",{});var Ve=c(I);wl=l(Ve,`In each of these folders, live symlinks that have the names of the files that we have downloaded. For example,
if we had downloaded the `),Sa=n(Ve,"CODE",{});var En=c(Sa);$l=l(En,"README.md"),En.forEach(s),yl=l(Ve," file at revision "),xa=n(Ve,"CODE",{});var _n=c(xa);kl=l(_n,"aaaaaa"),_n.forEach(s),Cl=l(Ve,", we would have the following path:"),Ve.forEach(s),_s=f(e),m(Ee.$$.fragment,e),ws=f(e),W=n(e,"P",{});var Ws=c(W);Il=l(Ws,"That "),Oa=n(Ws,"CODE",{});var wn=c(Oa);Al=l(wn,"README.md"),wn.forEach(s),Pl=l(Ws," file is actually a symlink linking to the blob that has the hash of the file."),Ws.forEach(s),$s=f(e),X=n(e,"P",{});var Xs=c(X);jl=l(Xs,`By creating the skeleton this way we open the mechanism to file sharing: if the same file was fetched in
revision `),Ha=n(Xs,"CODE",{});var $n=c(Ha);Dl=l($n,"bbbbbb"),$n.forEach(s),Sl=l(Xs,", it would have the same hash and the file would not need to be re-downloaded."),Xs.forEach(s),ys=f(e),F=n(e,"H3",{class:!0});var et=c(F);ee=n(et,"A",{id:!0,class:!0,href:!0});var yn=c(ee);Ua=n(yn,"SPAN",{});var kn=c(Ua);m(_e.$$.fragment,kn),kn.forEach(s),yn.forEach(s),xl=f(et),Ra=n(et,"SPAN",{});var Cn=c(Ra);Ol=l(Cn,"In practice"),Cn.forEach(s),et.forEach(s),ks=f(e),Me=n(e,"P",{});var In=c(Me);Hl=l(In,"In practice, your cache should look like the following tree:"),In.forEach(s),Cs=f(e),m(we.$$.fragment,e),Is=f(e),N=n(e,"H2",{class:!0});var at=c(N);ae=n(at,"A",{id:!0,class:!0,href:!0});var An=c(ae);Ma=n(An,"SPAN",{});var Pn=c(Ma);m($e.$$.fragment,Pn),Pn.forEach(s),An.forEach(s),Ul=f(at),Ta=n(at,"SPAN",{});var jn=c(Ta);Rl=l(jn,"Scan your cache"),jn.forEach(s),at.forEach(s),As=f(e),A=n(e,"P",{});var Qe=c(A);Ml=l(Qe,`At the moment, cached files are never deleted from your local directory: when you download
a new revision of a branch, previous files are kept in case you need them again.
Therefore it can be useful to scan your cache directory in order to know which repos
and revisions are taking the most disk space. `),Fa=n(Qe,"CODE",{});var Dn=c(Fa);Tl=l(Dn,"huggingface_hub"),Dn.forEach(s),Fl=l(Qe,` provides an helper to
do so that can be used via `),Na=n(Qe,"CODE",{});var Sn=c(Na);Nl=l(Sn,"huggingface-cli"),Sn.forEach(s),Gl=l(Qe," or in a python script."),Qe.forEach(s),Ps=f(e),G=n(e,"H3",{class:!0});var st=c(G);se=n(st,"A",{id:!0,class:!0,href:!0});var xn=c(se);Ga=n(xn,"SPAN",{});var On=c(Ga);m(ye.$$.fragment,On),On.forEach(s),xn.forEach(s),Bl=f(st),Ba=n(st,"SPAN",{});var Hn=c(Ba);Ll=l(Hn,"From the terminal"),Hn.forEach(s),st.forEach(s),js=f(e),P=n(e,"P",{});var We=c(P);Kl=l(We,"The easiest way to scan your HF cache-system is to use the "),La=n(We,"CODE",{});var Un=c(La);zl=l(Un,"scan-cache"),Un.forEach(s),ql=l(We,` command from
`),Ka=n(We,"CODE",{});var Rn=c(Ka);Jl=l(Rn,"huggingface-cli"),Rn.forEach(s),Yl=l(We,` tool. This command scans the cache and prints a report with information
like repo id, repo type, disk usage, refs and full local path.`),We.forEach(s),Ds=f(e),Te=n(e,"P",{});var Mn=c(Te);Zl=l(Mn,`The snippet below shows a scan report in a folder in which 4 models and 2 datasets are
cached.`),Mn.forEach(s),Ss=f(e),m(ke.$$.fragment,e),xs=f(e),j=n(e,"P",{});var Xe=c(j);Vl=l(Xe,"To get a more detailed report, use the "),za=n(Xe,"CODE",{});var Tn=c(za);Ql=l(Tn,"--verbose"),Tn.forEach(s),Wl=l(Xe,` option. For each repo, you get a
list of all revisions that have been downloaded. As explained above, the files that don\u2019t
change between 2 revisions are shared thanks to the symlinks. This means that the size of
the repo on disk is expected to be less than the sum of the size of each of its revisions.
For example, here `),qa=n(Xe,"CODE",{});var Fn=c(qa);Xl=l(Fn,"bert-base-cased"),Fn.forEach(s),eo=l(Xe,` has 2 revisions of 1.4G and 1.5G but the total disk
usage is only 1.9G.`),Xe.forEach(s),Os=f(e),m(Ce.$$.fragment,e),Hs=f(e),B=n(e,"H4",{class:!0});var tt=c(B);te=n(tt,"A",{id:!0,class:!0,href:!0});var Nn=c(te);Ja=n(Nn,"SPAN",{});var Gn=c(Ja);m(Ie.$$.fragment,Gn),Gn.forEach(s),Nn.forEach(s),ao=f(tt),Ya=n(tt,"SPAN",{});var Bn=c(Ya);so=l(Bn,"Grep example"),Bn.forEach(s),tt.forEach(s),Us=f(e),le=n(e,"P",{});var lt=c(le);to=l(lt,"Since the output is in tabular format, you can combine it with any "),Za=n(lt,"CODE",{});var Ln=c(Za);lo=l(Ln,"grep"),Ln.forEach(s),oo=l(lt,`-like tools to
filter the entries. Here is an example to filter only revisions from the \u201Ct5-small\u201D
model on a Unix-based machine.`),lt.forEach(s),Rs=f(e),m(Ae.$$.fragment,e),Ms=f(e),L=n(e,"H3",{class:!0});var ot=c(L);oe=n(ot,"A",{id:!0,class:!0,href:!0});var Kn=c(oe);Va=n(Kn,"SPAN",{});var zn=c(Va);m(Pe.$$.fragment,zn),zn.forEach(s),Kn.forEach(s),no=f(ot),Qa=n(ot,"SPAN",{});var qn=c(Qa);co=l(qn,"From Python"),qn.forEach(s),ot.forEach(s),Ts=f(e),ne=n(e,"P",{});var nt=c(ne);io=l(nt,"For a more advanced usage, use "),Fe=n(nt,"A",{href:!0});var Jn=c(Fe);ro=l(Jn,"scan_cache_dir()"),Jn.forEach(s),ho=l(nt,` which is the python utility called by
the CLI tool.`),nt.forEach(s),Fs=f(e),Ne=n(e,"P",{});var Yn=c(Ne);fo=l(Yn,"You can use it to get a detailed report structured around 4 dataclasses:"),Yn.forEach(s),Ns=f(e),k=n(e,"UL",{});var re=c(k);je=n(re,"LI",{});var ct=c(je);Ge=n(ct,"A",{href:!0});var Zn=c(Ge);po=l(Zn,"HFCacheInfo"),Zn.forEach(s),mo=l(ct,": complete report returned by "),Be=n(ct,"A",{href:!0});var Vn=c(Be);bo=l(Vn,"scan_cache_dir()"),Vn.forEach(s),ct.forEach(s),uo=f(re),Le=n(re,"LI",{});var Io=c(Le);Ke=n(Io,"A",{href:!0});var Qn=c(Ke);go=l(Qn,"CachedRepoInfo"),Qn.forEach(s),vo=l(Io,": information about a cached repo"),Io.forEach(s),Eo=f(re),ze=n(re,"LI",{});var Ao=c(ze);qe=n(Ao,"A",{href:!0});var Wn=c(qe);_o=l(Wn,"CachedRevisionInfo"),Wn.forEach(s),wo=l(Ao,": information about a cached revision (e.g. \u201Csnapshot\u201D) inside a repo"),Ao.forEach(s),$o=f(re),Je=n(re,"LI",{});var Po=c(Je);Ye=n(Po,"A",{href:!0});var Xn=c(Ye);yo=l(Xn,"CachedFileInfo"),Xn.forEach(s),ko=l(Po,": information about a cached file in a snapshot"),Po.forEach(s),re.forEach(s),Gs=f(e),Ze=n(e,"P",{});var ec=c(Ze);Co=l(ec,"Here is a simple usage example. See reference for details."),ec.forEach(s),Bs=f(e),m(De.$$.fragment,e),this.h()},h(){d(O,"name","hf:doc:metadata"),d(O,"content",JSON.stringify(ic)),d(z,"id","manage-huggingfacehub-cachesystem"),d(z,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(z,"href","#manage-huggingfacehub-cachesystem"),d(H,"class","relative group"),d(q,"id","understand-caching"),d(q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(q,"href","#understand-caching"),d(U,"class","relative group"),d(J,"id","refs"),d(J,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(J,"href","#refs"),d(R,"class","relative group"),d(Y,"id","blobs"),d(Y,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(Y,"href","#blobs"),d(M,"class","relative group"),d(V,"id","snapshots"),d(V,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(V,"href","#snapshots"),d(T,"class","relative group"),d(ee,"id","in-practice"),d(ee,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(ee,"href","#in-practice"),d(F,"class","relative group"),d(ae,"id","scan-your-cache"),d(ae,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(ae,"href","#scan-your-cache"),d(N,"class","relative group"),d(se,"id","from-the-terminal"),d(se,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(se,"href","#from-the-terminal"),d(G,"class","relative group"),d(te,"id","grep-example"),d(te,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(te,"href","#grep-example"),d(B,"class","relative group"),d(oe,"id","from-python"),d(oe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(oe,"href","#from-python"),d(L,"class","relative group"),d(Fe,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.scan_cache_dir"),d(Ge,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.HFCacheInfo"),d(Be,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.scan_cache_dir"),d(Ke,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.CachedRepoInfo"),d(qe,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.CachedRevisionInfo"),d(Ye,"href","/docs/huggingface_hub/main/en/package_reference/cache#huggingface_hub.CachedFileInfo")},m(e,i){a(document.head,O),r(e,Wa,i),r(e,H,i),a(H,z),a(z,ea),b(he,ea,null),a(H,it),a(H,fe),a(fe,rt),a(fe,aa),a(aa,ht),a(fe,ft),r(e,Xa,i),r(e,U,i),a(U,q),a(q,sa),b(de,sa,null),a(U,dt),a(U,ta),a(ta,pt),r(e,es,i),r(e,Se,i),a(Se,mt),r(e,as,i),r(e,xe,i),a(xe,bt),r(e,ss,i),b(pe,e,i),r(e,ts,i),r(e,_,i),a(_,ut),a(_,la),a(la,gt),a(_,vt),a(_,oa),a(oa,Et),a(_,_t),a(_,na),a(na,wt),a(_,$t),a(_,ca),a(ca,yt),a(_,kt),r(e,ls,i),r(e,Oe,i),a(Oe,Ct),r(e,os,i),b(me,e,i),r(e,ns,i),r(e,He,i),a(He,It),r(e,cs,i),r(e,Ue,i),a(Ue,At),r(e,is,i),b(be,e,i),r(e,rs,i),r(e,Re,i),a(Re,Pt),r(e,hs,i),r(e,R,i),a(R,J),a(J,ia),b(ue,ia,null),a(R,jt),a(R,ra),a(ra,Dt),r(e,fs,i),r(e,w,i),a(w,St),a(w,ha),a(ha,xt),a(w,Ot),a(w,fa),a(fa,Ht),a(w,Ut),a(w,da),a(da,Rt),a(w,Mt),a(w,pa),a(pa,Tt),a(w,Ft),r(e,ds,i),r(e,$,i),a($,Nt),a($,ma),a(ma,Gt),a($,Bt),a($,ba),a(ba,Lt),a($,Kt),a($,ua),a(ua,zt),a($,qt),r(e,ps,i),r(e,y,i),a(y,Jt),a(y,ga),a(ga,Yt),a(y,Zt),a(y,va),a(va,Vt),a(y,Qt),a(y,Ea),a(Ea,Wt),a(y,Xt),r(e,ms,i),r(e,M,i),a(M,Y),a(Y,_a),b(ge,_a,null),a(M,el),a(M,wa),a(wa,al),r(e,bs,i),r(e,Z,i),a(Z,sl),a(Z,$a),a($a,tl),a(Z,ll),r(e,us,i),r(e,T,i),a(T,V),a(V,ya),b(ve,ya,null),a(T,ol),a(T,ka),a(ka,nl),r(e,gs,i),r(e,Q,i),a(Q,cl),a(Q,Ca),a(Ca,il),a(Q,rl),r(e,vs,i),r(e,E,i),a(E,hl),a(E,Ia),a(Ia,fl),a(E,dl),a(E,Aa),a(Aa,pl),a(E,ml),a(E,Pa),a(Pa,bl),a(E,ul),a(E,ja),a(ja,gl),a(E,vl),a(E,Da),a(Da,El),a(E,_l),r(e,Es,i),r(e,I,i),a(I,wl),a(I,Sa),a(Sa,$l),a(I,yl),a(I,xa),a(xa,kl),a(I,Cl),r(e,_s,i),b(Ee,e,i),r(e,ws,i),r(e,W,i),a(W,Il),a(W,Oa),a(Oa,Al),a(W,Pl),r(e,$s,i),r(e,X,i),a(X,jl),a(X,Ha),a(Ha,Dl),a(X,Sl),r(e,ys,i),r(e,F,i),a(F,ee),a(ee,Ua),b(_e,Ua,null),a(F,xl),a(F,Ra),a(Ra,Ol),r(e,ks,i),r(e,Me,i),a(Me,Hl),r(e,Cs,i),b(we,e,i),r(e,Is,i),r(e,N,i),a(N,ae),a(ae,Ma),b($e,Ma,null),a(N,Ul),a(N,Ta),a(Ta,Rl),r(e,As,i),r(e,A,i),a(A,Ml),a(A,Fa),a(Fa,Tl),a(A,Fl),a(A,Na),a(Na,Nl),a(A,Gl),r(e,Ps,i),r(e,G,i),a(G,se),a(se,Ga),b(ye,Ga,null),a(G,Bl),a(G,Ba),a(Ba,Ll),r(e,js,i),r(e,P,i),a(P,Kl),a(P,La),a(La,zl),a(P,ql),a(P,Ka),a(Ka,Jl),a(P,Yl),r(e,Ds,i),r(e,Te,i),a(Te,Zl),r(e,Ss,i),b(ke,e,i),r(e,xs,i),r(e,j,i),a(j,Vl),a(j,za),a(za,Ql),a(j,Wl),a(j,qa),a(qa,Xl),a(j,eo),r(e,Os,i),b(Ce,e,i),r(e,Hs,i),r(e,B,i),a(B,te),a(te,Ja),b(Ie,Ja,null),a(B,ao),a(B,Ya),a(Ya,so),r(e,Us,i),r(e,le,i),a(le,to),a(le,Za),a(Za,lo),a(le,oo),r(e,Rs,i),b(Ae,e,i),r(e,Ms,i),r(e,L,i),a(L,oe),a(oe,Va),b(Pe,Va,null),a(L,no),a(L,Qa),a(Qa,co),r(e,Ts,i),r(e,ne,i),a(ne,io),a(ne,Fe),a(Fe,ro),a(ne,ho),r(e,Fs,i),r(e,Ne,i),a(Ne,fo),r(e,Ns,i),r(e,k,i),a(k,je),a(je,Ge),a(Ge,po),a(je,mo),a(je,Be),a(Be,bo),a(k,uo),a(k,Le),a(Le,Ke),a(Ke,go),a(Le,vo),a(k,Eo),a(k,ze),a(ze,qe),a(qe,_o),a(ze,wo),a(k,$o),a(k,Je),a(Je,Ye),a(Ye,yo),a(Je,ko),r(e,Gs,i),r(e,Ze,i),a(Ze,Co),r(e,Bs,i),b(De,e,i),Ls=!0},p:oc,i(e){Ls||(u(he.$$.fragment,e),u(de.$$.fragment,e),u(pe.$$.fragment,e),u(me.$$.fragment,e),u(be.$$.fragment,e),u(ue.$$.fragment,e),u(ge.$$.fragment,e),u(ve.$$.fragment,e),u(Ee.$$.fragment,e),u(_e.$$.fragment,e),u(we.$$.fragment,e),u($e.$$.fragment,e),u(ye.$$.fragment,e),u(ke.$$.fragment,e),u(Ce.$$.fragment,e),u(Ie.$$.fragment,e),u(Ae.$$.fragment,e),u(Pe.$$.fragment,e),u(De.$$.fragment,e),Ls=!0)},o(e){g(he.$$.fragment,e),g(de.$$.fragment,e),g(pe.$$.fragment,e),g(me.$$.fragment,e),g(be.$$.fragment,e),g(ue.$$.fragment,e),g(ge.$$.fragment,e),g(ve.$$.fragment,e),g(Ee.$$.fragment,e),g(_e.$$.fragment,e),g(we.$$.fragment,e),g($e.$$.fragment,e),g(ye.$$.fragment,e),g(ke.$$.fragment,e),g(Ce.$$.fragment,e),g(Ie.$$.fragment,e),g(Ae.$$.fragment,e),g(Pe.$$.fragment,e),g(De.$$.fragment,e),Ls=!1},d(e){s(O),e&&s(Wa),e&&s(H),v(he),e&&s(Xa),e&&s(U),v(de),e&&s(es),e&&s(Se),e&&s(as),e&&s(xe),e&&s(ss),v(pe,e),e&&s(ts),e&&s(_),e&&s(ls),e&&s(Oe),e&&s(os),v(me,e),e&&s(ns),e&&s(He),e&&s(cs),e&&s(Ue),e&&s(is),v(be,e),e&&s(rs),e&&s(Re),e&&s(hs),e&&s(R),v(ue),e&&s(fs),e&&s(w),e&&s(ds),e&&s($),e&&s(ps),e&&s(y),e&&s(ms),e&&s(M),v(ge),e&&s(bs),e&&s(Z),e&&s(us),e&&s(T),v(ve),e&&s(gs),e&&s(Q),e&&s(vs),e&&s(E),e&&s(Es),e&&s(I),e&&s(_s),v(Ee,e),e&&s(ws),e&&s(W),e&&s($s),e&&s(X),e&&s(ys),e&&s(F),v(_e),e&&s(ks),e&&s(Me),e&&s(Cs),v(we,e),e&&s(Is),e&&s(N),v($e),e&&s(As),e&&s(A),e&&s(Ps),e&&s(G),v(ye),e&&s(js),e&&s(P),e&&s(Ds),e&&s(Te),e&&s(Ss),v(ke,e),e&&s(xs),e&&s(j),e&&s(Os),v(Ce,e),e&&s(Hs),e&&s(B),v(Ie),e&&s(Us),e&&s(le),e&&s(Rs),v(Ae,e),e&&s(Ms),e&&s(L),v(Pe),e&&s(Ts),e&&s(ne),e&&s(Fs),e&&s(Ne),e&&s(Ns),e&&s(k),e&&s(Gs),e&&s(Ze),e&&s(Bs),v(De,e)}}}const ic={local:"manage-huggingfacehub-cachesystem",sections:[{local:"understand-caching",sections:[{local:"refs",title:"Refs"},{local:"blobs",title:"Blobs"},{local:"snapshots",title:"Snapshots"},{local:"in-practice",title:"In practice"}],title:"Understand caching"},{local:"scan-your-cache",sections:[{local:"from-the-terminal",sections:[{local:"grep-example",title:"Grep example"}],title:"From the terminal"},{local:"from-python",title:"From Python"}],title:"Scan your cache"}],title:"Manage `huggingface_hub` cache-system"};function rc(jo){return nc(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class pc extends ac{constructor(O){super();sc(this,O,rc,cc,tc,{})}}export{pc as default,ic as metadata};
