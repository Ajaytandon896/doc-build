import{S as pc,i as fc,s as cc,e as o,k as g,w as v,t as n,M as dc,c as s,d as r,m as h,a,x as $,h as l,b as c,G as e,g as p,y as E,q as y,o as w,B as H,v as _c,L as Oe}from"../../chunks/vendor-hf-doc-builder.js";import{T as Ou}from"../../chunks/Tip-hf-doc-builder.js";import{D as I}from"../../chunks/Docstring-hf-doc-builder.js";import{C as oe}from"../../chunks/CodeBlock-hf-doc-builder.js";import{I as S}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{E as Le}from"../../chunks/ExampleCodeBlock-hf-doc-builder.js";function mc(x){let d,k,b,f,m,i,_,se,X,ue,B,D,W,K,ve,R,U,ae,$e,Z,F,Q,J,ne,Ee,G,M,le,pe;return{c(){d=o("p"),k=n("HuggingFace Hub has following logging levels:"),b=g(),f=o("ul"),m=o("li"),i=o("code"),_=n("huggingface_hub.logging.CRITICAL"),se=n(", "),X=o("code"),ue=n("huggingface_hub.logging.FATAL"),B=g(),D=o("li"),W=o("code"),K=n("huggingface_hub.logging.ERROR"),ve=g(),R=o("li"),U=o("code"),ae=n("huggingface_hub.logging.WARNING"),$e=n(", "),Z=o("code"),F=n("huggingface_hub.logging.WARN"),Q=g(),J=o("li"),ne=o("code"),Ee=n("huggingface_hub.logging.INFO"),G=g(),M=o("li"),le=o("code"),pe=n("huggingface_hub.logging.DEBUG")},l(j){d=s(j,"P",{});var O=a(d);k=l(O,"HuggingFace Hub has following logging levels:"),O.forEach(r),b=h(j),f=s(j,"UL",{});var T=a(f);m=s(T,"LI",{});var fe=a(m);i=s(fe,"CODE",{});var ye=a(i);_=l(ye,"huggingface_hub.logging.CRITICAL"),ye.forEach(r),se=l(fe,", "),X=s(fe,"CODE",{});var N=a(X);ue=l(N,"huggingface_hub.logging.FATAL"),N.forEach(r),fe.forEach(r),B=h(T),D=s(T,"LI",{});var ee=a(D);W=s(ee,"CODE",{});var A=a(W);K=l(A,"huggingface_hub.logging.ERROR"),A.forEach(r),ee.forEach(r),ve=h(T),R=s(T,"LI",{});var z=a(R);U=s(z,"CODE",{});var Fe=a(U);ae=l(Fe,"huggingface_hub.logging.WARNING"),Fe.forEach(r),$e=l(z,", "),Z=s(z,"CODE",{});var V=a(Z);F=l(V,"huggingface_hub.logging.WARN"),V.forEach(r),z.forEach(r),Q=h(T),J=s(T,"LI",{});var ce=a(J);ne=s(ce,"CODE",{});var de=a(ne);Ee=l(de,"huggingface_hub.logging.INFO"),de.forEach(r),ce.forEach(r),G=h(T),M=s(T,"LI",{});var Ve=a(M);le=s(Ve,"CODE",{});var De=a(le);pe=l(De,"huggingface_hub.logging.DEBUG"),De.forEach(r),Ve.forEach(r),T.forEach(r)},m(j,O){p(j,d,O),e(d,k),p(j,b,O),p(j,f,O),e(f,m),e(m,i),e(i,_),e(m,se),e(m,X),e(X,ue),e(f,B),e(f,D),e(D,W),e(W,K),e(f,ve),e(f,R),e(R,U),e(U,ae),e(R,$e),e(R,Z),e(Z,F),e(f,Q),e(f,J),e(J,ne),e(ne,Ee),e(f,G),e(f,M),e(M,le),e(le,pe)},d(j){j&&r(d),j&&r(b),j&&r(f)}}}function bc(x){let d,k,b,f,m;return f=new oe({props:{code:`from huggingface_hub import get_logger

logger = get_logger(__file__)
logger.set_verbosity_info()`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_logger

<span class="hljs-meta">&gt;&gt;&gt; </span>logger = get_logger(__file__)
<span class="hljs-meta">&gt;&gt;&gt; </span>logger.set_verbosity_info()`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function vc(x){let d,k,b,f,m;return f=new oe({props:{code:`    import requests
    from huggingface_hub.utils import hf_raise_for_status, HfHubHTTPError

    response = requests.post(...)
    try:
        hf_raise_for_status(response)
    except HfHubHTTPError as e:
        print(str(e)) # formatted message
        e.request_id, e.server_message # details returned by server

        # Complete the error message with additional information once it's raised
        e.append_to_message("
ate_commit\` expects the repository to exist.")
        raise`,highlighted:`    <span class="hljs-keyword">import</span> requests
    <span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> hf_raise_for_status, HfHubHTTPError

    response = requests.post(...)
    <span class="hljs-keyword">try</span>:
        hf_raise_for_status(response)
    <span class="hljs-keyword">except</span> HfHubHTTPError <span class="hljs-keyword">as</span> e:
        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(e)) <span class="hljs-comment"># formatted message</span>
        e.request_id, e.server_message <span class="hljs-comment"># details returned by server</span>

        <span class="hljs-comment"># Complete the error message with additional information once it&#x27;s raised</span>
        e.append_to_message(<span class="hljs-string">&quot;
ate_commit\` expects the repository to exist.&quot;</span>)
        <span class="hljs-keyword">raise</span>`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function $c(x){let d,k,b,f,m,i,_,se,X,ue,B,D,W,K,ve,R,U,ae,$e,Z,F,Q,J,ne,Ee,G,M,le,pe,j,O,T,fe,ye;return{c(){d=o("p"),k=n("Raises when the request has failed:"),b=g(),f=o("ul"),m=o("li"),i=o("a"),_=n("RepositoryNotFoundError"),se=n(`
If the repository to download from cannot be found. This may be because it
doesn\u2019t exist, because `),X=o("code"),ue=n("repo_type"),B=n(` is not set correctly, or because the repo
is `),D=o("code"),W=n("private"),K=n(" and you do not have access."),ve=g(),R=o("li"),U=o("a"),ae=n("RevisionNotFoundError"),$e=n(`
If the repository exists but the revision couldn\u2019t be find.`),Z=g(),F=o("li"),Q=o("a"),J=n("EntryNotFoundError"),ne=n(`
If the repository exists but the entry (e.g. the requested file) couldn\u2019t be
find.`),Ee=g(),G=o("li"),M=o("a"),le=n("BadRequestError"),pe=n(`
If request failed with a HTTP 400 BadRequest error.`),j=g(),O=o("li"),T=o("a"),fe=n("HfHubHTTPError"),ye=n(`
If request failed for a reason not listed above.`),this.h()},l(N){d=s(N,"P",{});var ee=a(d);k=l(ee,"Raises when the request has failed:"),ee.forEach(r),b=h(N),f=s(N,"UL",{});var A=a(f);m=s(A,"LI",{});var z=a(m);i=s(z,"A",{href:!0});var Fe=a(i);_=l(Fe,"RepositoryNotFoundError"),Fe.forEach(r),se=l(z,`
If the repository to download from cannot be found. This may be because it
doesn\u2019t exist, because `),X=s(z,"CODE",{});var V=a(X);ue=l(V,"repo_type"),V.forEach(r),B=l(z,` is not set correctly, or because the repo
is `),D=s(z,"CODE",{});var ce=a(D);W=l(ce,"private"),ce.forEach(r),K=l(z," and you do not have access."),z.forEach(r),ve=h(A),R=s(A,"LI",{});var de=a(R);U=s(de,"A",{href:!0});var Ve=a(U);ae=l(Ve,"RevisionNotFoundError"),Ve.forEach(r),$e=l(de,`
If the repository exists but the revision couldn\u2019t be find.`),de.forEach(r),Z=h(A),F=s(A,"LI",{});var De=a(F);Q=s(De,"A",{href:!0});var go=a(Q);J=l(go,"EntryNotFoundError"),go.forEach(r),ne=l(De,`
If the repository exists but the entry (e.g. the requested file) couldn\u2019t be
find.`),De.forEach(r),Ee=h(A),G=s(A,"LI",{});var Ae=a(G);M=s(Ae,"A",{href:!0});var $t=a(M);le=l($t,"BadRequestError"),$t.forEach(r),pe=l(Ae,`
If request failed with a HTTP 400 BadRequest error.`),Ae.forEach(r),j=h(A),O=s(A,"LI",{});var tr=a(O);T=s(tr,"A",{href:!0});var ho=a(T);fe=l(ho,"HfHubHTTPError"),ho.forEach(r),ye=l(tr,`
If request failed for a reason not listed above.`),tr.forEach(r),A.forEach(r),this.h()},h(){c(i,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError"),c(U,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError"),c(Q,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.EntryNotFoundError"),c(M,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.BadRequestError"),c(T,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError")},m(N,ee){p(N,d,ee),e(d,k),p(N,b,ee),p(N,f,ee),e(f,m),e(m,i),e(i,_),e(m,se),e(m,X),e(X,ue),e(m,B),e(m,D),e(D,W),e(m,K),e(f,ve),e(f,R),e(R,U),e(U,ae),e(R,$e),e(f,Z),e(f,F),e(F,Q),e(Q,J),e(F,ne),e(f,Ee),e(f,G),e(G,M),e(M,le),e(G,pe),e(f,j),e(f,O),e(O,T),e(T,fe),e(O,ye)},d(N){N&&r(d),N&&r(b),N&&r(f)}}}function Ec(x){let d,k,b,f,m;return f=new oe({props:{code:`    import requests
    from huggingface_hub.utils import hf_raise_for_status, HfHubHTTPError

    response = requests.post(...)
    try:
        hf_raise_for_status(response)
    except HfHubHTTPError as e:
        print(str(e)) # formatted message
        e.request_id, e.server_message # details returned by server

        # Complete the error message with additional information once it's raised
        e.append_to_message("
ate_commit\` expects the repository to exist.")
        raise`,highlighted:`    <span class="hljs-keyword">import</span> requests
    <span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> hf_raise_for_status, HfHubHTTPError

    response = requests.post(...)
    <span class="hljs-keyword">try</span>:
        hf_raise_for_status(response)
    <span class="hljs-keyword">except</span> HfHubHTTPError <span class="hljs-keyword">as</span> e:
        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(e)) <span class="hljs-comment"># formatted message</span>
        e.request_id, e.server_message <span class="hljs-comment"># details returned by server</span>

        <span class="hljs-comment"># Complete the error message with additional information once it&#x27;s raised</span>
        e.append_to_message(<span class="hljs-string">&quot;
ate_commit\` expects the repository to exist.&quot;</span>)
        <span class="hljs-keyword">raise</span>`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function yc(x){let d,k,b,f,m;return f=new oe({props:{code:`from huggingface_hub import model_info
model_info("<non_existent_repository>")
`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> model_info
<span class="hljs-meta">&gt;&gt;&gt; </span>model_info(<span class="hljs-string">&quot;&lt;non_existent_repository&gt;&quot;</span>)
(...)
huggingface_hub.utils._errors.RepositoryNotFoundError: <span class="hljs-number">401</span> Client Error. (Request ID: PvMw_VjBMjVdMz53WKIzP)

Repository Not Found <span class="hljs-keyword">for</span> url: https://huggingface.co/api/models/%3Cnon_existent_repository%3E.
Please make sure you specified the correct \`repo_id\` <span class="hljs-keyword">and</span> \`repo_type\`.
If the repo <span class="hljs-keyword">is</span> private, make sure you are authenticated.
Invalid username <span class="hljs-keyword">or</span> password.`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function wc(x){let d,k,b,f,m;return f=new oe({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download('bert-base-cased', 'config.json', revision='<non-existent-revision>')
`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(<span class="hljs-string">&#x27;bert-base-cased&#x27;</span>, <span class="hljs-string">&#x27;config.json&#x27;</span>, revision=<span class="hljs-string">&#x27;&lt;non-existent-revision&gt;&#x27;</span>)
(...)
huggingface_hub.utils._errors.RevisionNotFoundError: <span class="hljs-number">404</span> Client Error. (Request ID: Mwhe_c3Kt650GcdKEFomX)

Revision Not Found <span class="hljs-keyword">for</span> url: https://huggingface.co/bert-base-cased/resolve/%3Cnon-existent-revision%3E/config.json.`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function Hc(x){let d,k,b,f,m;return f=new oe({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download('bert-base-cased', '<non-existent-file>')
`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(<span class="hljs-string">&#x27;bert-base-cased&#x27;</span>, <span class="hljs-string">&#x27;&lt;non-existent-file&gt;&#x27;</span>)
(...)
huggingface_hub.utils._errors.EntryNotFoundError: <span class="hljs-number">404</span> Client Error. (Request ID: 53pNl6M0MxsnG5Sw8JA6x)

Entry Not Found <span class="hljs-keyword">for</span> url: https://huggingface.co/bert-base-cased/resolve/main/%3Cnon-existent-file%3E.`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function kc(x){let d,k,b,f,m;return f=new oe({props:{code:`resp = requests.post("hf.co/api/check", ...)
hf_raise_for_status(resp, endpoint_name="check")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>resp = requests.post(<span class="hljs-string">&quot;hf.co/api/check&quot;</span>, ...)
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_raise_for_status(resp, endpoint_name=<span class="hljs-string">&quot;check&quot;</span>)
huggingface_hub.utils._errors.BadRequestError: Bad request <span class="hljs-keyword">for</span> check endpoint: {details} (Request ID: XXX)`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function xc(x){let d,k,b,f,m;return f=new oe({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download('bert-base-cased', '<non-cached-file>',  local_files_only=True)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(<span class="hljs-string">&#x27;bert-base-cased&#x27;</span>, <span class="hljs-string">&#x27;&lt;non-cached-file&gt;&#x27;</span>,  local_files_only=<span class="hljs-literal">True</span>)
(...)
huggingface_hub.utils._errors.LocalEntryNotFoundError: Cannot find the requested files <span class="hljs-keyword">in</span> the disk cache <span class="hljs-keyword">and</span> outgoing traffic has been disabled. To enable hf.co look-ups <span class="hljs-keyword">and</span> downloads online, <span class="hljs-built_in">set</span> <span class="hljs-string">&#x27;local_files_only&#x27;</span> to <span class="hljs-literal">False</span>.`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function Pc(x){let d,k,b,f,m;return f=new oe({props:{code:`from huggingface_hub.utils import validate_hf_hub_args

@validate_hf_hub_args
def my_cool_method(repo_id: str):
    print(repo_id)

my_cool_method(repo_id="valid_repo_id")

my_cool_method("other..repo..id")

my_cool_method(repo_id="other..repo..id")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> validate_hf_hub_args

<span class="hljs-meta">&gt;&gt;&gt; </span>@validate_hf_hub_args
<span class="hljs-meta">... </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_cool_method</span>(<span class="hljs-params">repo_id: <span class="hljs-built_in">str</span></span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(repo_id)

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;valid_repo_id&quot;</span>)
valid_repo_id

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function Tc(x){let d,k,b,f,m;return f=new oe({props:{code:`from huggingface_hub.utils import validate_repo_id
validate_repo_id(repo_id="valid_repo_id")
validate_repo_id(repo_id="other..repo..id")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> validate_repo_id
<span class="hljs-meta">&gt;&gt;&gt; </span>validate_repo_id(repo_id=<span class="hljs-string">&quot;valid_repo_id&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>validate_repo_id(repo_id=<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function jc(x){let d,k,b,f,m,i,_,se,X,ue,B,D,W,K,ve,R,U,ae,$e,Z,F,Q,J,ne,Ee,G,M,le,pe,j,O,T,fe,ye,N,ee,A,z,Fe,V,ce,de,Ve,De,go,Ae,$t,tr,ho,_l,uo,Fo,ml,bl,vl,po,Do,$l,El,Ia,we,rr,yl,Ao,wl,Hl,Et,Ca,Se,or,kl,qo,xl,La,Be,sr,Pl,ar,Tl,Io,jl,Nl,Oa,Ue,nr,Rl,lr,Fl,Co,Dl,Al,Va,Ge,ir,ql,gr,Il,Lo,Cl,Ll,Sa,Me,hr,Ol,ur,Vl,Oo,Sl,Bl,Ba,ze,pr,Ul,Vo,Gl,Ua,Xe,fr,Ml,So,zl,Ga,We,yt,Bo,cr,Xl,Uo,Wl,Ma,qe,Kl,Go,Jl,Yl,Mo,Zl,Ql,za,He,dr,ei,zo,ti,ri,wt,Xa,Ke,Ht,Xo,_r,oi,Wo,si,Wa,ke,Ko,ai,ni,Jo,li,ii,Yo,gi,hi,Ka,Je,kt,Zo,mr,ui,Qo,pi,Ja,ie,fo,fi,ci,es,di,_i,ts,mi,bi,rs,vi,$i,Ya,br,Za,Y,vr,Ei,Ye,yi,os,wi,Hi,ss,ki,xi,Pi,as,Ti,ji,xt,Ni,Pt,Qa,Ze,Tt,ns,$r,Ri,ls,Fi,en,jt,Di,is,Ai,qi,tn,Qe,Nt,gs,Er,Ii,hs,Ci,rn,yr,us,Li,Oi,on,C,wr,Vi,ps,Si,Bi,Hr,Ui,fs,Gi,Mi,zi,cs,Xi,Wi,et,ds,Ki,Ji,_s,Yi,Zi,ms,Qi,eg,Rt,tg,Ft,kr,rg,xr,og,bs,sg,ag,sn,tt,Dt,vs,Pr,ng,$s,lg,an,xe,Tr,ig,Es,gg,hg,At,nn,rt,qt,ys,jr,ug,ws,pg,ln,Pe,Nr,fg,Hs,cg,dg,It,gn,ot,Ct,ks,Rr,_g,xs,mg,hn,Te,Fr,bg,Ps,vg,$g,Lt,un,st,Ot,Ts,Dr,Eg,js,yg,pn,je,Ar,wg,qr,Hg,Ns,kg,xg,Pg,Vt,fn,at,St,Rs,Ir,Tg,Fs,jg,cn,ge,Cr,Ng,Ds,Rg,Fg,he,Dg,As,Ag,qg,qs,Ig,Cg,Is,Lg,Og,Cs,Vg,Sg,Bg,Bt,dn,nt,Ut,Ls,Lr,Ug,Os,Gg,_n,lt,Vs,Mg,zg,Or,Xg,Wg,mn,it,Gt,Ss,Vr,Kg,Bs,Jg,bn,gt,co,Yg,Zg,Us,Qg,eh,vn,Mt,th,_o,rh,oh,$n,mo,sh,En,Sr,yn,ht,zt,Gs,Br,ah,Ms,nh,wn,L,Ur,lh,Gr,ih,zs,gh,hh,uh,Xs,ph,fh,Ws,ch,dh,Ks,_e,bo,_h,mh,Js,bh,vh,Ys,$h,Eh,Zs,yh,wh,Hh,Xt,kh,Mr,Hn,ut,Wt,Qs,zr,xh,ea,Ph,kn,Ne,Xr,Th,Wr,jh,ta,Nh,Rh,Fh,Kr,Dh,Jr,ra,Ah,qh,xn,pt,Kt,oa,Yr,Ih,sa,Ch,Pn,vo,Lh,Tn,ft,Jt,aa,Zr,Oh,na,la,Vh,jn,P,Qr,Sh,eo,Bh,ia,Uh,Gh,Mh,ct,zh,ga,Xh,Wh,ha,Kh,Jh,Yh,ua,Zh,Qh,Re,pa,eu,tu,fa,ru,ou,ca,su,au,da,nu,lu,me,iu,_a,gu,hu,ma,uu,pu,ba,fu,cu,va,du,_u,be,mu,$a,bu,vu,Ea,$u,Eu,ya,yu,wu,wa,Hu,ku,Yt,xu,to,Pu,ro,Tu,ju,Nu,oo,Ha,so,Ru,Fu,ka,ao,Du,Nn;return i=new S({}),K=new S({}),j=new oe({props:{code:"from huggingface_hub import logging",highlighted:'<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> logging'}}),N=new oe({props:{code:`from huggingface_hub import logging

logging.set_verbosity_error()
logging.set_verbosity_warning()
logging.set_verbosity_info()
logging.set_verbosity_debug()

logging.set_verbosity(...)`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> logging

logging.set_verbosity_error()
logging.set_verbosity_warning()
logging.set_verbosity_info()
logging.set_verbosity_debug()

logging.set_verbosity(...)`}}),rr=new I({props:{name:"huggingface_hub.utils.logging.get_verbosity",anchor:"huggingface_hub.utils.logging.get_verbosity",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L103",returnDescription:`
<p>Logging level, e.g., <code>huggingface_hub.logging.DEBUG</code> and
<code>huggingface_hub.logging.INFO</code>.</p>
`}}),Et=new Ou({props:{$$slots:{default:[mc]},$$scope:{ctx:x}}}),or=new I({props:{name:"huggingface_hub.utils.logging.set_verbosity",anchor:"huggingface_hub.utils.logging.set_verbosity",parameters:[{name:"verbosity",val:": int"}],parametersDescription:[{anchor:"huggingface_hub.utils.logging.set_verbosity.verbosity",description:`<strong>verbosity</strong> (<code>int</code>) &#x2014;
Logging level, e.g., <code>huggingface_hub.logging.DEBUG</code> and
<code>huggingface_hub.logging.INFO</code>.`,name:"verbosity"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L125"}}),sr=new I({props:{name:"huggingface_hub.utils.logging.set_verbosity_info",anchor:"huggingface_hub.utils.logging.set_verbosity_info",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L137"}}),nr=new I({props:{name:"huggingface_hub.utils.logging.set_verbosity_debug",anchor:"huggingface_hub.utils.logging.set_verbosity_debug",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L151"}}),ir=new I({props:{name:"huggingface_hub.utils.logging.set_verbosity_warning",anchor:"huggingface_hub.utils.logging.set_verbosity_warning",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L144"}}),hr=new I({props:{name:"huggingface_hub.utils.logging.set_verbosity_error",anchor:"huggingface_hub.utils.logging.set_verbosity_error",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L158"}}),pr=new I({props:{name:"huggingface_hub.utils.logging.disable_propagation",anchor:"huggingface_hub.utils.logging.disable_propagation",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L165"}}),fr=new I({props:{name:"huggingface_hub.utils.logging.enable_propagation",anchor:"huggingface_hub.utils.logging.enable_propagation",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L173"}}),cr=new S({}),dr=new I({props:{name:"huggingface_hub.utils.logging.get_logger",anchor:"huggingface_hub.utils.logging.get_logger",parameters:[{name:"name",val:": typing.Optional[str] = None"}],parametersDescription:[{anchor:"huggingface_hub.utils.logging.get_logger.name",description:`<strong>name</strong> (<code>str</code>, <em>optional</em>) &#x2014;
The name of the logger to get, usually the filename`,name:"name"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L78"}}),wt=new Le({props:{anchor:"huggingface_hub.utils.logging.get_logger.example",$$slots:{default:[bc]},$$scope:{ctx:x}}}),_r=new S({}),mr=new S({}),br=new oe({props:{code:`import requests
from huggingface_hub.utils import hf_raise_for_status, HfHubHTTPError

response = requests.post(...)
try:
    hf_raise_for_status(response)
except HfHubHTTPError as e:
    print(str(e)) # formatted message
    e.request_id, e.server_message # details returned by server

    # Complete the error message with additional information once it's raised
    e.append_to_message("\\n\`create_commit\` expects the repository to exist.")
    raise`,highlighted:`<span class="hljs-keyword">import</span> requests
<span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> hf_raise_for_status, HfHubHTTPError

response = requests.post(...)
<span class="hljs-keyword">try</span>:
    hf_raise_for_status(response)
<span class="hljs-keyword">except</span> HfHubHTTPError <span class="hljs-keyword">as</span> e:
    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(e)) <span class="hljs-comment"># formatted message</span>
    e.request_id, e.server_message <span class="hljs-comment"># details returned by server</span>

    <span class="hljs-comment"># Complete the error message with additional information once it&#x27;s raised</span>
    e.append_to_message(<span class="hljs-string">&quot;\\n\`create_commit\` expects the repository to exist.&quot;</span>)
    <span class="hljs-keyword">raise</span>`}}),vr=new I({props:{name:"huggingface_hub.utils.hf_raise_for_status",anchor:"huggingface_hub.utils.hf_raise_for_status",parameters:[{name:"response",val:": Response"},{name:"endpoint_name",val:": typing.Optional[str] = None"}],parametersDescription:[{anchor:"huggingface_hub.utils.hf_raise_for_status.response",description:`<strong>response</strong> (<code>Response</code>) &#x2014;
Response from the server.`,name:"response"},{anchor:"huggingface_hub.utils.hf_raise_for_status.endpoint_name",description:`<strong>endpoint_name</strong> (<code>str</code>, <em>optional</em>) &#x2014;
Name of the endpoint that has been called. If provided, the error message
will be more complete.`,name:"endpoint_name"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L184"}}),xt=new Le({props:{anchor:"huggingface_hub.utils.hf_raise_for_status.example",$$slots:{default:[vc]},$$scope:{ctx:x}}}),Pt=new Ou({props:{warning:!0,$$slots:{default:[$c]},$$scope:{ctx:x}}}),$r=new S({}),Er=new S({}),wr=new I({props:{name:"class huggingface_hub.utils.HfHubHTTPError",anchor:"huggingface_hub.utils.HfHubHTTPError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L9"}}),Rt=new Le({props:{anchor:"huggingface_hub.utils.HfHubHTTPError.example",$$slots:{default:[Ec]},$$scope:{ctx:x}}}),kr=new I({props:{name:"append_to_message",anchor:"huggingface_hub.utils.HfHubHTTPError.append_to_message",parameters:[{name:"additional_message",val:": str"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L85"}}),Pr=new S({}),Tr=new I({props:{name:"class huggingface_hub.utils.RepositoryNotFoundError",anchor:"huggingface_hub.utils.RepositoryNotFoundError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L90"}}),At=new Le({props:{anchor:"huggingface_hub.utils.RepositoryNotFoundError.example",$$slots:{default:[yc]},$$scope:{ctx:x}}}),jr=new S({}),Nr=new I({props:{name:"class huggingface_hub.utils.RevisionNotFoundError",anchor:"huggingface_hub.utils.RevisionNotFoundError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L111"}}),It=new Le({props:{anchor:"huggingface_hub.utils.RevisionNotFoundError.example",$$slots:{default:[wc]},$$scope:{ctx:x}}}),Rr=new S({}),Fr=new I({props:{name:"class huggingface_hub.utils.EntryNotFoundError",anchor:"huggingface_hub.utils.EntryNotFoundError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L129"}}),Lt=new Le({props:{anchor:"huggingface_hub.utils.EntryNotFoundError.example",$$slots:{default:[Hc]},$$scope:{ctx:x}}}),Dr=new S({}),Ar=new I({props:{name:"class huggingface_hub.utils.BadRequestError",anchor:"huggingface_hub.utils.BadRequestError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L170"}}),Vt=new Le({props:{anchor:"huggingface_hub.utils.BadRequestError.example",$$slots:{default:[kc]},$$scope:{ctx:x}}}),Ir=new S({}),Cr=new I({props:{name:"class huggingface_hub.utils.LocalEntryNotFoundError",anchor:"huggingface_hub.utils.LocalEntryNotFoundError",parameters:[{name:"message",val:": str"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L147"}}),Bt=new Le({props:{anchor:"huggingface_hub.utils.LocalEntryNotFoundError.example",$$slots:{default:[xc]},$$scope:{ctx:x}}}),Lr=new S({}),Vr=new S({}),Sr=new oe({props:{code:`from huggingface_hub.utils import validate_hf_hub_args

@validate_hf_hub_args
def my_cool_method(repo_id: str):
    print(repo_id)

my_cool_method(repo_id="valid_repo_id")

my_cool_method("other..repo..id")

my_cool_method(repo_id="other..repo..id")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> validate_hf_hub_args

<span class="hljs-meta">&gt;&gt;&gt; </span>@validate_hf_hub_args
<span class="hljs-meta">... </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_cool_method</span>(<span class="hljs-params">repo_id: <span class="hljs-built_in">str</span></span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(repo_id)

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;valid_repo_id&quot;</span>)
valid_repo_id

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.`}}),Br=new S({}),Ur=new I({props:{name:"huggingface_hub.utils.validate_hf_hub_args",anchor:"huggingface_hub.utils.validate_hf_hub_args",parameters:[{name:"fn",val:": CallableT"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_validators.py#L47",raiseDescription:`
<ul>
<li><a
  href="/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.HFValidationError"
>HFValidationError</a> \u2014 If an input is not valid.</li>
</ul>
`,raiseType:`
<p><a
  href="/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.HFValidationError"
>HFValidationError</a></p>
`}}),Xt=new Le({props:{anchor:"huggingface_hub.utils.validate_hf_hub_args.example",$$slots:{default:[Pc]},$$scope:{ctx:x}}}),Mr=new Ou({props:{warning:!0}}),zr=new S({}),Xr=new I({props:{name:"class huggingface_hub.utils.HFValidationError",anchor:"huggingface_hub.utils.HFValidationError",parameters:"",source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_validators.py#L36"}}),Yr=new S({}),Zr=new S({}),Qr=new I({props:{name:"huggingface_hub.utils.validate_repo_id",anchor:"huggingface_hub.utils.validate_repo_id",parameters:[{name:"repo_id",val:": str"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_validators.py#L99"}}),Yt=new Le({props:{anchor:"huggingface_hub.utils.validate_repo_id.example",$$slots:{default:[Tc]},$$scope:{ctx:x}}}),{c(){d=o("meta"),k=g(),b=o("h1"),f=o("a"),m=o("span"),v(i.$$.fragment),_=g(),se=o("span"),X=n("Utilities"),ue=g(),B=o("h2"),D=o("a"),W=o("span"),v(K.$$.fragment),ve=g(),R=o("span"),U=n("Controlling the logging of "),ae=o("code"),$e=n("huggingface_hub"),Z=g(),F=o("p"),Q=n("The "),J=o("code"),ne=n("huggingface_hub"),Ee=n(" package exposes a "),G=o("code"),M=n("logging"),le=n(` utility to control the logging level of the package itself.
You can import it as such:`),pe=g(),v(j.$$.fragment),O=g(),T=o("p"),fe=n("Then, you may define the verbosity in order to update the amount of logs you\u2019ll see:"),ye=g(),v(N.$$.fragment),ee=g(),A=o("p"),z=n("The levels should be understood as follows:"),Fe=g(),V=o("ul"),ce=o("li"),de=o("code"),Ve=n("error"),De=n(": only show critical logs about usage which may result in an error or unexpected behavior."),go=g(),Ae=o("li"),$t=o("code"),tr=n("warning"),ho=n(`: show logs that aren\u2019t critical but usage may result in unintended behavior.
Additionally, important informative logs may be shown.`),_l=g(),uo=o("li"),Fo=o("code"),ml=n("info"),bl=n(`: show most logs, including some verbose logging regarding what is happening under the hood.
If something is behaving in an unexpected manner, we recommend switching the verbosity level to this in order
to get more information.`),vl=g(),po=o("li"),Do=o("code"),$l=n("debug"),El=n(`: show all logs, including some internal logs which may be used to track exactly what\u2019s happening
under the hood.`),Ia=g(),we=o("div"),v(rr.$$.fragment),yl=g(),Ao=o("p"),wl=n("Return the current level for the HuggingFace Hub\u2019s root logger."),Hl=g(),v(Et.$$.fragment),Ca=g(),Se=o("div"),v(or.$$.fragment),kl=g(),qo=o("p"),xl=n("Sets the level for the HuggingFace Hub\u2019s root logger."),La=g(),Be=o("div"),v(sr.$$.fragment),Pl=g(),ar=o("p"),Tl=n("Sets the verbosity to "),Io=o("code"),jl=n("logging.INFO"),Nl=n("."),Oa=g(),Ue=o("div"),v(nr.$$.fragment),Rl=g(),lr=o("p"),Fl=n("Sets the verbosity to "),Co=o("code"),Dl=n("logging.DEBUG"),Al=n("."),Va=g(),Ge=o("div"),v(ir.$$.fragment),ql=g(),gr=o("p"),Il=n("Sets the verbosity to "),Lo=o("code"),Cl=n("logging.WARNING"),Ll=n("."),Sa=g(),Me=o("div"),v(hr.$$.fragment),Ol=g(),ur=o("p"),Vl=n("Sets the verbosity to "),Oo=o("code"),Sl=n("logging.ERROR"),Bl=n("."),Ba=g(),ze=o("div"),v(pr.$$.fragment),Ul=g(),Vo=o("p"),Gl=n(`Disable propagation of the library log outputs. Note that log propagation is
disabled by default.`),Ua=g(),Xe=o("div"),v(fr.$$.fragment),Ml=g(),So=o("p"),zl=n(`Enable propagation of the library log outputs. Please disable the
HuggingFace Hub\u2019s default handler to prevent double logging if the root
logger has been configured.`),Ga=g(),We=o("h3"),yt=o("a"),Bo=o("span"),v(cr.$$.fragment),Xl=g(),Uo=o("span"),Wl=n("Repo-specific helper methods"),Ma=g(),qe=o("p"),Kl=n("The methods exposed below are relevant when modifying modules from the "),Go=o("code"),Jl=n("huggingface_hub"),Yl=n(` library itself.
Using these shouldn\u2019t be necessary if you use `),Mo=o("code"),Zl=n("huggingface_hub"),Ql=n(" and you don\u2019t modify them."),za=g(),He=o("div"),v(dr.$$.fragment),ei=g(),zo=o("p"),ti=n(`Returns a logger with the specified name. This function is not supposed
to be directly accessed by library users.`),ri=g(),v(wt.$$.fragment),Xa=g(),Ke=o("h2"),Ht=o("a"),Xo=o("span"),v(_r.$$.fragment),oi=g(),Wo=o("span"),si=n("Handling HTTP errors"),Wa=g(),ke=o("p"),Ko=o("code"),ai=n("huggingface_hub"),ni=n(" defines its own HTTP errors to refine the "),Jo=o("code"),li=n("HTTPError"),ii=n(` raised by
`),Yo=o("code"),gi=n("requests"),hi=n(" with additional information sent back by the server."),Ka=g(),Je=o("h3"),kt=o("a"),Zo=o("span"),v(mr.$$.fragment),ui=g(),Qo=o("span"),pi=n("Raise for status"),Ja=g(),ie=o("p"),fo=o("a"),fi=n("hf_raise_for_status()"),ci=n(` is meant to be the central method to \u201Craise for status\u201D from any
request made to the Hub. It wraps the base `),es=o("code"),di=n("requests.raise_for_status"),_i=n(` to provide
additional information. Any `),ts=o("code"),mi=n("HTTPError"),bi=n(" thrown is converted into a "),rs=o("code"),vi=n("HfHubHTTPError"),$i=n("."),Ya=g(),v(br.$$.fragment),Za=g(),Y=o("div"),v(vr.$$.fragment),Ei=g(),Ye=o("p"),yi=n("Internal version of "),os=o("code"),wi=n("response.raise_for_status()"),Hi=n(` that will refine a
potential HTTPError. Raised exception will be an instance of `),ss=o("code"),ki=n("HfHubHTTPError"),xi=n("."),Pi=g(),as=o("p"),Ti=n(`This helper is meant to be the unique method to raise_for_status when making a call
to the Hugging Face Hub.`),ji=g(),v(xt.$$.fragment),Ni=g(),v(Pt.$$.fragment),Qa=g(),Ze=o("h3"),Tt=o("a"),ns=o("span"),v($r.$$.fragment),Ri=g(),ls=o("span"),Fi=n("HTTP errors"),en=g(),jt=o("p"),Di=n("Here is a list of HTTP errors thrown in "),is=o("code"),Ai=n("huggingface_hub"),qi=n("."),tn=g(),Qe=o("h4"),Nt=o("a"),gs=o("span"),v(Er.$$.fragment),Ii=g(),hs=o("span"),Ci=n("HfHubHTTPError"),rn=g(),yr=o("p"),us=o("code"),Li=n("HfHubHTTPError"),Oi=n(` is the parent class for any HF Hub HTTP error. It takes care of parsing
the server response and format the error message to provide as much information to the
user as possible.`),on=g(),C=o("div"),v(wr.$$.fragment),Vi=g(),ps=o("p"),Si=n("HTTPError to inherit from for any custom HTTP Error raised in HF Hub."),Bi=g(),Hr=o("p"),Ui=n("Any HTTPError is converted at least into a "),fs=o("code"),Gi=n("HfHubHTTPError"),Mi=n(`. If some information is
sent back by the server, it will be added to the error message.`),zi=g(),cs=o("p"),Xi=n("Added details:"),Wi=g(),et=o("ul"),ds=o("li"),Ki=n("Request id from \u201CX-Request-Id\u201D header if exists."),Ji=g(),_s=o("li"),Yi=n("Server error message from the header \u201CX-Error-Message\u201D."),Zi=g(),ms=o("li"),Qi=n("Server error message if we can found one in the response body."),eg=g(),v(Rt.$$.fragment),tg=g(),Ft=o("div"),v(kr.$$.fragment),rg=g(),xr=o("p"),og=n("Append additional information to the "),bs=o("code"),sg=n("HfHubHTTPError"),ag=n(" initial message."),sn=g(),tt=o("h4"),Dt=o("a"),vs=o("span"),v(Pr.$$.fragment),ng=g(),$s=o("span"),lg=n("RepositoryNotFoundError"),an=g(),xe=o("div"),v(Tr.$$.fragment),ig=g(),Es=o("p"),gg=n(`Raised when trying to access a hf.co URL with an invalid repository name, or
with a private repo name the user does not have access to.`),hg=g(),v(At.$$.fragment),nn=g(),rt=o("h4"),qt=o("a"),ys=o("span"),v(jr.$$.fragment),ug=g(),ws=o("span"),pg=n("RevisionNotFoundError"),ln=g(),Pe=o("div"),v(Nr.$$.fragment),fg=g(),Hs=o("p"),cg=n(`Raised when trying to access a hf.co URL with a valid repository but an invalid
revision.`),dg=g(),v(It.$$.fragment),gn=g(),ot=o("h4"),Ct=o("a"),ks=o("span"),v(Rr.$$.fragment),_g=g(),xs=o("span"),mg=n("EntryNotFoundError"),hn=g(),Te=o("div"),v(Fr.$$.fragment),bg=g(),Ps=o("p"),vg=n(`Raised when trying to access a hf.co URL with a valid repository and revision
but an invalid filename.`),$g=g(),v(Lt.$$.fragment),un=g(),st=o("h4"),Ot=o("a"),Ts=o("span"),v(Dr.$$.fragment),Eg=g(),js=o("span"),yg=n("BadRequestError"),pn=g(),je=o("div"),v(Ar.$$.fragment),wg=g(),qr=o("p"),Hg=n("Raised by "),Ns=o("code"),kg=n("hf_raise_for_status"),xg=n(" when the server returns a HTTP 400 error."),Pg=g(),v(Vt.$$.fragment),fn=g(),at=o("h4"),St=o("a"),Rs=o("span"),v(Ir.$$.fragment),Tg=g(),Fs=o("span"),jg=n("LocalEntryNotFoundError"),cn=g(),ge=o("div"),v(Cr.$$.fragment),Ng=g(),Ds=o("p"),Rg=n(`Raised when trying to access a file that is not on the disk when network is
disabled or unavailable (connection issue). The entry may exist on the Hub.`),Fg=g(),he=o("p"),Dg=n("Note: "),As=o("code"),Ag=n("ValueError"),qg=n(` type is to ensure backward compatibility.
Note: `),qs=o("code"),Ig=n("LocalEntryNotFoundError"),Cg=n(" derives from "),Is=o("code"),Lg=n("HTTPError"),Og=n(" because of "),Cs=o("code"),Vg=n("EntryNotFoundError"),Sg=n(`
even when it is not a network issue.`),Bg=g(),v(Bt.$$.fragment),dn=g(),nt=o("h2"),Ut=o("a"),Ls=o("span"),v(Lr.$$.fragment),Ug=g(),Os=o("span"),Gg=n("Validators"),_n=g(),lt=o("p"),Vs=o("code"),Mg=n("huggingface_hub"),zg=n(` include custom validators to validate method arguments automatically.
Validation is inspired by the work done in `),Or=o("a"),Xg=n("Pydantic"),Wg=n(`
to validate type hints but with more limited features.`),mn=g(),it=o("h3"),Gt=o("a"),Ss=o("span"),v(Vr.$$.fragment),Kg=g(),Bs=o("span"),Jg=n("Generic decorator"),bn=g(),gt=o("p"),co=o("a"),Yg=n("validate_hf_hub_args()"),Zg=n(` is a generic decorator to encapsulate
methods that have arguments following `),Us=o("code"),Qg=n("huggingface_hub"),eh=n(`\u2019s naming. By default, all
arguments that has a validator implemented will be validated.`),vn=g(),Mt=o("p"),th=n("If an input is not valid, a "),_o=o("a"),rh=n("HFValidationError"),oh=n(` is thrown. Only
the first non-valid value throws an error and stops the validation process.`),$n=g(),mo=o("p"),sh=n("Usage:"),En=g(),v(Sr.$$.fragment),yn=g(),ht=o("h4"),zt=o("a"),Gs=o("span"),v(Br.$$.fragment),ah=g(),Ms=o("span"),nh=n("validate_hf_hub_args"),wn=g(),L=o("div"),v(Ur.$$.fragment),lh=g(),Gr=o("p"),ih=n("Validate values received as argument for any public method of "),zs=o("code"),gh=n("huggingface_hub"),hh=n("."),uh=g(),Xs=o("p"),ph=n(`The goal of this decorator is to harmonize validation of arguments reused
everywhere. By default, all defined validators are tested.`),fh=g(),Ws=o("p"),ch=n("Validators:"),dh=g(),Ks=o("ul"),_e=o("li"),bo=o("a"),_h=n("validate_repo_id()"),mh=n(": "),Js=o("code"),bh=n("repo_id"),vh=n(" must be "),Ys=o("code"),$h=n('"repo_name"'),Eh=n(`
or `),Zs=o("code"),yh=n('"namespace/repo_name"'),wh=n(". Namespace is a username or an organization."),Hh=g(),v(Xt.$$.fragment),kh=g(),v(Mr.$$.fragment),Hn=g(),ut=o("h4"),Wt=o("a"),Qs=o("span"),v(zr.$$.fragment),xh=g(),ea=o("span"),Ph=n("HFValidationError"),kn=g(),Ne=o("div"),v(Xr.$$.fragment),Th=g(),Wr=o("p"),jh=n("Generic exception thrown by "),ta=o("code"),Nh=n("huggingface_hub"),Rh=n(" validators."),Fh=g(),Kr=o("p"),Dh=n("Inherits from "),Jr=o("a"),ra=o("code"),Ah=n("ValueError"),qh=n("."),xn=g(),pt=o("h3"),Kt=o("a"),oa=o("span"),v(Yr.$$.fragment),Ih=g(),sa=o("span"),Ch=n("Argument validators"),Pn=g(),vo=o("p"),Lh=n(`Validators can also be used individually. Here is a list of all arguments that can be
validated.`),Tn=g(),ft=o("h4"),Jt=o("a"),aa=o("span"),v(Zr.$$.fragment),Oh=g(),na=o("span"),la=o("code"),Vh=n("repo_id"),jn=g(),P=o("div"),v(Qr.$$.fragment),Sh=g(),eo=o("p"),Bh=n("Validate "),ia=o("code"),Uh=n("repo_id"),Gh=n(" is valid."),Mh=g(),ct=o("p"),zh=n(`This is not meant to replace the proper validation made on the Hub but rather to
avoid local inconsistencies whenever possible (example: passing `),ga=o("code"),Xh=n("repo_type"),Wh=n(` in the
`),ha=o("code"),Kh=n("repo_id"),Jh=n(" is forbidden)."),Yh=g(),ua=o("p"),Zh=n("Rules:"),Qh=g(),Re=o("ul"),pa=o("li"),eu=n("Between 1 and 96 characters."),tu=g(),fa=o("li"),ru=n("Either \u201Crepo_name\u201D or \u201Cnamespace/repo_name\u201D"),ou=g(),ca=o("li"),su=n("[a-zA-Z0-9] or \u201D-\u201D, \u201D_\u201D, \u201D.\u201D"),au=g(),da=o("li"),nu=n("\u201D\u2014\u201D and \u201D..\u201D are forbidden"),lu=g(),me=o("p"),iu=n("Valid: "),_a=o("code"),gu=n('"foo"'),hu=n(", "),ma=o("code"),uu=n('"foo/bar"'),pu=n(", "),ba=o("code"),fu=n('"123"'),cu=n(", "),va=o("code"),du=n('"Foo-BAR_foo.bar123"'),_u=g(),be=o("p"),mu=n("Not valid: "),$a=o("code"),bu=n('"datasets/foo/bar"'),vu=n(", "),Ea=o("code"),$u=n('".repo_id"'),Eu=n(", "),ya=o("code"),yu=n('"foo--bar"'),wu=n(", "),wa=o("code"),Hu=n('"foo.git"'),ku=g(),v(Yt.$$.fragment),xu=g(),to=o("p"),Pu=n("Discussed in "),ro=o("a"),Tu=n("https://github.com/huggingface/huggingface_hub/issues/1008"),ju=n(`.
In moon-landing (internal repository):`),Nu=g(),oo=o("ul"),Ha=o("li"),so=o("a"),Ru=n("https://github.com/huggingface/moon-landing/blob/main/server/lib/Names.ts#L27"),Fu=g(),ka=o("li"),ao=o("a"),Du=n("https://github.com/huggingface/moon-landing/blob/main/server/views/components/NewRepoForm/NewRepoForm.svelte#L138"),this.h()},l(t){const u=dc('[data-svelte="svelte-1phssyn"]',document.head);d=s(u,"META",{name:!0,content:!0}),u.forEach(r),k=h(t),b=s(t,"H1",{class:!0});var no=a(b);f=s(no,"A",{id:!0,class:!0,href:!0});var xa=a(f);m=s(xa,"SPAN",{});var Pa=a(m);$(i.$$.fragment,Pa),Pa.forEach(r),xa.forEach(r),_=h(no),se=s(no,"SPAN",{});var Ta=a(se);X=l(Ta,"Utilities"),Ta.forEach(r),no.forEach(r),ue=h(t),B=s(t,"H2",{class:!0});var lo=a(B);D=s(lo,"A",{id:!0,class:!0,href:!0});var ja=a(D);W=s(ja,"SPAN",{});var Na=a(W);$(K.$$.fragment,Na),Na.forEach(r),ja.forEach(r),ve=h(lo),R=s(lo,"SPAN",{});var $o=a(R);U=l($o,"Controlling the logging of "),ae=s($o,"CODE",{});var Ra=a(ae);$e=l(Ra,"huggingface_hub"),Ra.forEach(r),$o.forEach(r),lo.forEach(r),Z=h(t),F=s(t,"P",{});var dt=a(F);Q=l(dt,"The "),J=s(dt,"CODE",{});var Fa=a(J);ne=l(Fa,"huggingface_hub"),Fa.forEach(r),Ee=l(dt," package exposes a "),G=s(dt,"CODE",{});var Da=a(G);M=l(Da,"logging"),Da.forEach(r),le=l(dt,` utility to control the logging level of the package itself.
You can import it as such:`),dt.forEach(r),pe=h(t),$(j.$$.fragment,t),O=h(t),T=s(t,"P",{});var Vu=a(T);fe=l(Vu,"Then, you may define the verbosity in order to update the amount of logs you\u2019ll see:"),Vu.forEach(r),ye=h(t),$(N.$$.fragment,t),ee=h(t),A=s(t,"P",{});var Su=a(A);z=l(Su,"The levels should be understood as follows:"),Su.forEach(r),Fe=h(t),V=s(t,"UL",{});var Zt=a(V);ce=s(Zt,"LI",{});var Au=a(ce);de=s(Au,"CODE",{});var Bu=a(de);Ve=l(Bu,"error"),Bu.forEach(r),De=l(Au,": only show critical logs about usage which may result in an error or unexpected behavior."),Au.forEach(r),go=h(Zt),Ae=s(Zt,"LI",{});var qu=a(Ae);$t=s(qu,"CODE",{});var Uu=a($t);tr=l(Uu,"warning"),Uu.forEach(r),ho=l(qu,`: show logs that aren\u2019t critical but usage may result in unintended behavior.
Additionally, important informative logs may be shown.`),qu.forEach(r),_l=h(Zt),uo=s(Zt,"LI",{});var Iu=a(uo);Fo=s(Iu,"CODE",{});var Gu=a(Fo);ml=l(Gu,"info"),Gu.forEach(r),bl=l(Iu,`: show most logs, including some verbose logging regarding what is happening under the hood.
If something is behaving in an unexpected manner, we recommend switching the verbosity level to this in order
to get more information.`),Iu.forEach(r),vl=h(Zt),po=s(Zt,"LI",{});var Cu=a(po);Do=s(Cu,"CODE",{});var Mu=a(Do);$l=l(Mu,"debug"),Mu.forEach(r),El=l(Cu,`: show all logs, including some internal logs which may be used to track exactly what\u2019s happening
under the hood.`),Cu.forEach(r),Zt.forEach(r),Ia=h(t),we=s(t,"DIV",{class:!0});var Eo=a(we);$(rr.$$.fragment,Eo),yl=h(Eo),Ao=s(Eo,"P",{});var zu=a(Ao);wl=l(zu,"Return the current level for the HuggingFace Hub\u2019s root logger."),zu.forEach(r),Hl=h(Eo),$(Et.$$.fragment,Eo),Eo.forEach(r),Ca=h(t),Se=s(t,"DIV",{class:!0});var Rn=a(Se);$(or.$$.fragment,Rn),kl=h(Rn),qo=s(Rn,"P",{});var Xu=a(qo);xl=l(Xu,"Sets the level for the HuggingFace Hub\u2019s root logger."),Xu.forEach(r),Rn.forEach(r),La=h(t),Be=s(t,"DIV",{class:!0});var Fn=a(Be);$(sr.$$.fragment,Fn),Pl=h(Fn),ar=s(Fn,"P",{});var Dn=a(ar);Tl=l(Dn,"Sets the verbosity to "),Io=s(Dn,"CODE",{});var Wu=a(Io);jl=l(Wu,"logging.INFO"),Wu.forEach(r),Nl=l(Dn,"."),Dn.forEach(r),Fn.forEach(r),Oa=h(t),Ue=s(t,"DIV",{class:!0});var An=a(Ue);$(nr.$$.fragment,An),Rl=h(An),lr=s(An,"P",{});var qn=a(lr);Fl=l(qn,"Sets the verbosity to "),Co=s(qn,"CODE",{});var Ku=a(Co);Dl=l(Ku,"logging.DEBUG"),Ku.forEach(r),Al=l(qn,"."),qn.forEach(r),An.forEach(r),Va=h(t),Ge=s(t,"DIV",{class:!0});var In=a(Ge);$(ir.$$.fragment,In),ql=h(In),gr=s(In,"P",{});var Cn=a(gr);Il=l(Cn,"Sets the verbosity to "),Lo=s(Cn,"CODE",{});var Ju=a(Lo);Cl=l(Ju,"logging.WARNING"),Ju.forEach(r),Ll=l(Cn,"."),Cn.forEach(r),In.forEach(r),Sa=h(t),Me=s(t,"DIV",{class:!0});var Ln=a(Me);$(hr.$$.fragment,Ln),Ol=h(Ln),ur=s(Ln,"P",{});var On=a(ur);Vl=l(On,"Sets the verbosity to "),Oo=s(On,"CODE",{});var Yu=a(Oo);Sl=l(Yu,"logging.ERROR"),Yu.forEach(r),Bl=l(On,"."),On.forEach(r),Ln.forEach(r),Ba=h(t),ze=s(t,"DIV",{class:!0});var Vn=a(ze);$(pr.$$.fragment,Vn),Ul=h(Vn),Vo=s(Vn,"P",{});var Zu=a(Vo);Gl=l(Zu,`Disable propagation of the library log outputs. Note that log propagation is
disabled by default.`),Zu.forEach(r),Vn.forEach(r),Ua=h(t),Xe=s(t,"DIV",{class:!0});var Sn=a(Xe);$(fr.$$.fragment,Sn),Ml=h(Sn),So=s(Sn,"P",{});var Qu=a(So);zl=l(Qu,`Enable propagation of the library log outputs. Please disable the
HuggingFace Hub\u2019s default handler to prevent double logging if the root
logger has been configured.`),Qu.forEach(r),Sn.forEach(r),Ga=h(t),We=s(t,"H3",{class:!0});var Bn=a(We);yt=s(Bn,"A",{id:!0,class:!0,href:!0});var ep=a(yt);Bo=s(ep,"SPAN",{});var tp=a(Bo);$(cr.$$.fragment,tp),tp.forEach(r),ep.forEach(r),Xl=h(Bn),Uo=s(Bn,"SPAN",{});var rp=a(Uo);Wl=l(rp,"Repo-specific helper methods"),rp.forEach(r),Bn.forEach(r),Ma=h(t),qe=s(t,"P",{});var yo=a(qe);Kl=l(yo,"The methods exposed below are relevant when modifying modules from the "),Go=s(yo,"CODE",{});var op=a(Go);Jl=l(op,"huggingface_hub"),op.forEach(r),Yl=l(yo,` library itself.
Using these shouldn\u2019t be necessary if you use `),Mo=s(yo,"CODE",{});var sp=a(Mo);Zl=l(sp,"huggingface_hub"),sp.forEach(r),Ql=l(yo," and you don\u2019t modify them."),yo.forEach(r),za=h(t),He=s(t,"DIV",{class:!0});var wo=a(He);$(dr.$$.fragment,wo),ei=h(wo),zo=s(wo,"P",{});var ap=a(zo);ti=l(ap,`Returns a logger with the specified name. This function is not supposed
to be directly accessed by library users.`),ap.forEach(r),ri=h(wo),$(wt.$$.fragment,wo),wo.forEach(r),Xa=h(t),Ke=s(t,"H2",{class:!0});var Un=a(Ke);Ht=s(Un,"A",{id:!0,class:!0,href:!0});var np=a(Ht);Xo=s(np,"SPAN",{});var lp=a(Xo);$(_r.$$.fragment,lp),lp.forEach(r),np.forEach(r),oi=h(Un),Wo=s(Un,"SPAN",{});var ip=a(Wo);si=l(ip,"Handling HTTP errors"),ip.forEach(r),Un.forEach(r),Wa=h(t),ke=s(t,"P",{});var io=a(ke);Ko=s(io,"CODE",{});var gp=a(Ko);ai=l(gp,"huggingface_hub"),gp.forEach(r),ni=l(io," defines its own HTTP errors to refine the "),Jo=s(io,"CODE",{});var hp=a(Jo);li=l(hp,"HTTPError"),hp.forEach(r),ii=l(io,` raised by
`),Yo=s(io,"CODE",{});var up=a(Yo);gi=l(up,"requests"),up.forEach(r),hi=l(io," with additional information sent back by the server."),io.forEach(r),Ka=h(t),Je=s(t,"H3",{class:!0});var Gn=a(Je);kt=s(Gn,"A",{id:!0,class:!0,href:!0});var pp=a(kt);Zo=s(pp,"SPAN",{});var fp=a(Zo);$(mr.$$.fragment,fp),fp.forEach(r),pp.forEach(r),ui=h(Gn),Qo=s(Gn,"SPAN",{});var cp=a(Qo);pi=l(cp,"Raise for status"),cp.forEach(r),Gn.forEach(r),Ja=h(t),ie=s(t,"P",{});var _t=a(ie);fo=s(_t,"A",{href:!0});var dp=a(fo);fi=l(dp,"hf_raise_for_status()"),dp.forEach(r),ci=l(_t,` is meant to be the central method to \u201Craise for status\u201D from any
request made to the Hub. It wraps the base `),es=s(_t,"CODE",{});var _p=a(es);di=l(_p,"requests.raise_for_status"),_p.forEach(r),_i=l(_t,` to provide
additional information. Any `),ts=s(_t,"CODE",{});var mp=a(ts);mi=l(mp,"HTTPError"),mp.forEach(r),bi=l(_t," thrown is converted into a "),rs=s(_t,"CODE",{});var bp=a(rs);vi=l(bp,"HfHubHTTPError"),bp.forEach(r),$i=l(_t,"."),_t.forEach(r),Ya=h(t),$(br.$$.fragment,t),Za=h(t),Y=s(t,"DIV",{class:!0});var Ie=a(Y);$(vr.$$.fragment,Ie),Ei=h(Ie),Ye=s(Ie,"P",{});var Ho=a(Ye);yi=l(Ho,"Internal version of "),os=s(Ho,"CODE",{});var vp=a(os);wi=l(vp,"response.raise_for_status()"),vp.forEach(r),Hi=l(Ho,` that will refine a
potential HTTPError. Raised exception will be an instance of `),ss=s(Ho,"CODE",{});var $p=a(ss);ki=l($p,"HfHubHTTPError"),$p.forEach(r),xi=l(Ho,"."),Ho.forEach(r),Pi=h(Ie),as=s(Ie,"P",{});var Ep=a(as);Ti=l(Ep,`This helper is meant to be the unique method to raise_for_status when making a call
to the Hugging Face Hub.`),Ep.forEach(r),ji=h(Ie),$(xt.$$.fragment,Ie),Ni=h(Ie),$(Pt.$$.fragment,Ie),Ie.forEach(r),Qa=h(t),Ze=s(t,"H3",{class:!0});var Mn=a(Ze);Tt=s(Mn,"A",{id:!0,class:!0,href:!0});var yp=a(Tt);ns=s(yp,"SPAN",{});var wp=a(ns);$($r.$$.fragment,wp),wp.forEach(r),yp.forEach(r),Ri=h(Mn),ls=s(Mn,"SPAN",{});var Hp=a(ls);Fi=l(Hp,"HTTP errors"),Hp.forEach(r),Mn.forEach(r),en=h(t),jt=s(t,"P",{});var zn=a(jt);Di=l(zn,"Here is a list of HTTP errors thrown in "),is=s(zn,"CODE",{});var kp=a(is);Ai=l(kp,"huggingface_hub"),kp.forEach(r),qi=l(zn,"."),zn.forEach(r),tn=h(t),Qe=s(t,"H4",{class:!0});var Xn=a(Qe);Nt=s(Xn,"A",{id:!0,class:!0,href:!0});var xp=a(Nt);gs=s(xp,"SPAN",{});var Pp=a(gs);$(Er.$$.fragment,Pp),Pp.forEach(r),xp.forEach(r),Ii=h(Xn),hs=s(Xn,"SPAN",{});var Tp=a(hs);Ci=l(Tp,"HfHubHTTPError"),Tp.forEach(r),Xn.forEach(r),rn=h(t),yr=s(t,"P",{});var Lu=a(yr);us=s(Lu,"CODE",{});var jp=a(us);Li=l(jp,"HfHubHTTPError"),jp.forEach(r),Oi=l(Lu,` is the parent class for any HF Hub HTTP error. It takes care of parsing
the server response and format the error message to provide as much information to the
user as possible.`),Lu.forEach(r),on=h(t),C=s(t,"DIV",{class:!0});var te=a(C);$(wr.$$.fragment,te),Vi=h(te),ps=s(te,"P",{});var Np=a(ps);Si=l(Np,"HTTPError to inherit from for any custom HTTP Error raised in HF Hub."),Np.forEach(r),Bi=h(te),Hr=s(te,"P",{});var Wn=a(Hr);Ui=l(Wn,"Any HTTPError is converted at least into a "),fs=s(Wn,"CODE",{});var Rp=a(fs);Gi=l(Rp,"HfHubHTTPError"),Rp.forEach(r),Mi=l(Wn,`. If some information is
sent back by the server, it will be added to the error message.`),Wn.forEach(r),zi=h(te),cs=s(te,"P",{});var Fp=a(cs);Xi=l(Fp,"Added details:"),Fp.forEach(r),Wi=h(te),et=s(te,"UL",{});var ko=a(et);ds=s(ko,"LI",{});var Dp=a(ds);Ki=l(Dp,"Request id from \u201CX-Request-Id\u201D header if exists."),Dp.forEach(r),Ji=h(ko),_s=s(ko,"LI",{});var Ap=a(_s);Yi=l(Ap,"Server error message from the header \u201CX-Error-Message\u201D."),Ap.forEach(r),Zi=h(ko),ms=s(ko,"LI",{});var qp=a(ms);Qi=l(qp,"Server error message if we can found one in the response body."),qp.forEach(r),ko.forEach(r),eg=h(te),$(Rt.$$.fragment,te),tg=h(te),Ft=s(te,"DIV",{class:!0});var Kn=a(Ft);$(kr.$$.fragment,Kn),rg=h(Kn),xr=s(Kn,"P",{});var Jn=a(xr);og=l(Jn,"Append additional information to the "),bs=s(Jn,"CODE",{});var Ip=a(bs);sg=l(Ip,"HfHubHTTPError"),Ip.forEach(r),ag=l(Jn," initial message."),Jn.forEach(r),Kn.forEach(r),te.forEach(r),sn=h(t),tt=s(t,"H4",{class:!0});var Yn=a(tt);Dt=s(Yn,"A",{id:!0,class:!0,href:!0});var Cp=a(Dt);vs=s(Cp,"SPAN",{});var Lp=a(vs);$(Pr.$$.fragment,Lp),Lp.forEach(r),Cp.forEach(r),ng=h(Yn),$s=s(Yn,"SPAN",{});var Op=a($s);lg=l(Op,"RepositoryNotFoundError"),Op.forEach(r),Yn.forEach(r),an=h(t),xe=s(t,"DIV",{class:!0});var xo=a(xe);$(Tr.$$.fragment,xo),ig=h(xo),Es=s(xo,"P",{});var Vp=a(Es);gg=l(Vp,`Raised when trying to access a hf.co URL with an invalid repository name, or
with a private repo name the user does not have access to.`),Vp.forEach(r),hg=h(xo),$(At.$$.fragment,xo),xo.forEach(r),nn=h(t),rt=s(t,"H4",{class:!0});var Zn=a(rt);qt=s(Zn,"A",{id:!0,class:!0,href:!0});var Sp=a(qt);ys=s(Sp,"SPAN",{});var Bp=a(ys);$(jr.$$.fragment,Bp),Bp.forEach(r),Sp.forEach(r),ug=h(Zn),ws=s(Zn,"SPAN",{});var Up=a(ws);pg=l(Up,"RevisionNotFoundError"),Up.forEach(r),Zn.forEach(r),ln=h(t),Pe=s(t,"DIV",{class:!0});var Po=a(Pe);$(Nr.$$.fragment,Po),fg=h(Po),Hs=s(Po,"P",{});var Gp=a(Hs);cg=l(Gp,`Raised when trying to access a hf.co URL with a valid repository but an invalid
revision.`),Gp.forEach(r),dg=h(Po),$(It.$$.fragment,Po),Po.forEach(r),gn=h(t),ot=s(t,"H4",{class:!0});var Qn=a(ot);Ct=s(Qn,"A",{id:!0,class:!0,href:!0});var Mp=a(Ct);ks=s(Mp,"SPAN",{});var zp=a(ks);$(Rr.$$.fragment,zp),zp.forEach(r),Mp.forEach(r),_g=h(Qn),xs=s(Qn,"SPAN",{});var Xp=a(xs);mg=l(Xp,"EntryNotFoundError"),Xp.forEach(r),Qn.forEach(r),hn=h(t),Te=s(t,"DIV",{class:!0});var To=a(Te);$(Fr.$$.fragment,To),bg=h(To),Ps=s(To,"P",{});var Wp=a(Ps);vg=l(Wp,`Raised when trying to access a hf.co URL with a valid repository and revision
but an invalid filename.`),Wp.forEach(r),$g=h(To),$(Lt.$$.fragment,To),To.forEach(r),un=h(t),st=s(t,"H4",{class:!0});var el=a(st);Ot=s(el,"A",{id:!0,class:!0,href:!0});var Kp=a(Ot);Ts=s(Kp,"SPAN",{});var Jp=a(Ts);$(Dr.$$.fragment,Jp),Jp.forEach(r),Kp.forEach(r),Eg=h(el),js=s(el,"SPAN",{});var Yp=a(js);yg=l(Yp,"BadRequestError"),Yp.forEach(r),el.forEach(r),pn=h(t),je=s(t,"DIV",{class:!0});var jo=a(je);$(Ar.$$.fragment,jo),wg=h(jo),qr=s(jo,"P",{});var tl=a(qr);Hg=l(tl,"Raised by "),Ns=s(tl,"CODE",{});var Zp=a(Ns);kg=l(Zp,"hf_raise_for_status"),Zp.forEach(r),xg=l(tl," when the server returns a HTTP 400 error."),tl.forEach(r),Pg=h(jo),$(Vt.$$.fragment,jo),jo.forEach(r),fn=h(t),at=s(t,"H4",{class:!0});var rl=a(at);St=s(rl,"A",{id:!0,class:!0,href:!0});var Qp=a(St);Rs=s(Qp,"SPAN",{});var ef=a(Rs);$(Ir.$$.fragment,ef),ef.forEach(r),Qp.forEach(r),Tg=h(rl),Fs=s(rl,"SPAN",{});var tf=a(Fs);jg=l(tf,"LocalEntryNotFoundError"),tf.forEach(r),rl.forEach(r),cn=h(t),ge=s(t,"DIV",{class:!0});var Qt=a(ge);$(Cr.$$.fragment,Qt),Ng=h(Qt),Ds=s(Qt,"P",{});var rf=a(Ds);Rg=l(rf,`Raised when trying to access a file that is not on the disk when network is
disabled or unavailable (connection issue). The entry may exist on the Hub.`),rf.forEach(r),Fg=h(Qt),he=s(Qt,"P",{});var Ce=a(he);Dg=l(Ce,"Note: "),As=s(Ce,"CODE",{});var of=a(As);Ag=l(of,"ValueError"),of.forEach(r),qg=l(Ce,` type is to ensure backward compatibility.
Note: `),qs=s(Ce,"CODE",{});var sf=a(qs);Ig=l(sf,"LocalEntryNotFoundError"),sf.forEach(r),Cg=l(Ce," derives from "),Is=s(Ce,"CODE",{});var af=a(Is);Lg=l(af,"HTTPError"),af.forEach(r),Og=l(Ce," because of "),Cs=s(Ce,"CODE",{});var nf=a(Cs);Vg=l(nf,"EntryNotFoundError"),nf.forEach(r),Sg=l(Ce,`
even when it is not a network issue.`),Ce.forEach(r),Bg=h(Qt),$(Bt.$$.fragment,Qt),Qt.forEach(r),dn=h(t),nt=s(t,"H2",{class:!0});var ol=a(nt);Ut=s(ol,"A",{id:!0,class:!0,href:!0});var lf=a(Ut);Ls=s(lf,"SPAN",{});var gf=a(Ls);$(Lr.$$.fragment,gf),gf.forEach(r),lf.forEach(r),Ug=h(ol),Os=s(ol,"SPAN",{});var hf=a(Os);Gg=l(hf,"Validators"),hf.forEach(r),ol.forEach(r),_n=h(t),lt=s(t,"P",{});var Aa=a(lt);Vs=s(Aa,"CODE",{});var uf=a(Vs);Mg=l(uf,"huggingface_hub"),uf.forEach(r),zg=l(Aa,` include custom validators to validate method arguments automatically.
Validation is inspired by the work done in `),Or=s(Aa,"A",{href:!0,rel:!0});var pf=a(Or);Xg=l(pf,"Pydantic"),pf.forEach(r),Wg=l(Aa,`
to validate type hints but with more limited features.`),Aa.forEach(r),mn=h(t),it=s(t,"H3",{class:!0});var sl=a(it);Gt=s(sl,"A",{id:!0,class:!0,href:!0});var ff=a(Gt);Ss=s(ff,"SPAN",{});var cf=a(Ss);$(Vr.$$.fragment,cf),cf.forEach(r),ff.forEach(r),Kg=h(sl),Bs=s(sl,"SPAN",{});var df=a(Bs);Jg=l(df,"Generic decorator"),df.forEach(r),sl.forEach(r),bn=h(t),gt=s(t,"P",{});var qa=a(gt);co=s(qa,"A",{href:!0});var _f=a(co);Yg=l(_f,"validate_hf_hub_args()"),_f.forEach(r),Zg=l(qa,` is a generic decorator to encapsulate
methods that have arguments following `),Us=s(qa,"CODE",{});var mf=a(Us);Qg=l(mf,"huggingface_hub"),mf.forEach(r),eh=l(qa,`\u2019s naming. By default, all
arguments that has a validator implemented will be validated.`),qa.forEach(r),vn=h(t),Mt=s(t,"P",{});var al=a(Mt);th=l(al,"If an input is not valid, a "),_o=s(al,"A",{href:!0});var bf=a(_o);rh=l(bf,"HFValidationError"),bf.forEach(r),oh=l(al,` is thrown. Only
the first non-valid value throws an error and stops the validation process.`),al.forEach(r),$n=h(t),mo=s(t,"P",{});var vf=a(mo);sh=l(vf,"Usage:"),vf.forEach(r),En=h(t),$(Sr.$$.fragment,t),yn=h(t),ht=s(t,"H4",{class:!0});var nl=a(ht);zt=s(nl,"A",{id:!0,class:!0,href:!0});var $f=a(zt);Gs=s($f,"SPAN",{});var Ef=a(Gs);$(Br.$$.fragment,Ef),Ef.forEach(r),$f.forEach(r),ah=h(nl),Ms=s(nl,"SPAN",{});var yf=a(Ms);nh=l(yf,"validate_hf_hub_args"),yf.forEach(r),nl.forEach(r),wn=h(t),L=s(t,"DIV",{class:!0});var re=a(L);$(Ur.$$.fragment,re),lh=h(re),Gr=s(re,"P",{});var ll=a(Gr);ih=l(ll,"Validate values received as argument for any public method of "),zs=s(ll,"CODE",{});var wf=a(zs);gh=l(wf,"huggingface_hub"),wf.forEach(r),hh=l(ll,"."),ll.forEach(r),uh=h(re),Xs=s(re,"P",{});var Hf=a(Xs);ph=l(Hf,`The goal of this decorator is to harmonize validation of arguments reused
everywhere. By default, all defined validators are tested.`),Hf.forEach(r),fh=h(re),Ws=s(re,"P",{});var kf=a(Ws);ch=l(kf,"Validators:"),kf.forEach(r),dh=h(re),Ks=s(re,"UL",{});var xf=a(Ks);_e=s(xf,"LI",{});var mt=a(_e);bo=s(mt,"A",{href:!0});var Pf=a(bo);_h=l(Pf,"validate_repo_id()"),Pf.forEach(r),mh=l(mt,": "),Js=s(mt,"CODE",{});var Tf=a(Js);bh=l(Tf,"repo_id"),Tf.forEach(r),vh=l(mt," must be "),Ys=s(mt,"CODE",{});var jf=a(Ys);$h=l(jf,'"repo_name"'),jf.forEach(r),Eh=l(mt,`
or `),Zs=s(mt,"CODE",{});var Nf=a(Zs);yh=l(Nf,'"namespace/repo_name"'),Nf.forEach(r),wh=l(mt,". Namespace is a username or an organization."),mt.forEach(r),xf.forEach(r),Hh=h(re),$(Xt.$$.fragment,re),kh=h(re),$(Mr.$$.fragment,re),re.forEach(r),Hn=h(t),ut=s(t,"H4",{class:!0});var il=a(ut);Wt=s(il,"A",{id:!0,class:!0,href:!0});var Rf=a(Wt);Qs=s(Rf,"SPAN",{});var Ff=a(Qs);$(zr.$$.fragment,Ff),Ff.forEach(r),Rf.forEach(r),xh=h(il),ea=s(il,"SPAN",{});var Df=a(ea);Ph=l(Df,"HFValidationError"),Df.forEach(r),il.forEach(r),kn=h(t),Ne=s(t,"DIV",{class:!0});var No=a(Ne);$(Xr.$$.fragment,No),Th=h(No),Wr=s(No,"P",{});var gl=a(Wr);jh=l(gl,"Generic exception thrown by "),ta=s(gl,"CODE",{});var Af=a(ta);Nh=l(Af,"huggingface_hub"),Af.forEach(r),Rh=l(gl," validators."),gl.forEach(r),Fh=h(No),Kr=s(No,"P",{});var hl=a(Kr);Dh=l(hl,"Inherits from "),Jr=s(hl,"A",{href:!0,rel:!0});var qf=a(Jr);ra=s(qf,"CODE",{});var If=a(ra);Ah=l(If,"ValueError"),If.forEach(r),qf.forEach(r),qh=l(hl,"."),hl.forEach(r),No.forEach(r),xn=h(t),pt=s(t,"H3",{class:!0});var ul=a(pt);Kt=s(ul,"A",{id:!0,class:!0,href:!0});var Cf=a(Kt);oa=s(Cf,"SPAN",{});var Lf=a(oa);$(Yr.$$.fragment,Lf),Lf.forEach(r),Cf.forEach(r),Ih=h(ul),sa=s(ul,"SPAN",{});var Of=a(sa);Ch=l(Of,"Argument validators"),Of.forEach(r),ul.forEach(r),Pn=h(t),vo=s(t,"P",{});var Vf=a(vo);Lh=l(Vf,`Validators can also be used individually. Here is a list of all arguments that can be
validated.`),Vf.forEach(r),Tn=h(t),ft=s(t,"H4",{class:!0});var pl=a(ft);Jt=s(pl,"A",{id:!0,class:!0,href:!0});var Sf=a(Jt);aa=s(Sf,"SPAN",{});var Bf=a(aa);$(Zr.$$.fragment,Bf),Bf.forEach(r),Sf.forEach(r),Oh=h(pl),na=s(pl,"SPAN",{});var Uf=a(na);la=s(Uf,"CODE",{});var Gf=a(la);Vh=l(Gf,"repo_id"),Gf.forEach(r),Uf.forEach(r),pl.forEach(r),jn=h(t),P=s(t,"DIV",{class:!0});var q=a(P);$(Qr.$$.fragment,q),Sh=h(q),eo=s(q,"P",{});var fl=a(eo);Bh=l(fl,"Validate "),ia=s(fl,"CODE",{});var Mf=a(ia);Uh=l(Mf,"repo_id"),Mf.forEach(r),Gh=l(fl," is valid."),fl.forEach(r),Mh=h(q),ct=s(q,"P",{});var Ro=a(ct);zh=l(Ro,`This is not meant to replace the proper validation made on the Hub but rather to
avoid local inconsistencies whenever possible (example: passing `),ga=s(Ro,"CODE",{});var zf=a(ga);Xh=l(zf,"repo_type"),zf.forEach(r),Wh=l(Ro,` in the
`),ha=s(Ro,"CODE",{});var Xf=a(ha);Kh=l(Xf,"repo_id"),Xf.forEach(r),Jh=l(Ro," is forbidden)."),Ro.forEach(r),Yh=h(q),ua=s(q,"P",{});var Wf=a(ua);Zh=l(Wf,"Rules:"),Wf.forEach(r),Qh=h(q),Re=s(q,"UL",{});var er=a(Re);pa=s(er,"LI",{});var Kf=a(pa);eu=l(Kf,"Between 1 and 96 characters."),Kf.forEach(r),tu=h(er),fa=s(er,"LI",{});var Jf=a(fa);ru=l(Jf,"Either \u201Crepo_name\u201D or \u201Cnamespace/repo_name\u201D"),Jf.forEach(r),ou=h(er),ca=s(er,"LI",{});var Yf=a(ca);su=l(Yf,"[a-zA-Z0-9] or \u201D-\u201D, \u201D_\u201D, \u201D.\u201D"),Yf.forEach(r),au=h(er),da=s(er,"LI",{});var Zf=a(da);nu=l(Zf,"\u201D\u2014\u201D and \u201D..\u201D are forbidden"),Zf.forEach(r),er.forEach(r),lu=h(q),me=s(q,"P",{});var bt=a(me);iu=l(bt,"Valid: "),_a=s(bt,"CODE",{});var Qf=a(_a);gu=l(Qf,'"foo"'),Qf.forEach(r),hu=l(bt,", "),ma=s(bt,"CODE",{});var ec=a(ma);uu=l(ec,'"foo/bar"'),ec.forEach(r),pu=l(bt,", "),ba=s(bt,"CODE",{});var tc=a(ba);fu=l(tc,'"123"'),tc.forEach(r),cu=l(bt,", "),va=s(bt,"CODE",{});var rc=a(va);du=l(rc,'"Foo-BAR_foo.bar123"'),rc.forEach(r),bt.forEach(r),_u=h(q),be=s(q,"P",{});var vt=a(be);mu=l(vt,"Not valid: "),$a=s(vt,"CODE",{});var oc=a($a);bu=l(oc,'"datasets/foo/bar"'),oc.forEach(r),vu=l(vt,", "),Ea=s(vt,"CODE",{});var sc=a(Ea);$u=l(sc,'".repo_id"'),sc.forEach(r),Eu=l(vt,", "),ya=s(vt,"CODE",{});var ac=a(ya);yu=l(ac,'"foo--bar"'),ac.forEach(r),wu=l(vt,", "),wa=s(vt,"CODE",{});var nc=a(wa);Hu=l(nc,'"foo.git"'),nc.forEach(r),vt.forEach(r),ku=h(q),$(Yt.$$.fragment,q),xu=h(q),to=s(q,"P",{});var cl=a(to);Pu=l(cl,"Discussed in "),ro=s(cl,"A",{href:!0,rel:!0});var lc=a(ro);Tu=l(lc,"https://github.com/huggingface/huggingface_hub/issues/1008"),lc.forEach(r),ju=l(cl,`.
In moon-landing (internal repository):`),cl.forEach(r),Nu=h(q),oo=s(q,"UL",{});var dl=a(oo);Ha=s(dl,"LI",{});var ic=a(Ha);so=s(ic,"A",{href:!0,rel:!0});var gc=a(so);Ru=l(gc,"https://github.com/huggingface/moon-landing/blob/main/server/lib/Names.ts#L27"),gc.forEach(r),ic.forEach(r),Fu=h(dl),ka=s(dl,"LI",{});var hc=a(ka);ao=s(hc,"A",{href:!0,rel:!0});var uc=a(ao);Du=l(uc,"https://github.com/huggingface/moon-landing/blob/main/server/views/components/NewRepoForm/NewRepoForm.svelte#L138"),uc.forEach(r),hc.forEach(r),dl.forEach(r),q.forEach(r),this.h()},h(){c(d,"name","hf:doc:metadata"),c(d,"content",JSON.stringify(Nc)),c(f,"id","utilities"),c(f,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(f,"href","#utilities"),c(b,"class","relative group"),c(D,"id","huggingface_hub.utils.logging.get_verbosity"),c(D,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(D,"href","#huggingface_hub.utils.logging.get_verbosity"),c(B,"class","relative group"),c(we,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Se,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Be,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Ue,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Ge,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Me,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(ze,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Xe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(yt,"id","huggingface_hub.utils.logging.get_logger"),c(yt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(yt,"href","#huggingface_hub.utils.logging.get_logger"),c(We,"class","relative group"),c(He,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Ht,"id","handling-http-errors"),c(Ht,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Ht,"href","#handling-http-errors"),c(Ke,"class","relative group"),c(kt,"id","huggingface_hub.utils.hf_raise_for_status"),c(kt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(kt,"href","#huggingface_hub.utils.hf_raise_for_status"),c(Je,"class","relative group"),c(fo,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.hf_raise_for_status"),c(Y,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Tt,"id","http-errors"),c(Tt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Tt,"href","#http-errors"),c(Ze,"class","relative group"),c(Nt,"id","huggingface_hub.utils.HfHubHTTPError"),c(Nt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Nt,"href","#huggingface_hub.utils.HfHubHTTPError"),c(Qe,"class","relative group"),c(Ft,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(C,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Dt,"id","huggingface_hub.utils.RepositoryNotFoundError"),c(Dt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Dt,"href","#huggingface_hub.utils.RepositoryNotFoundError"),c(tt,"class","relative group"),c(xe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(qt,"id","huggingface_hub.utils.RevisionNotFoundError"),c(qt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(qt,"href","#huggingface_hub.utils.RevisionNotFoundError"),c(rt,"class","relative group"),c(Pe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Ct,"id","huggingface_hub.utils.EntryNotFoundError"),c(Ct,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Ct,"href","#huggingface_hub.utils.EntryNotFoundError"),c(ot,"class","relative group"),c(Te,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Ot,"id","huggingface_hub.utils.BadRequestError"),c(Ot,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Ot,"href","#huggingface_hub.utils.BadRequestError"),c(st,"class","relative group"),c(je,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(St,"id","huggingface_hub.utils.LocalEntryNotFoundError"),c(St,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(St,"href","#huggingface_hub.utils.LocalEntryNotFoundError"),c(at,"class","relative group"),c(ge,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Ut,"id","validators"),c(Ut,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Ut,"href","#validators"),c(nt,"class","relative group"),c(Or,"href","https://pydantic-docs.helpmanual.io/"),c(Or,"rel","nofollow"),c(Gt,"id","generic-decorator"),c(Gt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Gt,"href","#generic-decorator"),c(it,"class","relative group"),c(co,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.validate_hf_hub_args"),c(_o,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.HFValidationError"),c(zt,"id","huggingface_hub.utils.validate_hf_hub_args"),c(zt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(zt,"href","#huggingface_hub.utils.validate_hf_hub_args"),c(ht,"class","relative group"),c(bo,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.validate_repo_id"),c(L,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Wt,"id","huggingface_hub.utils.HFValidationError"),c(Wt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Wt,"href","#huggingface_hub.utils.HFValidationError"),c(ut,"class","relative group"),c(Jr,"href","https://docs.python.org/3/library/exceptions.html#ValueError"),c(Jr,"rel","nofollow"),c(Ne,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Kt,"id","argument-validators"),c(Kt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Kt,"href","#argument-validators"),c(pt,"class","relative group"),c(Jt,"id","huggingface_hub.utils.validate_repo_id"),c(Jt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Jt,"href","#huggingface_hub.utils.validate_repo_id"),c(ft,"class","relative group"),c(ro,"href","https://github.com/huggingface/huggingface_hub/issues/1008"),c(ro,"rel","nofollow"),c(so,"href","https://github.com/huggingface/moon-landing/blob/main/server/lib/Names.ts#L27"),c(so,"rel","nofollow"),c(ao,"href","https://github.com/huggingface/moon-landing/blob/main/server/views/components/NewRepoForm/NewRepoForm.svelte#L138"),c(ao,"rel","nofollow"),c(P,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(t,u){e(document.head,d),p(t,k,u),p(t,b,u),e(b,f),e(f,m),E(i,m,null),e(b,_),e(b,se),e(se,X),p(t,ue,u),p(t,B,u),e(B,D),e(D,W),E(K,W,null),e(B,ve),e(B,R),e(R,U),e(R,ae),e(ae,$e),p(t,Z,u),p(t,F,u),e(F,Q),e(F,J),e(J,ne),e(F,Ee),e(F,G),e(G,M),e(F,le),p(t,pe,u),E(j,t,u),p(t,O,u),p(t,T,u),e(T,fe),p(t,ye,u),E(N,t,u),p(t,ee,u),p(t,A,u),e(A,z),p(t,Fe,u),p(t,V,u),e(V,ce),e(ce,de),e(de,Ve),e(ce,De),e(V,go),e(V,Ae),e(Ae,$t),e($t,tr),e(Ae,ho),e(V,_l),e(V,uo),e(uo,Fo),e(Fo,ml),e(uo,bl),e(V,vl),e(V,po),e(po,Do),e(Do,$l),e(po,El),p(t,Ia,u),p(t,we,u),E(rr,we,null),e(we,yl),e(we,Ao),e(Ao,wl),e(we,Hl),E(Et,we,null),p(t,Ca,u),p(t,Se,u),E(or,Se,null),e(Se,kl),e(Se,qo),e(qo,xl),p(t,La,u),p(t,Be,u),E(sr,Be,null),e(Be,Pl),e(Be,ar),e(ar,Tl),e(ar,Io),e(Io,jl),e(ar,Nl),p(t,Oa,u),p(t,Ue,u),E(nr,Ue,null),e(Ue,Rl),e(Ue,lr),e(lr,Fl),e(lr,Co),e(Co,Dl),e(lr,Al),p(t,Va,u),p(t,Ge,u),E(ir,Ge,null),e(Ge,ql),e(Ge,gr),e(gr,Il),e(gr,Lo),e(Lo,Cl),e(gr,Ll),p(t,Sa,u),p(t,Me,u),E(hr,Me,null),e(Me,Ol),e(Me,ur),e(ur,Vl),e(ur,Oo),e(Oo,Sl),e(ur,Bl),p(t,Ba,u),p(t,ze,u),E(pr,ze,null),e(ze,Ul),e(ze,Vo),e(Vo,Gl),p(t,Ua,u),p(t,Xe,u),E(fr,Xe,null),e(Xe,Ml),e(Xe,So),e(So,zl),p(t,Ga,u),p(t,We,u),e(We,yt),e(yt,Bo),E(cr,Bo,null),e(We,Xl),e(We,Uo),e(Uo,Wl),p(t,Ma,u),p(t,qe,u),e(qe,Kl),e(qe,Go),e(Go,Jl),e(qe,Yl),e(qe,Mo),e(Mo,Zl),e(qe,Ql),p(t,za,u),p(t,He,u),E(dr,He,null),e(He,ei),e(He,zo),e(zo,ti),e(He,ri),E(wt,He,null),p(t,Xa,u),p(t,Ke,u),e(Ke,Ht),e(Ht,Xo),E(_r,Xo,null),e(Ke,oi),e(Ke,Wo),e(Wo,si),p(t,Wa,u),p(t,ke,u),e(ke,Ko),e(Ko,ai),e(ke,ni),e(ke,Jo),e(Jo,li),e(ke,ii),e(ke,Yo),e(Yo,gi),e(ke,hi),p(t,Ka,u),p(t,Je,u),e(Je,kt),e(kt,Zo),E(mr,Zo,null),e(Je,ui),e(Je,Qo),e(Qo,pi),p(t,Ja,u),p(t,ie,u),e(ie,fo),e(fo,fi),e(ie,ci),e(ie,es),e(es,di),e(ie,_i),e(ie,ts),e(ts,mi),e(ie,bi),e(ie,rs),e(rs,vi),e(ie,$i),p(t,Ya,u),E(br,t,u),p(t,Za,u),p(t,Y,u),E(vr,Y,null),e(Y,Ei),e(Y,Ye),e(Ye,yi),e(Ye,os),e(os,wi),e(Ye,Hi),e(Ye,ss),e(ss,ki),e(Ye,xi),e(Y,Pi),e(Y,as),e(as,Ti),e(Y,ji),E(xt,Y,null),e(Y,Ni),E(Pt,Y,null),p(t,Qa,u),p(t,Ze,u),e(Ze,Tt),e(Tt,ns),E($r,ns,null),e(Ze,Ri),e(Ze,ls),e(ls,Fi),p(t,en,u),p(t,jt,u),e(jt,Di),e(jt,is),e(is,Ai),e(jt,qi),p(t,tn,u),p(t,Qe,u),e(Qe,Nt),e(Nt,gs),E(Er,gs,null),e(Qe,Ii),e(Qe,hs),e(hs,Ci),p(t,rn,u),p(t,yr,u),e(yr,us),e(us,Li),e(yr,Oi),p(t,on,u),p(t,C,u),E(wr,C,null),e(C,Vi),e(C,ps),e(ps,Si),e(C,Bi),e(C,Hr),e(Hr,Ui),e(Hr,fs),e(fs,Gi),e(Hr,Mi),e(C,zi),e(C,cs),e(cs,Xi),e(C,Wi),e(C,et),e(et,ds),e(ds,Ki),e(et,Ji),e(et,_s),e(_s,Yi),e(et,Zi),e(et,ms),e(ms,Qi),e(C,eg),E(Rt,C,null),e(C,tg),e(C,Ft),E(kr,Ft,null),e(Ft,rg),e(Ft,xr),e(xr,og),e(xr,bs),e(bs,sg),e(xr,ag),p(t,sn,u),p(t,tt,u),e(tt,Dt),e(Dt,vs),E(Pr,vs,null),e(tt,ng),e(tt,$s),e($s,lg),p(t,an,u),p(t,xe,u),E(Tr,xe,null),e(xe,ig),e(xe,Es),e(Es,gg),e(xe,hg),E(At,xe,null),p(t,nn,u),p(t,rt,u),e(rt,qt),e(qt,ys),E(jr,ys,null),e(rt,ug),e(rt,ws),e(ws,pg),p(t,ln,u),p(t,Pe,u),E(Nr,Pe,null),e(Pe,fg),e(Pe,Hs),e(Hs,cg),e(Pe,dg),E(It,Pe,null),p(t,gn,u),p(t,ot,u),e(ot,Ct),e(Ct,ks),E(Rr,ks,null),e(ot,_g),e(ot,xs),e(xs,mg),p(t,hn,u),p(t,Te,u),E(Fr,Te,null),e(Te,bg),e(Te,Ps),e(Ps,vg),e(Te,$g),E(Lt,Te,null),p(t,un,u),p(t,st,u),e(st,Ot),e(Ot,Ts),E(Dr,Ts,null),e(st,Eg),e(st,js),e(js,yg),p(t,pn,u),p(t,je,u),E(Ar,je,null),e(je,wg),e(je,qr),e(qr,Hg),e(qr,Ns),e(Ns,kg),e(qr,xg),e(je,Pg),E(Vt,je,null),p(t,fn,u),p(t,at,u),e(at,St),e(St,Rs),E(Ir,Rs,null),e(at,Tg),e(at,Fs),e(Fs,jg),p(t,cn,u),p(t,ge,u),E(Cr,ge,null),e(ge,Ng),e(ge,Ds),e(Ds,Rg),e(ge,Fg),e(ge,he),e(he,Dg),e(he,As),e(As,Ag),e(he,qg),e(he,qs),e(qs,Ig),e(he,Cg),e(he,Is),e(Is,Lg),e(he,Og),e(he,Cs),e(Cs,Vg),e(he,Sg),e(ge,Bg),E(Bt,ge,null),p(t,dn,u),p(t,nt,u),e(nt,Ut),e(Ut,Ls),E(Lr,Ls,null),e(nt,Ug),e(nt,Os),e(Os,Gg),p(t,_n,u),p(t,lt,u),e(lt,Vs),e(Vs,Mg),e(lt,zg),e(lt,Or),e(Or,Xg),e(lt,Wg),p(t,mn,u),p(t,it,u),e(it,Gt),e(Gt,Ss),E(Vr,Ss,null),e(it,Kg),e(it,Bs),e(Bs,Jg),p(t,bn,u),p(t,gt,u),e(gt,co),e(co,Yg),e(gt,Zg),e(gt,Us),e(Us,Qg),e(gt,eh),p(t,vn,u),p(t,Mt,u),e(Mt,th),e(Mt,_o),e(_o,rh),e(Mt,oh),p(t,$n,u),p(t,mo,u),e(mo,sh),p(t,En,u),E(Sr,t,u),p(t,yn,u),p(t,ht,u),e(ht,zt),e(zt,Gs),E(Br,Gs,null),e(ht,ah),e(ht,Ms),e(Ms,nh),p(t,wn,u),p(t,L,u),E(Ur,L,null),e(L,lh),e(L,Gr),e(Gr,ih),e(Gr,zs),e(zs,gh),e(Gr,hh),e(L,uh),e(L,Xs),e(Xs,ph),e(L,fh),e(L,Ws),e(Ws,ch),e(L,dh),e(L,Ks),e(Ks,_e),e(_e,bo),e(bo,_h),e(_e,mh),e(_e,Js),e(Js,bh),e(_e,vh),e(_e,Ys),e(Ys,$h),e(_e,Eh),e(_e,Zs),e(Zs,yh),e(_e,wh),e(L,Hh),E(Xt,L,null),e(L,kh),E(Mr,L,null),p(t,Hn,u),p(t,ut,u),e(ut,Wt),e(Wt,Qs),E(zr,Qs,null),e(ut,xh),e(ut,ea),e(ea,Ph),p(t,kn,u),p(t,Ne,u),E(Xr,Ne,null),e(Ne,Th),e(Ne,Wr),e(Wr,jh),e(Wr,ta),e(ta,Nh),e(Wr,Rh),e(Ne,Fh),e(Ne,Kr),e(Kr,Dh),e(Kr,Jr),e(Jr,ra),e(ra,Ah),e(Kr,qh),p(t,xn,u),p(t,pt,u),e(pt,Kt),e(Kt,oa),E(Yr,oa,null),e(pt,Ih),e(pt,sa),e(sa,Ch),p(t,Pn,u),p(t,vo,u),e(vo,Lh),p(t,Tn,u),p(t,ft,u),e(ft,Jt),e(Jt,aa),E(Zr,aa,null),e(ft,Oh),e(ft,na),e(na,la),e(la,Vh),p(t,jn,u),p(t,P,u),E(Qr,P,null),e(P,Sh),e(P,eo),e(eo,Bh),e(eo,ia),e(ia,Uh),e(eo,Gh),e(P,Mh),e(P,ct),e(ct,zh),e(ct,ga),e(ga,Xh),e(ct,Wh),e(ct,ha),e(ha,Kh),e(ct,Jh),e(P,Yh),e(P,ua),e(ua,Zh),e(P,Qh),e(P,Re),e(Re,pa),e(pa,eu),e(Re,tu),e(Re,fa),e(fa,ru),e(Re,ou),e(Re,ca),e(ca,su),e(Re,au),e(Re,da),e(da,nu),e(P,lu),e(P,me),e(me,iu),e(me,_a),e(_a,gu),e(me,hu),e(me,ma),e(ma,uu),e(me,pu),e(me,ba),e(ba,fu),e(me,cu),e(me,va),e(va,du),e(P,_u),e(P,be),e(be,mu),e(be,$a),e($a,bu),e(be,vu),e(be,Ea),e(Ea,$u),e(be,Eu),e(be,ya),e(ya,yu),e(be,wu),e(be,wa),e(wa,Hu),e(P,ku),E(Yt,P,null),e(P,xu),e(P,to),e(to,Pu),e(to,ro),e(ro,Tu),e(to,ju),e(P,Nu),e(P,oo),e(oo,Ha),e(Ha,so),e(so,Ru),e(oo,Fu),e(oo,ka),e(ka,ao),e(ao,Du),Nn=!0},p(t,[u]){const no={};u&2&&(no.$$scope={dirty:u,ctx:t}),Et.$set(no);const xa={};u&2&&(xa.$$scope={dirty:u,ctx:t}),wt.$set(xa);const Pa={};u&2&&(Pa.$$scope={dirty:u,ctx:t}),xt.$set(Pa);const Ta={};u&2&&(Ta.$$scope={dirty:u,ctx:t}),Pt.$set(Ta);const lo={};u&2&&(lo.$$scope={dirty:u,ctx:t}),Rt.$set(lo);const ja={};u&2&&(ja.$$scope={dirty:u,ctx:t}),At.$set(ja);const Na={};u&2&&(Na.$$scope={dirty:u,ctx:t}),It.$set(Na);const $o={};u&2&&($o.$$scope={dirty:u,ctx:t}),Lt.$set($o);const Ra={};u&2&&(Ra.$$scope={dirty:u,ctx:t}),Vt.$set(Ra);const dt={};u&2&&(dt.$$scope={dirty:u,ctx:t}),Bt.$set(dt);const Fa={};u&2&&(Fa.$$scope={dirty:u,ctx:t}),Xt.$set(Fa);const Da={};u&2&&(Da.$$scope={dirty:u,ctx:t}),Yt.$set(Da)},i(t){Nn||(y(i.$$.fragment,t),y(K.$$.fragment,t),y(j.$$.fragment,t),y(N.$$.fragment,t),y(rr.$$.fragment,t),y(Et.$$.fragment,t),y(or.$$.fragment,t),y(sr.$$.fragment,t),y(nr.$$.fragment,t),y(ir.$$.fragment,t),y(hr.$$.fragment,t),y(pr.$$.fragment,t),y(fr.$$.fragment,t),y(cr.$$.fragment,t),y(dr.$$.fragment,t),y(wt.$$.fragment,t),y(_r.$$.fragment,t),y(mr.$$.fragment,t),y(br.$$.fragment,t),y(vr.$$.fragment,t),y(xt.$$.fragment,t),y(Pt.$$.fragment,t),y($r.$$.fragment,t),y(Er.$$.fragment,t),y(wr.$$.fragment,t),y(Rt.$$.fragment,t),y(kr.$$.fragment,t),y(Pr.$$.fragment,t),y(Tr.$$.fragment,t),y(At.$$.fragment,t),y(jr.$$.fragment,t),y(Nr.$$.fragment,t),y(It.$$.fragment,t),y(Rr.$$.fragment,t),y(Fr.$$.fragment,t),y(Lt.$$.fragment,t),y(Dr.$$.fragment,t),y(Ar.$$.fragment,t),y(Vt.$$.fragment,t),y(Ir.$$.fragment,t),y(Cr.$$.fragment,t),y(Bt.$$.fragment,t),y(Lr.$$.fragment,t),y(Vr.$$.fragment,t),y(Sr.$$.fragment,t),y(Br.$$.fragment,t),y(Ur.$$.fragment,t),y(Xt.$$.fragment,t),y(Mr.$$.fragment,t),y(zr.$$.fragment,t),y(Xr.$$.fragment,t),y(Yr.$$.fragment,t),y(Zr.$$.fragment,t),y(Qr.$$.fragment,t),y(Yt.$$.fragment,t),Nn=!0)},o(t){w(i.$$.fragment,t),w(K.$$.fragment,t),w(j.$$.fragment,t),w(N.$$.fragment,t),w(rr.$$.fragment,t),w(Et.$$.fragment,t),w(or.$$.fragment,t),w(sr.$$.fragment,t),w(nr.$$.fragment,t),w(ir.$$.fragment,t),w(hr.$$.fragment,t),w(pr.$$.fragment,t),w(fr.$$.fragment,t),w(cr.$$.fragment,t),w(dr.$$.fragment,t),w(wt.$$.fragment,t),w(_r.$$.fragment,t),w(mr.$$.fragment,t),w(br.$$.fragment,t),w(vr.$$.fragment,t),w(xt.$$.fragment,t),w(Pt.$$.fragment,t),w($r.$$.fragment,t),w(Er.$$.fragment,t),w(wr.$$.fragment,t),w(Rt.$$.fragment,t),w(kr.$$.fragment,t),w(Pr.$$.fragment,t),w(Tr.$$.fragment,t),w(At.$$.fragment,t),w(jr.$$.fragment,t),w(Nr.$$.fragment,t),w(It.$$.fragment,t),w(Rr.$$.fragment,t),w(Fr.$$.fragment,t),w(Lt.$$.fragment,t),w(Dr.$$.fragment,t),w(Ar.$$.fragment,t),w(Vt.$$.fragment,t),w(Ir.$$.fragment,t),w(Cr.$$.fragment,t),w(Bt.$$.fragment,t),w(Lr.$$.fragment,t),w(Vr.$$.fragment,t),w(Sr.$$.fragment,t),w(Br.$$.fragment,t),w(Ur.$$.fragment,t),w(Xt.$$.fragment,t),w(Mr.$$.fragment,t),w(zr.$$.fragment,t),w(Xr.$$.fragment,t),w(Yr.$$.fragment,t),w(Zr.$$.fragment,t),w(Qr.$$.fragment,t),w(Yt.$$.fragment,t),Nn=!1},d(t){r(d),t&&r(k),t&&r(b),H(i),t&&r(ue),t&&r(B),H(K),t&&r(Z),t&&r(F),t&&r(pe),H(j,t),t&&r(O),t&&r(T),t&&r(ye),H(N,t),t&&r(ee),t&&r(A),t&&r(Fe),t&&r(V),t&&r(Ia),t&&r(we),H(rr),H(Et),t&&r(Ca),t&&r(Se),H(or),t&&r(La),t&&r(Be),H(sr),t&&r(Oa),t&&r(Ue),H(nr),t&&r(Va),t&&r(Ge),H(ir),t&&r(Sa),t&&r(Me),H(hr),t&&r(Ba),t&&r(ze),H(pr),t&&r(Ua),t&&r(Xe),H(fr),t&&r(Ga),t&&r(We),H(cr),t&&r(Ma),t&&r(qe),t&&r(za),t&&r(He),H(dr),H(wt),t&&r(Xa),t&&r(Ke),H(_r),t&&r(Wa),t&&r(ke),t&&r(Ka),t&&r(Je),H(mr),t&&r(Ja),t&&r(ie),t&&r(Ya),H(br,t),t&&r(Za),t&&r(Y),H(vr),H(xt),H(Pt),t&&r(Qa),t&&r(Ze),H($r),t&&r(en),t&&r(jt),t&&r(tn),t&&r(Qe),H(Er),t&&r(rn),t&&r(yr),t&&r(on),t&&r(C),H(wr),H(Rt),H(kr),t&&r(sn),t&&r(tt),H(Pr),t&&r(an),t&&r(xe),H(Tr),H(At),t&&r(nn),t&&r(rt),H(jr),t&&r(ln),t&&r(Pe),H(Nr),H(It),t&&r(gn),t&&r(ot),H(Rr),t&&r(hn),t&&r(Te),H(Fr),H(Lt),t&&r(un),t&&r(st),H(Dr),t&&r(pn),t&&r(je),H(Ar),H(Vt),t&&r(fn),t&&r(at),H(Ir),t&&r(cn),t&&r(ge),H(Cr),H(Bt),t&&r(dn),t&&r(nt),H(Lr),t&&r(_n),t&&r(lt),t&&r(mn),t&&r(it),H(Vr),t&&r(bn),t&&r(gt),t&&r(vn),t&&r(Mt),t&&r($n),t&&r(mo),t&&r(En),H(Sr,t),t&&r(yn),t&&r(ht),H(Br),t&&r(wn),t&&r(L),H(Ur),H(Xt),H(Mr),t&&r(Hn),t&&r(ut),H(zr),t&&r(kn),t&&r(Ne),H(Xr),t&&r(xn),t&&r(pt),H(Yr),t&&r(Pn),t&&r(vo),t&&r(Tn),t&&r(ft),H(Zr),t&&r(jn),t&&r(P),H(Qr),H(Yt)}}}const Nc={local:"utilities",sections:[{local:"huggingface_hub.utils.logging.get_verbosity",sections:[{local:"huggingface_hub.utils.logging.get_logger",title:"Repo-specific helper methods"}],title:"Controlling the logging of `huggingface_hub`"},{local:"handling-http-errors",sections:[{local:"huggingface_hub.utils.hf_raise_for_status",title:"Raise for status"},{local:"http-errors",sections:[{local:"huggingface_hub.utils.HfHubHTTPError",title:"HfHubHTTPError"},{local:"huggingface_hub.utils.RepositoryNotFoundError",title:"RepositoryNotFoundError"},{local:"huggingface_hub.utils.RevisionNotFoundError",title:"RevisionNotFoundError"},{local:"huggingface_hub.utils.EntryNotFoundError",title:"EntryNotFoundError"},{local:"huggingface_hub.utils.BadRequestError",title:"BadRequestError"},{local:"huggingface_hub.utils.LocalEntryNotFoundError",title:"LocalEntryNotFoundError"}],title:"HTTP errors"}],title:"Handling HTTP errors"},{local:"validators",sections:[{local:"generic-decorator",sections:[{local:"huggingface_hub.utils.validate_hf_hub_args",title:"validate_hf_hub_args"},{local:"huggingface_hub.utils.HFValidationError",title:"HFValidationError"}],title:"Generic decorator"},{local:"argument-validators",sections:[{local:"huggingface_hub.utils.validate_repo_id",title:"`repo_id`"}],title:"Argument validators"}],title:"Validators"}],title:"Utilities"};function Rc(x){return _c(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Lc extends pc{constructor(d){super();fc(this,d,Rc,jc,cc,{})}}export{Lc as default,Nc as metadata};
