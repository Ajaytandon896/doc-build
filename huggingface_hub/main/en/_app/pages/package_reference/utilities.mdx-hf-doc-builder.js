import{S as ic,i as gc,s as hc,e as o,k as g,w as v,t as n,M as uc,c as s,d as r,m as h,a,x as $,h as l,b as c,G as e,g as p,y as E,q as y,o as w,B as H,v as pc,L as Oe}from"../../chunks/vendor-hf-doc-builder.js";import{T as Iu}from"../../chunks/Tip-hf-doc-builder.js";import{D as I}from"../../chunks/Docstring-hf-doc-builder.js";import{C as oe}from"../../chunks/CodeBlock-hf-doc-builder.js";import{I as S}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{E as Le}from"../../chunks/ExampleCodeBlock-hf-doc-builder.js";function fc(x){let d,k,b,f,m,i,_,se,W,ue,B,D,X,K,ve,R,U,ae,$e,Z,F,Q,J,ne,Ee,G,M,le,pe;return{c(){d=o("p"),k=n("HuggingFace Hub has following logging levels:"),b=g(),f=o("ul"),m=o("li"),i=o("code"),_=n("huggingface_hub.logging.CRITICAL"),se=n(", "),W=o("code"),ue=n("huggingface_hub.logging.FATAL"),B=g(),D=o("li"),X=o("code"),K=n("huggingface_hub.logging.ERROR"),ve=g(),R=o("li"),U=o("code"),ae=n("huggingface_hub.logging.WARNING"),$e=n(", "),Z=o("code"),F=n("huggingface_hub.logging.WARN"),Q=g(),J=o("li"),ne=o("code"),Ee=n("huggingface_hub.logging.INFO"),G=g(),M=o("li"),le=o("code"),pe=n("huggingface_hub.logging.DEBUG")},l(j){d=s(j,"P",{});var O=a(d);k=l(O,"HuggingFace Hub has following logging levels:"),O.forEach(r),b=h(j),f=s(j,"UL",{});var T=a(f);m=s(T,"LI",{});var fe=a(m);i=s(fe,"CODE",{});var ye=a(i);_=l(ye,"huggingface_hub.logging.CRITICAL"),ye.forEach(r),se=l(fe,", "),W=s(fe,"CODE",{});var N=a(W);ue=l(N,"huggingface_hub.logging.FATAL"),N.forEach(r),fe.forEach(r),B=h(T),D=s(T,"LI",{});var ee=a(D);X=s(ee,"CODE",{});var A=a(X);K=l(A,"huggingface_hub.logging.ERROR"),A.forEach(r),ee.forEach(r),ve=h(T),R=s(T,"LI",{});var z=a(R);U=s(z,"CODE",{});var Fe=a(U);ae=l(Fe,"huggingface_hub.logging.WARNING"),Fe.forEach(r),$e=l(z,", "),Z=s(z,"CODE",{});var V=a(Z);F=l(V,"huggingface_hub.logging.WARN"),V.forEach(r),z.forEach(r),Q=h(T),J=s(T,"LI",{});var ce=a(J);ne=s(ce,"CODE",{});var de=a(ne);Ee=l(de,"huggingface_hub.logging.INFO"),de.forEach(r),ce.forEach(r),G=h(T),M=s(T,"LI",{});var Ve=a(M);le=s(Ve,"CODE",{});var De=a(le);pe=l(De,"huggingface_hub.logging.DEBUG"),De.forEach(r),Ve.forEach(r),T.forEach(r)},m(j,O){p(j,d,O),e(d,k),p(j,b,O),p(j,f,O),e(f,m),e(m,i),e(i,_),e(m,se),e(m,W),e(W,ue),e(f,B),e(f,D),e(D,X),e(X,K),e(f,ve),e(f,R),e(R,U),e(U,ae),e(R,$e),e(R,Z),e(Z,F),e(f,Q),e(f,J),e(J,ne),e(ne,Ee),e(f,G),e(f,M),e(M,le),e(le,pe)},d(j){j&&r(d),j&&r(b),j&&r(f)}}}function cc(x){let d,k,b,f,m;return f=new oe({props:{code:`from huggingface_hub import get_logger

logger = get_logger(__file__)
logger.set_verbosity_info()`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_logger

<span class="hljs-meta">&gt;&gt;&gt; </span>logger = get_logger(__file__)
<span class="hljs-meta">&gt;&gt;&gt; </span>logger.set_verbosity_info()`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function dc(x){let d,k,b,f,m;return f=new oe({props:{code:`    import requests
    from huggingface_hub.utils import hf_raise_for_status, HfHubHTTPError

    response = requests.post(...)
    try:
        hf_raise_for_status(response)
    except HfHubHTTPError as e:
        print(str(e)) # formatted message
        e.request_id, e.server_message # details returned by server

        # Complete the error message with additional information once it's raised
        e.append_to_message("
ate_commit\` expects the repository to exist.")
        raise`,highlighted:`    <span class="hljs-keyword">import</span> requests
    <span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> hf_raise_for_status, HfHubHTTPError

    response = requests.post(...)
    <span class="hljs-keyword">try</span>:
        hf_raise_for_status(response)
    <span class="hljs-keyword">except</span> HfHubHTTPError <span class="hljs-keyword">as</span> e:
        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(e)) <span class="hljs-comment"># formatted message</span>
        e.request_id, e.server_message <span class="hljs-comment"># details returned by server</span>

        <span class="hljs-comment"># Complete the error message with additional information once it&#x27;s raised</span>
        e.append_to_message(<span class="hljs-string">&quot;
ate_commit\` expects the repository to exist.&quot;</span>)
        <span class="hljs-keyword">raise</span>`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function _c(x){let d,k,b,f,m,i,_,se,W,ue,B,D,X,K,ve,R,U,ae,$e,Z,F,Q,J,ne,Ee,G,M,le,pe,j,O,T,fe,ye;return{c(){d=o("p"),k=n("Raises when the request has failed:"),b=g(),f=o("ul"),m=o("li"),i=o("a"),_=n("RepositoryNotFoundError"),se=n(`
If the repository to download from cannot be found. This may be because it
doesn\u2019t exist, because `),W=o("code"),ue=n("repo_type"),B=n(` is not set correctly, or because the repo
is `),D=o("code"),X=n("private"),K=n(" and you do not have access."),ve=g(),R=o("li"),U=o("a"),ae=n("RevisionNotFoundError"),$e=n(`
If the repository exists but the revision couldn\u2019t be find.`),Z=g(),F=o("li"),Q=o("a"),J=n("EntryNotFoundError"),ne=n(`
If the repository exists but the entry (e.g. the requested file) couldn\u2019t be
find.`),Ee=g(),G=o("li"),M=o("a"),le=n("BadRequestError"),pe=n(`
If request failed with a HTTP 400 BadRequest error.`),j=g(),O=o("li"),T=o("a"),fe=n("HfHubHTTPError"),ye=n(`
If request failed for a reason not listed above.`),this.h()},l(N){d=s(N,"P",{});var ee=a(d);k=l(ee,"Raises when the request has failed:"),ee.forEach(r),b=h(N),f=s(N,"UL",{});var A=a(f);m=s(A,"LI",{});var z=a(m);i=s(z,"A",{href:!0});var Fe=a(i);_=l(Fe,"RepositoryNotFoundError"),Fe.forEach(r),se=l(z,`
If the repository to download from cannot be found. This may be because it
doesn\u2019t exist, because `),W=s(z,"CODE",{});var V=a(W);ue=l(V,"repo_type"),V.forEach(r),B=l(z,` is not set correctly, or because the repo
is `),D=s(z,"CODE",{});var ce=a(D);X=l(ce,"private"),ce.forEach(r),K=l(z," and you do not have access."),z.forEach(r),ve=h(A),R=s(A,"LI",{});var de=a(R);U=s(de,"A",{href:!0});var Ve=a(U);ae=l(Ve,"RevisionNotFoundError"),Ve.forEach(r),$e=l(de,`
If the repository exists but the revision couldn\u2019t be find.`),de.forEach(r),Z=h(A),F=s(A,"LI",{});var De=a(F);Q=s(De,"A",{href:!0});var go=a(Q);J=l(go,"EntryNotFoundError"),go.forEach(r),ne=l(De,`
If the repository exists but the entry (e.g. the requested file) couldn\u2019t be
find.`),De.forEach(r),Ee=h(A),G=s(A,"LI",{});var Ae=a(G);M=s(Ae,"A",{href:!0});var vt=a(M);le=l(vt,"BadRequestError"),vt.forEach(r),pe=l(Ae,`
If request failed with a HTTP 400 BadRequest error.`),Ae.forEach(r),j=h(A),O=s(A,"LI",{});var er=a(O);T=s(er,"A",{href:!0});var ho=a(T);fe=l(ho,"HfHubHTTPError"),ho.forEach(r),ye=l(er,`
If request failed for a reason not listed above.`),er.forEach(r),A.forEach(r),this.h()},h(){c(i,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.RepositoryNotFoundError"),c(U,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.RevisionNotFoundError"),c(Q,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.EntryNotFoundError"),c(M,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.BadRequestError"),c(T,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.HfHubHTTPError")},m(N,ee){p(N,d,ee),e(d,k),p(N,b,ee),p(N,f,ee),e(f,m),e(m,i),e(i,_),e(m,se),e(m,W),e(W,ue),e(m,B),e(m,D),e(D,X),e(m,K),e(f,ve),e(f,R),e(R,U),e(U,ae),e(R,$e),e(f,Z),e(f,F),e(F,Q),e(Q,J),e(F,ne),e(f,Ee),e(f,G),e(G,M),e(M,le),e(G,pe),e(f,j),e(f,O),e(O,T),e(T,fe),e(O,ye)},d(N){N&&r(d),N&&r(b),N&&r(f)}}}function mc(x){let d,k,b,f,m;return f=new oe({props:{code:`    import requests
    from huggingface_hub.utils import hf_raise_for_status, HfHubHTTPError

    response = requests.post(...)
    try:
        hf_raise_for_status(response)
    except HfHubHTTPError as e:
        print(str(e)) # formatted message
        e.request_id, e.server_message # details returned by server

        # Complete the error message with additional information once it's raised
        e.append_to_message("
ate_commit\` expects the repository to exist.")
        raise`,highlighted:`    <span class="hljs-keyword">import</span> requests
    <span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> hf_raise_for_status, HfHubHTTPError

    response = requests.post(...)
    <span class="hljs-keyword">try</span>:
        hf_raise_for_status(response)
    <span class="hljs-keyword">except</span> HfHubHTTPError <span class="hljs-keyword">as</span> e:
        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(e)) <span class="hljs-comment"># formatted message</span>
        e.request_id, e.server_message <span class="hljs-comment"># details returned by server</span>

        <span class="hljs-comment"># Complete the error message with additional information once it&#x27;s raised</span>
        e.append_to_message(<span class="hljs-string">&quot;
ate_commit\` expects the repository to exist.&quot;</span>)
        <span class="hljs-keyword">raise</span>`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function bc(x){let d,k,b,f,m;return f=new oe({props:{code:`from huggingface_hub import model_info
model_info("<non_existent_repository>")
`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> model_info
<span class="hljs-meta">&gt;&gt;&gt; </span>model_info(<span class="hljs-string">&quot;&lt;non_existent_repository&gt;&quot;</span>)
(...)
huggingface_hub.utils._errors.RepositoryNotFoundError: <span class="hljs-number">401</span> Client Error. (Request ID: PvMw_VjBMjVdMz53WKIzP)

Repository Not Found <span class="hljs-keyword">for</span> url: https://huggingface.co/api/models/%3Cnon_existent_repository%3E.
Please make sure you specified the correct \`repo_id\` <span class="hljs-keyword">and</span> \`repo_type\`.
If the repo <span class="hljs-keyword">is</span> private, make sure you are authenticated.
Invalid username <span class="hljs-keyword">or</span> password.`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function vc(x){let d,k,b,f,m;return f=new oe({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download('bert-base-cased', 'config.json', revision='<non-existent-revision>')
`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(<span class="hljs-string">&#x27;bert-base-cased&#x27;</span>, <span class="hljs-string">&#x27;config.json&#x27;</span>, revision=<span class="hljs-string">&#x27;&lt;non-existent-revision&gt;&#x27;</span>)
(...)
huggingface_hub.utils._errors.RevisionNotFoundError: <span class="hljs-number">404</span> Client Error. (Request ID: Mwhe_c3Kt650GcdKEFomX)

Revision Not Found <span class="hljs-keyword">for</span> url: https://huggingface.co/bert-base-cased/resolve/%3Cnon-existent-revision%3E/config.json.`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function $c(x){let d,k,b,f,m;return f=new oe({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download('bert-base-cased', '<non-existent-file>')
`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(<span class="hljs-string">&#x27;bert-base-cased&#x27;</span>, <span class="hljs-string">&#x27;&lt;non-existent-file&gt;&#x27;</span>)
(...)
huggingface_hub.utils._errors.EntryNotFoundError: <span class="hljs-number">404</span> Client Error. (Request ID: 53pNl6M0MxsnG5Sw8JA6x)

Entry Not Found <span class="hljs-keyword">for</span> url: https://huggingface.co/bert-base-cased/resolve/main/%3Cnon-existent-file%3E.`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function Ec(x){let d,k,b,f,m;return f=new oe({props:{code:`resp = requests.post("hf.co/api/check", ...)
hf_raise_for_status(resp, endpoint_name="check")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>resp = requests.post(<span class="hljs-string">&quot;hf.co/api/check&quot;</span>, ...)
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_raise_for_status(resp, endpoint_name=<span class="hljs-string">&quot;check&quot;</span>)
huggingface_hub.utils._errors.BadRequestError: Bad request <span class="hljs-keyword">for</span> check endpoint: {details} (Request ID: XXX)`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function yc(x){let d,k,b,f,m;return f=new oe({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download('bert-base-cased', '<non-cached-file>',  local_files_only=True)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(<span class="hljs-string">&#x27;bert-base-cased&#x27;</span>, <span class="hljs-string">&#x27;&lt;non-cached-file&gt;&#x27;</span>,  local_files_only=<span class="hljs-literal">True</span>)
(...)
huggingface_hub.utils._errors.LocalEntryNotFoundError: Cannot find the requested files <span class="hljs-keyword">in</span> the disk cache <span class="hljs-keyword">and</span> outgoing traffic has been disabled. To enable hf.co look-ups <span class="hljs-keyword">and</span> downloads online, <span class="hljs-built_in">set</span> <span class="hljs-string">&#x27;local_files_only&#x27;</span> to <span class="hljs-literal">False</span>.`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function wc(x){let d,k,b,f,m;return f=new oe({props:{code:`from huggingface_hub.utils import validate_hf_hub_args

@validate_hf_hub_args
def my_cool_method(repo_id: str):
    print(repo_id)

my_cool_method(repo_id="valid_repo_id")

my_cool_method("other..repo..id")

my_cool_method(repo_id="other..repo..id")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> validate_hf_hub_args

<span class="hljs-meta">&gt;&gt;&gt; </span>@validate_hf_hub_args
<span class="hljs-meta">... </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_cool_method</span>(<span class="hljs-params">repo_id: <span class="hljs-built_in">str</span></span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(repo_id)

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;valid_repo_id&quot;</span>)
valid_repo_id

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function Hc(x){let d,k,b,f,m;return f=new oe({props:{code:`from huggingface_hub.utils import validate_repo_id
validate_repo_id(repo_id="valid_repo_id")
validate_repo_id(repo_id="other..repo..id")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> validate_repo_id
<span class="hljs-meta">&gt;&gt;&gt; </span>validate_repo_id(repo_id=<span class="hljs-string">&quot;valid_repo_id&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>validate_repo_id(repo_id=<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.`}}),{c(){d=o("p"),k=n("Example:"),b=g(),v(f.$$.fragment)},l(i){d=s(i,"P",{});var _=a(d);k=l(_,"Example:"),_.forEach(r),b=h(i),$(f.$$.fragment,i)},m(i,_){p(i,d,_),e(d,k),p(i,b,_),E(f,i,_),m=!0},p:Oe,i(i){m||(y(f.$$.fragment,i),m=!0)},o(i){w(f.$$.fragment,i),m=!1},d(i){i&&r(d),i&&r(b),H(f,i)}}}function kc(x){let d,k,b,f,m,i,_,se,W,ue,B,D,X,K,ve,R,U,ae,$e,Z,F,Q,J,ne,Ee,G,M,le,pe,j,O,T,fe,ye,N,ee,A,z,Fe,V,ce,de,Ve,De,go,Ae,vt,er,ho,dl,uo,Ro,_l,ml,bl,po,Fo,vl,$l,Aa,we,tr,El,Do,yl,wl,$t,qa,Se,rr,Hl,Ao,kl,Ia,Be,or,xl,sr,Pl,qo,Tl,jl,Ca,Ue,ar,Nl,nr,Rl,Io,Fl,Dl,La,Ge,lr,Al,ir,ql,Co,Il,Cl,Oa,Me,gr,Ll,hr,Ol,Lo,Vl,Sl,Va,ze,ur,Bl,Oo,Ul,Sa,We,pr,Gl,Vo,Ml,Ba,Xe,Et,So,fr,zl,Bo,Wl,Ua,qe,Xl,Uo,Kl,Jl,Go,Yl,Zl,Ga,He,cr,Ql,Mo,ei,ti,yt,Ma,Ke,wt,zo,dr,ri,Wo,oi,za,ke,Xo,si,ai,Ko,ni,li,Jo,ii,gi,Wa,Je,Ht,Yo,_r,hi,Zo,ui,Xa,ie,fo,pi,fi,Qo,ci,di,es,_i,mi,ts,bi,vi,Ka,mr,Ja,Y,br,$i,Ye,Ei,rs,yi,wi,os,Hi,ki,xi,ss,Pi,Ti,kt,ji,xt,Ya,Ze,Pt,as,vr,Ni,ns,Ri,Za,Tt,Fi,ls,Di,Ai,Qa,Qe,jt,is,$r,qi,gs,Ii,en,Er,hs,Ci,Li,tn,C,yr,Oi,us,Vi,Si,wr,Bi,ps,Ui,Gi,Mi,fs,zi,Wi,Hr,cs,Xi,Ki,ds,Ji,Yi,Nt,Zi,Rt,kr,Qi,xr,eg,_s,tg,rg,rn,et,Ft,ms,Pr,og,bs,sg,on,xe,Tr,ag,vs,ng,lg,Dt,sn,tt,At,$s,jr,ig,Es,gg,an,Pe,Nr,hg,ys,ug,pg,qt,nn,rt,It,ws,Rr,fg,Hs,cg,ln,Te,Fr,dg,ks,_g,mg,Ct,gn,ot,Lt,xs,Dr,bg,Ps,vg,hn,je,Ar,$g,qr,Eg,Ts,yg,wg,Hg,Ot,un,st,Vt,js,Ir,kg,Ns,xg,pn,ge,Cr,Pg,Rs,Tg,jg,he,Ng,Fs,Rg,Fg,Ds,Dg,Ag,As,qg,Ig,qs,Cg,Lg,Og,St,fn,at,Bt,Is,Lr,Vg,Cs,Sg,cn,nt,Ls,Bg,Ug,Or,Gg,Mg,dn,lt,Ut,Os,Vr,zg,Vs,Wg,_n,it,co,Xg,Kg,Ss,Jg,Yg,mn,Gt,Zg,_o,Qg,eh,bn,mo,th,vn,Sr,$n,gt,Mt,Bs,Br,rh,Us,oh,En,L,Ur,sh,Gr,ah,Gs,nh,lh,ih,Ms,gh,hh,zs,uh,ph,Ws,_e,bo,fh,ch,Xs,dh,_h,Ks,mh,bh,Js,vh,$h,Eh,zt,yh,Mr,yn,ht,Wt,Ys,zr,wh,Zs,Hh,wn,Ne,Wr,kh,Xr,xh,Qs,Ph,Th,jh,Kr,Nh,Jr,ea,Rh,Fh,Hn,ut,Xt,ta,Yr,Dh,ra,Ah,kn,vo,qh,xn,pt,Kt,oa,Zr,Ih,sa,aa,Ch,Pn,P,Qr,Lh,eo,Oh,na,Vh,Sh,Bh,ft,Uh,la,Gh,Mh,ia,zh,Wh,Xh,ga,Kh,Jh,Re,ha,Yh,Zh,ua,Qh,eu,pa,tu,ru,fa,ou,su,me,au,ca,nu,lu,da,iu,gu,_a,hu,uu,ma,pu,fu,be,cu,ba,du,_u,va,mu,bu,$a,vu,$u,Ea,Eu,yu,Jt,wu,to,Hu,ro,ku,xu,Pu,oo,ya,so,Tu,ju,wa,ao,Nu,Tn;return i=new S({}),K=new S({}),j=new oe({props:{code:"from huggingface_hub import logging",highlighted:'<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> logging'}}),N=new oe({props:{code:`from huggingface_hub import logging

logging.set_verbosity_error()
logging.set_verbosity_warning()
logging.set_verbosity_info()
logging.set_verbosity_debug()

logging.set_verbosity(...)`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> logging

logging.set_verbosity_error()
logging.set_verbosity_warning()
logging.set_verbosity_info()
logging.set_verbosity_debug()

logging.set_verbosity(...)`}}),tr=new I({props:{name:"huggingface_hub.utils.logging.get_verbosity",anchor:"huggingface_hub.utils.logging.get_verbosity",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L103",returnDescription:`
<p>Logging level, e.g., <code>huggingface_hub.logging.DEBUG</code> and
<code>huggingface_hub.logging.INFO</code>.</p>
`}}),$t=new Iu({props:{$$slots:{default:[fc]},$$scope:{ctx:x}}}),rr=new I({props:{name:"huggingface_hub.utils.logging.set_verbosity",anchor:"huggingface_hub.utils.logging.set_verbosity",parameters:[{name:"verbosity",val:": int"}],parametersDescription:[{anchor:"huggingface_hub.utils.logging.set_verbosity.verbosity",description:`<strong>verbosity</strong> (<code>int</code>) &#x2014;
Logging level, e.g., <code>huggingface_hub.logging.DEBUG</code> and
<code>huggingface_hub.logging.INFO</code>.`,name:"verbosity"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L125"}}),or=new I({props:{name:"huggingface_hub.utils.logging.set_verbosity_info",anchor:"huggingface_hub.utils.logging.set_verbosity_info",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L137"}}),ar=new I({props:{name:"huggingface_hub.utils.logging.set_verbosity_debug",anchor:"huggingface_hub.utils.logging.set_verbosity_debug",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L151"}}),lr=new I({props:{name:"huggingface_hub.utils.logging.set_verbosity_warning",anchor:"huggingface_hub.utils.logging.set_verbosity_warning",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L144"}}),gr=new I({props:{name:"huggingface_hub.utils.logging.set_verbosity_error",anchor:"huggingface_hub.utils.logging.set_verbosity_error",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L158"}}),ur=new I({props:{name:"huggingface_hub.utils.logging.disable_propagation",anchor:"huggingface_hub.utils.logging.disable_propagation",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L165"}}),pr=new I({props:{name:"huggingface_hub.utils.logging.enable_propagation",anchor:"huggingface_hub.utils.logging.enable_propagation",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L173"}}),fr=new S({}),cr=new I({props:{name:"huggingface_hub.utils.logging.get_logger",anchor:"huggingface_hub.utils.logging.get_logger",parameters:[{name:"name",val:": typing.Optional[str] = None"}],parametersDescription:[{anchor:"huggingface_hub.utils.logging.get_logger.name",description:`<strong>name</strong> (<code>str</code>, <em>optional</em>) &#x2014;
The name of the logger to get, usually the filename`,name:"name"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L78"}}),yt=new Le({props:{anchor:"huggingface_hub.utils.logging.get_logger.example",$$slots:{default:[cc]},$$scope:{ctx:x}}}),dr=new S({}),_r=new S({}),mr=new oe({props:{code:`import requests
from huggingface_hub.utils import hf_raise_for_status, HfHubHTTPError

response = requests.post(...)
try:
    hf_raise_for_status(response)
except HfHubHTTPError as e:
    print(str(e)) # formatted message
    e.request_id, e.server_message # details returned by server

    # Complete the error message with additional information once it's raised
    e.append_to_message("\\n\`create_commit\` expects the repository to exist.")
    raise`,highlighted:`<span class="hljs-keyword">import</span> requests
<span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> hf_raise_for_status, HfHubHTTPError

response = requests.post(...)
<span class="hljs-keyword">try</span>:
    hf_raise_for_status(response)
<span class="hljs-keyword">except</span> HfHubHTTPError <span class="hljs-keyword">as</span> e:
    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(e)) <span class="hljs-comment"># formatted message</span>
    e.request_id, e.server_message <span class="hljs-comment"># details returned by server</span>

    <span class="hljs-comment"># Complete the error message with additional information once it&#x27;s raised</span>
    e.append_to_message(<span class="hljs-string">&quot;\\n\`create_commit\` expects the repository to exist.&quot;</span>)
    <span class="hljs-keyword">raise</span>`}}),br=new I({props:{name:"huggingface_hub.utils.hf_raise_for_status",anchor:"huggingface_hub.utils.hf_raise_for_status",parameters:[{name:"response",val:": Response"},{name:"endpoint_name",val:": typing.Optional[str] = None"}],parametersDescription:[{anchor:"huggingface_hub.utils.hf_raise_for_status.response",description:`<strong>response</strong> (<code>Response</code>) &#x2014;
Response from the server.`,name:"response"},{anchor:"huggingface_hub.utils.hf_raise_for_status.endpoint_name",description:`<strong>endpoint_name</strong> (<code>str</code>, <em>optional</em>) &#x2014;
Name of the endpoint that has been called. If provided, the error message
will be more complete.`,name:"endpoint_name"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L158"}}),kt=new Le({props:{anchor:"huggingface_hub.utils.hf_raise_for_status.example",$$slots:{default:[dc]},$$scope:{ctx:x}}}),xt=new Iu({props:{warning:!0,$$slots:{default:[_c]},$$scope:{ctx:x}}}),vr=new S({}),$r=new S({}),yr=new I({props:{name:"class huggingface_hub.utils.HfHubHTTPError",anchor:"huggingface_hub.utils.HfHubHTTPError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L9"}}),Nt=new Le({props:{anchor:"huggingface_hub.utils.HfHubHTTPError.example",$$slots:{default:[mc]},$$scope:{ctx:x}}}),kr=new I({props:{name:"append_to_message",anchor:"huggingface_hub.utils.HfHubHTTPError.append_to_message",parameters:[{name:"additional_message",val:": str"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L59"}}),Pr=new S({}),Tr=new I({props:{name:"class huggingface_hub.utils.RepositoryNotFoundError",anchor:"huggingface_hub.utils.RepositoryNotFoundError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L64"}}),Dt=new Le({props:{anchor:"huggingface_hub.utils.RepositoryNotFoundError.example",$$slots:{default:[bc]},$$scope:{ctx:x}}}),jr=new S({}),Nr=new I({props:{name:"class huggingface_hub.utils.RevisionNotFoundError",anchor:"huggingface_hub.utils.RevisionNotFoundError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L85"}}),qt=new Le({props:{anchor:"huggingface_hub.utils.RevisionNotFoundError.example",$$slots:{default:[vc]},$$scope:{ctx:x}}}),Rr=new S({}),Fr=new I({props:{name:"class huggingface_hub.utils.EntryNotFoundError",anchor:"huggingface_hub.utils.EntryNotFoundError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L103"}}),Ct=new Le({props:{anchor:"huggingface_hub.utils.EntryNotFoundError.example",$$slots:{default:[$c]},$$scope:{ctx:x}}}),Dr=new S({}),Ar=new I({props:{name:"class huggingface_hub.utils.BadRequestError",anchor:"huggingface_hub.utils.BadRequestError",parameters:[{name:"message",val:": str"},{name:"response",val:": typing.Optional[requests.models.Response]"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L144"}}),Ot=new Le({props:{anchor:"huggingface_hub.utils.BadRequestError.example",$$slots:{default:[Ec]},$$scope:{ctx:x}}}),Ir=new S({}),Cr=new I({props:{name:"class huggingface_hub.utils.LocalEntryNotFoundError",anchor:"huggingface_hub.utils.LocalEntryNotFoundError",parameters:[{name:"message",val:": str"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L121"}}),St=new Le({props:{anchor:"huggingface_hub.utils.LocalEntryNotFoundError.example",$$slots:{default:[yc]},$$scope:{ctx:x}}}),Lr=new S({}),Vr=new S({}),Sr=new oe({props:{code:`from huggingface_hub.utils import validate_hf_hub_args

@validate_hf_hub_args
def my_cool_method(repo_id: str):
    print(repo_id)

my_cool_method(repo_id="valid_repo_id")

my_cool_method("other..repo..id")

my_cool_method(repo_id="other..repo..id")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> validate_hf_hub_args

<span class="hljs-meta">&gt;&gt;&gt; </span>@validate_hf_hub_args
<span class="hljs-meta">... </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_cool_method</span>(<span class="hljs-params">repo_id: <span class="hljs-built_in">str</span></span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(repo_id)

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;valid_repo_id&quot;</span>)
valid_repo_id

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.`}}),Br=new S({}),Ur=new I({props:{name:"huggingface_hub.utils.validate_hf_hub_args",anchor:"huggingface_hub.utils.validate_hf_hub_args",parameters:[{name:"fn",val:": typing.Callable"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_validators.py#L43",raiseDescription:`
<ul>
<li><ul>
<li>\u2014 <a
  href="/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.HFValidationError"
>HFValidationError</a>: If an input is not valid.</li>
</ul></li>
</ul>
`,raiseType:`
<ul>
<li></li>
</ul>
`}}),zt=new Le({props:{anchor:"huggingface_hub.utils.validate_hf_hub_args.example",$$slots:{default:[wc]},$$scope:{ctx:x}}}),Mr=new Iu({props:{warning:!0}}),zr=new S({}),Wr=new I({props:{name:"class huggingface_hub.utils.HFValidationError",anchor:"huggingface_hub.utils.HFValidationError",parameters:"",source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_validators.py#L36"}}),Yr=new S({}),Zr=new S({}),Qr=new I({props:{name:"huggingface_hub.utils.validate_repo_id",anchor:"huggingface_hub.utils.validate_repo_id",parameters:[{name:"repo_id",val:": str"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_validators.py#L95"}}),Jt=new Le({props:{anchor:"huggingface_hub.utils.validate_repo_id.example",$$slots:{default:[Hc]},$$scope:{ctx:x}}}),{c(){d=o("meta"),k=g(),b=o("h1"),f=o("a"),m=o("span"),v(i.$$.fragment),_=g(),se=o("span"),W=n("Utilities"),ue=g(),B=o("h2"),D=o("a"),X=o("span"),v(K.$$.fragment),ve=g(),R=o("span"),U=n("Controlling the logging of "),ae=o("code"),$e=n("huggingface_hub"),Z=g(),F=o("p"),Q=n("The "),J=o("code"),ne=n("huggingface_hub"),Ee=n(" package exposes a "),G=o("code"),M=n("logging"),le=n(` utility to control the logging level of the package itself.
You can import it as such:`),pe=g(),v(j.$$.fragment),O=g(),T=o("p"),fe=n("Then, you may define the verbosity in order to update the amount of logs you\u2019ll see:"),ye=g(),v(N.$$.fragment),ee=g(),A=o("p"),z=n("The levels should be understood as follows:"),Fe=g(),V=o("ul"),ce=o("li"),de=o("code"),Ve=n("error"),De=n(": only show critical logs about usage which may result in an error or unexpected behavior."),go=g(),Ae=o("li"),vt=o("code"),er=n("warning"),ho=n(`: show logs that aren\u2019t critical but usage may result in unintended behavior.
Additionally, important informative logs may be shown.`),dl=g(),uo=o("li"),Ro=o("code"),_l=n("info"),ml=n(`: show most logs, including some verbose logging regarding what is happening under the hood.
If something is behaving in an unexpected manner, we recommend switching the verbosity level to this in order
to get more information.`),bl=g(),po=o("li"),Fo=o("code"),vl=n("debug"),$l=n(`: show all logs, including some internal logs which may be used to track exactly what\u2019s happening
under the hood.`),Aa=g(),we=o("div"),v(tr.$$.fragment),El=g(),Do=o("p"),yl=n("Return the current level for the HuggingFace Hub\u2019s root logger."),wl=g(),v($t.$$.fragment),qa=g(),Se=o("div"),v(rr.$$.fragment),Hl=g(),Ao=o("p"),kl=n("Sets the level for the HuggingFace Hub\u2019s root logger."),Ia=g(),Be=o("div"),v(or.$$.fragment),xl=g(),sr=o("p"),Pl=n("Sets the verbosity to "),qo=o("code"),Tl=n("logging.INFO"),jl=n("."),Ca=g(),Ue=o("div"),v(ar.$$.fragment),Nl=g(),nr=o("p"),Rl=n("Sets the verbosity to "),Io=o("code"),Fl=n("logging.DEBUG"),Dl=n("."),La=g(),Ge=o("div"),v(lr.$$.fragment),Al=g(),ir=o("p"),ql=n("Sets the verbosity to "),Co=o("code"),Il=n("logging.WARNING"),Cl=n("."),Oa=g(),Me=o("div"),v(gr.$$.fragment),Ll=g(),hr=o("p"),Ol=n("Sets the verbosity to "),Lo=o("code"),Vl=n("logging.ERROR"),Sl=n("."),Va=g(),ze=o("div"),v(ur.$$.fragment),Bl=g(),Oo=o("p"),Ul=n(`Disable propagation of the library log outputs. Note that log propagation is
disabled by default.`),Sa=g(),We=o("div"),v(pr.$$.fragment),Gl=g(),Vo=o("p"),Ml=n(`Enable propagation of the library log outputs. Please disable the
HuggingFace Hub\u2019s default handler to prevent double logging if the root
logger has been configured.`),Ba=g(),Xe=o("h3"),Et=o("a"),So=o("span"),v(fr.$$.fragment),zl=g(),Bo=o("span"),Wl=n("Repo-specific helper methods"),Ua=g(),qe=o("p"),Xl=n("The methods exposed below are relevant when modifying modules from the "),Uo=o("code"),Kl=n("huggingface_hub"),Jl=n(` library itself.
Using these shouldn\u2019t be necessary if you use `),Go=o("code"),Yl=n("huggingface_hub"),Zl=n(" and you don\u2019t modify them."),Ga=g(),He=o("div"),v(cr.$$.fragment),Ql=g(),Mo=o("p"),ei=n(`Returns a logger with the specified name. This function is not supposed
to be directly accessed by library users.`),ti=g(),v(yt.$$.fragment),Ma=g(),Ke=o("h2"),wt=o("a"),zo=o("span"),v(dr.$$.fragment),ri=g(),Wo=o("span"),oi=n("Handling HTTP errors"),za=g(),ke=o("p"),Xo=o("code"),si=n("huggingface_hub"),ai=n(" defines its own HTTP errors to refine the "),Ko=o("code"),ni=n("HTTPError"),li=n(` raised by
`),Jo=o("code"),ii=n("requests"),gi=n(" with additional information sent back by the server."),Wa=g(),Je=o("h3"),Ht=o("a"),Yo=o("span"),v(_r.$$.fragment),hi=g(),Zo=o("span"),ui=n("Raise for status"),Xa=g(),ie=o("p"),fo=o("a"),pi=n("hf_raise_for_status()"),fi=n(` is meant to be the central method to \u201Craise for status\u201D from any
request made to the Hub. It wraps the base `),Qo=o("code"),ci=n("requests.raise_for_status"),di=n(` to provide
additional information. Any `),es=o("code"),_i=n("HTTPError"),mi=n(" thrown is converted into a "),ts=o("code"),bi=n("HfHubHTTPError"),vi=n("."),Ka=g(),v(mr.$$.fragment),Ja=g(),Y=o("div"),v(br.$$.fragment),$i=g(),Ye=o("p"),Ei=n("Internal version of "),rs=o("code"),yi=n("response.raise_for_status()"),wi=n(` that will refine a
potential HTTPError. Raised exception will be an instance of `),os=o("code"),Hi=n("HfHubHTTPError"),ki=n("."),xi=g(),ss=o("p"),Pi=n(`This helper is meant to be the unique method to raise_for_status when making a call
to the Hugging Face Hub.`),Ti=g(),v(kt.$$.fragment),ji=g(),v(xt.$$.fragment),Ya=g(),Ze=o("h3"),Pt=o("a"),as=o("span"),v(vr.$$.fragment),Ni=g(),ns=o("span"),Ri=n("HTTP errors"),Za=g(),Tt=o("p"),Fi=n("Here is a list of HTTP errors thrown in "),ls=o("code"),Di=n("huggingface_hub"),Ai=n("."),Qa=g(),Qe=o("h4"),jt=o("a"),is=o("span"),v($r.$$.fragment),qi=g(),gs=o("span"),Ii=n("HfHubHTTPError"),en=g(),Er=o("p"),hs=o("code"),Ci=n("HfHubHTTPError"),Li=n(` is the parent class for any HF Hub HTTP error. It takes care of parsing
the server response and format the error message to provide as much information to the
user as possible.`),tn=g(),C=o("div"),v(yr.$$.fragment),Oi=g(),us=o("p"),Vi=n("HTTPError to inherit from for any custom HTTP Error raised in HF Hub."),Si=g(),wr=o("p"),Bi=n("Any HTTPError is converted at least into a "),ps=o("code"),Ui=n("HfHubHTTPError"),Gi=n(`. If some information is
sent back by the server, it will be added to the error message.`),Mi=g(),fs=o("p"),zi=n("Added details:"),Wi=g(),Hr=o("ul"),cs=o("li"),Xi=n("Request id from \u201CX-Request-Id\u201D header if exists."),Ki=g(),ds=o("li"),Ji=n("Server error message if we can found one in the response body."),Yi=g(),v(Nt.$$.fragment),Zi=g(),Rt=o("div"),v(kr.$$.fragment),Qi=g(),xr=o("p"),eg=n("Append additional information to the "),_s=o("code"),tg=n("HfHubHTTPError"),rg=n(" initial message."),rn=g(),et=o("h4"),Ft=o("a"),ms=o("span"),v(Pr.$$.fragment),og=g(),bs=o("span"),sg=n("RepositoryNotFoundError"),on=g(),xe=o("div"),v(Tr.$$.fragment),ag=g(),vs=o("p"),ng=n(`Raised when trying to access a hf.co URL with an invalid repository name, or
with a private repo name the user does not have access to.`),lg=g(),v(Dt.$$.fragment),sn=g(),tt=o("h4"),At=o("a"),$s=o("span"),v(jr.$$.fragment),ig=g(),Es=o("span"),gg=n("RevisionNotFoundError"),an=g(),Pe=o("div"),v(Nr.$$.fragment),hg=g(),ys=o("p"),ug=n(`Raised when trying to access a hf.co URL with a valid repository but an invalid
revision.`),pg=g(),v(qt.$$.fragment),nn=g(),rt=o("h4"),It=o("a"),ws=o("span"),v(Rr.$$.fragment),fg=g(),Hs=o("span"),cg=n("EntryNotFoundError"),ln=g(),Te=o("div"),v(Fr.$$.fragment),dg=g(),ks=o("p"),_g=n(`Raised when trying to access a hf.co URL with a valid repository and revision
but an invalid filename.`),mg=g(),v(Ct.$$.fragment),gn=g(),ot=o("h4"),Lt=o("a"),xs=o("span"),v(Dr.$$.fragment),bg=g(),Ps=o("span"),vg=n("BadRequestError"),hn=g(),je=o("div"),v(Ar.$$.fragment),$g=g(),qr=o("p"),Eg=n("Raised by "),Ts=o("code"),yg=n("hf_raise_for_status"),wg=n(" when the server returns a HTTP 400 error."),Hg=g(),v(Ot.$$.fragment),un=g(),st=o("h4"),Vt=o("a"),js=o("span"),v(Ir.$$.fragment),kg=g(),Ns=o("span"),xg=n("LocalEntryNotFoundError"),pn=g(),ge=o("div"),v(Cr.$$.fragment),Pg=g(),Rs=o("p"),Tg=n(`Raised when trying to access a file that is not on the disk when network is
disabled or unavailable (connection issue). The entry may exist on the Hub.`),jg=g(),he=o("p"),Ng=n("Note: "),Fs=o("code"),Rg=n("ValueError"),Fg=n(` type is to ensure backward compatibility.
Note: `),Ds=o("code"),Dg=n("LocalEntryNotFoundError"),Ag=n(" derives from "),As=o("code"),qg=n("HTTPError"),Ig=n(" because of "),qs=o("code"),Cg=n("EntryNotFoundError"),Lg=n(`
even when it is not a network issue.`),Og=g(),v(St.$$.fragment),fn=g(),at=o("h2"),Bt=o("a"),Is=o("span"),v(Lr.$$.fragment),Vg=g(),Cs=o("span"),Sg=n("Validators"),cn=g(),nt=o("p"),Ls=o("code"),Bg=n("huggingface_hub"),Ug=n(` include custom validators to validate method arguments automatically.
Validation is inspired by the work done in `),Or=o("a"),Gg=n("Pydantic"),Mg=n(`
to validate type hints but with more limited features.`),dn=g(),lt=o("h3"),Ut=o("a"),Os=o("span"),v(Vr.$$.fragment),zg=g(),Vs=o("span"),Wg=n("Generic decorator"),_n=g(),it=o("p"),co=o("a"),Xg=n("validate_hf_hub_args()"),Kg=n(` is a generic decorator to encapsulate
methods that have arguments following `),Ss=o("code"),Jg=n("huggingface_hub"),Yg=n(`\u2019s naming. By default, all
arguments that has a validator implemented will be validated.`),mn=g(),Gt=o("p"),Zg=n("If an input is not valid, a "),_o=o("a"),Qg=n("HFValidationError"),eh=n(` is thrown. Only
the first non-valid value throws an error and stops the validation process.`),bn=g(),mo=o("p"),th=n("Usage:"),vn=g(),v(Sr.$$.fragment),$n=g(),gt=o("h4"),Mt=o("a"),Bs=o("span"),v(Br.$$.fragment),rh=g(),Us=o("span"),oh=n("validate_hf_hub_args"),En=g(),L=o("div"),v(Ur.$$.fragment),sh=g(),Gr=o("p"),ah=n("Validate values received as argument for any public method of "),Gs=o("code"),nh=n("huggingface_hub"),lh=n("."),ih=g(),Ms=o("p"),gh=n(`The goal of this decorator is to harmonize validation of arguments reused
everywhere. By default, all defined validators are tested.`),hh=g(),zs=o("p"),uh=n("Validators:"),ph=g(),Ws=o("ul"),_e=o("li"),bo=o("a"),fh=n("validate_repo_id()"),ch=n(": "),Xs=o("code"),dh=n("repo_id"),_h=n(" must be "),Ks=o("code"),mh=n('"repo_name"'),bh=n(`
or `),Js=o("code"),vh=n('"namespace/repo_name"'),$h=n(". Namespace is a username or an organization."),Eh=g(),v(zt.$$.fragment),yh=g(),v(Mr.$$.fragment),yn=g(),ht=o("h4"),Wt=o("a"),Ys=o("span"),v(zr.$$.fragment),wh=g(),Zs=o("span"),Hh=n("HFValidationError"),wn=g(),Ne=o("div"),v(Wr.$$.fragment),kh=g(),Xr=o("p"),xh=n("Generic exception thrown by "),Qs=o("code"),Ph=n("huggingface_hub"),Th=n(" validators."),jh=g(),Kr=o("p"),Nh=n("Inherits from "),Jr=o("a"),ea=o("code"),Rh=n("ValueError"),Fh=n("."),Hn=g(),ut=o("h3"),Xt=o("a"),ta=o("span"),v(Yr.$$.fragment),Dh=g(),ra=o("span"),Ah=n("Argument validators"),kn=g(),vo=o("p"),qh=n(`Validators can also be used individually. Here is a list of all arguments that can be
validated.`),xn=g(),pt=o("h4"),Kt=o("a"),oa=o("span"),v(Zr.$$.fragment),Ih=g(),sa=o("span"),aa=o("code"),Ch=n("repo_id"),Pn=g(),P=o("div"),v(Qr.$$.fragment),Lh=g(),eo=o("p"),Oh=n("Validate "),na=o("code"),Vh=n("repo_id"),Sh=n(" is valid."),Bh=g(),ft=o("p"),Uh=n(`This is not meant to replace the proper validation made on the Hub but rather to
avoid local inconsistencies whenever possible (example: passing `),la=o("code"),Gh=n("repo_type"),Mh=n(` in the
`),ia=o("code"),zh=n("repo_id"),Wh=n(" is forbidden)."),Xh=g(),ga=o("p"),Kh=n("Rules:"),Jh=g(),Re=o("ul"),ha=o("li"),Yh=n("Between 1 and 96 characters."),Zh=g(),ua=o("li"),Qh=n("Either \u201Crepo_name\u201D or \u201Cnamespace/repo_name\u201D"),eu=g(),pa=o("li"),tu=n("[a-zA-Z0-9] or \u201D-\u201D, \u201D_\u201D, \u201D.\u201D"),ru=g(),fa=o("li"),ou=n("\u201D\u2014\u201D and \u201D..\u201D are forbidden"),su=g(),me=o("p"),au=n("Valid: "),ca=o("code"),nu=n('"foo"'),lu=n(", "),da=o("code"),iu=n('"foo/bar"'),gu=n(", "),_a=o("code"),hu=n('"123"'),uu=n(", "),ma=o("code"),pu=n('"Foo-BAR_foo.bar123"'),fu=g(),be=o("p"),cu=n("Not valid: "),ba=o("code"),du=n('"datasets/foo/bar"'),_u=n(", "),va=o("code"),mu=n('".repo_id"'),bu=n(", "),$a=o("code"),vu=n('"foo--bar"'),$u=n(", "),Ea=o("code"),Eu=n('"foo.git"'),yu=g(),v(Jt.$$.fragment),wu=g(),to=o("p"),Hu=n("Discussed in "),ro=o("a"),ku=n("https://github.com/huggingface/huggingface_hub/issues/1008"),xu=n(`.
In moon-landing (internal repository):`),Pu=g(),oo=o("ul"),ya=o("li"),so=o("a"),Tu=n("https://github.com/huggingface/moon-landing/blob/main/server/lib/Names.ts#L27"),ju=g(),wa=o("li"),ao=o("a"),Nu=n("https://github.com/huggingface/moon-landing/blob/main/server/views/components/NewRepoForm/NewRepoForm.svelte#L138"),this.h()},l(t){const u=uc('[data-svelte="svelte-1phssyn"]',document.head);d=s(u,"META",{name:!0,content:!0}),u.forEach(r),k=h(t),b=s(t,"H1",{class:!0});var no=a(b);f=s(no,"A",{id:!0,class:!0,href:!0});var Ha=a(f);m=s(Ha,"SPAN",{});var ka=a(m);$(i.$$.fragment,ka),ka.forEach(r),Ha.forEach(r),_=h(no),se=s(no,"SPAN",{});var xa=a(se);W=l(xa,"Utilities"),xa.forEach(r),no.forEach(r),ue=h(t),B=s(t,"H2",{class:!0});var lo=a(B);D=s(lo,"A",{id:!0,class:!0,href:!0});var Pa=a(D);X=s(Pa,"SPAN",{});var Ta=a(X);$(K.$$.fragment,Ta),Ta.forEach(r),Pa.forEach(r),ve=h(lo),R=s(lo,"SPAN",{});var $o=a(R);U=l($o,"Controlling the logging of "),ae=s($o,"CODE",{});var ja=a(ae);$e=l(ja,"huggingface_hub"),ja.forEach(r),$o.forEach(r),lo.forEach(r),Z=h(t),F=s(t,"P",{});var ct=a(F);Q=l(ct,"The "),J=s(ct,"CODE",{});var Na=a(J);ne=l(Na,"huggingface_hub"),Na.forEach(r),Ee=l(ct," package exposes a "),G=s(ct,"CODE",{});var Ra=a(G);M=l(Ra,"logging"),Ra.forEach(r),le=l(ct,` utility to control the logging level of the package itself.
You can import it as such:`),ct.forEach(r),pe=h(t),$(j.$$.fragment,t),O=h(t),T=s(t,"P",{});var Cu=a(T);fe=l(Cu,"Then, you may define the verbosity in order to update the amount of logs you\u2019ll see:"),Cu.forEach(r),ye=h(t),$(N.$$.fragment,t),ee=h(t),A=s(t,"P",{});var Lu=a(A);z=l(Lu,"The levels should be understood as follows:"),Lu.forEach(r),Fe=h(t),V=s(t,"UL",{});var Yt=a(V);ce=s(Yt,"LI",{});var Ru=a(ce);de=s(Ru,"CODE",{});var Ou=a(de);Ve=l(Ou,"error"),Ou.forEach(r),De=l(Ru,": only show critical logs about usage which may result in an error or unexpected behavior."),Ru.forEach(r),go=h(Yt),Ae=s(Yt,"LI",{});var Fu=a(Ae);vt=s(Fu,"CODE",{});var Vu=a(vt);er=l(Vu,"warning"),Vu.forEach(r),ho=l(Fu,`: show logs that aren\u2019t critical but usage may result in unintended behavior.
Additionally, important informative logs may be shown.`),Fu.forEach(r),dl=h(Yt),uo=s(Yt,"LI",{});var Du=a(uo);Ro=s(Du,"CODE",{});var Su=a(Ro);_l=l(Su,"info"),Su.forEach(r),ml=l(Du,`: show most logs, including some verbose logging regarding what is happening under the hood.
If something is behaving in an unexpected manner, we recommend switching the verbosity level to this in order
to get more information.`),Du.forEach(r),bl=h(Yt),po=s(Yt,"LI",{});var Au=a(po);Fo=s(Au,"CODE",{});var Bu=a(Fo);vl=l(Bu,"debug"),Bu.forEach(r),$l=l(Au,`: show all logs, including some internal logs which may be used to track exactly what\u2019s happening
under the hood.`),Au.forEach(r),Yt.forEach(r),Aa=h(t),we=s(t,"DIV",{class:!0});var Eo=a(we);$(tr.$$.fragment,Eo),El=h(Eo),Do=s(Eo,"P",{});var Uu=a(Do);yl=l(Uu,"Return the current level for the HuggingFace Hub\u2019s root logger."),Uu.forEach(r),wl=h(Eo),$($t.$$.fragment,Eo),Eo.forEach(r),qa=h(t),Se=s(t,"DIV",{class:!0});var jn=a(Se);$(rr.$$.fragment,jn),Hl=h(jn),Ao=s(jn,"P",{});var Gu=a(Ao);kl=l(Gu,"Sets the level for the HuggingFace Hub\u2019s root logger."),Gu.forEach(r),jn.forEach(r),Ia=h(t),Be=s(t,"DIV",{class:!0});var Nn=a(Be);$(or.$$.fragment,Nn),xl=h(Nn),sr=s(Nn,"P",{});var Rn=a(sr);Pl=l(Rn,"Sets the verbosity to "),qo=s(Rn,"CODE",{});var Mu=a(qo);Tl=l(Mu,"logging.INFO"),Mu.forEach(r),jl=l(Rn,"."),Rn.forEach(r),Nn.forEach(r),Ca=h(t),Ue=s(t,"DIV",{class:!0});var Fn=a(Ue);$(ar.$$.fragment,Fn),Nl=h(Fn),nr=s(Fn,"P",{});var Dn=a(nr);Rl=l(Dn,"Sets the verbosity to "),Io=s(Dn,"CODE",{});var zu=a(Io);Fl=l(zu,"logging.DEBUG"),zu.forEach(r),Dl=l(Dn,"."),Dn.forEach(r),Fn.forEach(r),La=h(t),Ge=s(t,"DIV",{class:!0});var An=a(Ge);$(lr.$$.fragment,An),Al=h(An),ir=s(An,"P",{});var qn=a(ir);ql=l(qn,"Sets the verbosity to "),Co=s(qn,"CODE",{});var Wu=a(Co);Il=l(Wu,"logging.WARNING"),Wu.forEach(r),Cl=l(qn,"."),qn.forEach(r),An.forEach(r),Oa=h(t),Me=s(t,"DIV",{class:!0});var In=a(Me);$(gr.$$.fragment,In),Ll=h(In),hr=s(In,"P",{});var Cn=a(hr);Ol=l(Cn,"Sets the verbosity to "),Lo=s(Cn,"CODE",{});var Xu=a(Lo);Vl=l(Xu,"logging.ERROR"),Xu.forEach(r),Sl=l(Cn,"."),Cn.forEach(r),In.forEach(r),Va=h(t),ze=s(t,"DIV",{class:!0});var Ln=a(ze);$(ur.$$.fragment,Ln),Bl=h(Ln),Oo=s(Ln,"P",{});var Ku=a(Oo);Ul=l(Ku,`Disable propagation of the library log outputs. Note that log propagation is
disabled by default.`),Ku.forEach(r),Ln.forEach(r),Sa=h(t),We=s(t,"DIV",{class:!0});var On=a(We);$(pr.$$.fragment,On),Gl=h(On),Vo=s(On,"P",{});var Ju=a(Vo);Ml=l(Ju,`Enable propagation of the library log outputs. Please disable the
HuggingFace Hub\u2019s default handler to prevent double logging if the root
logger has been configured.`),Ju.forEach(r),On.forEach(r),Ba=h(t),Xe=s(t,"H3",{class:!0});var Vn=a(Xe);Et=s(Vn,"A",{id:!0,class:!0,href:!0});var Yu=a(Et);So=s(Yu,"SPAN",{});var Zu=a(So);$(fr.$$.fragment,Zu),Zu.forEach(r),Yu.forEach(r),zl=h(Vn),Bo=s(Vn,"SPAN",{});var Qu=a(Bo);Wl=l(Qu,"Repo-specific helper methods"),Qu.forEach(r),Vn.forEach(r),Ua=h(t),qe=s(t,"P",{});var yo=a(qe);Xl=l(yo,"The methods exposed below are relevant when modifying modules from the "),Uo=s(yo,"CODE",{});var ep=a(Uo);Kl=l(ep,"huggingface_hub"),ep.forEach(r),Jl=l(yo,` library itself.
Using these shouldn\u2019t be necessary if you use `),Go=s(yo,"CODE",{});var tp=a(Go);Yl=l(tp,"huggingface_hub"),tp.forEach(r),Zl=l(yo," and you don\u2019t modify them."),yo.forEach(r),Ga=h(t),He=s(t,"DIV",{class:!0});var wo=a(He);$(cr.$$.fragment,wo),Ql=h(wo),Mo=s(wo,"P",{});var rp=a(Mo);ei=l(rp,`Returns a logger with the specified name. This function is not supposed
to be directly accessed by library users.`),rp.forEach(r),ti=h(wo),$(yt.$$.fragment,wo),wo.forEach(r),Ma=h(t),Ke=s(t,"H2",{class:!0});var Sn=a(Ke);wt=s(Sn,"A",{id:!0,class:!0,href:!0});var op=a(wt);zo=s(op,"SPAN",{});var sp=a(zo);$(dr.$$.fragment,sp),sp.forEach(r),op.forEach(r),ri=h(Sn),Wo=s(Sn,"SPAN",{});var ap=a(Wo);oi=l(ap,"Handling HTTP errors"),ap.forEach(r),Sn.forEach(r),za=h(t),ke=s(t,"P",{});var io=a(ke);Xo=s(io,"CODE",{});var np=a(Xo);si=l(np,"huggingface_hub"),np.forEach(r),ai=l(io," defines its own HTTP errors to refine the "),Ko=s(io,"CODE",{});var lp=a(Ko);ni=l(lp,"HTTPError"),lp.forEach(r),li=l(io,` raised by
`),Jo=s(io,"CODE",{});var ip=a(Jo);ii=l(ip,"requests"),ip.forEach(r),gi=l(io," with additional information sent back by the server."),io.forEach(r),Wa=h(t),Je=s(t,"H3",{class:!0});var Bn=a(Je);Ht=s(Bn,"A",{id:!0,class:!0,href:!0});var gp=a(Ht);Yo=s(gp,"SPAN",{});var hp=a(Yo);$(_r.$$.fragment,hp),hp.forEach(r),gp.forEach(r),hi=h(Bn),Zo=s(Bn,"SPAN",{});var up=a(Zo);ui=l(up,"Raise for status"),up.forEach(r),Bn.forEach(r),Xa=h(t),ie=s(t,"P",{});var dt=a(ie);fo=s(dt,"A",{href:!0});var pp=a(fo);pi=l(pp,"hf_raise_for_status()"),pp.forEach(r),fi=l(dt,` is meant to be the central method to \u201Craise for status\u201D from any
request made to the Hub. It wraps the base `),Qo=s(dt,"CODE",{});var fp=a(Qo);ci=l(fp,"requests.raise_for_status"),fp.forEach(r),di=l(dt,` to provide
additional information. Any `),es=s(dt,"CODE",{});var cp=a(es);_i=l(cp,"HTTPError"),cp.forEach(r),mi=l(dt," thrown is converted into a "),ts=s(dt,"CODE",{});var dp=a(ts);bi=l(dp,"HfHubHTTPError"),dp.forEach(r),vi=l(dt,"."),dt.forEach(r),Ka=h(t),$(mr.$$.fragment,t),Ja=h(t),Y=s(t,"DIV",{class:!0});var Ie=a(Y);$(br.$$.fragment,Ie),$i=h(Ie),Ye=s(Ie,"P",{});var Ho=a(Ye);Ei=l(Ho,"Internal version of "),rs=s(Ho,"CODE",{});var _p=a(rs);yi=l(_p,"response.raise_for_status()"),_p.forEach(r),wi=l(Ho,` that will refine a
potential HTTPError. Raised exception will be an instance of `),os=s(Ho,"CODE",{});var mp=a(os);Hi=l(mp,"HfHubHTTPError"),mp.forEach(r),ki=l(Ho,"."),Ho.forEach(r),xi=h(Ie),ss=s(Ie,"P",{});var bp=a(ss);Pi=l(bp,`This helper is meant to be the unique method to raise_for_status when making a call
to the Hugging Face Hub.`),bp.forEach(r),Ti=h(Ie),$(kt.$$.fragment,Ie),ji=h(Ie),$(xt.$$.fragment,Ie),Ie.forEach(r),Ya=h(t),Ze=s(t,"H3",{class:!0});var Un=a(Ze);Pt=s(Un,"A",{id:!0,class:!0,href:!0});var vp=a(Pt);as=s(vp,"SPAN",{});var $p=a(as);$(vr.$$.fragment,$p),$p.forEach(r),vp.forEach(r),Ni=h(Un),ns=s(Un,"SPAN",{});var Ep=a(ns);Ri=l(Ep,"HTTP errors"),Ep.forEach(r),Un.forEach(r),Za=h(t),Tt=s(t,"P",{});var Gn=a(Tt);Fi=l(Gn,"Here is a list of HTTP errors thrown in "),ls=s(Gn,"CODE",{});var yp=a(ls);Di=l(yp,"huggingface_hub"),yp.forEach(r),Ai=l(Gn,"."),Gn.forEach(r),Qa=h(t),Qe=s(t,"H4",{class:!0});var Mn=a(Qe);jt=s(Mn,"A",{id:!0,class:!0,href:!0});var wp=a(jt);is=s(wp,"SPAN",{});var Hp=a(is);$($r.$$.fragment,Hp),Hp.forEach(r),wp.forEach(r),qi=h(Mn),gs=s(Mn,"SPAN",{});var kp=a(gs);Ii=l(kp,"HfHubHTTPError"),kp.forEach(r),Mn.forEach(r),en=h(t),Er=s(t,"P",{});var qu=a(Er);hs=s(qu,"CODE",{});var xp=a(hs);Ci=l(xp,"HfHubHTTPError"),xp.forEach(r),Li=l(qu,` is the parent class for any HF Hub HTTP error. It takes care of parsing
the server response and format the error message to provide as much information to the
user as possible.`),qu.forEach(r),tn=h(t),C=s(t,"DIV",{class:!0});var te=a(C);$(yr.$$.fragment,te),Oi=h(te),us=s(te,"P",{});var Pp=a(us);Vi=l(Pp,"HTTPError to inherit from for any custom HTTP Error raised in HF Hub."),Pp.forEach(r),Si=h(te),wr=s(te,"P",{});var zn=a(wr);Bi=l(zn,"Any HTTPError is converted at least into a "),ps=s(zn,"CODE",{});var Tp=a(ps);Ui=l(Tp,"HfHubHTTPError"),Tp.forEach(r),Gi=l(zn,`. If some information is
sent back by the server, it will be added to the error message.`),zn.forEach(r),Mi=h(te),fs=s(te,"P",{});var jp=a(fs);zi=l(jp,"Added details:"),jp.forEach(r),Wi=h(te),Hr=s(te,"UL",{});var Wn=a(Hr);cs=s(Wn,"LI",{});var Np=a(cs);Xi=l(Np,"Request id from \u201CX-Request-Id\u201D header if exists."),Np.forEach(r),Ki=h(Wn),ds=s(Wn,"LI",{});var Rp=a(ds);Ji=l(Rp,"Server error message if we can found one in the response body."),Rp.forEach(r),Wn.forEach(r),Yi=h(te),$(Nt.$$.fragment,te),Zi=h(te),Rt=s(te,"DIV",{class:!0});var Xn=a(Rt);$(kr.$$.fragment,Xn),Qi=h(Xn),xr=s(Xn,"P",{});var Kn=a(xr);eg=l(Kn,"Append additional information to the "),_s=s(Kn,"CODE",{});var Fp=a(_s);tg=l(Fp,"HfHubHTTPError"),Fp.forEach(r),rg=l(Kn," initial message."),Kn.forEach(r),Xn.forEach(r),te.forEach(r),rn=h(t),et=s(t,"H4",{class:!0});var Jn=a(et);Ft=s(Jn,"A",{id:!0,class:!0,href:!0});var Dp=a(Ft);ms=s(Dp,"SPAN",{});var Ap=a(ms);$(Pr.$$.fragment,Ap),Ap.forEach(r),Dp.forEach(r),og=h(Jn),bs=s(Jn,"SPAN",{});var qp=a(bs);sg=l(qp,"RepositoryNotFoundError"),qp.forEach(r),Jn.forEach(r),on=h(t),xe=s(t,"DIV",{class:!0});var ko=a(xe);$(Tr.$$.fragment,ko),ag=h(ko),vs=s(ko,"P",{});var Ip=a(vs);ng=l(Ip,`Raised when trying to access a hf.co URL with an invalid repository name, or
with a private repo name the user does not have access to.`),Ip.forEach(r),lg=h(ko),$(Dt.$$.fragment,ko),ko.forEach(r),sn=h(t),tt=s(t,"H4",{class:!0});var Yn=a(tt);At=s(Yn,"A",{id:!0,class:!0,href:!0});var Cp=a(At);$s=s(Cp,"SPAN",{});var Lp=a($s);$(jr.$$.fragment,Lp),Lp.forEach(r),Cp.forEach(r),ig=h(Yn),Es=s(Yn,"SPAN",{});var Op=a(Es);gg=l(Op,"RevisionNotFoundError"),Op.forEach(r),Yn.forEach(r),an=h(t),Pe=s(t,"DIV",{class:!0});var xo=a(Pe);$(Nr.$$.fragment,xo),hg=h(xo),ys=s(xo,"P",{});var Vp=a(ys);ug=l(Vp,`Raised when trying to access a hf.co URL with a valid repository but an invalid
revision.`),Vp.forEach(r),pg=h(xo),$(qt.$$.fragment,xo),xo.forEach(r),nn=h(t),rt=s(t,"H4",{class:!0});var Zn=a(rt);It=s(Zn,"A",{id:!0,class:!0,href:!0});var Sp=a(It);ws=s(Sp,"SPAN",{});var Bp=a(ws);$(Rr.$$.fragment,Bp),Bp.forEach(r),Sp.forEach(r),fg=h(Zn),Hs=s(Zn,"SPAN",{});var Up=a(Hs);cg=l(Up,"EntryNotFoundError"),Up.forEach(r),Zn.forEach(r),ln=h(t),Te=s(t,"DIV",{class:!0});var Po=a(Te);$(Fr.$$.fragment,Po),dg=h(Po),ks=s(Po,"P",{});var Gp=a(ks);_g=l(Gp,`Raised when trying to access a hf.co URL with a valid repository and revision
but an invalid filename.`),Gp.forEach(r),mg=h(Po),$(Ct.$$.fragment,Po),Po.forEach(r),gn=h(t),ot=s(t,"H4",{class:!0});var Qn=a(ot);Lt=s(Qn,"A",{id:!0,class:!0,href:!0});var Mp=a(Lt);xs=s(Mp,"SPAN",{});var zp=a(xs);$(Dr.$$.fragment,zp),zp.forEach(r),Mp.forEach(r),bg=h(Qn),Ps=s(Qn,"SPAN",{});var Wp=a(Ps);vg=l(Wp,"BadRequestError"),Wp.forEach(r),Qn.forEach(r),hn=h(t),je=s(t,"DIV",{class:!0});var To=a(je);$(Ar.$$.fragment,To),$g=h(To),qr=s(To,"P",{});var el=a(qr);Eg=l(el,"Raised by "),Ts=s(el,"CODE",{});var Xp=a(Ts);yg=l(Xp,"hf_raise_for_status"),Xp.forEach(r),wg=l(el," when the server returns a HTTP 400 error."),el.forEach(r),Hg=h(To),$(Ot.$$.fragment,To),To.forEach(r),un=h(t),st=s(t,"H4",{class:!0});var tl=a(st);Vt=s(tl,"A",{id:!0,class:!0,href:!0});var Kp=a(Vt);js=s(Kp,"SPAN",{});var Jp=a(js);$(Ir.$$.fragment,Jp),Jp.forEach(r),Kp.forEach(r),kg=h(tl),Ns=s(tl,"SPAN",{});var Yp=a(Ns);xg=l(Yp,"LocalEntryNotFoundError"),Yp.forEach(r),tl.forEach(r),pn=h(t),ge=s(t,"DIV",{class:!0});var Zt=a(ge);$(Cr.$$.fragment,Zt),Pg=h(Zt),Rs=s(Zt,"P",{});var Zp=a(Rs);Tg=l(Zp,`Raised when trying to access a file that is not on the disk when network is
disabled or unavailable (connection issue). The entry may exist on the Hub.`),Zp.forEach(r),jg=h(Zt),he=s(Zt,"P",{});var Ce=a(he);Ng=l(Ce,"Note: "),Fs=s(Ce,"CODE",{});var Qp=a(Fs);Rg=l(Qp,"ValueError"),Qp.forEach(r),Fg=l(Ce,` type is to ensure backward compatibility.
Note: `),Ds=s(Ce,"CODE",{});var ef=a(Ds);Dg=l(ef,"LocalEntryNotFoundError"),ef.forEach(r),Ag=l(Ce," derives from "),As=s(Ce,"CODE",{});var tf=a(As);qg=l(tf,"HTTPError"),tf.forEach(r),Ig=l(Ce," because of "),qs=s(Ce,"CODE",{});var rf=a(qs);Cg=l(rf,"EntryNotFoundError"),rf.forEach(r),Lg=l(Ce,`
even when it is not a network issue.`),Ce.forEach(r),Og=h(Zt),$(St.$$.fragment,Zt),Zt.forEach(r),fn=h(t),at=s(t,"H2",{class:!0});var rl=a(at);Bt=s(rl,"A",{id:!0,class:!0,href:!0});var of=a(Bt);Is=s(of,"SPAN",{});var sf=a(Is);$(Lr.$$.fragment,sf),sf.forEach(r),of.forEach(r),Vg=h(rl),Cs=s(rl,"SPAN",{});var af=a(Cs);Sg=l(af,"Validators"),af.forEach(r),rl.forEach(r),cn=h(t),nt=s(t,"P",{});var Fa=a(nt);Ls=s(Fa,"CODE",{});var nf=a(Ls);Bg=l(nf,"huggingface_hub"),nf.forEach(r),Ug=l(Fa,` include custom validators to validate method arguments automatically.
Validation is inspired by the work done in `),Or=s(Fa,"A",{href:!0,rel:!0});var lf=a(Or);Gg=l(lf,"Pydantic"),lf.forEach(r),Mg=l(Fa,`
to validate type hints but with more limited features.`),Fa.forEach(r),dn=h(t),lt=s(t,"H3",{class:!0});var ol=a(lt);Ut=s(ol,"A",{id:!0,class:!0,href:!0});var gf=a(Ut);Os=s(gf,"SPAN",{});var hf=a(Os);$(Vr.$$.fragment,hf),hf.forEach(r),gf.forEach(r),zg=h(ol),Vs=s(ol,"SPAN",{});var uf=a(Vs);Wg=l(uf,"Generic decorator"),uf.forEach(r),ol.forEach(r),_n=h(t),it=s(t,"P",{});var Da=a(it);co=s(Da,"A",{href:!0});var pf=a(co);Xg=l(pf,"validate_hf_hub_args()"),pf.forEach(r),Kg=l(Da,` is a generic decorator to encapsulate
methods that have arguments following `),Ss=s(Da,"CODE",{});var ff=a(Ss);Jg=l(ff,"huggingface_hub"),ff.forEach(r),Yg=l(Da,`\u2019s naming. By default, all
arguments that has a validator implemented will be validated.`),Da.forEach(r),mn=h(t),Gt=s(t,"P",{});var sl=a(Gt);Zg=l(sl,"If an input is not valid, a "),_o=s(sl,"A",{href:!0});var cf=a(_o);Qg=l(cf,"HFValidationError"),cf.forEach(r),eh=l(sl,` is thrown. Only
the first non-valid value throws an error and stops the validation process.`),sl.forEach(r),bn=h(t),mo=s(t,"P",{});var df=a(mo);th=l(df,"Usage:"),df.forEach(r),vn=h(t),$(Sr.$$.fragment,t),$n=h(t),gt=s(t,"H4",{class:!0});var al=a(gt);Mt=s(al,"A",{id:!0,class:!0,href:!0});var _f=a(Mt);Bs=s(_f,"SPAN",{});var mf=a(Bs);$(Br.$$.fragment,mf),mf.forEach(r),_f.forEach(r),rh=h(al),Us=s(al,"SPAN",{});var bf=a(Us);oh=l(bf,"validate_hf_hub_args"),bf.forEach(r),al.forEach(r),En=h(t),L=s(t,"DIV",{class:!0});var re=a(L);$(Ur.$$.fragment,re),sh=h(re),Gr=s(re,"P",{});var nl=a(Gr);ah=l(nl,"Validate values received as argument for any public method of "),Gs=s(nl,"CODE",{});var vf=a(Gs);nh=l(vf,"huggingface_hub"),vf.forEach(r),lh=l(nl,"."),nl.forEach(r),ih=h(re),Ms=s(re,"P",{});var $f=a(Ms);gh=l($f,`The goal of this decorator is to harmonize validation of arguments reused
everywhere. By default, all defined validators are tested.`),$f.forEach(r),hh=h(re),zs=s(re,"P",{});var Ef=a(zs);uh=l(Ef,"Validators:"),Ef.forEach(r),ph=h(re),Ws=s(re,"UL",{});var yf=a(Ws);_e=s(yf,"LI",{});var _t=a(_e);bo=s(_t,"A",{href:!0});var wf=a(bo);fh=l(wf,"validate_repo_id()"),wf.forEach(r),ch=l(_t,": "),Xs=s(_t,"CODE",{});var Hf=a(Xs);dh=l(Hf,"repo_id"),Hf.forEach(r),_h=l(_t," must be "),Ks=s(_t,"CODE",{});var kf=a(Ks);mh=l(kf,'"repo_name"'),kf.forEach(r),bh=l(_t,`
or `),Js=s(_t,"CODE",{});var xf=a(Js);vh=l(xf,'"namespace/repo_name"'),xf.forEach(r),$h=l(_t,". Namespace is a username or an organization."),_t.forEach(r),yf.forEach(r),Eh=h(re),$(zt.$$.fragment,re),yh=h(re),$(Mr.$$.fragment,re),re.forEach(r),yn=h(t),ht=s(t,"H4",{class:!0});var ll=a(ht);Wt=s(ll,"A",{id:!0,class:!0,href:!0});var Pf=a(Wt);Ys=s(Pf,"SPAN",{});var Tf=a(Ys);$(zr.$$.fragment,Tf),Tf.forEach(r),Pf.forEach(r),wh=h(ll),Zs=s(ll,"SPAN",{});var jf=a(Zs);Hh=l(jf,"HFValidationError"),jf.forEach(r),ll.forEach(r),wn=h(t),Ne=s(t,"DIV",{class:!0});var jo=a(Ne);$(Wr.$$.fragment,jo),kh=h(jo),Xr=s(jo,"P",{});var il=a(Xr);xh=l(il,"Generic exception thrown by "),Qs=s(il,"CODE",{});var Nf=a(Qs);Ph=l(Nf,"huggingface_hub"),Nf.forEach(r),Th=l(il," validators."),il.forEach(r),jh=h(jo),Kr=s(jo,"P",{});var gl=a(Kr);Nh=l(gl,"Inherits from "),Jr=s(gl,"A",{href:!0,rel:!0});var Rf=a(Jr);ea=s(Rf,"CODE",{});var Ff=a(ea);Rh=l(Ff,"ValueError"),Ff.forEach(r),Rf.forEach(r),Fh=l(gl,"."),gl.forEach(r),jo.forEach(r),Hn=h(t),ut=s(t,"H3",{class:!0});var hl=a(ut);Xt=s(hl,"A",{id:!0,class:!0,href:!0});var Df=a(Xt);ta=s(Df,"SPAN",{});var Af=a(ta);$(Yr.$$.fragment,Af),Af.forEach(r),Df.forEach(r),Dh=h(hl),ra=s(hl,"SPAN",{});var qf=a(ra);Ah=l(qf,"Argument validators"),qf.forEach(r),hl.forEach(r),kn=h(t),vo=s(t,"P",{});var If=a(vo);qh=l(If,`Validators can also be used individually. Here is a list of all arguments that can be
validated.`),If.forEach(r),xn=h(t),pt=s(t,"H4",{class:!0});var ul=a(pt);Kt=s(ul,"A",{id:!0,class:!0,href:!0});var Cf=a(Kt);oa=s(Cf,"SPAN",{});var Lf=a(oa);$(Zr.$$.fragment,Lf),Lf.forEach(r),Cf.forEach(r),Ih=h(ul),sa=s(ul,"SPAN",{});var Of=a(sa);aa=s(Of,"CODE",{});var Vf=a(aa);Ch=l(Vf,"repo_id"),Vf.forEach(r),Of.forEach(r),ul.forEach(r),Pn=h(t),P=s(t,"DIV",{class:!0});var q=a(P);$(Qr.$$.fragment,q),Lh=h(q),eo=s(q,"P",{});var pl=a(eo);Oh=l(pl,"Validate "),na=s(pl,"CODE",{});var Sf=a(na);Vh=l(Sf,"repo_id"),Sf.forEach(r),Sh=l(pl," is valid."),pl.forEach(r),Bh=h(q),ft=s(q,"P",{});var No=a(ft);Uh=l(No,`This is not meant to replace the proper validation made on the Hub but rather to
avoid local inconsistencies whenever possible (example: passing `),la=s(No,"CODE",{});var Bf=a(la);Gh=l(Bf,"repo_type"),Bf.forEach(r),Mh=l(No,` in the
`),ia=s(No,"CODE",{});var Uf=a(ia);zh=l(Uf,"repo_id"),Uf.forEach(r),Wh=l(No," is forbidden)."),No.forEach(r),Xh=h(q),ga=s(q,"P",{});var Gf=a(ga);Kh=l(Gf,"Rules:"),Gf.forEach(r),Jh=h(q),Re=s(q,"UL",{});var Qt=a(Re);ha=s(Qt,"LI",{});var Mf=a(ha);Yh=l(Mf,"Between 1 and 96 characters."),Mf.forEach(r),Zh=h(Qt),ua=s(Qt,"LI",{});var zf=a(ua);Qh=l(zf,"Either \u201Crepo_name\u201D or \u201Cnamespace/repo_name\u201D"),zf.forEach(r),eu=h(Qt),pa=s(Qt,"LI",{});var Wf=a(pa);tu=l(Wf,"[a-zA-Z0-9] or \u201D-\u201D, \u201D_\u201D, \u201D.\u201D"),Wf.forEach(r),ru=h(Qt),fa=s(Qt,"LI",{});var Xf=a(fa);ou=l(Xf,"\u201D\u2014\u201D and \u201D..\u201D are forbidden"),Xf.forEach(r),Qt.forEach(r),su=h(q),me=s(q,"P",{});var mt=a(me);au=l(mt,"Valid: "),ca=s(mt,"CODE",{});var Kf=a(ca);nu=l(Kf,'"foo"'),Kf.forEach(r),lu=l(mt,", "),da=s(mt,"CODE",{});var Jf=a(da);iu=l(Jf,'"foo/bar"'),Jf.forEach(r),gu=l(mt,", "),_a=s(mt,"CODE",{});var Yf=a(_a);hu=l(Yf,'"123"'),Yf.forEach(r),uu=l(mt,", "),ma=s(mt,"CODE",{});var Zf=a(ma);pu=l(Zf,'"Foo-BAR_foo.bar123"'),Zf.forEach(r),mt.forEach(r),fu=h(q),be=s(q,"P",{});var bt=a(be);cu=l(bt,"Not valid: "),ba=s(bt,"CODE",{});var Qf=a(ba);du=l(Qf,'"datasets/foo/bar"'),Qf.forEach(r),_u=l(bt,", "),va=s(bt,"CODE",{});var ec=a(va);mu=l(ec,'".repo_id"'),ec.forEach(r),bu=l(bt,", "),$a=s(bt,"CODE",{});var tc=a($a);vu=l(tc,'"foo--bar"'),tc.forEach(r),$u=l(bt,", "),Ea=s(bt,"CODE",{});var rc=a(Ea);Eu=l(rc,'"foo.git"'),rc.forEach(r),bt.forEach(r),yu=h(q),$(Jt.$$.fragment,q),wu=h(q),to=s(q,"P",{});var fl=a(to);Hu=l(fl,"Discussed in "),ro=s(fl,"A",{href:!0,rel:!0});var oc=a(ro);ku=l(oc,"https://github.com/huggingface/huggingface_hub/issues/1008"),oc.forEach(r),xu=l(fl,`.
In moon-landing (internal repository):`),fl.forEach(r),Pu=h(q),oo=s(q,"UL",{});var cl=a(oo);ya=s(cl,"LI",{});var sc=a(ya);so=s(sc,"A",{href:!0,rel:!0});var ac=a(so);Tu=l(ac,"https://github.com/huggingface/moon-landing/blob/main/server/lib/Names.ts#L27"),ac.forEach(r),sc.forEach(r),ju=h(cl),wa=s(cl,"LI",{});var nc=a(wa);ao=s(nc,"A",{href:!0,rel:!0});var lc=a(ao);Nu=l(lc,"https://github.com/huggingface/moon-landing/blob/main/server/views/components/NewRepoForm/NewRepoForm.svelte#L138"),lc.forEach(r),nc.forEach(r),cl.forEach(r),q.forEach(r),this.h()},h(){c(d,"name","hf:doc:metadata"),c(d,"content",JSON.stringify(xc)),c(f,"id","utilities"),c(f,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(f,"href","#utilities"),c(b,"class","relative group"),c(D,"id","huggingface_hub.utils.logging.get_verbosity"),c(D,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(D,"href","#huggingface_hub.utils.logging.get_verbosity"),c(B,"class","relative group"),c(we,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Se,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Be,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Ue,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Ge,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Me,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(ze,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(We,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Et,"id","huggingface_hub.utils.logging.get_logger"),c(Et,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Et,"href","#huggingface_hub.utils.logging.get_logger"),c(Xe,"class","relative group"),c(He,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(wt,"id","handling-http-errors"),c(wt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(wt,"href","#handling-http-errors"),c(Ke,"class","relative group"),c(Ht,"id","huggingface_hub.utils.hf_raise_for_status"),c(Ht,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Ht,"href","#huggingface_hub.utils.hf_raise_for_status"),c(Je,"class","relative group"),c(fo,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.hf_raise_for_status"),c(Y,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Pt,"id","http-errors"),c(Pt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Pt,"href","#http-errors"),c(Ze,"class","relative group"),c(jt,"id","huggingface_hub.utils.HfHubHTTPError"),c(jt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(jt,"href","#huggingface_hub.utils.HfHubHTTPError"),c(Qe,"class","relative group"),c(Rt,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(C,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Ft,"id","huggingface_hub.utils.RepositoryNotFoundError"),c(Ft,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Ft,"href","#huggingface_hub.utils.RepositoryNotFoundError"),c(et,"class","relative group"),c(xe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(At,"id","huggingface_hub.utils.RevisionNotFoundError"),c(At,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(At,"href","#huggingface_hub.utils.RevisionNotFoundError"),c(tt,"class","relative group"),c(Pe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(It,"id","huggingface_hub.utils.EntryNotFoundError"),c(It,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(It,"href","#huggingface_hub.utils.EntryNotFoundError"),c(rt,"class","relative group"),c(Te,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Lt,"id","huggingface_hub.utils.BadRequestError"),c(Lt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Lt,"href","#huggingface_hub.utils.BadRequestError"),c(ot,"class","relative group"),c(je,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Vt,"id","huggingface_hub.utils.LocalEntryNotFoundError"),c(Vt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Vt,"href","#huggingface_hub.utils.LocalEntryNotFoundError"),c(st,"class","relative group"),c(ge,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Bt,"id","validators"),c(Bt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Bt,"href","#validators"),c(at,"class","relative group"),c(Or,"href","https://pydantic-docs.helpmanual.io/"),c(Or,"rel","nofollow"),c(Ut,"id","generic-decorator"),c(Ut,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Ut,"href","#generic-decorator"),c(lt,"class","relative group"),c(co,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.validate_hf_hub_args"),c(_o,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.HFValidationError"),c(Mt,"id","huggingface_hub.utils.validate_hf_hub_args"),c(Mt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Mt,"href","#huggingface_hub.utils.validate_hf_hub_args"),c(gt,"class","relative group"),c(bo,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.validate_repo_id"),c(L,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Wt,"id","huggingface_hub.utils.HFValidationError"),c(Wt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Wt,"href","#huggingface_hub.utils.HFValidationError"),c(ht,"class","relative group"),c(Jr,"href","https://docs.python.org/3/library/exceptions.html#ValueError"),c(Jr,"rel","nofollow"),c(Ne,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Xt,"id","argument-validators"),c(Xt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Xt,"href","#argument-validators"),c(ut,"class","relative group"),c(Kt,"id","huggingface_hub.utils.validate_repo_id"),c(Kt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Kt,"href","#huggingface_hub.utils.validate_repo_id"),c(pt,"class","relative group"),c(ro,"href","https://github.com/huggingface/huggingface_hub/issues/1008"),c(ro,"rel","nofollow"),c(so,"href","https://github.com/huggingface/moon-landing/blob/main/server/lib/Names.ts#L27"),c(so,"rel","nofollow"),c(ao,"href","https://github.com/huggingface/moon-landing/blob/main/server/views/components/NewRepoForm/NewRepoForm.svelte#L138"),c(ao,"rel","nofollow"),c(P,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(t,u){e(document.head,d),p(t,k,u),p(t,b,u),e(b,f),e(f,m),E(i,m,null),e(b,_),e(b,se),e(se,W),p(t,ue,u),p(t,B,u),e(B,D),e(D,X),E(K,X,null),e(B,ve),e(B,R),e(R,U),e(R,ae),e(ae,$e),p(t,Z,u),p(t,F,u),e(F,Q),e(F,J),e(J,ne),e(F,Ee),e(F,G),e(G,M),e(F,le),p(t,pe,u),E(j,t,u),p(t,O,u),p(t,T,u),e(T,fe),p(t,ye,u),E(N,t,u),p(t,ee,u),p(t,A,u),e(A,z),p(t,Fe,u),p(t,V,u),e(V,ce),e(ce,de),e(de,Ve),e(ce,De),e(V,go),e(V,Ae),e(Ae,vt),e(vt,er),e(Ae,ho),e(V,dl),e(V,uo),e(uo,Ro),e(Ro,_l),e(uo,ml),e(V,bl),e(V,po),e(po,Fo),e(Fo,vl),e(po,$l),p(t,Aa,u),p(t,we,u),E(tr,we,null),e(we,El),e(we,Do),e(Do,yl),e(we,wl),E($t,we,null),p(t,qa,u),p(t,Se,u),E(rr,Se,null),e(Se,Hl),e(Se,Ao),e(Ao,kl),p(t,Ia,u),p(t,Be,u),E(or,Be,null),e(Be,xl),e(Be,sr),e(sr,Pl),e(sr,qo),e(qo,Tl),e(sr,jl),p(t,Ca,u),p(t,Ue,u),E(ar,Ue,null),e(Ue,Nl),e(Ue,nr),e(nr,Rl),e(nr,Io),e(Io,Fl),e(nr,Dl),p(t,La,u),p(t,Ge,u),E(lr,Ge,null),e(Ge,Al),e(Ge,ir),e(ir,ql),e(ir,Co),e(Co,Il),e(ir,Cl),p(t,Oa,u),p(t,Me,u),E(gr,Me,null),e(Me,Ll),e(Me,hr),e(hr,Ol),e(hr,Lo),e(Lo,Vl),e(hr,Sl),p(t,Va,u),p(t,ze,u),E(ur,ze,null),e(ze,Bl),e(ze,Oo),e(Oo,Ul),p(t,Sa,u),p(t,We,u),E(pr,We,null),e(We,Gl),e(We,Vo),e(Vo,Ml),p(t,Ba,u),p(t,Xe,u),e(Xe,Et),e(Et,So),E(fr,So,null),e(Xe,zl),e(Xe,Bo),e(Bo,Wl),p(t,Ua,u),p(t,qe,u),e(qe,Xl),e(qe,Uo),e(Uo,Kl),e(qe,Jl),e(qe,Go),e(Go,Yl),e(qe,Zl),p(t,Ga,u),p(t,He,u),E(cr,He,null),e(He,Ql),e(He,Mo),e(Mo,ei),e(He,ti),E(yt,He,null),p(t,Ma,u),p(t,Ke,u),e(Ke,wt),e(wt,zo),E(dr,zo,null),e(Ke,ri),e(Ke,Wo),e(Wo,oi),p(t,za,u),p(t,ke,u),e(ke,Xo),e(Xo,si),e(ke,ai),e(ke,Ko),e(Ko,ni),e(ke,li),e(ke,Jo),e(Jo,ii),e(ke,gi),p(t,Wa,u),p(t,Je,u),e(Je,Ht),e(Ht,Yo),E(_r,Yo,null),e(Je,hi),e(Je,Zo),e(Zo,ui),p(t,Xa,u),p(t,ie,u),e(ie,fo),e(fo,pi),e(ie,fi),e(ie,Qo),e(Qo,ci),e(ie,di),e(ie,es),e(es,_i),e(ie,mi),e(ie,ts),e(ts,bi),e(ie,vi),p(t,Ka,u),E(mr,t,u),p(t,Ja,u),p(t,Y,u),E(br,Y,null),e(Y,$i),e(Y,Ye),e(Ye,Ei),e(Ye,rs),e(rs,yi),e(Ye,wi),e(Ye,os),e(os,Hi),e(Ye,ki),e(Y,xi),e(Y,ss),e(ss,Pi),e(Y,Ti),E(kt,Y,null),e(Y,ji),E(xt,Y,null),p(t,Ya,u),p(t,Ze,u),e(Ze,Pt),e(Pt,as),E(vr,as,null),e(Ze,Ni),e(Ze,ns),e(ns,Ri),p(t,Za,u),p(t,Tt,u),e(Tt,Fi),e(Tt,ls),e(ls,Di),e(Tt,Ai),p(t,Qa,u),p(t,Qe,u),e(Qe,jt),e(jt,is),E($r,is,null),e(Qe,qi),e(Qe,gs),e(gs,Ii),p(t,en,u),p(t,Er,u),e(Er,hs),e(hs,Ci),e(Er,Li),p(t,tn,u),p(t,C,u),E(yr,C,null),e(C,Oi),e(C,us),e(us,Vi),e(C,Si),e(C,wr),e(wr,Bi),e(wr,ps),e(ps,Ui),e(wr,Gi),e(C,Mi),e(C,fs),e(fs,zi),e(C,Wi),e(C,Hr),e(Hr,cs),e(cs,Xi),e(Hr,Ki),e(Hr,ds),e(ds,Ji),e(C,Yi),E(Nt,C,null),e(C,Zi),e(C,Rt),E(kr,Rt,null),e(Rt,Qi),e(Rt,xr),e(xr,eg),e(xr,_s),e(_s,tg),e(xr,rg),p(t,rn,u),p(t,et,u),e(et,Ft),e(Ft,ms),E(Pr,ms,null),e(et,og),e(et,bs),e(bs,sg),p(t,on,u),p(t,xe,u),E(Tr,xe,null),e(xe,ag),e(xe,vs),e(vs,ng),e(xe,lg),E(Dt,xe,null),p(t,sn,u),p(t,tt,u),e(tt,At),e(At,$s),E(jr,$s,null),e(tt,ig),e(tt,Es),e(Es,gg),p(t,an,u),p(t,Pe,u),E(Nr,Pe,null),e(Pe,hg),e(Pe,ys),e(ys,ug),e(Pe,pg),E(qt,Pe,null),p(t,nn,u),p(t,rt,u),e(rt,It),e(It,ws),E(Rr,ws,null),e(rt,fg),e(rt,Hs),e(Hs,cg),p(t,ln,u),p(t,Te,u),E(Fr,Te,null),e(Te,dg),e(Te,ks),e(ks,_g),e(Te,mg),E(Ct,Te,null),p(t,gn,u),p(t,ot,u),e(ot,Lt),e(Lt,xs),E(Dr,xs,null),e(ot,bg),e(ot,Ps),e(Ps,vg),p(t,hn,u),p(t,je,u),E(Ar,je,null),e(je,$g),e(je,qr),e(qr,Eg),e(qr,Ts),e(Ts,yg),e(qr,wg),e(je,Hg),E(Ot,je,null),p(t,un,u),p(t,st,u),e(st,Vt),e(Vt,js),E(Ir,js,null),e(st,kg),e(st,Ns),e(Ns,xg),p(t,pn,u),p(t,ge,u),E(Cr,ge,null),e(ge,Pg),e(ge,Rs),e(Rs,Tg),e(ge,jg),e(ge,he),e(he,Ng),e(he,Fs),e(Fs,Rg),e(he,Fg),e(he,Ds),e(Ds,Dg),e(he,Ag),e(he,As),e(As,qg),e(he,Ig),e(he,qs),e(qs,Cg),e(he,Lg),e(ge,Og),E(St,ge,null),p(t,fn,u),p(t,at,u),e(at,Bt),e(Bt,Is),E(Lr,Is,null),e(at,Vg),e(at,Cs),e(Cs,Sg),p(t,cn,u),p(t,nt,u),e(nt,Ls),e(Ls,Bg),e(nt,Ug),e(nt,Or),e(Or,Gg),e(nt,Mg),p(t,dn,u),p(t,lt,u),e(lt,Ut),e(Ut,Os),E(Vr,Os,null),e(lt,zg),e(lt,Vs),e(Vs,Wg),p(t,_n,u),p(t,it,u),e(it,co),e(co,Xg),e(it,Kg),e(it,Ss),e(Ss,Jg),e(it,Yg),p(t,mn,u),p(t,Gt,u),e(Gt,Zg),e(Gt,_o),e(_o,Qg),e(Gt,eh),p(t,bn,u),p(t,mo,u),e(mo,th),p(t,vn,u),E(Sr,t,u),p(t,$n,u),p(t,gt,u),e(gt,Mt),e(Mt,Bs),E(Br,Bs,null),e(gt,rh),e(gt,Us),e(Us,oh),p(t,En,u),p(t,L,u),E(Ur,L,null),e(L,sh),e(L,Gr),e(Gr,ah),e(Gr,Gs),e(Gs,nh),e(Gr,lh),e(L,ih),e(L,Ms),e(Ms,gh),e(L,hh),e(L,zs),e(zs,uh),e(L,ph),e(L,Ws),e(Ws,_e),e(_e,bo),e(bo,fh),e(_e,ch),e(_e,Xs),e(Xs,dh),e(_e,_h),e(_e,Ks),e(Ks,mh),e(_e,bh),e(_e,Js),e(Js,vh),e(_e,$h),e(L,Eh),E(zt,L,null),e(L,yh),E(Mr,L,null),p(t,yn,u),p(t,ht,u),e(ht,Wt),e(Wt,Ys),E(zr,Ys,null),e(ht,wh),e(ht,Zs),e(Zs,Hh),p(t,wn,u),p(t,Ne,u),E(Wr,Ne,null),e(Ne,kh),e(Ne,Xr),e(Xr,xh),e(Xr,Qs),e(Qs,Ph),e(Xr,Th),e(Ne,jh),e(Ne,Kr),e(Kr,Nh),e(Kr,Jr),e(Jr,ea),e(ea,Rh),e(Kr,Fh),p(t,Hn,u),p(t,ut,u),e(ut,Xt),e(Xt,ta),E(Yr,ta,null),e(ut,Dh),e(ut,ra),e(ra,Ah),p(t,kn,u),p(t,vo,u),e(vo,qh),p(t,xn,u),p(t,pt,u),e(pt,Kt),e(Kt,oa),E(Zr,oa,null),e(pt,Ih),e(pt,sa),e(sa,aa),e(aa,Ch),p(t,Pn,u),p(t,P,u),E(Qr,P,null),e(P,Lh),e(P,eo),e(eo,Oh),e(eo,na),e(na,Vh),e(eo,Sh),e(P,Bh),e(P,ft),e(ft,Uh),e(ft,la),e(la,Gh),e(ft,Mh),e(ft,ia),e(ia,zh),e(ft,Wh),e(P,Xh),e(P,ga),e(ga,Kh),e(P,Jh),e(P,Re),e(Re,ha),e(ha,Yh),e(Re,Zh),e(Re,ua),e(ua,Qh),e(Re,eu),e(Re,pa),e(pa,tu),e(Re,ru),e(Re,fa),e(fa,ou),e(P,su),e(P,me),e(me,au),e(me,ca),e(ca,nu),e(me,lu),e(me,da),e(da,iu),e(me,gu),e(me,_a),e(_a,hu),e(me,uu),e(me,ma),e(ma,pu),e(P,fu),e(P,be),e(be,cu),e(be,ba),e(ba,du),e(be,_u),e(be,va),e(va,mu),e(be,bu),e(be,$a),e($a,vu),e(be,$u),e(be,Ea),e(Ea,Eu),e(P,yu),E(Jt,P,null),e(P,wu),e(P,to),e(to,Hu),e(to,ro),e(ro,ku),e(to,xu),e(P,Pu),e(P,oo),e(oo,ya),e(ya,so),e(so,Tu),e(oo,ju),e(oo,wa),e(wa,ao),e(ao,Nu),Tn=!0},p(t,[u]){const no={};u&2&&(no.$$scope={dirty:u,ctx:t}),$t.$set(no);const Ha={};u&2&&(Ha.$$scope={dirty:u,ctx:t}),yt.$set(Ha);const ka={};u&2&&(ka.$$scope={dirty:u,ctx:t}),kt.$set(ka);const xa={};u&2&&(xa.$$scope={dirty:u,ctx:t}),xt.$set(xa);const lo={};u&2&&(lo.$$scope={dirty:u,ctx:t}),Nt.$set(lo);const Pa={};u&2&&(Pa.$$scope={dirty:u,ctx:t}),Dt.$set(Pa);const Ta={};u&2&&(Ta.$$scope={dirty:u,ctx:t}),qt.$set(Ta);const $o={};u&2&&($o.$$scope={dirty:u,ctx:t}),Ct.$set($o);const ja={};u&2&&(ja.$$scope={dirty:u,ctx:t}),Ot.$set(ja);const ct={};u&2&&(ct.$$scope={dirty:u,ctx:t}),St.$set(ct);const Na={};u&2&&(Na.$$scope={dirty:u,ctx:t}),zt.$set(Na);const Ra={};u&2&&(Ra.$$scope={dirty:u,ctx:t}),Jt.$set(Ra)},i(t){Tn||(y(i.$$.fragment,t),y(K.$$.fragment,t),y(j.$$.fragment,t),y(N.$$.fragment,t),y(tr.$$.fragment,t),y($t.$$.fragment,t),y(rr.$$.fragment,t),y(or.$$.fragment,t),y(ar.$$.fragment,t),y(lr.$$.fragment,t),y(gr.$$.fragment,t),y(ur.$$.fragment,t),y(pr.$$.fragment,t),y(fr.$$.fragment,t),y(cr.$$.fragment,t),y(yt.$$.fragment,t),y(dr.$$.fragment,t),y(_r.$$.fragment,t),y(mr.$$.fragment,t),y(br.$$.fragment,t),y(kt.$$.fragment,t),y(xt.$$.fragment,t),y(vr.$$.fragment,t),y($r.$$.fragment,t),y(yr.$$.fragment,t),y(Nt.$$.fragment,t),y(kr.$$.fragment,t),y(Pr.$$.fragment,t),y(Tr.$$.fragment,t),y(Dt.$$.fragment,t),y(jr.$$.fragment,t),y(Nr.$$.fragment,t),y(qt.$$.fragment,t),y(Rr.$$.fragment,t),y(Fr.$$.fragment,t),y(Ct.$$.fragment,t),y(Dr.$$.fragment,t),y(Ar.$$.fragment,t),y(Ot.$$.fragment,t),y(Ir.$$.fragment,t),y(Cr.$$.fragment,t),y(St.$$.fragment,t),y(Lr.$$.fragment,t),y(Vr.$$.fragment,t),y(Sr.$$.fragment,t),y(Br.$$.fragment,t),y(Ur.$$.fragment,t),y(zt.$$.fragment,t),y(Mr.$$.fragment,t),y(zr.$$.fragment,t),y(Wr.$$.fragment,t),y(Yr.$$.fragment,t),y(Zr.$$.fragment,t),y(Qr.$$.fragment,t),y(Jt.$$.fragment,t),Tn=!0)},o(t){w(i.$$.fragment,t),w(K.$$.fragment,t),w(j.$$.fragment,t),w(N.$$.fragment,t),w(tr.$$.fragment,t),w($t.$$.fragment,t),w(rr.$$.fragment,t),w(or.$$.fragment,t),w(ar.$$.fragment,t),w(lr.$$.fragment,t),w(gr.$$.fragment,t),w(ur.$$.fragment,t),w(pr.$$.fragment,t),w(fr.$$.fragment,t),w(cr.$$.fragment,t),w(yt.$$.fragment,t),w(dr.$$.fragment,t),w(_r.$$.fragment,t),w(mr.$$.fragment,t),w(br.$$.fragment,t),w(kt.$$.fragment,t),w(xt.$$.fragment,t),w(vr.$$.fragment,t),w($r.$$.fragment,t),w(yr.$$.fragment,t),w(Nt.$$.fragment,t),w(kr.$$.fragment,t),w(Pr.$$.fragment,t),w(Tr.$$.fragment,t),w(Dt.$$.fragment,t),w(jr.$$.fragment,t),w(Nr.$$.fragment,t),w(qt.$$.fragment,t),w(Rr.$$.fragment,t),w(Fr.$$.fragment,t),w(Ct.$$.fragment,t),w(Dr.$$.fragment,t),w(Ar.$$.fragment,t),w(Ot.$$.fragment,t),w(Ir.$$.fragment,t),w(Cr.$$.fragment,t),w(St.$$.fragment,t),w(Lr.$$.fragment,t),w(Vr.$$.fragment,t),w(Sr.$$.fragment,t),w(Br.$$.fragment,t),w(Ur.$$.fragment,t),w(zt.$$.fragment,t),w(Mr.$$.fragment,t),w(zr.$$.fragment,t),w(Wr.$$.fragment,t),w(Yr.$$.fragment,t),w(Zr.$$.fragment,t),w(Qr.$$.fragment,t),w(Jt.$$.fragment,t),Tn=!1},d(t){r(d),t&&r(k),t&&r(b),H(i),t&&r(ue),t&&r(B),H(K),t&&r(Z),t&&r(F),t&&r(pe),H(j,t),t&&r(O),t&&r(T),t&&r(ye),H(N,t),t&&r(ee),t&&r(A),t&&r(Fe),t&&r(V),t&&r(Aa),t&&r(we),H(tr),H($t),t&&r(qa),t&&r(Se),H(rr),t&&r(Ia),t&&r(Be),H(or),t&&r(Ca),t&&r(Ue),H(ar),t&&r(La),t&&r(Ge),H(lr),t&&r(Oa),t&&r(Me),H(gr),t&&r(Va),t&&r(ze),H(ur),t&&r(Sa),t&&r(We),H(pr),t&&r(Ba),t&&r(Xe),H(fr),t&&r(Ua),t&&r(qe),t&&r(Ga),t&&r(He),H(cr),H(yt),t&&r(Ma),t&&r(Ke),H(dr),t&&r(za),t&&r(ke),t&&r(Wa),t&&r(Je),H(_r),t&&r(Xa),t&&r(ie),t&&r(Ka),H(mr,t),t&&r(Ja),t&&r(Y),H(br),H(kt),H(xt),t&&r(Ya),t&&r(Ze),H(vr),t&&r(Za),t&&r(Tt),t&&r(Qa),t&&r(Qe),H($r),t&&r(en),t&&r(Er),t&&r(tn),t&&r(C),H(yr),H(Nt),H(kr),t&&r(rn),t&&r(et),H(Pr),t&&r(on),t&&r(xe),H(Tr),H(Dt),t&&r(sn),t&&r(tt),H(jr),t&&r(an),t&&r(Pe),H(Nr),H(qt),t&&r(nn),t&&r(rt),H(Rr),t&&r(ln),t&&r(Te),H(Fr),H(Ct),t&&r(gn),t&&r(ot),H(Dr),t&&r(hn),t&&r(je),H(Ar),H(Ot),t&&r(un),t&&r(st),H(Ir),t&&r(pn),t&&r(ge),H(Cr),H(St),t&&r(fn),t&&r(at),H(Lr),t&&r(cn),t&&r(nt),t&&r(dn),t&&r(lt),H(Vr),t&&r(_n),t&&r(it),t&&r(mn),t&&r(Gt),t&&r(bn),t&&r(mo),t&&r(vn),H(Sr,t),t&&r($n),t&&r(gt),H(Br),t&&r(En),t&&r(L),H(Ur),H(zt),H(Mr),t&&r(yn),t&&r(ht),H(zr),t&&r(wn),t&&r(Ne),H(Wr),t&&r(Hn),t&&r(ut),H(Yr),t&&r(kn),t&&r(vo),t&&r(xn),t&&r(pt),H(Zr),t&&r(Pn),t&&r(P),H(Qr),H(Jt)}}}const xc={local:"utilities",sections:[{local:"huggingface_hub.utils.logging.get_verbosity",sections:[{local:"huggingface_hub.utils.logging.get_logger",title:"Repo-specific helper methods"}],title:"Controlling the logging of `huggingface_hub`"},{local:"handling-http-errors",sections:[{local:"huggingface_hub.utils.hf_raise_for_status",title:"Raise for status"},{local:"http-errors",sections:[{local:"huggingface_hub.utils.HfHubHTTPError",title:"HfHubHTTPError"},{local:"huggingface_hub.utils.RepositoryNotFoundError",title:"RepositoryNotFoundError"},{local:"huggingface_hub.utils.RevisionNotFoundError",title:"RevisionNotFoundError"},{local:"huggingface_hub.utils.EntryNotFoundError",title:"EntryNotFoundError"},{local:"huggingface_hub.utils.BadRequestError",title:"BadRequestError"},{local:"huggingface_hub.utils.LocalEntryNotFoundError",title:"LocalEntryNotFoundError"}],title:"HTTP errors"}],title:"Handling HTTP errors"},{local:"validators",sections:[{local:"generic-decorator",sections:[{local:"huggingface_hub.utils.validate_hf_hub_args",title:"validate_hf_hub_args"},{local:"huggingface_hub.utils.HFValidationError",title:"HFValidationError"}],title:"Generic decorator"},{local:"argument-validators",sections:[{local:"huggingface_hub.utils.validate_repo_id",title:"`repo_id`"}],title:"Argument validators"}],title:"Validators"}],title:"Utilities"};function Pc(x){return pc(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ac extends ic{constructor(d){super();gc(this,d,Pc,kc,hc,{})}}export{Ac as default,xc as metadata};
