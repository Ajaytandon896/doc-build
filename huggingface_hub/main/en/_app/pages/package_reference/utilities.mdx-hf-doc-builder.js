import{S as Qg,i as Xg,s as eh,e as a,k as g,w as v,t as l,M as th,c as r,d as o,m as h,a as s,x as $,h as n,b as f,G as e,g as c,y as E,q as y,o as w,B as k,v as oh,L as lo}from"../../chunks/vendor-hf-doc-builder.js";import{T as Kg}from"../../chunks/Tip-hf-doc-builder.js";import{D as R}from"../../chunks/Docstring-hf-doc-builder.js";import{C as le}from"../../chunks/CodeBlock-hf-doc-builder.js";import{I as se}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{E as so}from"../../chunks/ExampleCodeBlock-hf-doc-builder.js";function ah(C){let d,x,m,p,b,i,_,ne,ie,He,H,A,G,z,gt,O,ge,he,ht,te,I,ut,W,ue,ct,ce,pe,fe,Se;return{c(){d=a("p"),x=l("HuggingFace Hub has following logging levels:"),m=g(),p=a("ul"),b=a("li"),i=a("code"),_=l("huggingface_hub.logging.CRITICAL"),ne=l(", "),ie=a("code"),He=l("huggingface_hub.logging.FATAL"),H=g(),A=a("li"),G=a("code"),z=l("huggingface_hub.logging.ERROR"),gt=g(),O=a("li"),ge=a("code"),he=l("huggingface_hub.logging.WARNING"),ht=l(", "),te=a("code"),I=l("huggingface_hub.logging.WARN"),ut=g(),W=a("li"),ue=a("code"),ct=l("huggingface_hub.logging.INFO"),ce=g(),pe=a("li"),fe=a("code"),Se=l("huggingface_hub.logging.DEBUG")},l(D){d=r(D,"P",{});var M=s(d);x=n(M,"HuggingFace Hub has following logging levels:"),M.forEach(o),m=h(D),p=r(D,"UL",{});var F=s(p);b=r(F,"LI",{});var Te=s(b);i=r(Te,"CODE",{});var pt=s(i);_=n(pt,"huggingface_hub.logging.CRITICAL"),pt.forEach(o),ne=n(Te,", "),ie=r(Te,"CODE",{});var oe=s(ie);He=n(oe,"huggingface_hub.logging.FATAL"),oe.forEach(o),Te.forEach(o),H=h(F),A=r(F,"LI",{});var ft=s(A);G=r(ft,"CODE",{});var de=s(G);z=n(de,"huggingface_hub.logging.ERROR"),de.forEach(o),ft.forEach(o),gt=h(F),O=r(F,"LI",{});var Ue=s(O);ge=r(Ue,"CODE",{});var dt=s(ge);he=n(dt,"huggingface_hub.logging.WARNING"),dt.forEach(o),ht=n(Ue,", "),te=r(Ue,"CODE",{});var L=s(te);I=n(L,"huggingface_hub.logging.WARN"),L.forEach(o),Ue.forEach(o),ut=h(F),W=r(F,"LI",{});var _e=s(W);ue=r(_e,"CODE",{});var qe=s(ue);ct=n(qe,"huggingface_hub.logging.INFO"),qe.forEach(o),_e.forEach(o),ce=h(F),pe=r(F,"LI",{});var no=s(pe);fe=r(no,"CODE",{});var io=s(fe);Se=n(io,"huggingface_hub.logging.DEBUG"),io.forEach(o),no.forEach(o),F.forEach(o)},m(D,M){c(D,d,M),e(d,x),c(D,m,M),c(D,p,M),e(p,b),e(b,i),e(i,_),e(b,ne),e(b,ie),e(ie,He),e(p,H),e(p,A),e(A,G),e(G,z),e(p,gt),e(p,O),e(O,ge),e(ge,he),e(O,ht),e(O,te),e(te,I),e(p,ut),e(p,W),e(W,ue),e(ue,ct),e(p,ce),e(p,pe),e(pe,fe),e(fe,Se)},d(D){D&&o(d),D&&o(m),D&&o(p)}}}function rh(C){let d,x,m,p,b;return p=new le({props:{code:`from huggingface_hub import get_logger

logger = get_logger(__file__)
logger.set_verbosity_info()`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> get_logger

<span class="hljs-meta">&gt;&gt;&gt; </span>logger = get_logger(__file__)
<span class="hljs-meta">&gt;&gt;&gt; </span>logger.set_verbosity_info()`}}),{c(){d=a("p"),x=l("Example Usage:"),m=g(),v(p.$$.fragment)},l(i){d=r(i,"P",{});var _=s(d);x=n(_,"Example Usage:"),_.forEach(o),m=h(i),$(p.$$.fragment,i)},m(i,_){c(i,d,_),e(d,x),c(i,m,_),E(p,i,_),b=!0},p:lo,i(i){b||(y(p.$$.fragment,i),b=!0)},o(i){w(p.$$.fragment,i),b=!1},d(i){i&&o(d),i&&o(m),k(p,i)}}}function sh(C){let d,x,m,p,b;return p=new le({props:{code:`from huggingface_hub import model_info
model_info("<non_existent_repository>")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> model_info
<span class="hljs-meta">&gt;&gt;&gt; </span>model_info(<span class="hljs-string">&quot;&lt;non_existent_repository&gt;&quot;</span>)
huggingface_hub.utils._errors.RepositoryNotFoundError: <span class="hljs-number">404</span> Client Error: Repository Not Found <span class="hljs-keyword">for</span> url: &lt;url&gt;`}}),{c(){d=a("p"),x=l("Example:"),m=g(),v(p.$$.fragment)},l(i){d=r(i,"P",{});var _=s(d);x=n(_,"Example:"),_.forEach(o),m=h(i),$(p.$$.fragment,i)},m(i,_){c(i,d,_),e(d,x),c(i,m,_),E(p,i,_),b=!0},p:lo,i(i){b||(y(p.$$.fragment,i),b=!0)},o(i){w(p.$$.fragment,i),b=!1},d(i){i&&o(d),i&&o(m),k(p,i)}}}function lh(C){let d,x,m,p,b;return p=new le({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download('bert-base-cased', 'config.json', revision='<non-existent-revision>')`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(<span class="hljs-string">&#x27;bert-base-cased&#x27;</span>, <span class="hljs-string">&#x27;config.json&#x27;</span>, revision=<span class="hljs-string">&#x27;&lt;non-existent-revision&gt;&#x27;</span>)
huggingface_hub.utils._errors.RevisionNotFoundError: <span class="hljs-number">404</span> Client Error: Revision Not Found <span class="hljs-keyword">for</span> url: &lt;url&gt;`}}),{c(){d=a("p"),x=l("Example:"),m=g(),v(p.$$.fragment)},l(i){d=r(i,"P",{});var _=s(d);x=n(_,"Example:"),_.forEach(o),m=h(i),$(p.$$.fragment,i)},m(i,_){c(i,d,_),e(d,x),c(i,m,_),E(p,i,_),b=!0},p:lo,i(i){b||(y(p.$$.fragment,i),b=!0)},o(i){w(p.$$.fragment,i),b=!1},d(i){i&&o(d),i&&o(m),k(p,i)}}}function nh(C){let d,x,m,p,b;return p=new le({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download('bert-base-cased', '<non-existent-file>')`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(<span class="hljs-string">&#x27;bert-base-cased&#x27;</span>, <span class="hljs-string">&#x27;&lt;non-existent-file&gt;&#x27;</span>)
huggingface_hub.utils._errors.EntryNotFoundError: <span class="hljs-number">404</span> Client Error: Entry Not Found <span class="hljs-keyword">for</span> url: &lt;url&gt;`}}),{c(){d=a("p"),x=l("Example:"),m=g(),v(p.$$.fragment)},l(i){d=r(i,"P",{});var _=s(d);x=n(_,"Example:"),_.forEach(o),m=h(i),$(p.$$.fragment,i)},m(i,_){c(i,d,_),e(d,x),c(i,m,_),E(p,i,_),b=!0},p:lo,i(i){b||(y(p.$$.fragment,i),b=!0)},o(i){w(p.$$.fragment,i),b=!1},d(i){i&&o(d),i&&o(m),k(p,i)}}}function ih(C){let d,x,m,p,b;return p=new le({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download('bert-base-cased', '<non-cached-file>',  local_files_only=True)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(<span class="hljs-string">&#x27;bert-base-cased&#x27;</span>, <span class="hljs-string">&#x27;&lt;non-cached-file&gt;&#x27;</span>,  local_files_only=<span class="hljs-literal">True</span>)
huggingface_hub.utils._errors.LocalEntryNotFoundError: Cannot find the requested files <span class="hljs-keyword">in</span> the disk cache <span class="hljs-keyword">and</span> outgoing traffic has been disabled. To enable hf.co look-ups <span class="hljs-keyword">and</span> downloads online, <span class="hljs-built_in">set</span> <span class="hljs-string">&#x27;local_files_only&#x27;</span> to <span class="hljs-literal">False</span>.`}}),{c(){d=a("p"),x=l("Example:"),m=g(),v(p.$$.fragment)},l(i){d=r(i,"P",{});var _=s(d);x=n(_,"Example:"),_.forEach(o),m=h(i),$(p.$$.fragment,i)},m(i,_){c(i,d,_),e(d,x),c(i,m,_),E(p,i,_),b=!0},p:lo,i(i){b||(y(p.$$.fragment,i),b=!0)},o(i){w(p.$$.fragment,i),b=!1},d(i){i&&o(d),i&&o(m),k(p,i)}}}function gh(C){let d,x,m,p,b;return p=new le({props:{code:`from huggingface_hub.utils import validate_hf_hub_args

@validate_hf_hub_args
def my_cool_method(repo_id: str):
    print(repo_id)

my_cool_method(repo_id="valid_repo_id")

my_cool_method("other..repo..id")

my_cool_method(repo_id="other..repo..id")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> validate_hf_hub_args

<span class="hljs-meta">&gt;&gt;&gt; </span>@validate_hf_hub_args
<span class="hljs-meta">... </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_cool_method</span>(<span class="hljs-params">repo_id: <span class="hljs-built_in">str</span></span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(repo_id)

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;valid_repo_id&quot;</span>)
valid_repo_id

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.`}}),{c(){d=a("p"),x=l("Example:"),m=g(),v(p.$$.fragment)},l(i){d=r(i,"P",{});var _=s(d);x=n(_,"Example:"),_.forEach(o),m=h(i),$(p.$$.fragment,i)},m(i,_){c(i,d,_),e(d,x),c(i,m,_),E(p,i,_),b=!0},p:lo,i(i){b||(y(p.$$.fragment,i),b=!0)},o(i){w(p.$$.fragment,i),b=!1},d(i){i&&o(d),i&&o(m),k(p,i)}}}function hh(C){let d,x,m,p,b;return p=new le({props:{code:`from huggingface_hub.utils import validate_repo_id
validate_repo_id(repo_id="valid_repo_id")
validate_repo_id(repo_id="other..repo..id")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> validate_repo_id
<span class="hljs-meta">&gt;&gt;&gt; </span>validate_repo_id(repo_id=<span class="hljs-string">&quot;valid_repo_id&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>validate_repo_id(repo_id=<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.`}}),{c(){d=a("p"),x=l("Example:"),m=g(),v(p.$$.fragment)},l(i){d=r(i,"P",{});var _=s(d);x=n(_,"Example:"),_.forEach(o),m=h(i),$(p.$$.fragment,i)},m(i,_){c(i,d,_),e(d,x),c(i,m,_),E(p,i,_),b=!0},p:lo,i(i){b||(y(p.$$.fragment,i),b=!0)},o(i){w(p.$$.fragment,i),b=!1},d(i){i&&o(d),i&&o(m),k(p,i)}}}function uh(C){let d,x,m,p,b,i,_,ne,ie,He,H,A,G,z,gt,O,ge,he,ht,te,I,ut,W,ue,ct,ce,pe,fe,Se,D,M,F,Te,pt,oe,ft,de,Ue,dt,L,_e,qe,no,io,ts,go,Po,os,as,rs,ho,Co,ss,ls,ns,uo,Fo,is,gs,Ja,Y,_t,hs,Ro,us,cs,Be,Ka,me,mt,ps,Lo,fs,Qa,be,bt,ds,vt,_s,Ao,ms,bs,Xa,ve,$t,vs,Et,$s,Oo,Es,ys,er,$e,yt,ws,wt,ks,Io,xs,js,tr,Ee,kt,Ns,xt,Ds,Vo,Ps,Cs,or,ye,jt,Fs,Ho,Rs,ar,we,Nt,Ls,So,As,rr,ke,Ge,To,Dt,Os,Uo,Is,sr,ae,Vs,qo,Hs,Ss,Bo,Ts,Us,lr,Z,Pt,qs,Go,Bs,Gs,ze,nr,xe,We,zo,Ct,zs,Wo,Ws,ir,co,Ms,gr,J,Ft,Ys,Mo,Zs,Js,Me,hr,K,Rt,Ks,Yo,Qs,Xs,Ye,ur,Q,Lt,el,Zo,tl,ol,Ze,cr,S,At,al,Jo,rl,sl,T,ll,Ko,nl,il,Qo,gl,hl,Xo,ul,cl,ea,pl,fl,dl,Je,pr,je,Ke,ta,Ot,_l,oa,ml,fr,Ne,aa,bl,vl,It,$l,El,dr,De,Qe,ra,Vt,yl,sa,wl,_r,Pe,po,kl,xl,la,jl,Nl,mr,Xe,Dl,fo,Pl,Cl,br,_o,Fl,vr,Ht,$r,Ce,et,na,St,Rl,ia,Ll,Er,P,Tt,Al,Ut,Ol,ga,Il,Vl,Hl,ha,Sl,Tl,ua,Ul,ql,ca,U,mo,Bl,Gl,pa,zl,Wl,fa,Ml,Yl,da,Zl,Jl,Kl,tt,Ql,qt,yr,Fe,ot,_a,Bt,Xl,ma,en,wr,X,Gt,tn,zt,on,ba,an,rn,sn,Wt,ln,Mt,va,nn,gn,kr,Re,at,$a,Yt,hn,Ea,un,xr,bo,cn,jr,Le,rt,ya,Zt,pn,wa,ka,fn,Nr,j,Jt,dn,Kt,_n,xa,mn,bn,vn,Ae,$n,ja,En,yn,Na,wn,kn,xn,Da,jn,Nn,ee,Pa,Dn,Pn,Ca,Cn,Fn,Fa,Rn,Ln,Ra,An,On,q,In,La,Vn,Hn,Aa,Sn,Tn,Oa,Un,qn,Ia,Bn,Gn,B,zn,Va,Wn,Mn,Ha,Yn,Zn,Sa,Jn,Kn,Ta,Qn,Xn,st,ei,Qt,ti,Xt,oi,ai,ri,eo,Ua,to,si,li,qa,oo,ni,Dr;return i=new se({}),z=new se({}),D=new le({props:{code:"from huggingface_hub import logging",highlighted:'<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> logging'}}),oe=new le({props:{code:`from huggingface_hub import logging

logging.set_verbosity_error()
logging.set_verbosity_warning()
logging.set_verbosity_info()
logging.set_verbosity_debug()

logging.set_verbosity(...)`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> logging

logging.set_verbosity_error()
logging.set_verbosity_warning()
logging.set_verbosity_info()
logging.set_verbosity_debug()

logging.set_verbosity(...)`}}),_t=new R({props:{name:"huggingface_hub.utils.logging.get_verbosity",anchor:"huggingface_hub.utils.logging.get_verbosity",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L103",returnDescription:`
<p>Logging level, e.g., <code>huggingface_hub.logging.DEBUG</code> and
<code>huggingface_hub.logging.INFO</code>.</p>
`}}),Be=new Kg({props:{$$slots:{default:[ah]},$$scope:{ctx:C}}}),mt=new R({props:{name:"huggingface_hub.utils.logging.set_verbosity",anchor:"huggingface_hub.utils.logging.set_verbosity",parameters:[{name:"verbosity",val:": int"}],parametersDescription:[{anchor:"huggingface_hub.utils.logging.set_verbosity.verbosity",description:`<strong>verbosity</strong> (<code>int</code>) &#x2014;
Logging level, e.g., <code>huggingface_hub.logging.DEBUG</code> and
<code>huggingface_hub.logging.INFO</code>.`,name:"verbosity"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L125"}}),bt=new R({props:{name:"huggingface_hub.utils.logging.set_verbosity_info",anchor:"huggingface_hub.utils.logging.set_verbosity_info",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L137"}}),$t=new R({props:{name:"huggingface_hub.utils.logging.set_verbosity_debug",anchor:"huggingface_hub.utils.logging.set_verbosity_debug",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L151"}}),yt=new R({props:{name:"huggingface_hub.utils.logging.set_verbosity_warning",anchor:"huggingface_hub.utils.logging.set_verbosity_warning",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L144"}}),kt=new R({props:{name:"huggingface_hub.utils.logging.set_verbosity_error",anchor:"huggingface_hub.utils.logging.set_verbosity_error",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L158"}}),jt=new R({props:{name:"huggingface_hub.utils.logging.disable_propagation",anchor:"huggingface_hub.utils.logging.disable_propagation",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L165"}}),Nt=new R({props:{name:"huggingface_hub.utils.logging.enable_propagation",anchor:"huggingface_hub.utils.logging.enable_propagation",parameters:[],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L173"}}),Dt=new se({}),Pt=new R({props:{name:"huggingface_hub.utils.logging.get_logger",anchor:"huggingface_hub.utils.logging.get_logger",parameters:[{name:"name",val:": typing.Optional[str] = None"}],parametersDescription:[{anchor:"huggingface_hub.utils.logging.get_logger.name",description:`<strong>name</strong> (<code>str</code>, <em>optional</em>) &#x2014;
The name of the logger to get, usually the filename`,name:"name"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/logging.py#L78"}}),ze=new so({props:{anchor:"huggingface_hub.utils.logging.get_logger.example",$$slots:{default:[rh]},$$scope:{ctx:C}}}),Ct=new se({}),Ft=new R({props:{name:"class huggingface_hub.utils.RepositoryNotFoundError",anchor:"huggingface_hub.utils.RepositoryNotFoundError",parameters:[{name:"message",val:""},{name:"response",val:""}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L6"}}),Me=new so({props:{anchor:"huggingface_hub.utils.RepositoryNotFoundError.example",$$slots:{default:[sh]},$$scope:{ctx:C}}}),Rt=new R({props:{name:"class huggingface_hub.utils.RevisionNotFoundError",anchor:"huggingface_hub.utils.RevisionNotFoundError",parameters:[{name:"message",val:""},{name:"response",val:""}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L24"}}),Ye=new so({props:{anchor:"huggingface_hub.utils.RevisionNotFoundError.example",$$slots:{default:[lh]},$$scope:{ctx:C}}}),Lt=new R({props:{name:"class huggingface_hub.utils.EntryNotFoundError",anchor:"huggingface_hub.utils.EntryNotFoundError",parameters:[{name:"message",val:""},{name:"response",val:""}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L42"}}),Ze=new so({props:{anchor:"huggingface_hub.utils.EntryNotFoundError.example",$$slots:{default:[nh]},$$scope:{ctx:C}}}),At=new R({props:{name:"class huggingface_hub.utils.LocalEntryNotFoundError",anchor:"huggingface_hub.utils.LocalEntryNotFoundError",parameters:[{name:"message",val:""}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_errors.py#L60"}}),Je=new so({props:{anchor:"huggingface_hub.utils.LocalEntryNotFoundError.example",$$slots:{default:[ih]},$$scope:{ctx:C}}}),Ot=new se({}),Vt=new se({}),Ht=new le({props:{code:`from huggingface_hub.utils import validate_hf_hub_args

@validate_hf_hub_args
def my_cool_method(repo_id: str):
    print(repo_id)

my_cool_method(repo_id="valid_repo_id")

my_cool_method("other..repo..id")

my_cool_method(repo_id="other..repo..id")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub.utils <span class="hljs-keyword">import</span> validate_hf_hub_args

<span class="hljs-meta">&gt;&gt;&gt; </span>@validate_hf_hub_args
<span class="hljs-meta">... </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_cool_method</span>(<span class="hljs-params">repo_id: <span class="hljs-built_in">str</span></span>):
<span class="hljs-meta">... </span>    <span class="hljs-built_in">print</span>(repo_id)

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;valid_repo_id&quot;</span>)
valid_repo_id

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.

<span class="hljs-meta">&gt;&gt;&gt; </span>my_cool_method(repo_id=<span class="hljs-string">&quot;other..repo..id&quot;</span>)
huggingface_hub.utils._validators.HFValidationError: Cannot have -- <span class="hljs-keyword">or</span> .. <span class="hljs-keyword">in</span> repo_id: <span class="hljs-string">&#x27;other..repo..id&#x27;</span>.`}}),St=new se({}),Tt=new R({props:{name:"huggingface_hub.utils.validate_hf_hub_args",anchor:"huggingface_hub.utils.validate_hf_hub_args",parameters:[{name:"fn",val:": typing.Callable"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_validators.py#L43"}}),tt=new so({props:{anchor:"huggingface_hub.utils.validate_hf_hub_args.example",$$slots:{default:[gh]},$$scope:{ctx:C}}}),qt=new Kg({props:{warning:!0}}),Bt=new se({}),Gt=new R({props:{name:"class huggingface_hub.utils.HFValidationError",anchor:"huggingface_hub.utils.HFValidationError",parameters:"",source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_validators.py#L36"}}),Yt=new se({}),Zt=new se({}),Jt=new R({props:{name:"huggingface_hub.utils.validate_repo_id",anchor:"huggingface_hub.utils.validate_repo_id",parameters:[{name:"repo_id",val:": str"}],source:"https://github.com/huggingface/huggingface_hub/blob/main/src/huggingface_hub/utils/_validators.py#L95"}}),st=new so({props:{anchor:"huggingface_hub.utils.validate_repo_id.example",$$slots:{default:[hh]},$$scope:{ctx:C}}}),{c(){d=a("meta"),x=g(),m=a("h1"),p=a("a"),b=a("span"),v(i.$$.fragment),_=g(),ne=a("span"),ie=l("Utilities"),He=g(),H=a("h2"),A=a("a"),G=a("span"),v(z.$$.fragment),gt=g(),O=a("span"),ge=l("Controlling the logging of "),he=a("code"),ht=l("huggingface_hub"),te=g(),I=a("p"),ut=l("The "),W=a("code"),ue=l("huggingface_hub"),ct=l(" package exposes a "),ce=a("code"),pe=l("logging"),fe=l(` utility to control the logging level of the package itself.
You can import it as such:`),Se=g(),v(D.$$.fragment),M=g(),F=a("p"),Te=l("Then, you may define the verbosity in order to update the amount of logs you\u2019ll see:"),pt=g(),v(oe.$$.fragment),ft=g(),de=a("p"),Ue=l("The levels should be understood as follows:"),dt=g(),L=a("ul"),_e=a("li"),qe=a("code"),no=l("error"),io=l(": only show critical logs about usage which may result in an error or unexpected behavior."),ts=g(),go=a("li"),Po=a("code"),os=l("warning"),as=l(`: show logs that aren\u2019t critical but usage may result in unintended behavior.
Additionally, important informative logs may be shown.`),rs=g(),ho=a("li"),Co=a("code"),ss=l("info"),ls=l(`: show most logs, including some verbose logging regarding what is happening under the hood.
If something is behaving in an unexpected manner, we recommend switching the verbosity level to this in order
to get more information.`),ns=g(),uo=a("li"),Fo=a("code"),is=l("debug"),gs=l(`: show all logs, including some internal logs which may be used to track exactly what\u2019s happening
under the hood.`),Ja=g(),Y=a("div"),v(_t.$$.fragment),hs=g(),Ro=a("p"),us=l("Return the current level for the HuggingFace Hub\u2019s root logger."),cs=g(),v(Be.$$.fragment),Ka=g(),me=a("div"),v(mt.$$.fragment),ps=g(),Lo=a("p"),fs=l("Sets the level for the HuggingFace Hub\u2019s root logger."),Qa=g(),be=a("div"),v(bt.$$.fragment),ds=g(),vt=a("p"),_s=l("Sets the verbosity to "),Ao=a("code"),ms=l("logging.INFO"),bs=l("."),Xa=g(),ve=a("div"),v($t.$$.fragment),vs=g(),Et=a("p"),$s=l("Sets the verbosity to "),Oo=a("code"),Es=l("logging.DEBUG"),ys=l("."),er=g(),$e=a("div"),v(yt.$$.fragment),ws=g(),wt=a("p"),ks=l("Sets the verbosity to "),Io=a("code"),xs=l("logging.WARNING"),js=l("."),tr=g(),Ee=a("div"),v(kt.$$.fragment),Ns=g(),xt=a("p"),Ds=l("Sets the verbosity to "),Vo=a("code"),Ps=l("logging.ERROR"),Cs=l("."),or=g(),ye=a("div"),v(jt.$$.fragment),Fs=g(),Ho=a("p"),Rs=l(`Disable propagation of the library log outputs. Note that log propagation is
disabled by default.`),ar=g(),we=a("div"),v(Nt.$$.fragment),Ls=g(),So=a("p"),As=l(`Enable propagation of the library log outputs. Please disable the
HuggingFace Hub\u2019s default handler to prevent double logging if the root
logger has been configured.`),rr=g(),ke=a("h3"),Ge=a("a"),To=a("span"),v(Dt.$$.fragment),Os=g(),Uo=a("span"),Is=l("Repo-specific helper methods"),sr=g(),ae=a("p"),Vs=l("The methods exposed below are relevant when modifying modules from the "),qo=a("code"),Hs=l("huggingface_hub"),Ss=l(` library itself.
Using these shouldn\u2019t be necessary if you use `),Bo=a("code"),Ts=l("huggingface_hub"),Us=l(" and you don\u2019t modify them."),lr=g(),Z=a("div"),v(Pt.$$.fragment),qs=g(),Go=a("p"),Bs=l(`Returns a logger with the specified name. This function is not supposed
to be directly accessed by library users.`),Gs=g(),v(ze.$$.fragment),nr=g(),xe=a("h2"),We=a("a"),zo=a("span"),v(Ct.$$.fragment),zs=g(),Wo=a("span"),Ws=l("Custom errors"),ir=g(),co=a("p"),Ms=l("See below for all custom errors thrown by different methods across the package."),gr=g(),J=a("div"),v(Ft.$$.fragment),Ys=g(),Mo=a("p"),Zs=l(`Raised when trying to access a hf.co URL with an invalid repository name, or
with a private repo name the user does not have access to.`),Js=g(),v(Me.$$.fragment),hr=g(),K=a("div"),v(Rt.$$.fragment),Ks=g(),Yo=a("p"),Qs=l(`Raised when trying to access a hf.co URL with a valid repository but an invalid
revision.`),Xs=g(),v(Ye.$$.fragment),ur=g(),Q=a("div"),v(Lt.$$.fragment),el=g(),Zo=a("p"),tl=l(`Raised when trying to access a hf.co URL with a valid repository and revision
but an invalid filename.`),ol=g(),v(Ze.$$.fragment),cr=g(),S=a("div"),v(At.$$.fragment),al=g(),Jo=a("p"),rl=l(`Raised when trying to access a file that is not on the disk when network is
disabled or unavailable (connection issue). The entry may exist on the Hub.`),sl=g(),T=a("p"),ll=l("Note: "),Ko=a("code"),nl=l("ValueError"),il=l(` type is to ensure backward compatibility.
Note: `),Qo=a("code"),gl=l("LocalEntryNotFoundError"),hl=l(" derives from "),Xo=a("code"),ul=l("HTTPError"),cl=l(" because of "),ea=a("code"),pl=l("EntryNotFoundError"),fl=l(`
even when it is not a network issue.`),dl=g(),v(Je.$$.fragment),pr=g(),je=a("h2"),Ke=a("a"),ta=a("span"),v(Ot.$$.fragment),_l=g(),oa=a("span"),ml=l("Validators"),fr=g(),Ne=a("p"),aa=a("code"),bl=l("huggingface_hub"),vl=l(` include custom validators to validate method arguments automatically.
Validation is inspired by the work done in `),It=a("a"),$l=l("Pydantic"),El=l(`
to validate type hints but with more limited features.`),dr=g(),De=a("h3"),Qe=a("a"),ra=a("span"),v(Vt.$$.fragment),yl=g(),sa=a("span"),wl=l("Generic decorator"),_r=g(),Pe=a("p"),po=a("a"),kl=l("validate_hf_hub_args()"),xl=l(` is a generic decorator to encapsulate
methods that have arguments following `),la=a("code"),jl=l("huggingface_hub"),Nl=l(`\u2019s naming. By default, all
arguments that has a validator implemented will be validated.`),mr=g(),Xe=a("p"),Dl=l("If an input is not valid, a "),fo=a("a"),Pl=l("HFValidationError"),Cl=l(` is thrown. Only
the first non-valid value throws an error and stops the validation process.`),br=g(),_o=a("p"),Fl=l("Usage:"),vr=g(),v(Ht.$$.fragment),$r=g(),Ce=a("h4"),et=a("a"),na=a("span"),v(St.$$.fragment),Rl=g(),ia=a("span"),Ll=l("validate_hf_hub_args"),Er=g(),P=a("div"),v(Tt.$$.fragment),Al=g(),Ut=a("p"),Ol=l("Validate values received as argument for any public method of "),ga=a("code"),Il=l("huggingface_hub"),Vl=l("."),Hl=g(),ha=a("p"),Sl=l(`The goal of this decorator is to harmonize validation of arguments reused
everywhere. By default, all defined validators are tested.`),Tl=g(),ua=a("p"),Ul=l("Validators:"),ql=g(),ca=a("ul"),U=a("li"),mo=a("a"),Bl=l("validate_repo_id()"),Gl=l(": "),pa=a("code"),zl=l("repo_id"),Wl=l(" must be "),fa=a("code"),Ml=l('"repo_name"'),Yl=l(`
or `),da=a("code"),Zl=l('"namespace/repo_name"'),Jl=l(". Namespace is a username or an organization."),Kl=g(),v(tt.$$.fragment),Ql=g(),v(qt.$$.fragment),yr=g(),Fe=a("h4"),ot=a("a"),_a=a("span"),v(Bt.$$.fragment),Xl=g(),ma=a("span"),en=l("HFValidationError"),wr=g(),X=a("div"),v(Gt.$$.fragment),tn=g(),zt=a("p"),on=l("Generic exception thrown by "),ba=a("code"),an=l("huggingface_hub"),rn=l(" validators."),sn=g(),Wt=a("p"),ln=l("Inherits from "),Mt=a("a"),va=a("code"),nn=l("ValueError"),gn=l("."),kr=g(),Re=a("h3"),at=a("a"),$a=a("span"),v(Yt.$$.fragment),hn=g(),Ea=a("span"),un=l("Argument validators"),xr=g(),bo=a("p"),cn=l(`Validators can also be used individually. Here is a list of all arguments that can be
validated.`),jr=g(),Le=a("h4"),rt=a("a"),ya=a("span"),v(Zt.$$.fragment),pn=g(),wa=a("span"),ka=a("code"),fn=l("repo_id"),Nr=g(),j=a("div"),v(Jt.$$.fragment),dn=g(),Kt=a("p"),_n=l("Validate "),xa=a("code"),mn=l("repo_id"),bn=l(" is valid."),vn=g(),Ae=a("p"),$n=l(`This is not meant to replace the proper validation made on the Hub but rather to
avoid local inconsistencies whenever possible (example: passing `),ja=a("code"),En=l("repo_type"),yn=l(` in the
`),Na=a("code"),wn=l("repo_id"),kn=l(" is forbidden)."),xn=g(),Da=a("p"),jn=l("Rules:"),Nn=g(),ee=a("ul"),Pa=a("li"),Dn=l("Between 1 and 96 characters."),Pn=g(),Ca=a("li"),Cn=l("Either \u201Crepo_name\u201D or \u201Cnamespace/repo_name\u201D"),Fn=g(),Fa=a("li"),Rn=l("[a-zA-Z0-9] or \u201D-\u201D, \u201D_\u201D, \u201D.\u201D"),Ln=g(),Ra=a("li"),An=l("\u201D\u2014\u201D and \u201D..\u201D are forbidden"),On=g(),q=a("p"),In=l("Valid: "),La=a("code"),Vn=l('"foo"'),Hn=l(", "),Aa=a("code"),Sn=l('"foo/bar"'),Tn=l(", "),Oa=a("code"),Un=l('"123"'),qn=l(", "),Ia=a("code"),Bn=l('"Foo-BAR_foo.bar123"'),Gn=g(),B=a("p"),zn=l("Not valid: "),Va=a("code"),Wn=l('"datasets/foo/bar"'),Mn=l(", "),Ha=a("code"),Yn=l('".repo_id"'),Zn=l(", "),Sa=a("code"),Jn=l('"foo--bar"'),Kn=l(", "),Ta=a("code"),Qn=l('"foo.git"'),Xn=g(),v(st.$$.fragment),ei=g(),Qt=a("p"),ti=l("Discussed in "),Xt=a("a"),oi=l("https://github.com/huggingface/huggingface_hub/issues/1008"),ai=l(`.
In moon-landing (internal repository):`),ri=g(),eo=a("ul"),Ua=a("li"),to=a("a"),si=l("https://github.com/huggingface/moon-landing/blob/main/server/lib/Names.ts#L27"),li=g(),qa=a("li"),oo=a("a"),ni=l("https://github.com/huggingface/moon-landing/blob/main/server/views/components/NewRepoForm/NewRepoForm.svelte#L138"),this.h()},l(t){const u=th('[data-svelte="svelte-1phssyn"]',document.head);d=r(u,"META",{name:!0,content:!0}),u.forEach(o),x=h(t),m=r(t,"H1",{class:!0});var ao=s(m);p=r(ao,"A",{id:!0,class:!0,href:!0});var Ba=s(p);b=r(Ba,"SPAN",{});var Ga=s(b);$(i.$$.fragment,Ga),Ga.forEach(o),Ba.forEach(o),_=h(ao),ne=r(ao,"SPAN",{});var za=s(ne);ie=n(za,"Utilities"),za.forEach(o),ao.forEach(o),He=h(t),H=r(t,"H2",{class:!0});var ro=s(H);A=r(ro,"A",{id:!0,class:!0,href:!0});var Wa=s(A);G=r(Wa,"SPAN",{});var Ma=s(G);$(z.$$.fragment,Ma),Ma.forEach(o),Wa.forEach(o),gt=h(ro),O=r(ro,"SPAN",{});var vo=s(O);ge=n(vo,"Controlling the logging of "),he=r(vo,"CODE",{});var ci=s(he);ht=n(ci,"huggingface_hub"),ci.forEach(o),vo.forEach(o),ro.forEach(o),te=h(t),I=r(t,"P",{});var $o=s(I);ut=n($o,"The "),W=r($o,"CODE",{});var pi=s(W);ue=n(pi,"huggingface_hub"),pi.forEach(o),ct=n($o," package exposes a "),ce=r($o,"CODE",{});var fi=s(ce);pe=n(fi,"logging"),fi.forEach(o),fe=n($o,` utility to control the logging level of the package itself.
You can import it as such:`),$o.forEach(o),Se=h(t),$(D.$$.fragment,t),M=h(t),F=r(t,"P",{});var di=s(F);Te=n(di,"Then, you may define the verbosity in order to update the amount of logs you\u2019ll see:"),di.forEach(o),pt=h(t),$(oe.$$.fragment,t),ft=h(t),de=r(t,"P",{});var _i=s(de);Ue=n(_i,"The levels should be understood as follows:"),_i.forEach(o),dt=h(t),L=r(t,"UL",{});var lt=s(L);_e=r(lt,"LI",{});var ii=s(_e);qe=r(ii,"CODE",{});var mi=s(qe);no=n(mi,"error"),mi.forEach(o),io=n(ii,": only show critical logs about usage which may result in an error or unexpected behavior."),ii.forEach(o),ts=h(lt),go=r(lt,"LI",{});var gi=s(go);Po=r(gi,"CODE",{});var bi=s(Po);os=n(bi,"warning"),bi.forEach(o),as=n(gi,`: show logs that aren\u2019t critical but usage may result in unintended behavior.
Additionally, important informative logs may be shown.`),gi.forEach(o),rs=h(lt),ho=r(lt,"LI",{});var hi=s(ho);Co=r(hi,"CODE",{});var vi=s(Co);ss=n(vi,"info"),vi.forEach(o),ls=n(hi,`: show most logs, including some verbose logging regarding what is happening under the hood.
If something is behaving in an unexpected manner, we recommend switching the verbosity level to this in order
to get more information.`),hi.forEach(o),ns=h(lt),uo=r(lt,"LI",{});var ui=s(uo);Fo=r(ui,"CODE",{});var $i=s(Fo);is=n($i,"debug"),$i.forEach(o),gs=n(ui,`: show all logs, including some internal logs which may be used to track exactly what\u2019s happening
under the hood.`),ui.forEach(o),lt.forEach(o),Ja=h(t),Y=r(t,"DIV",{class:!0});var Eo=s(Y);$(_t.$$.fragment,Eo),hs=h(Eo),Ro=r(Eo,"P",{});var Ei=s(Ro);us=n(Ei,"Return the current level for the HuggingFace Hub\u2019s root logger."),Ei.forEach(o),cs=h(Eo),$(Be.$$.fragment,Eo),Eo.forEach(o),Ka=h(t),me=r(t,"DIV",{class:!0});var Pr=s(me);$(mt.$$.fragment,Pr),ps=h(Pr),Lo=r(Pr,"P",{});var yi=s(Lo);fs=n(yi,"Sets the level for the HuggingFace Hub\u2019s root logger."),yi.forEach(o),Pr.forEach(o),Qa=h(t),be=r(t,"DIV",{class:!0});var Cr=s(be);$(bt.$$.fragment,Cr),ds=h(Cr),vt=r(Cr,"P",{});var Fr=s(vt);_s=n(Fr,"Sets the verbosity to "),Ao=r(Fr,"CODE",{});var wi=s(Ao);ms=n(wi,"logging.INFO"),wi.forEach(o),bs=n(Fr,"."),Fr.forEach(o),Cr.forEach(o),Xa=h(t),ve=r(t,"DIV",{class:!0});var Rr=s(ve);$($t.$$.fragment,Rr),vs=h(Rr),Et=r(Rr,"P",{});var Lr=s(Et);$s=n(Lr,"Sets the verbosity to "),Oo=r(Lr,"CODE",{});var ki=s(Oo);Es=n(ki,"logging.DEBUG"),ki.forEach(o),ys=n(Lr,"."),Lr.forEach(o),Rr.forEach(o),er=h(t),$e=r(t,"DIV",{class:!0});var Ar=s($e);$(yt.$$.fragment,Ar),ws=h(Ar),wt=r(Ar,"P",{});var Or=s(wt);ks=n(Or,"Sets the verbosity to "),Io=r(Or,"CODE",{});var xi=s(Io);xs=n(xi,"logging.WARNING"),xi.forEach(o),js=n(Or,"."),Or.forEach(o),Ar.forEach(o),tr=h(t),Ee=r(t,"DIV",{class:!0});var Ir=s(Ee);$(kt.$$.fragment,Ir),Ns=h(Ir),xt=r(Ir,"P",{});var Vr=s(xt);Ds=n(Vr,"Sets the verbosity to "),Vo=r(Vr,"CODE",{});var ji=s(Vo);Ps=n(ji,"logging.ERROR"),ji.forEach(o),Cs=n(Vr,"."),Vr.forEach(o),Ir.forEach(o),or=h(t),ye=r(t,"DIV",{class:!0});var Hr=s(ye);$(jt.$$.fragment,Hr),Fs=h(Hr),Ho=r(Hr,"P",{});var Ni=s(Ho);Rs=n(Ni,`Disable propagation of the library log outputs. Note that log propagation is
disabled by default.`),Ni.forEach(o),Hr.forEach(o),ar=h(t),we=r(t,"DIV",{class:!0});var Sr=s(we);$(Nt.$$.fragment,Sr),Ls=h(Sr),So=r(Sr,"P",{});var Di=s(So);As=n(Di,`Enable propagation of the library log outputs. Please disable the
HuggingFace Hub\u2019s default handler to prevent double logging if the root
logger has been configured.`),Di.forEach(o),Sr.forEach(o),rr=h(t),ke=r(t,"H3",{class:!0});var Tr=s(ke);Ge=r(Tr,"A",{id:!0,class:!0,href:!0});var Pi=s(Ge);To=r(Pi,"SPAN",{});var Ci=s(To);$(Dt.$$.fragment,Ci),Ci.forEach(o),Pi.forEach(o),Os=h(Tr),Uo=r(Tr,"SPAN",{});var Fi=s(Uo);Is=n(Fi,"Repo-specific helper methods"),Fi.forEach(o),Tr.forEach(o),sr=h(t),ae=r(t,"P",{});var yo=s(ae);Vs=n(yo,"The methods exposed below are relevant when modifying modules from the "),qo=r(yo,"CODE",{});var Ri=s(qo);Hs=n(Ri,"huggingface_hub"),Ri.forEach(o),Ss=n(yo,` library itself.
Using these shouldn\u2019t be necessary if you use `),Bo=r(yo,"CODE",{});var Li=s(Bo);Ts=n(Li,"huggingface_hub"),Li.forEach(o),Us=n(yo," and you don\u2019t modify them."),yo.forEach(o),lr=h(t),Z=r(t,"DIV",{class:!0});var wo=s(Z);$(Pt.$$.fragment,wo),qs=h(wo),Go=r(wo,"P",{});var Ai=s(Go);Bs=n(Ai,`Returns a logger with the specified name. This function is not supposed
to be directly accessed by library users.`),Ai.forEach(o),Gs=h(wo),$(ze.$$.fragment,wo),wo.forEach(o),nr=h(t),xe=r(t,"H2",{class:!0});var Ur=s(xe);We=r(Ur,"A",{id:!0,class:!0,href:!0});var Oi=s(We);zo=r(Oi,"SPAN",{});var Ii=s(zo);$(Ct.$$.fragment,Ii),Ii.forEach(o),Oi.forEach(o),zs=h(Ur),Wo=r(Ur,"SPAN",{});var Vi=s(Wo);Ws=n(Vi,"Custom errors"),Vi.forEach(o),Ur.forEach(o),ir=h(t),co=r(t,"P",{});var Hi=s(co);Ms=n(Hi,"See below for all custom errors thrown by different methods across the package."),Hi.forEach(o),gr=h(t),J=r(t,"DIV",{class:!0});var ko=s(J);$(Ft.$$.fragment,ko),Ys=h(ko),Mo=r(ko,"P",{});var Si=s(Mo);Zs=n(Si,`Raised when trying to access a hf.co URL with an invalid repository name, or
with a private repo name the user does not have access to.`),Si.forEach(o),Js=h(ko),$(Me.$$.fragment,ko),ko.forEach(o),hr=h(t),K=r(t,"DIV",{class:!0});var xo=s(K);$(Rt.$$.fragment,xo),Ks=h(xo),Yo=r(xo,"P",{});var Ti=s(Yo);Qs=n(Ti,`Raised when trying to access a hf.co URL with a valid repository but an invalid
revision.`),Ti.forEach(o),Xs=h(xo),$(Ye.$$.fragment,xo),xo.forEach(o),ur=h(t),Q=r(t,"DIV",{class:!0});var jo=s(Q);$(Lt.$$.fragment,jo),el=h(jo),Zo=r(jo,"P",{});var Ui=s(Zo);tl=n(Ui,`Raised when trying to access a hf.co URL with a valid repository and revision
but an invalid filename.`),Ui.forEach(o),ol=h(jo),$(Ze.$$.fragment,jo),jo.forEach(o),cr=h(t),S=r(t,"DIV",{class:!0});var nt=s(S);$(At.$$.fragment,nt),al=h(nt),Jo=r(nt,"P",{});var qi=s(Jo);rl=n(qi,`Raised when trying to access a file that is not on the disk when network is
disabled or unavailable (connection issue). The entry may exist on the Hub.`),qi.forEach(o),sl=h(nt),T=r(nt,"P",{});var re=s(T);ll=n(re,"Note: "),Ko=r(re,"CODE",{});var Bi=s(Ko);nl=n(Bi,"ValueError"),Bi.forEach(o),il=n(re,` type is to ensure backward compatibility.
Note: `),Qo=r(re,"CODE",{});var Gi=s(Qo);gl=n(Gi,"LocalEntryNotFoundError"),Gi.forEach(o),hl=n(re," derives from "),Xo=r(re,"CODE",{});var zi=s(Xo);ul=n(zi,"HTTPError"),zi.forEach(o),cl=n(re," because of "),ea=r(re,"CODE",{});var Wi=s(ea);pl=n(Wi,"EntryNotFoundError"),Wi.forEach(o),fl=n(re,`
even when it is not a network issue.`),re.forEach(o),dl=h(nt),$(Je.$$.fragment,nt),nt.forEach(o),pr=h(t),je=r(t,"H2",{class:!0});var qr=s(je);Ke=r(qr,"A",{id:!0,class:!0,href:!0});var Mi=s(Ke);ta=r(Mi,"SPAN",{});var Yi=s(ta);$(Ot.$$.fragment,Yi),Yi.forEach(o),Mi.forEach(o),_l=h(qr),oa=r(qr,"SPAN",{});var Zi=s(oa);ml=n(Zi,"Validators"),Zi.forEach(o),qr.forEach(o),fr=h(t),Ne=r(t,"P",{});var Ya=s(Ne);aa=r(Ya,"CODE",{});var Ji=s(aa);bl=n(Ji,"huggingface_hub"),Ji.forEach(o),vl=n(Ya,` include custom validators to validate method arguments automatically.
Validation is inspired by the work done in `),It=r(Ya,"A",{href:!0,rel:!0});var Ki=s(It);$l=n(Ki,"Pydantic"),Ki.forEach(o),El=n(Ya,`
to validate type hints but with more limited features.`),Ya.forEach(o),dr=h(t),De=r(t,"H3",{class:!0});var Br=s(De);Qe=r(Br,"A",{id:!0,class:!0,href:!0});var Qi=s(Qe);ra=r(Qi,"SPAN",{});var Xi=s(ra);$(Vt.$$.fragment,Xi),Xi.forEach(o),Qi.forEach(o),yl=h(Br),sa=r(Br,"SPAN",{});var eg=s(sa);wl=n(eg,"Generic decorator"),eg.forEach(o),Br.forEach(o),_r=h(t),Pe=r(t,"P",{});var Za=s(Pe);po=r(Za,"A",{href:!0});var tg=s(po);kl=n(tg,"validate_hf_hub_args()"),tg.forEach(o),xl=n(Za,` is a generic decorator to encapsulate
methods that have arguments following `),la=r(Za,"CODE",{});var og=s(la);jl=n(og,"huggingface_hub"),og.forEach(o),Nl=n(Za,`\u2019s naming. By default, all
arguments that has a validator implemented will be validated.`),Za.forEach(o),mr=h(t),Xe=r(t,"P",{});var Gr=s(Xe);Dl=n(Gr,"If an input is not valid, a "),fo=r(Gr,"A",{href:!0});var ag=s(fo);Pl=n(ag,"HFValidationError"),ag.forEach(o),Cl=n(Gr,` is thrown. Only
the first non-valid value throws an error and stops the validation process.`),Gr.forEach(o),br=h(t),_o=r(t,"P",{});var rg=s(_o);Fl=n(rg,"Usage:"),rg.forEach(o),vr=h(t),$(Ht.$$.fragment,t),$r=h(t),Ce=r(t,"H4",{class:!0});var zr=s(Ce);et=r(zr,"A",{id:!0,class:!0,href:!0});var sg=s(et);na=r(sg,"SPAN",{});var lg=s(na);$(St.$$.fragment,lg),lg.forEach(o),sg.forEach(o),Rl=h(zr),ia=r(zr,"SPAN",{});var ng=s(ia);Ll=n(ng,"validate_hf_hub_args"),ng.forEach(o),zr.forEach(o),Er=h(t),P=r(t,"DIV",{class:!0});var V=s(P);$(Tt.$$.fragment,V),Al=h(V),Ut=r(V,"P",{});var Wr=s(Ut);Ol=n(Wr,"Validate values received as argument for any public method of "),ga=r(Wr,"CODE",{});var ig=s(ga);Il=n(ig,"huggingface_hub"),ig.forEach(o),Vl=n(Wr,"."),Wr.forEach(o),Hl=h(V),ha=r(V,"P",{});var gg=s(ha);Sl=n(gg,`The goal of this decorator is to harmonize validation of arguments reused
everywhere. By default, all defined validators are tested.`),gg.forEach(o),Tl=h(V),ua=r(V,"P",{});var hg=s(ua);Ul=n(hg,"Validators:"),hg.forEach(o),ql=h(V),ca=r(V,"UL",{});var ug=s(ca);U=r(ug,"LI",{});var Oe=s(U);mo=r(Oe,"A",{href:!0});var cg=s(mo);Bl=n(cg,"validate_repo_id()"),cg.forEach(o),Gl=n(Oe,": "),pa=r(Oe,"CODE",{});var pg=s(pa);zl=n(pg,"repo_id"),pg.forEach(o),Wl=n(Oe," must be "),fa=r(Oe,"CODE",{});var fg=s(fa);Ml=n(fg,'"repo_name"'),fg.forEach(o),Yl=n(Oe,`
or `),da=r(Oe,"CODE",{});var dg=s(da);Zl=n(dg,'"namespace/repo_name"'),dg.forEach(o),Jl=n(Oe,". Namespace is a username or an organization."),Oe.forEach(o),ug.forEach(o),Kl=h(V),$(tt.$$.fragment,V),Ql=h(V),$(qt.$$.fragment,V),V.forEach(o),yr=h(t),Fe=r(t,"H4",{class:!0});var Mr=s(Fe);ot=r(Mr,"A",{id:!0,class:!0,href:!0});var _g=s(ot);_a=r(_g,"SPAN",{});var mg=s(_a);$(Bt.$$.fragment,mg),mg.forEach(o),_g.forEach(o),Xl=h(Mr),ma=r(Mr,"SPAN",{});var bg=s(ma);en=n(bg,"HFValidationError"),bg.forEach(o),Mr.forEach(o),wr=h(t),X=r(t,"DIV",{class:!0});var No=s(X);$(Gt.$$.fragment,No),tn=h(No),zt=r(No,"P",{});var Yr=s(zt);on=n(Yr,"Generic exception thrown by "),ba=r(Yr,"CODE",{});var vg=s(ba);an=n(vg,"huggingface_hub"),vg.forEach(o),rn=n(Yr," validators."),Yr.forEach(o),sn=h(No),Wt=r(No,"P",{});var Zr=s(Wt);ln=n(Zr,"Inherits from "),Mt=r(Zr,"A",{href:!0,rel:!0});var $g=s(Mt);va=r($g,"CODE",{});var Eg=s(va);nn=n(Eg,"ValueError"),Eg.forEach(o),$g.forEach(o),gn=n(Zr,"."),Zr.forEach(o),No.forEach(o),kr=h(t),Re=r(t,"H3",{class:!0});var Jr=s(Re);at=r(Jr,"A",{id:!0,class:!0,href:!0});var yg=s(at);$a=r(yg,"SPAN",{});var wg=s($a);$(Yt.$$.fragment,wg),wg.forEach(o),yg.forEach(o),hn=h(Jr),Ea=r(Jr,"SPAN",{});var kg=s(Ea);un=n(kg,"Argument validators"),kg.forEach(o),Jr.forEach(o),xr=h(t),bo=r(t,"P",{});var xg=s(bo);cn=n(xg,`Validators can also be used individually. Here is a list of all arguments that can be
validated.`),xg.forEach(o),jr=h(t),Le=r(t,"H4",{class:!0});var Kr=s(Le);rt=r(Kr,"A",{id:!0,class:!0,href:!0});var jg=s(rt);ya=r(jg,"SPAN",{});var Ng=s(ya);$(Zt.$$.fragment,Ng),Ng.forEach(o),jg.forEach(o),pn=h(Kr),wa=r(Kr,"SPAN",{});var Dg=s(wa);ka=r(Dg,"CODE",{});var Pg=s(ka);fn=n(Pg,"repo_id"),Pg.forEach(o),Dg.forEach(o),Kr.forEach(o),Nr=h(t),j=r(t,"DIV",{class:!0});var N=s(j);$(Jt.$$.fragment,N),dn=h(N),Kt=r(N,"P",{});var Qr=s(Kt);_n=n(Qr,"Validate "),xa=r(Qr,"CODE",{});var Cg=s(xa);mn=n(Cg,"repo_id"),Cg.forEach(o),bn=n(Qr," is valid."),Qr.forEach(o),vn=h(N),Ae=r(N,"P",{});var Do=s(Ae);$n=n(Do,`This is not meant to replace the proper validation made on the Hub but rather to
avoid local inconsistencies whenever possible (example: passing `),ja=r(Do,"CODE",{});var Fg=s(ja);En=n(Fg,"repo_type"),Fg.forEach(o),yn=n(Do,` in the
`),Na=r(Do,"CODE",{});var Rg=s(Na);wn=n(Rg,"repo_id"),Rg.forEach(o),kn=n(Do," is forbidden)."),Do.forEach(o),xn=h(N),Da=r(N,"P",{});var Lg=s(Da);jn=n(Lg,"Rules:"),Lg.forEach(o),Nn=h(N),ee=r(N,"UL",{});var it=s(ee);Pa=r(it,"LI",{});var Ag=s(Pa);Dn=n(Ag,"Between 1 and 96 characters."),Ag.forEach(o),Pn=h(it),Ca=r(it,"LI",{});var Og=s(Ca);Cn=n(Og,"Either \u201Crepo_name\u201D or \u201Cnamespace/repo_name\u201D"),Og.forEach(o),Fn=h(it),Fa=r(it,"LI",{});var Ig=s(Fa);Rn=n(Ig,"[a-zA-Z0-9] or \u201D-\u201D, \u201D_\u201D, \u201D.\u201D"),Ig.forEach(o),Ln=h(it),Ra=r(it,"LI",{});var Vg=s(Ra);An=n(Vg,"\u201D\u2014\u201D and \u201D..\u201D are forbidden"),Vg.forEach(o),it.forEach(o),On=h(N),q=r(N,"P",{});var Ie=s(q);In=n(Ie,"Valid: "),La=r(Ie,"CODE",{});var Hg=s(La);Vn=n(Hg,'"foo"'),Hg.forEach(o),Hn=n(Ie,", "),Aa=r(Ie,"CODE",{});var Sg=s(Aa);Sn=n(Sg,'"foo/bar"'),Sg.forEach(o),Tn=n(Ie,", "),Oa=r(Ie,"CODE",{});var Tg=s(Oa);Un=n(Tg,'"123"'),Tg.forEach(o),qn=n(Ie,", "),Ia=r(Ie,"CODE",{});var Ug=s(Ia);Bn=n(Ug,'"Foo-BAR_foo.bar123"'),Ug.forEach(o),Ie.forEach(o),Gn=h(N),B=r(N,"P",{});var Ve=s(B);zn=n(Ve,"Not valid: "),Va=r(Ve,"CODE",{});var qg=s(Va);Wn=n(qg,'"datasets/foo/bar"'),qg.forEach(o),Mn=n(Ve,", "),Ha=r(Ve,"CODE",{});var Bg=s(Ha);Yn=n(Bg,'".repo_id"'),Bg.forEach(o),Zn=n(Ve,", "),Sa=r(Ve,"CODE",{});var Gg=s(Sa);Jn=n(Gg,'"foo--bar"'),Gg.forEach(o),Kn=n(Ve,", "),Ta=r(Ve,"CODE",{});var zg=s(Ta);Qn=n(zg,'"foo.git"'),zg.forEach(o),Ve.forEach(o),Xn=h(N),$(st.$$.fragment,N),ei=h(N),Qt=r(N,"P",{});var Xr=s(Qt);ti=n(Xr,"Discussed in "),Xt=r(Xr,"A",{href:!0,rel:!0});var Wg=s(Xt);oi=n(Wg,"https://github.com/huggingface/huggingface_hub/issues/1008"),Wg.forEach(o),ai=n(Xr,`.
In moon-landing (internal repository):`),Xr.forEach(o),ri=h(N),eo=r(N,"UL",{});var es=s(eo);Ua=r(es,"LI",{});var Mg=s(Ua);to=r(Mg,"A",{href:!0,rel:!0});var Yg=s(to);si=n(Yg,"https://github.com/huggingface/moon-landing/blob/main/server/lib/Names.ts#L27"),Yg.forEach(o),Mg.forEach(o),li=h(es),qa=r(es,"LI",{});var Zg=s(qa);oo=r(Zg,"A",{href:!0,rel:!0});var Jg=s(oo);ni=n(Jg,"https://github.com/huggingface/moon-landing/blob/main/server/views/components/NewRepoForm/NewRepoForm.svelte#L138"),Jg.forEach(o),Zg.forEach(o),es.forEach(o),N.forEach(o),this.h()},h(){f(d,"name","hf:doc:metadata"),f(d,"content",JSON.stringify(ch)),f(p,"id","utilities"),f(p,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(p,"href","#utilities"),f(m,"class","relative group"),f(A,"id","huggingface_hub.utils.logging.get_verbosity"),f(A,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(A,"href","#huggingface_hub.utils.logging.get_verbosity"),f(H,"class","relative group"),f(Y,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f(me,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f(be,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f(ve,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f($e,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f(Ee,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f(ye,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f(we,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f(Ge,"id","huggingface_hub.utils.logging.get_logger"),f(Ge,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(Ge,"href","#huggingface_hub.utils.logging.get_logger"),f(ke,"class","relative group"),f(Z,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f(We,"id","huggingface_hub.utils.RepositoryNotFoundError"),f(We,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(We,"href","#huggingface_hub.utils.RepositoryNotFoundError"),f(xe,"class","relative group"),f(J,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f(K,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f(Q,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f(S,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f(Ke,"id","validators"),f(Ke,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(Ke,"href","#validators"),f(je,"class","relative group"),f(It,"href","https://pydantic-docs.helpmanual.io/"),f(It,"rel","nofollow"),f(Qe,"id","generic-decorator"),f(Qe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(Qe,"href","#generic-decorator"),f(De,"class","relative group"),f(po,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.validate_hf_hub_args"),f(fo,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.HFValidationError"),f(et,"id","huggingface_hub.utils.validate_hf_hub_args"),f(et,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(et,"href","#huggingface_hub.utils.validate_hf_hub_args"),f(Ce,"class","relative group"),f(mo,"href","/docs/huggingface_hub/main/en/package_reference/utilities#huggingface_hub.utils.validate_repo_id"),f(P,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f(ot,"id","huggingface_hub.utils.HFValidationError"),f(ot,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(ot,"href","#huggingface_hub.utils.HFValidationError"),f(Fe,"class","relative group"),f(Mt,"href","https://docs.python.org/3/library/exceptions.html#ValueError"),f(Mt,"rel","nofollow"),f(X,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),f(at,"id","argument-validators"),f(at,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(at,"href","#argument-validators"),f(Re,"class","relative group"),f(rt,"id","huggingface_hub.utils.validate_repo_id"),f(rt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(rt,"href","#huggingface_hub.utils.validate_repo_id"),f(Le,"class","relative group"),f(Xt,"href","https://github.com/huggingface/huggingface_hub/issues/1008"),f(Xt,"rel","nofollow"),f(to,"href","https://github.com/huggingface/moon-landing/blob/main/server/lib/Names.ts#L27"),f(to,"rel","nofollow"),f(oo,"href","https://github.com/huggingface/moon-landing/blob/main/server/views/components/NewRepoForm/NewRepoForm.svelte#L138"),f(oo,"rel","nofollow"),f(j,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(t,u){e(document.head,d),c(t,x,u),c(t,m,u),e(m,p),e(p,b),E(i,b,null),e(m,_),e(m,ne),e(ne,ie),c(t,He,u),c(t,H,u),e(H,A),e(A,G),E(z,G,null),e(H,gt),e(H,O),e(O,ge),e(O,he),e(he,ht),c(t,te,u),c(t,I,u),e(I,ut),e(I,W),e(W,ue),e(I,ct),e(I,ce),e(ce,pe),e(I,fe),c(t,Se,u),E(D,t,u),c(t,M,u),c(t,F,u),e(F,Te),c(t,pt,u),E(oe,t,u),c(t,ft,u),c(t,de,u),e(de,Ue),c(t,dt,u),c(t,L,u),e(L,_e),e(_e,qe),e(qe,no),e(_e,io),e(L,ts),e(L,go),e(go,Po),e(Po,os),e(go,as),e(L,rs),e(L,ho),e(ho,Co),e(Co,ss),e(ho,ls),e(L,ns),e(L,uo),e(uo,Fo),e(Fo,is),e(uo,gs),c(t,Ja,u),c(t,Y,u),E(_t,Y,null),e(Y,hs),e(Y,Ro),e(Ro,us),e(Y,cs),E(Be,Y,null),c(t,Ka,u),c(t,me,u),E(mt,me,null),e(me,ps),e(me,Lo),e(Lo,fs),c(t,Qa,u),c(t,be,u),E(bt,be,null),e(be,ds),e(be,vt),e(vt,_s),e(vt,Ao),e(Ao,ms),e(vt,bs),c(t,Xa,u),c(t,ve,u),E($t,ve,null),e(ve,vs),e(ve,Et),e(Et,$s),e(Et,Oo),e(Oo,Es),e(Et,ys),c(t,er,u),c(t,$e,u),E(yt,$e,null),e($e,ws),e($e,wt),e(wt,ks),e(wt,Io),e(Io,xs),e(wt,js),c(t,tr,u),c(t,Ee,u),E(kt,Ee,null),e(Ee,Ns),e(Ee,xt),e(xt,Ds),e(xt,Vo),e(Vo,Ps),e(xt,Cs),c(t,or,u),c(t,ye,u),E(jt,ye,null),e(ye,Fs),e(ye,Ho),e(Ho,Rs),c(t,ar,u),c(t,we,u),E(Nt,we,null),e(we,Ls),e(we,So),e(So,As),c(t,rr,u),c(t,ke,u),e(ke,Ge),e(Ge,To),E(Dt,To,null),e(ke,Os),e(ke,Uo),e(Uo,Is),c(t,sr,u),c(t,ae,u),e(ae,Vs),e(ae,qo),e(qo,Hs),e(ae,Ss),e(ae,Bo),e(Bo,Ts),e(ae,Us),c(t,lr,u),c(t,Z,u),E(Pt,Z,null),e(Z,qs),e(Z,Go),e(Go,Bs),e(Z,Gs),E(ze,Z,null),c(t,nr,u),c(t,xe,u),e(xe,We),e(We,zo),E(Ct,zo,null),e(xe,zs),e(xe,Wo),e(Wo,Ws),c(t,ir,u),c(t,co,u),e(co,Ms),c(t,gr,u),c(t,J,u),E(Ft,J,null),e(J,Ys),e(J,Mo),e(Mo,Zs),e(J,Js),E(Me,J,null),c(t,hr,u),c(t,K,u),E(Rt,K,null),e(K,Ks),e(K,Yo),e(Yo,Qs),e(K,Xs),E(Ye,K,null),c(t,ur,u),c(t,Q,u),E(Lt,Q,null),e(Q,el),e(Q,Zo),e(Zo,tl),e(Q,ol),E(Ze,Q,null),c(t,cr,u),c(t,S,u),E(At,S,null),e(S,al),e(S,Jo),e(Jo,rl),e(S,sl),e(S,T),e(T,ll),e(T,Ko),e(Ko,nl),e(T,il),e(T,Qo),e(Qo,gl),e(T,hl),e(T,Xo),e(Xo,ul),e(T,cl),e(T,ea),e(ea,pl),e(T,fl),e(S,dl),E(Je,S,null),c(t,pr,u),c(t,je,u),e(je,Ke),e(Ke,ta),E(Ot,ta,null),e(je,_l),e(je,oa),e(oa,ml),c(t,fr,u),c(t,Ne,u),e(Ne,aa),e(aa,bl),e(Ne,vl),e(Ne,It),e(It,$l),e(Ne,El),c(t,dr,u),c(t,De,u),e(De,Qe),e(Qe,ra),E(Vt,ra,null),e(De,yl),e(De,sa),e(sa,wl),c(t,_r,u),c(t,Pe,u),e(Pe,po),e(po,kl),e(Pe,xl),e(Pe,la),e(la,jl),e(Pe,Nl),c(t,mr,u),c(t,Xe,u),e(Xe,Dl),e(Xe,fo),e(fo,Pl),e(Xe,Cl),c(t,br,u),c(t,_o,u),e(_o,Fl),c(t,vr,u),E(Ht,t,u),c(t,$r,u),c(t,Ce,u),e(Ce,et),e(et,na),E(St,na,null),e(Ce,Rl),e(Ce,ia),e(ia,Ll),c(t,Er,u),c(t,P,u),E(Tt,P,null),e(P,Al),e(P,Ut),e(Ut,Ol),e(Ut,ga),e(ga,Il),e(Ut,Vl),e(P,Hl),e(P,ha),e(ha,Sl),e(P,Tl),e(P,ua),e(ua,Ul),e(P,ql),e(P,ca),e(ca,U),e(U,mo),e(mo,Bl),e(U,Gl),e(U,pa),e(pa,zl),e(U,Wl),e(U,fa),e(fa,Ml),e(U,Yl),e(U,da),e(da,Zl),e(U,Jl),e(P,Kl),E(tt,P,null),e(P,Ql),E(qt,P,null),c(t,yr,u),c(t,Fe,u),e(Fe,ot),e(ot,_a),E(Bt,_a,null),e(Fe,Xl),e(Fe,ma),e(ma,en),c(t,wr,u),c(t,X,u),E(Gt,X,null),e(X,tn),e(X,zt),e(zt,on),e(zt,ba),e(ba,an),e(zt,rn),e(X,sn),e(X,Wt),e(Wt,ln),e(Wt,Mt),e(Mt,va),e(va,nn),e(Wt,gn),c(t,kr,u),c(t,Re,u),e(Re,at),e(at,$a),E(Yt,$a,null),e(Re,hn),e(Re,Ea),e(Ea,un),c(t,xr,u),c(t,bo,u),e(bo,cn),c(t,jr,u),c(t,Le,u),e(Le,rt),e(rt,ya),E(Zt,ya,null),e(Le,pn),e(Le,wa),e(wa,ka),e(ka,fn),c(t,Nr,u),c(t,j,u),E(Jt,j,null),e(j,dn),e(j,Kt),e(Kt,_n),e(Kt,xa),e(xa,mn),e(Kt,bn),e(j,vn),e(j,Ae),e(Ae,$n),e(Ae,ja),e(ja,En),e(Ae,yn),e(Ae,Na),e(Na,wn),e(Ae,kn),e(j,xn),e(j,Da),e(Da,jn),e(j,Nn),e(j,ee),e(ee,Pa),e(Pa,Dn),e(ee,Pn),e(ee,Ca),e(Ca,Cn),e(ee,Fn),e(ee,Fa),e(Fa,Rn),e(ee,Ln),e(ee,Ra),e(Ra,An),e(j,On),e(j,q),e(q,In),e(q,La),e(La,Vn),e(q,Hn),e(q,Aa),e(Aa,Sn),e(q,Tn),e(q,Oa),e(Oa,Un),e(q,qn),e(q,Ia),e(Ia,Bn),e(j,Gn),e(j,B),e(B,zn),e(B,Va),e(Va,Wn),e(B,Mn),e(B,Ha),e(Ha,Yn),e(B,Zn),e(B,Sa),e(Sa,Jn),e(B,Kn),e(B,Ta),e(Ta,Qn),e(j,Xn),E(st,j,null),e(j,ei),e(j,Qt),e(Qt,ti),e(Qt,Xt),e(Xt,oi),e(Qt,ai),e(j,ri),e(j,eo),e(eo,Ua),e(Ua,to),e(to,si),e(eo,li),e(eo,qa),e(qa,oo),e(oo,ni),Dr=!0},p(t,[u]){const ao={};u&2&&(ao.$$scope={dirty:u,ctx:t}),Be.$set(ao);const Ba={};u&2&&(Ba.$$scope={dirty:u,ctx:t}),ze.$set(Ba);const Ga={};u&2&&(Ga.$$scope={dirty:u,ctx:t}),Me.$set(Ga);const za={};u&2&&(za.$$scope={dirty:u,ctx:t}),Ye.$set(za);const ro={};u&2&&(ro.$$scope={dirty:u,ctx:t}),Ze.$set(ro);const Wa={};u&2&&(Wa.$$scope={dirty:u,ctx:t}),Je.$set(Wa);const Ma={};u&2&&(Ma.$$scope={dirty:u,ctx:t}),tt.$set(Ma);const vo={};u&2&&(vo.$$scope={dirty:u,ctx:t}),st.$set(vo)},i(t){Dr||(y(i.$$.fragment,t),y(z.$$.fragment,t),y(D.$$.fragment,t),y(oe.$$.fragment,t),y(_t.$$.fragment,t),y(Be.$$.fragment,t),y(mt.$$.fragment,t),y(bt.$$.fragment,t),y($t.$$.fragment,t),y(yt.$$.fragment,t),y(kt.$$.fragment,t),y(jt.$$.fragment,t),y(Nt.$$.fragment,t),y(Dt.$$.fragment,t),y(Pt.$$.fragment,t),y(ze.$$.fragment,t),y(Ct.$$.fragment,t),y(Ft.$$.fragment,t),y(Me.$$.fragment,t),y(Rt.$$.fragment,t),y(Ye.$$.fragment,t),y(Lt.$$.fragment,t),y(Ze.$$.fragment,t),y(At.$$.fragment,t),y(Je.$$.fragment,t),y(Ot.$$.fragment,t),y(Vt.$$.fragment,t),y(Ht.$$.fragment,t),y(St.$$.fragment,t),y(Tt.$$.fragment,t),y(tt.$$.fragment,t),y(qt.$$.fragment,t),y(Bt.$$.fragment,t),y(Gt.$$.fragment,t),y(Yt.$$.fragment,t),y(Zt.$$.fragment,t),y(Jt.$$.fragment,t),y(st.$$.fragment,t),Dr=!0)},o(t){w(i.$$.fragment,t),w(z.$$.fragment,t),w(D.$$.fragment,t),w(oe.$$.fragment,t),w(_t.$$.fragment,t),w(Be.$$.fragment,t),w(mt.$$.fragment,t),w(bt.$$.fragment,t),w($t.$$.fragment,t),w(yt.$$.fragment,t),w(kt.$$.fragment,t),w(jt.$$.fragment,t),w(Nt.$$.fragment,t),w(Dt.$$.fragment,t),w(Pt.$$.fragment,t),w(ze.$$.fragment,t),w(Ct.$$.fragment,t),w(Ft.$$.fragment,t),w(Me.$$.fragment,t),w(Rt.$$.fragment,t),w(Ye.$$.fragment,t),w(Lt.$$.fragment,t),w(Ze.$$.fragment,t),w(At.$$.fragment,t),w(Je.$$.fragment,t),w(Ot.$$.fragment,t),w(Vt.$$.fragment,t),w(Ht.$$.fragment,t),w(St.$$.fragment,t),w(Tt.$$.fragment,t),w(tt.$$.fragment,t),w(qt.$$.fragment,t),w(Bt.$$.fragment,t),w(Gt.$$.fragment,t),w(Yt.$$.fragment,t),w(Zt.$$.fragment,t),w(Jt.$$.fragment,t),w(st.$$.fragment,t),Dr=!1},d(t){o(d),t&&o(x),t&&o(m),k(i),t&&o(He),t&&o(H),k(z),t&&o(te),t&&o(I),t&&o(Se),k(D,t),t&&o(M),t&&o(F),t&&o(pt),k(oe,t),t&&o(ft),t&&o(de),t&&o(dt),t&&o(L),t&&o(Ja),t&&o(Y),k(_t),k(Be),t&&o(Ka),t&&o(me),k(mt),t&&o(Qa),t&&o(be),k(bt),t&&o(Xa),t&&o(ve),k($t),t&&o(er),t&&o($e),k(yt),t&&o(tr),t&&o(Ee),k(kt),t&&o(or),t&&o(ye),k(jt),t&&o(ar),t&&o(we),k(Nt),t&&o(rr),t&&o(ke),k(Dt),t&&o(sr),t&&o(ae),t&&o(lr),t&&o(Z),k(Pt),k(ze),t&&o(nr),t&&o(xe),k(Ct),t&&o(ir),t&&o(co),t&&o(gr),t&&o(J),k(Ft),k(Me),t&&o(hr),t&&o(K),k(Rt),k(Ye),t&&o(ur),t&&o(Q),k(Lt),k(Ze),t&&o(cr),t&&o(S),k(At),k(Je),t&&o(pr),t&&o(je),k(Ot),t&&o(fr),t&&o(Ne),t&&o(dr),t&&o(De),k(Vt),t&&o(_r),t&&o(Pe),t&&o(mr),t&&o(Xe),t&&o(br),t&&o(_o),t&&o(vr),k(Ht,t),t&&o($r),t&&o(Ce),k(St),t&&o(Er),t&&o(P),k(Tt),k(tt),k(qt),t&&o(yr),t&&o(Fe),k(Bt),t&&o(wr),t&&o(X),k(Gt),t&&o(kr),t&&o(Re),k(Yt),t&&o(xr),t&&o(bo),t&&o(jr),t&&o(Le),k(Zt),t&&o(Nr),t&&o(j),k(Jt),k(st)}}}const ch={local:"utilities",sections:[{local:"huggingface_hub.utils.logging.get_verbosity",sections:[{local:"huggingface_hub.utils.logging.get_logger",title:"Repo-specific helper methods"}],title:"Controlling the logging of `huggingface_hub`"},{local:"huggingface_hub.utils.RepositoryNotFoundError",title:"Custom errors"},{local:"validators",sections:[{local:"generic-decorator",sections:[{local:"huggingface_hub.utils.validate_hf_hub_args",title:"validate_hf_hub_args"},{local:"huggingface_hub.utils.HFValidationError",title:"HFValidationError"}],title:"Generic decorator"},{local:"argument-validators",sections:[{local:"huggingface_hub.utils.validate_repo_id",title:"`repo_id`"}],title:"Argument validators"}],title:"Validators"}],title:"Utilities"};function ph(C){return oh(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class $h extends Qg{constructor(d){super();Xg(this,d,ph,uh,eh,{})}}export{$h as default,ch as metadata};
