import{S as jc,i as Lc,s as Tc,e as o,k as h,w as u,t as i,N as Sc,c as a,d as t,m as c,a as s,x as d,h as r,b as f,G as l,g as p,y as m,L as Cc,q as v,o as y,B as w,v as Dc}from"../chunks/vendor-hf-doc-builder.js";import{I as g}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as Y}from"../chunks/CodeBlock-hf-doc-builder.js";function Oc(Lp){let I,Vo,z,Z,bl,Ae,Vs,gl,Js,Jo,_,$l,$t,Ks,Ys,Pl,Pt,Zs,Qs,xl,xt,Xs,ei,At,jt,ti,b,Al,Lt,li,oi,jl,Tt,ai,si,Ll,St,ii,ri,Tl,je,ni,Sl,pi,fi,Ct,Dt,hi,Le,Cl,Ot,ci,ui,Dl,It,di,mi,Ol,zt,vi,Ko,W,Q,Il,Te,yi,zl,wi,Yo,Wt,ki,Zo,X,_i,Wl,Ei,bi,Qo,N,ee,Nl,Se,gi,Hl,$i,Xo,te,Pi,Ce,xi,Ai,ea,Nt,De,ji,Rl,Li,Ti,ta,Ht,Si,la,Rt,Ci,oa,Ft,Di,aa,Mt,Oi,sa,Oe,ia,qt,Ii,ra,Ie,na,j,zi,ze,Wi,Ni,Fl,Ml,Hi,Ri,pa,Ut,Fi,fa,H,le,ql,We,Mi,Ul,qi,ha,Bt,Ui,ca,Gt,Bi,ua,Ne,da,oe,Gi,Bl,Vi,Ji,ma,He,va,Vt,Ki,ya,Jt,Yi,wa,Re,ka,L,Zi,Fe,Qi,Xi,Gl,er,tr,_a,ae,lr,Vl,or,ar,Ea,Me,ba,Kt,sr,ga,qe,$a,Yt,ir,Pa,Ue,xa,$,rr,Jl,nr,pr,Kl,fr,hr,Yl,cr,ur,Aa,A,Zl,dr,mr,Ql,vr,yr,Xl,wr,kr,ja,Zt,_r,La,T,eo,Er,br,R,gr,to,$r,Pr,lo,xr,Ar,jr,oo,Lr,Ta,Qt,Tr,Sa,F,se,ao,Be,Sr,so,Cr,Ca,Xt,io,ro,Dr,Da,el,Or,Oa,tl,Ir,Ia,M,ie,no,Ge,zr,po,Wr,za,S,Nr,ll,Hr,Rr,fo,Fr,Mr,Wa,ol,qr,Na,q,re,ho,Ve,Ur,co,Br,Ha,P,Gr,uo,Vr,Jr,mo,Kr,Yr,vo,Zr,Qr,Ra,al,Xr,Fa,Je,Ma,U,ne,yo,Ke,en,wo,tn,qa,k,ko,Ye,ln,on,_o,Ze,an,sn,Eo,Qe,rn,nn,bo,Xe,pn,fn,go,et,hn,cn,$o,tt,un,dn,Po,lt,mn,Ua,pe,vn,xo,yn,wn,Ba,B,fe,Ao,ot,kn,sl,_n,jo,En,Ga,he,bn,at,gn,$n,Va,G,ce,Lo,st,Pn,To,xn,Ja,V,ue,So,it,An,Co,jn,Ka,il,Ln,Ya,de,Do,Tn,Sn,Oo,Cn,Za,me,Dn,rt,On,In,Qa,ve,zn,Io,Wn,Nn,Xa,ye,Hn,nt,zo,Rn,Fn,es,C,Mn,Wo,qn,Un,No,Bn,Gn,ts,J,we,Ho,pt,Vn,Ro,Jn,ls,x,Kn,ft,Yn,Zn,ht,Qn,Xn,ct,ep,tp,os,ke,lp,Fo,op,ap,as,_e,sp,Mo,ip,rp,ss,Ee,np,qo,pp,fp,is,be,hp,Uo,cp,up,rs,K,ge,Bo,ut,dp,Go,mp,ns,rl,dt,vp,ps,nl,mt,yp,fs,pl,vt,wp,hs,fl,yt,kp,cs,hl,wt,_p,us,cl,kt,Ep,ds,ul,_t,bp,ms,dl,Et,gp,vs,ml,bt,$p,ys;return Ae=new g({}),Te=new g({}),Se=new g({}),Oe=new Y({props:{code:`import pickle
import pickletools

var = "data I want to share with a friend"

# store the pickle data in a file named 'payload.pkl'
with open('payload.pkl', 'wb') as f:
    pickle.dump(var, f)

# disassemble the pickle
# and print the instructions to the command line
with open('payload.pkl', 'rb') as f:
    pickletools.dis(f)`,highlighted:`<span class="hljs-keyword">import</span> pickle
<span class="hljs-keyword">import</span> pickletools

var = <span class="hljs-string">&quot;data I want to share with a friend&quot;</span>

<span class="hljs-comment"># store the pickle data in a file named &#x27;payload.pkl&#x27;</span>
<span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;payload.pkl&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:
    pickle.dump(var, f)

<span class="hljs-comment"># disassemble the pickle</span>
<span class="hljs-comment"># and print the instructions to the command line</span>
<span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;payload.pkl&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:
    pickletools.dis(f)`}}),Ie=new Y({props:{code:`    0: \\x80 PROTO      4
    2: \\x95 FRAME      48
   11: \\x8c SHORT_BINUNICODE 'data I want to share with a friend'
   57: \\x94 MEMOIZE    (as 0)
   58: .    STOP
highest protocol among opcodes = 4`,highlighted:`    <span class="hljs-number">0</span>: \\x80 PROTO      <span class="hljs-number">4</span>
    <span class="hljs-number">2</span>: \\x95 FRAME      <span class="hljs-number">48</span>
   <span class="hljs-number">11</span>: \\x8c SHORT_BINUNICODE <span class="hljs-string">&#x27;data I want to share with a friend&#x27;</span>
   <span class="hljs-number">57</span>: \\x94 MEMOIZE    (<span class="hljs-keyword">as</span> <span class="hljs-number">0</span>)
   <span class="hljs-number">58</span>: .    STOP
highest protocol among opcodes = <span class="hljs-number">4</span>`}}),We=new g({}),Ne=new Y({props:{code:`import pickle
import pickletools

class Data:
    def __init__(self, important_stuff: str):
        self.important_stuff = important_stuff

d = Data("42")

with open('payload.pkl', 'wb') as f:
    pickle.dump(d, f)`,highlighted:`<span class="hljs-keyword">import</span> pickle
<span class="hljs-keyword">import</span> pickletools

<span class="hljs-keyword">class</span> <span class="hljs-title class_">Data</span>:
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, important_stuff: <span class="hljs-built_in">str</span></span>):
        self.important_stuff = important_stuff

d = Data(<span class="hljs-string">&quot;42&quot;</span>)

<span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;payload.pkl&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:
    pickle.dump(d, f)`}}),He=new Y({props:{code:`
# cat payload.pkl
__main__Data)}important_stuff42sb.%

# hexyl payload.pkl
\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
\u250200000000\u2502 80 04 95 33 00 00 00 00 \u250A 00 00 00 8c 08 5f 5f 6d \u2502\xD7\u2022\xD730000\u250A000\xD7\u2022__m\u2502
\u250200000010\u2502 61 69 6e 5f 5f 94 8c 04 \u250A 44 61 74 61 94 93 94 29 \u2502ain__\xD7\xD7\u2022\u250AData\xD7\xD7\xD7)\u2502
\u250200000020\u2502 81 94 7d 94 8c 0f 69 6d \u250A 70 6f 72 74 61 6e 74 5f \u2502\xD7\xD7}\xD7\xD7\u2022im\u250Aportant_\u2502
\u250200000030\u2502 73 74 75 66 66 94 8c 02 \u250A 34 32 94 73 62 2e       \u2502stuff\xD7\xD7\u2022\u250A42\xD7sb.  \u2502
\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518`,highlighted:`
<span class="hljs-comment"># cat payload.pkl</span>
__main__Data)}important_stuff42sb.%

<span class="hljs-comment"># hexyl payload.pkl</span>
\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
\u250200000000\u2502 80 04 95 33 00 00 00 00 \u250A 00 00 00 8c 08 5f 5f 6d \u2502\xD7\u2022\xD730000\u250A000\xD7\u2022__m\u2502
\u250200000010\u2502 61 69 6e 5f 5f 94 8c 04 \u250A 44 61 74 61 94 93 94 29 \u2502ain__\xD7\xD7\u2022\u250AData\xD7\xD7\xD7)\u2502
\u250200000020\u2502 81 94 7d 94 8c 0f 69 6d \u250A 70 6f 72 74 61 6e 74 5f \u2502\xD7\xD7}\xD7\xD7\u2022im\u250Aportant_\u2502
\u250200000030\u2502 73 74 75 66 66 94 8c 02 \u250A 34 32 94 73 62 2e       \u2502stuff\xD7\xD7\u2022\u250A42\xD7sb.  \u2502
\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518`}}),Re=new Y({props:{code:`from fickling.pickle import Pickled
import pickle

# Create a malicious pickle
data = "my friend needs to know this"

pickle_bin = pickle.dumps(data)

p = Pickled.load(pickle_bin)

p.insert_python_exec('print("you\\'ve been pwned !")')

with open('payload.pkl', 'wb') as f:
    p.dump(f)

# innocently unpickle and get your friend's data
with open('payload.pkl', 'rb') as f:
    data = pickle.load(f)
    print(data)`,highlighted:`<span class="hljs-keyword">from</span> fickling.pickle <span class="hljs-keyword">import</span> Pickled
<span class="hljs-keyword">import</span> pickle

<span class="hljs-comment"># Create a malicious pickle</span>
data = <span class="hljs-string">&quot;my friend needs to know this&quot;</span>

pickle_bin = pickle.dumps(data)

p = Pickled.load(pickle_bin)

p.insert_python_exec(<span class="hljs-string">&#x27;print(&quot;you\\&#x27;ve been pwned !&quot;)&#x27;</span>)

<span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;payload.pkl&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:
    p.dump(f)

<span class="hljs-comment"># innocently unpickle and get your friend&#x27;s data</span>
<span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;payload.pkl&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:
    data = pickle.load(f)
    <span class="hljs-built_in">print</span>(data)`}}),Me=new Y({props:{code:`you've been pwned !
my friend needs to know this`,highlighted:`you<span class="hljs-comment">&#x27;ve been pwned !</span>
my <span class="hljs-keyword">friend</span> needs <span class="hljs-keyword">to</span> know this`}}),qe=new Y({props:{code:`# cat payload.pkl
c__builtin__
exec
(Vprint("you've been pwned !")
tR my friend needs to know this.%

# hexyl payload.pkl
\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
\u250200000000\u2502 63 5f 5f 62 75 69 6c 74 \u250A 69 6e 5f 5f 0a 65 78 65 \u2502c__built\u250Ain___exe\u2502
\u250200000010\u2502 63 0a 28 56 70 72 69 6e \u250A 74 28 22 79 6f 75 27 76 \u2502c_(Vprin\u250At("you'v\u2502
\u250200000020\u2502 65 20 62 65 65 6e 20 70 \u250A 77 6e 65 64 20 21 22 29 \u2502e been p\u250Awned !")\u2502
\u250200000030\u2502 0a 74 52 80 04 95 20 00 \u250A 00 00 00 00 00 00 8c 1c \u2502_tR\xD7\u2022\xD7 0\u250A000000\xD7\u2022\u2502
\u250200000040\u2502 6d 79 20 66 72 69 65 6e \u250A 64 20 6e 65 65 64 73 20 \u2502my frien\u250Ad needs \u2502
\u250200000050\u2502 74 6f 20 6b 6e 6f 77 20 \u250A 74 68 69 73 94 2e       \u2502to know \u250Athis\xD7.  \u2502
\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518`,highlighted:`<span class="hljs-comment"># cat payload.pkl</span>
c__builtin__
<span class="hljs-built_in">exec</span>
(Vprint(<span class="hljs-string">&quot;you&#x27;ve been pwned !&quot;</span>)
tR my friend needs to know this.%

<span class="hljs-comment"># hexyl payload.pkl</span>
\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
\u250200000000\u2502 63 5f 5f 62 75 69 6c 74 \u250A 69 6e 5f 5f 0a 65 78 65 \u2502c__built\u250Ain___exe\u2502
\u250200000010\u2502 63 0a 28 56 70 72 69 6e \u250A 74 28 22 79 6f 75 27 76 \u2502c_(Vprin\u250At(<span class="hljs-string">&quot;you&#x27;v\u2502
\u250200000020\u2502 65 20 62 65 65 6e 20 70 \u250A 77 6e 65 64 20 21 22 29 \u2502e been p\u250Awned !&quot;</span>)\u2502
\u250200000030\u2502 0a 74 52 80 04 95 20 00 \u250A 00 00 00 00 00 00 8c 1c \u2502_tR\xD7\u2022\xD7 0\u250A000000\xD7\u2022\u2502
\u250200000040\u2502 6d 79 20 66 72 69 65 6e \u250A 64 20 6e 65 65 64 73 20 \u2502my frien\u250Ad needs \u2502
\u250200000050\u2502 74 6f 20 6b 6e 6f 77 20 \u250A 74 68 69 73 94 2e       \u2502to know \u250Athis\xD7.  \u2502
\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518`}}),Ue=new Y({props:{code:`# ...
opcodes_stack = [exec_func, "malicious argument", "REDUCE"]
opcode = stack.pop()
if opcode == "REDUCE":
    arg = opcodes_stack.pop()
    callable = opcodes_stack.pop()
    opcodes_stack.append(callable(arg))
# ...`,highlighted:`<span class="hljs-comment"># ...</span>
opcodes_stack = [exec_func, <span class="hljs-string">&quot;malicious argument&quot;</span>, <span class="hljs-string">&quot;REDUCE&quot;</span>]
opcode = stack.pop()
<span class="hljs-keyword">if</span> opcode == <span class="hljs-string">&quot;REDUCE&quot;</span>:
    arg = opcodes_stack.pop()
    <span class="hljs-built_in">callable</span> = opcodes_stack.pop()
    opcodes_stack.append(<span class="hljs-built_in">callable</span>(arg))
<span class="hljs-comment"># ...</span>`}}),Be=new g({}),Ge=new g({}),Ve=new g({}),Je=new Y({props:{code:`from transformers import AutoModel

model = AutoModel.from_pretrained("bert-base-cased", from_flax=True)`,highlighted:`<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModel

model = AutoModel.from_pretrained(<span class="hljs-string">&quot;bert-base-cased&quot;</span>, from_flax=<span class="hljs-literal">True</span>)`}}),Ke=new g({}),ot=new g({}),st=new g({}),it=new g({}),pt=new g({}),ut=new g({}),{c(){I=o("meta"),Vo=h(),z=o("h1"),Z=o("a"),bl=o("span"),u(Ae.$$.fragment),Vs=h(),gl=o("span"),Js=i("Pickle Scanning"),Jo=h(),_=o("ul"),$l=o("li"),$t=o("a"),Ks=i("TL;DR"),Ys=h(),Pl=o("li"),Pt=o("a"),Zs=i("What is a pickle?"),Qs=h(),xl=o("li"),xt=o("a"),Xs=i("Why is it dangerous?"),ei=h(),At=o("li"),jt=o("a"),ti=i("Mitigation Strategies"),b=o("ul"),Al=o("li"),Lt=o("a"),li=i("Load files from users and organizations you trust"),oi=h(),jl=o("li"),Tt=o("a"),ai=i("Load model weights from TF or Flax"),si=h(),Ll=o("li"),St=o("a"),ii=i("Use your own serialization format"),ri=h(),Tl=o("li"),je=o("a"),ni=i("Improve "),Sl=o("code"),pi=i("torch.load/save"),fi=h(),Ct=o("li"),Dt=o("a"),hi=i("Hub\u2019s Security Scanner"),Le=o("ul"),Cl=o("li"),Ot=o("a"),ci=i("What we have now"),ui=h(),Dl=o("li"),It=o("a"),di=i("Potential solutions"),mi=h(),Ol=o("li"),zt=o("a"),vi=i("Further Reading"),Ko=h(),W=o("h2"),Q=o("a"),Il=o("span"),u(Te.$$.fragment),yi=h(),zl=o("span"),wi=i("TL;DR"),Yo=h(),Wt=o("p"),ki=i("Pickle is a widely used serialization format in ML. Most notably, it is the default format for PyTorch model weights."),Zo=h(),X=o("p"),_i=i("There are dangerous arbitrary code execution attacks that can be perpetrated when you load a pickle file. We suggest loading models from users and organizations you trust, relying on signed commits, and/or loading models from TF or Jax formats with the "),Wl=o("code"),Ei=i("from_tf=True"),bi=i(" auto-conversion mechanism. We will also alleviate this issue shortly by displaying/\u201Cvetting\u201D the list of imports in any pickled file, directly on the Hub."),Qo=h(),N=o("h2"),ee=o("a"),Nl=o("span"),u(Se.$$.fragment),gi=h(),Hl=o("span"),$i=i("What is a pickle?"),Xo=h(),te=o("p"),Pi=i("From the "),Ce=o("a"),xi=i("official docs"),Ai=i(" :"),ea=h(),Nt=o("blockquote"),De=o("p"),ji=i("The "),Rl=o("code"),Li=i("pickle"),Ti=i(" module implements binary protocols for serializing and de-serializing a Python object structure."),ta=h(),Ht=o("p"),Si=i("What this means is that pickle is a serializing protocol, something you use to efficiently share data amongst parties."),la=h(),Rt=o("p"),Ci=i("We call a pickle the binary file that was generated while pickling."),oa=h(),Ft=o("p"),Di=i("At its core, the pickle is basically a stack of instructions or opcodes. As you probably have guessed, it\u2019s not human readable. The opcodes are generated when pickling and read sequentially at unpickling. Based on the opcode, a given action is executed."),aa=h(),Mt=o("p"),Oi=i("Here\u2019s a small example:"),sa=h(),u(Oe.$$.fragment),ia=h(),qt=o("p"),Ii=i("When you run this, it will create a pickle file and print the following instructions in your terminal:"),ra=h(),u(Ie.$$.fragment),na=h(),j=o("p"),zi=i("Don\u2019t worry too much about the instructions for now, just know that the "),ze=o("a"),Wi=i("pickletools"),Ni=i(" module is very useful for analyzing pickles. It allows you to read the instructions in the file "),Fl=o("strong"),Ml=o("em"),Hi=i("without"),Ri=i(" executing any code."),pa=h(),Ut=o("p"),Fi=i("Pickle is not simply a serialization protocol, it allows more flexibility by giving the ability to users to run python code at de-serialization time. Doesn\u2019t sound good, does it?"),fa=h(),H=o("h2"),le=o("a"),ql=o("span"),u(We.$$.fragment),Mi=h(),Ul=o("span"),qi=i("Why is it dangerous?"),ha=h(),Bt=o("p"),Ui=i("As we\u2019ve stated above, de-serializing pickle means that code can be executed. But this comes with certain limitations: you can only reference functions and classes from the top level module; you cannot embed them in the pickle file itself."),ca=h(),Gt=o("p"),Bi=i("Back to the drawing board:"),ua=h(),u(Ne.$$.fragment),da=h(),oe=o("p"),Gi=i("When we run this script we get the "),Bl=o("code"),Vi=i("payload.pkl"),Ji=i(" again. When we check the file\u2019s contents:"),ma=h(),u(He.$$.fragment),va=h(),Vt=o("p"),Ki=i("We can see that there isn\u2019t much in there, a few opcodes and the associated data. You might be thinking, so what\u2019s the problem with pickle?"),ya=h(),Jt=o("p"),Yi=i("Let\u2019s try something else:"),wa=h(),u(Re.$$.fragment),ka=h(),L=o("p"),Zi=i("Here we\u2019re using the "),Fe=o("a"),Qi=i("fickling"),Xi=i(" library for simplicity. It allows us to add pickle instructions to execute code contained in a string via the "),Gl=o("code"),er=i("exec"),tr=i(" function. This is how you circumvent the fact that you cannot define functions or classes in your pickles: you run exec on python code saved as a string."),_a=h(),ae=o("p"),lr=i("When you run this, it creates a "),Vl=o("code"),or=i("payload.pkl"),ar=i(" and prints the following:"),Ea=h(),u(Me.$$.fragment),ba=h(),Kt=o("p"),sr=i("If we check the contents of the pickle file, we get:"),ga=h(),u(qe.$$.fragment),$a=h(),Yt=o("p"),ir=i("Basically, this is what\u2019s happening when you unpickle:"),Pa=h(),u(Ue.$$.fragment),xa=h(),$=o("p"),rr=i("The instructions that pose a threat are "),Jl=o("code"),nr=i("STACK_GLOBAL"),pr=i(", "),Kl=o("code"),fr=i("GLOBAL"),hr=i(" and "),Yl=o("code"),cr=i("REDUCE"),ur=i("."),Aa=h(),A=o("p"),Zl=o("code"),dr=i("REDUCE"),mr=i(" is what tells the unpickler to execute the function with the provided arguments and "),Ql=o("code"),vr=i("*GLOBAL"),yr=i(" instructions are telling the unpickler to "),Xl=o("code"),wr=i("import"),kr=i(" stuff."),ja=h(),Zt=o("p"),_r=i("To sum up, pickle is dangerous because:"),La=h(),T=o("ul"),eo=o("li"),Er=i("when importing a python module, arbitrary code can be executed"),br=h(),R=o("li"),gr=i("you can import builtin functions like "),to=o("code"),$r=i("eval"),Pr=i(" or "),lo=o("code"),xr=i("exec"),Ar=i(", which can be used to execute arbitrary code"),jr=h(),oo=o("li"),Lr=i("when instantiating an object, the constructor may be called"),Ta=h(),Qt=o("p"),Tr=i("This is why it is stated in most docs using pickle, do not unpickle data from untrusted sources."),Sa=h(),F=o("h2"),se=o("a"),ao=o("span"),u(Be.$$.fragment),Sr=h(),so=o("span"),Cr=i("Mitigation Strategies"),Ca=h(),Xt=o("p"),io=o("strong"),ro=o("em"),Dr=i("Don\u2019t use pickle"),Da=h(),el=o("p"),Or=i("Sound advice Luc, but pickle is used profusely and isn\u2019t going anywhere soon: finding a new format everyone is happy with and initiating the change will take some time."),Oa=h(),tl=o("p"),Ir=i("So what can we do for now?"),Ia=h(),M=o("h3"),ie=o("a"),no=o("span"),u(Ge.$$.fragment),zr=h(),po=o("span"),Wr=i("Load files from users and organizations you trust"),za=h(),S=o("p"),Nr=i("On the Hub, you have the ability to "),ll=o("a"),Hr=i("sign your commits with a GPG key"),Rr=i(". This does "),fo=o("strong"),Fr=i("not"),Mr=i(" guarantee that your file is safe, but it does guarantee the origin of the file."),Wa=h(),ol=o("p"),qr=i("If you know and trust user A and the commit that includes the file on the Hub is signed by user A\u2019s GPG key, it\u2019s pretty safe to assume that you can trust the file."),Na=h(),q=o("h3"),re=o("a"),ho=o("span"),u(Ve.$$.fragment),Ur=h(),co=o("span"),Br=i("Load model weights from TF or Flax"),Ha=h(),P=o("p"),Gr=i("TensorFlow and Flax checkpoints are not affected, and can be loaded within PyTorch architectures using the "),uo=o("code"),Vr=i("from_tf"),Jr=i(" and "),mo=o("code"),Kr=i("from_flax"),Yr=i(" kwargs for the "),vo=o("code"),Zr=i("from_pretrained"),Qr=i(" method to circumvent this issue."),Ra=h(),al=o("p"),Xr=i("E.g.:"),Fa=h(),u(Je.$$.fragment),Ma=h(),U=o("h3"),ne=o("a"),yo=o("span"),u(Ke.$$.fragment),en=h(),wo=o("span"),tn=i("Use your own serialization format"),qa=h(),k=o("ul"),ko=o("li"),Ye=o("a"),ln=i("HDF5"),on=h(),_o=o("li"),Ze=o("a"),an=i("SavedModel"),sn=h(),Eo=o("li"),Qe=o("a"),rn=i("MsgPack"),nn=h(),bo=o("li"),Xe=o("a"),pn=i("Protobuf"),fn=h(),go=o("li"),et=o("a"),hn=i("Cap\u2019n\u2019proto"),cn=h(),$o=o("li"),tt=o("a"),un=i("Avro"),dn=h(),Po=o("li"),lt=o("a"),mn=i("safetensors"),Ua=h(),pe=o("p"),vn=i("We might consider rolling our own serialization format (like "),xo=o("code"),yn=i("safetensors"),wn=i(" above) in the future!"),Ba=h(),B=o("h3"),fe=o("a"),Ao=o("span"),u(ot.$$.fragment),kn=h(),sl=o("span"),_n=i("Improve "),jo=o("code"),En=i("torch.load/save"),Ga=h(),he=o("p"),bn=i("There\u2019s an open discussion in progress at PyTorch on having a "),at=o("a"),gn=i("Safe way of loading only weights from *.pt file by default"),$n=i(" \u2013 please chime in there!"),Va=h(),G=o("h3"),ce=o("a"),Lo=o("span"),u(st.$$.fragment),Pn=h(),To=o("span"),xn=i("Hub\u2019s Security Scanner"),Ja=h(),V=o("h4"),ue=o("a"),So=o("span"),u(it.$$.fragment),An=h(),Co=o("span"),jn=i("What we have now"),Ka=h(),il=o("p"),Ln=i("We have created a security scanner that scans every file pushed to the Hub and runs security checks. At the time of writing, it runs two types of scans:"),Ya=h(),de=o("ul"),Do=o("li"),Tn=i("ClamAV scans"),Sn=h(),Oo=o("li"),Cn=i("Pickle Import scans"),Za=h(),me=o("p"),Dn=i("For ClamAV scans, files are run through the open-source antivirus "),rt=o("a"),On=i("ClamAV"),In=i(". While this covers a good amount of dangerous files, it doesn\u2019t cover pickle exploits."),Qa=h(),ve=o("p"),zn=i("We have implemented a Pickle Import scan, which extracts the list of imports referenced in a pickle file. Every time you upload a "),Io=o("code"),Wn=i("pytorch_model.bin"),Nn=i(", this scan is run."),Xa=h(),ye=o("p"),Hn=i("We get this data thanks to "),nt=o("a"),zo=o("code"),Rn=i("pickletools.genops"),Fn=i(" which allows us to read the file without executing potentially dangerous code."),es=h(),C=o("p"),Mn=i("Note that this is what allows to know if, when unpickling a file, it will "),Wo=o("code"),qn=i("REDUCE"),Un=i(" on a potentially dangerous function that was imported by "),No=o("code"),Bn=i("*GLOBAL"),Gn=i("."),ts=h(),J=o("h4"),we=o("a"),Ho=o("span"),u(pt.$$.fragment),Vn=h(),Ro=o("span"),Jn=i("Potential solutions"),ls=h(),x=o("p"),Kn=i("One could think of creating a custom "),ft=o("a"),Yn=i("Unpickler"),Zn=i(" in the likes of "),ht=o("a"),Qn=i("this one"),Xn=i(". But as we can see in this "),ct=o("a"),ep=i("sophisticated exploit"),tp=i(", this won\u2019t work."),os=h(),ke=o("p"),lp=i("Thankfully, there is always a trace of the "),Fo=o("code"),op=i("eval"),ap=i(" import, so reading the opcodes directly should allow to catch malicious usage."),as=h(),_e=o("p"),sp=i("The current solution I propose is creating a file resembling a "),Mo=o("code"),ip=i(".gitignore"),rp=i(" but for imports."),ss=h(),Ee=o("p"),np=i("This file would be a whitelist of imports that would make a "),qo=o("code"),pp=i("pytorch_model.bin"),fp=i(" file flagged as dangerous if there are imports not included in the whitelist."),is=h(),be=o("p"),hp=i("One could imagine having a regex-ish format where you could allow all numpy submodules for instance via a simple line like: "),Uo=o("code"),cp=i("numpy.*"),up=i("."),rs=h(),K=o("h2"),ge=o("a"),Bo=o("span"),u(ut.$$.fragment),dp=h(),Go=o("span"),mp=i("Further Reading"),ns=h(),rl=o("p"),dt=o("a"),vp=i("pickle - Python object serialization - Python 3.10.6 documentation"),ps=h(),nl=o("p"),mt=o("a"),yp=i("Dangerous Pickles - Malicious Python Serialization"),fs=h(),pl=o("p"),vt=o("a"),wp=i("GitHub - trailofbits/fickling: A Python pickling decompiler and static analyzer"),hs=h(),fl=o("p"),yt=o("a"),kp=i("Exploiting Python pickles"),cs=h(),hl=o("p"),wt=o("a"),_p=i("cpython/pickletools.py at 3.10 \xB7 python/cpython"),us=h(),cl=o("p"),kt=o("a"),Ep=i("cpython/pickle.py at 3.10 \xB7 python/cpython"),ds=h(),ul=o("p"),_t=o("a"),bp=i("CrypTen/serial.py at main \xB7 facebookresearch/CrypTen"),ms=h(),dl=o("p"),Et=o("a"),gp=i("CTFtime.org / Balsn CTF 2019 / pyshv1 / Writeup"),vs=h(),ml=o("p"),bt=o("a"),$p=i("Rehabilitating Python\u2019s pickle module"),this.h()},l(e){const n=Sc('[data-svelte="svelte-1phssyn"]',document.head);I=a(n,"META",{name:!0,content:!0}),n.forEach(t),Vo=c(e),z=a(e,"H1",{class:!0});var ws=s(z);Z=a(ws,"A",{id:!0,class:!0,href:!0});var Tp=s(Z);bl=a(Tp,"SPAN",{});var Sp=s(bl);d(Ae.$$.fragment,Sp),Sp.forEach(t),Tp.forEach(t),Vs=c(ws),gl=a(ws,"SPAN",{});var Cp=s(gl);Js=r(Cp,"Pickle Scanning"),Cp.forEach(t),ws.forEach(t),Jo=c(e),_=a(e,"UL",{});var D=s(_);$l=a(D,"LI",{});var Dp=s($l);$t=a(Dp,"A",{href:!0});var Op=s($t);Ks=r(Op,"TL;DR"),Op.forEach(t),Dp.forEach(t),Ys=c(D),Pl=a(D,"LI",{});var Ip=s(Pl);Pt=a(Ip,"A",{href:!0});var zp=s(Pt);Zs=r(zp,"What is a pickle?"),zp.forEach(t),Ip.forEach(t),Qs=c(D),xl=a(D,"LI",{});var Wp=s(xl);xt=a(Wp,"A",{href:!0});var Np=s(xt);Xs=r(Np,"Why is it dangerous?"),Np.forEach(t),Wp.forEach(t),ei=c(D),At=a(D,"LI",{});var Pp=s(At);jt=a(Pp,"A",{href:!0});var Hp=s(jt);ti=r(Hp,"Mitigation Strategies"),Hp.forEach(t),b=a(Pp,"UL",{});var O=s(b);Al=a(O,"LI",{});var Rp=s(Al);Lt=a(Rp,"A",{href:!0});var Fp=s(Lt);li=r(Fp,"Load files from users and organizations you trust"),Fp.forEach(t),Rp.forEach(t),oi=c(O),jl=a(O,"LI",{});var Mp=s(jl);Tt=a(Mp,"A",{href:!0});var qp=s(Tt);ai=r(qp,"Load model weights from TF or Flax"),qp.forEach(t),Mp.forEach(t),si=c(O),Ll=a(O,"LI",{});var Up=s(Ll);St=a(Up,"A",{href:!0});var Bp=s(St);ii=r(Bp,"Use your own serialization format"),Bp.forEach(t),Up.forEach(t),ri=c(O),Tl=a(O,"LI",{});var Gp=s(Tl);je=a(Gp,"A",{href:!0});var xp=s(je);ni=r(xp,"Improve "),Sl=a(xp,"CODE",{});var Vp=s(Sl);pi=r(Vp,"torch.load/save"),Vp.forEach(t),xp.forEach(t),Gp.forEach(t),fi=c(O),Ct=a(O,"LI",{});var Ap=s(Ct);Dt=a(Ap,"A",{href:!0});var Jp=s(Dt);hi=r(Jp,"Hub\u2019s Security Scanner"),Jp.forEach(t),Le=a(Ap,"UL",{});var ks=s(Le);Cl=a(ks,"LI",{});var Kp=s(Cl);Ot=a(Kp,"A",{href:!0});var Yp=s(Ot);ci=r(Yp,"What we have now"),Yp.forEach(t),Kp.forEach(t),ui=c(ks),Dl=a(ks,"LI",{});var Zp=s(Dl);It=a(Zp,"A",{href:!0});var Qp=s(It);di=r(Qp,"Potential solutions"),Qp.forEach(t),Zp.forEach(t),ks.forEach(t),Ap.forEach(t),O.forEach(t),Pp.forEach(t),mi=c(D),Ol=a(D,"LI",{});var Xp=s(Ol);zt=a(Xp,"A",{href:!0});var ef=s(zt);vi=r(ef,"Further Reading"),ef.forEach(t),Xp.forEach(t),D.forEach(t),Ko=c(e),W=a(e,"H2",{class:!0});var _s=s(W);Q=a(_s,"A",{id:!0,class:!0,href:!0});var tf=s(Q);Il=a(tf,"SPAN",{});var lf=s(Il);d(Te.$$.fragment,lf),lf.forEach(t),tf.forEach(t),yi=c(_s),zl=a(_s,"SPAN",{});var of=s(zl);wi=r(of,"TL;DR"),of.forEach(t),_s.forEach(t),Yo=c(e),Wt=a(e,"P",{});var af=s(Wt);ki=r(af,"Pickle is a widely used serialization format in ML. Most notably, it is the default format for PyTorch model weights."),af.forEach(t),Zo=c(e),X=a(e,"P",{});var Es=s(X);_i=r(Es,"There are dangerous arbitrary code execution attacks that can be perpetrated when you load a pickle file. We suggest loading models from users and organizations you trust, relying on signed commits, and/or loading models from TF or Jax formats with the "),Wl=a(Es,"CODE",{});var sf=s(Wl);Ei=r(sf,"from_tf=True"),sf.forEach(t),bi=r(Es," auto-conversion mechanism. We will also alleviate this issue shortly by displaying/\u201Cvetting\u201D the list of imports in any pickled file, directly on the Hub."),Es.forEach(t),Qo=c(e),N=a(e,"H2",{class:!0});var bs=s(N);ee=a(bs,"A",{id:!0,class:!0,href:!0});var rf=s(ee);Nl=a(rf,"SPAN",{});var nf=s(Nl);d(Se.$$.fragment,nf),nf.forEach(t),rf.forEach(t),gi=c(bs),Hl=a(bs,"SPAN",{});var pf=s(Hl);$i=r(pf,"What is a pickle?"),pf.forEach(t),bs.forEach(t),Xo=c(e),te=a(e,"P",{});var gs=s(te);Pi=r(gs,"From the "),Ce=a(gs,"A",{href:!0,rel:!0});var ff=s(Ce);xi=r(ff,"official docs"),ff.forEach(t),Ai=r(gs," :"),gs.forEach(t),ea=c(e),Nt=a(e,"BLOCKQUOTE",{});var hf=s(Nt);De=a(hf,"P",{});var $s=s(De);ji=r($s,"The "),Rl=a($s,"CODE",{});var cf=s(Rl);Li=r(cf,"pickle"),cf.forEach(t),Ti=r($s," module implements binary protocols for serializing and de-serializing a Python object structure."),$s.forEach(t),hf.forEach(t),ta=c(e),Ht=a(e,"P",{});var uf=s(Ht);Si=r(uf,"What this means is that pickle is a serializing protocol, something you use to efficiently share data amongst parties."),uf.forEach(t),la=c(e),Rt=a(e,"P",{});var df=s(Rt);Ci=r(df,"We call a pickle the binary file that was generated while pickling."),df.forEach(t),oa=c(e),Ft=a(e,"P",{});var mf=s(Ft);Di=r(mf,"At its core, the pickle is basically a stack of instructions or opcodes. As you probably have guessed, it\u2019s not human readable. The opcodes are generated when pickling and read sequentially at unpickling. Based on the opcode, a given action is executed."),mf.forEach(t),aa=c(e),Mt=a(e,"P",{});var vf=s(Mt);Oi=r(vf,"Here\u2019s a small example:"),vf.forEach(t),sa=c(e),d(Oe.$$.fragment,e),ia=c(e),qt=a(e,"P",{});var yf=s(qt);Ii=r(yf,"When you run this, it will create a pickle file and print the following instructions in your terminal:"),yf.forEach(t),ra=c(e),d(Ie.$$.fragment,e),na=c(e),j=a(e,"P",{});var vl=s(j);zi=r(vl,"Don\u2019t worry too much about the instructions for now, just know that the "),ze=a(vl,"A",{href:!0,rel:!0});var wf=s(ze);Wi=r(wf,"pickletools"),wf.forEach(t),Ni=r(vl," module is very useful for analyzing pickles. It allows you to read the instructions in the file "),Fl=a(vl,"STRONG",{});var kf=s(Fl);Ml=a(kf,"EM",{});var _f=s(Ml);Hi=r(_f,"without"),_f.forEach(t),kf.forEach(t),Ri=r(vl," executing any code."),vl.forEach(t),pa=c(e),Ut=a(e,"P",{});var Ef=s(Ut);Fi=r(Ef,"Pickle is not simply a serialization protocol, it allows more flexibility by giving the ability to users to run python code at de-serialization time. Doesn\u2019t sound good, does it?"),Ef.forEach(t),fa=c(e),H=a(e,"H2",{class:!0});var Ps=s(H);le=a(Ps,"A",{id:!0,class:!0,href:!0});var bf=s(le);ql=a(bf,"SPAN",{});var gf=s(ql);d(We.$$.fragment,gf),gf.forEach(t),bf.forEach(t),Mi=c(Ps),Ul=a(Ps,"SPAN",{});var $f=s(Ul);qi=r($f,"Why is it dangerous?"),$f.forEach(t),Ps.forEach(t),ha=c(e),Bt=a(e,"P",{});var Pf=s(Bt);Ui=r(Pf,"As we\u2019ve stated above, de-serializing pickle means that code can be executed. But this comes with certain limitations: you can only reference functions and classes from the top level module; you cannot embed them in the pickle file itself."),Pf.forEach(t),ca=c(e),Gt=a(e,"P",{});var xf=s(Gt);Bi=r(xf,"Back to the drawing board:"),xf.forEach(t),ua=c(e),d(Ne.$$.fragment,e),da=c(e),oe=a(e,"P",{});var xs=s(oe);Gi=r(xs,"When we run this script we get the "),Bl=a(xs,"CODE",{});var Af=s(Bl);Vi=r(Af,"payload.pkl"),Af.forEach(t),Ji=r(xs," again. When we check the file\u2019s contents:"),xs.forEach(t),ma=c(e),d(He.$$.fragment,e),va=c(e),Vt=a(e,"P",{});var jf=s(Vt);Ki=r(jf,"We can see that there isn\u2019t much in there, a few opcodes and the associated data. You might be thinking, so what\u2019s the problem with pickle?"),jf.forEach(t),ya=c(e),Jt=a(e,"P",{});var Lf=s(Jt);Yi=r(Lf,"Let\u2019s try something else:"),Lf.forEach(t),wa=c(e),d(Re.$$.fragment,e),ka=c(e),L=a(e,"P",{});var yl=s(L);Zi=r(yl,"Here we\u2019re using the "),Fe=a(yl,"A",{href:!0,rel:!0});var Tf=s(Fe);Qi=r(Tf,"fickling"),Tf.forEach(t),Xi=r(yl," library for simplicity. It allows us to add pickle instructions to execute code contained in a string via the "),Gl=a(yl,"CODE",{});var Sf=s(Gl);er=r(Sf,"exec"),Sf.forEach(t),tr=r(yl," function. This is how you circumvent the fact that you cannot define functions or classes in your pickles: you run exec on python code saved as a string."),yl.forEach(t),_a=c(e),ae=a(e,"P",{});var As=s(ae);lr=r(As,"When you run this, it creates a "),Vl=a(As,"CODE",{});var Cf=s(Vl);or=r(Cf,"payload.pkl"),Cf.forEach(t),ar=r(As," and prints the following:"),As.forEach(t),Ea=c(e),d(Me.$$.fragment,e),ba=c(e),Kt=a(e,"P",{});var Df=s(Kt);sr=r(Df,"If we check the contents of the pickle file, we get:"),Df.forEach(t),ga=c(e),d(qe.$$.fragment,e),$a=c(e),Yt=a(e,"P",{});var Of=s(Yt);ir=r(Of,"Basically, this is what\u2019s happening when you unpickle:"),Of.forEach(t),Pa=c(e),d(Ue.$$.fragment,e),xa=c(e),$=a(e,"P",{});var $e=s($);rr=r($e,"The instructions that pose a threat are "),Jl=a($e,"CODE",{});var If=s(Jl);nr=r(If,"STACK_GLOBAL"),If.forEach(t),pr=r($e,", "),Kl=a($e,"CODE",{});var zf=s(Kl);fr=r(zf,"GLOBAL"),zf.forEach(t),hr=r($e," and "),Yl=a($e,"CODE",{});var Wf=s(Yl);cr=r(Wf,"REDUCE"),Wf.forEach(t),ur=r($e,"."),$e.forEach(t),Aa=c(e),A=a(e,"P",{});var gt=s(A);Zl=a(gt,"CODE",{});var Nf=s(Zl);dr=r(Nf,"REDUCE"),Nf.forEach(t),mr=r(gt," is what tells the unpickler to execute the function with the provided arguments and "),Ql=a(gt,"CODE",{});var Hf=s(Ql);vr=r(Hf,"*GLOBAL"),Hf.forEach(t),yr=r(gt," instructions are telling the unpickler to "),Xl=a(gt,"CODE",{});var Rf=s(Xl);wr=r(Rf,"import"),Rf.forEach(t),kr=r(gt," stuff."),gt.forEach(t),ja=c(e),Zt=a(e,"P",{});var Ff=s(Zt);_r=r(Ff,"To sum up, pickle is dangerous because:"),Ff.forEach(t),La=c(e),T=a(e,"UL",{});var wl=s(T);eo=a(wl,"LI",{});var Mf=s(eo);Er=r(Mf,"when importing a python module, arbitrary code can be executed"),Mf.forEach(t),br=c(wl),R=a(wl,"LI",{});var kl=s(R);gr=r(kl,"you can import builtin functions like "),to=a(kl,"CODE",{});var qf=s(to);$r=r(qf,"eval"),qf.forEach(t),Pr=r(kl," or "),lo=a(kl,"CODE",{});var Uf=s(lo);xr=r(Uf,"exec"),Uf.forEach(t),Ar=r(kl,", which can be used to execute arbitrary code"),kl.forEach(t),jr=c(wl),oo=a(wl,"LI",{});var Bf=s(oo);Lr=r(Bf,"when instantiating an object, the constructor may be called"),Bf.forEach(t),wl.forEach(t),Ta=c(e),Qt=a(e,"P",{});var Gf=s(Qt);Tr=r(Gf,"This is why it is stated in most docs using pickle, do not unpickle data from untrusted sources."),Gf.forEach(t),Sa=c(e),F=a(e,"H2",{class:!0});var js=s(F);se=a(js,"A",{id:!0,class:!0,href:!0});var Vf=s(se);ao=a(Vf,"SPAN",{});var Jf=s(ao);d(Be.$$.fragment,Jf),Jf.forEach(t),Vf.forEach(t),Sr=c(js),so=a(js,"SPAN",{});var Kf=s(so);Cr=r(Kf,"Mitigation Strategies"),Kf.forEach(t),js.forEach(t),Ca=c(e),Xt=a(e,"P",{});var Yf=s(Xt);io=a(Yf,"STRONG",{});var Zf=s(io);ro=a(Zf,"EM",{});var Qf=s(ro);Dr=r(Qf,"Don\u2019t use pickle"),Qf.forEach(t),Zf.forEach(t),Yf.forEach(t),Da=c(e),el=a(e,"P",{});var Xf=s(el);Or=r(Xf,"Sound advice Luc, but pickle is used profusely and isn\u2019t going anywhere soon: finding a new format everyone is happy with and initiating the change will take some time."),Xf.forEach(t),Oa=c(e),tl=a(e,"P",{});var eh=s(tl);Ir=r(eh,"So what can we do for now?"),eh.forEach(t),Ia=c(e),M=a(e,"H3",{class:!0});var Ls=s(M);ie=a(Ls,"A",{id:!0,class:!0,href:!0});var th=s(ie);no=a(th,"SPAN",{});var lh=s(no);d(Ge.$$.fragment,lh),lh.forEach(t),th.forEach(t),zr=c(Ls),po=a(Ls,"SPAN",{});var oh=s(po);Wr=r(oh,"Load files from users and organizations you trust"),oh.forEach(t),Ls.forEach(t),za=c(e),S=a(e,"P",{});var _l=s(S);Nr=r(_l,"On the Hub, you have the ability to "),ll=a(_l,"A",{href:!0});var ah=s(ll);Hr=r(ah,"sign your commits with a GPG key"),ah.forEach(t),Rr=r(_l,". This does "),fo=a(_l,"STRONG",{});var sh=s(fo);Fr=r(sh,"not"),sh.forEach(t),Mr=r(_l," guarantee that your file is safe, but it does guarantee the origin of the file."),_l.forEach(t),Wa=c(e),ol=a(e,"P",{});var ih=s(ol);qr=r(ih,"If you know and trust user A and the commit that includes the file on the Hub is signed by user A\u2019s GPG key, it\u2019s pretty safe to assume that you can trust the file."),ih.forEach(t),Na=c(e),q=a(e,"H3",{class:!0});var Ts=s(q);re=a(Ts,"A",{id:!0,class:!0,href:!0});var rh=s(re);ho=a(rh,"SPAN",{});var nh=s(ho);d(Ve.$$.fragment,nh),nh.forEach(t),rh.forEach(t),Ur=c(Ts),co=a(Ts,"SPAN",{});var ph=s(co);Br=r(ph,"Load model weights from TF or Flax"),ph.forEach(t),Ts.forEach(t),Ha=c(e),P=a(e,"P",{});var Pe=s(P);Gr=r(Pe,"TensorFlow and Flax checkpoints are not affected, and can be loaded within PyTorch architectures using the "),uo=a(Pe,"CODE",{});var fh=s(uo);Vr=r(fh,"from_tf"),fh.forEach(t),Jr=r(Pe," and "),mo=a(Pe,"CODE",{});var hh=s(mo);Kr=r(hh,"from_flax"),hh.forEach(t),Yr=r(Pe," kwargs for the "),vo=a(Pe,"CODE",{});var ch=s(vo);Zr=r(ch,"from_pretrained"),ch.forEach(t),Qr=r(Pe," method to circumvent this issue."),Pe.forEach(t),Ra=c(e),al=a(e,"P",{});var uh=s(al);Xr=r(uh,"E.g.:"),uh.forEach(t),Fa=c(e),d(Je.$$.fragment,e),Ma=c(e),U=a(e,"H3",{class:!0});var Ss=s(U);ne=a(Ss,"A",{id:!0,class:!0,href:!0});var dh=s(ne);yo=a(dh,"SPAN",{});var mh=s(yo);d(Ke.$$.fragment,mh),mh.forEach(t),dh.forEach(t),en=c(Ss),wo=a(Ss,"SPAN",{});var vh=s(wo);tn=r(vh,"Use your own serialization format"),vh.forEach(t),Ss.forEach(t),qa=c(e),k=a(e,"UL",{});var E=s(k);ko=a(E,"LI",{});var yh=s(ko);Ye=a(yh,"A",{href:!0,rel:!0});var wh=s(Ye);ln=r(wh,"HDF5"),wh.forEach(t),yh.forEach(t),on=c(E),_o=a(E,"LI",{});var kh=s(_o);Ze=a(kh,"A",{href:!0,rel:!0});var _h=s(Ze);an=r(_h,"SavedModel"),_h.forEach(t),kh.forEach(t),sn=c(E),Eo=a(E,"LI",{});var Eh=s(Eo);Qe=a(Eh,"A",{href:!0,rel:!0});var bh=s(Qe);rn=r(bh,"MsgPack"),bh.forEach(t),Eh.forEach(t),nn=c(E),bo=a(E,"LI",{});var gh=s(bo);Xe=a(gh,"A",{href:!0,rel:!0});var $h=s(Xe);pn=r($h,"Protobuf"),$h.forEach(t),gh.forEach(t),fn=c(E),go=a(E,"LI",{});var Ph=s(go);et=a(Ph,"A",{href:!0,rel:!0});var xh=s(et);hn=r(xh,"Cap\u2019n\u2019proto"),xh.forEach(t),Ph.forEach(t),cn=c(E),$o=a(E,"LI",{});var Ah=s($o);tt=a(Ah,"A",{href:!0,rel:!0});var jh=s(tt);un=r(jh,"Avro"),jh.forEach(t),Ah.forEach(t),dn=c(E),Po=a(E,"LI",{});var Lh=s(Po);lt=a(Lh,"A",{href:!0,rel:!0});var Th=s(lt);mn=r(Th,"safetensors"),Th.forEach(t),Lh.forEach(t),E.forEach(t),Ua=c(e),pe=a(e,"P",{});var Cs=s(pe);vn=r(Cs,"We might consider rolling our own serialization format (like "),xo=a(Cs,"CODE",{});var Sh=s(xo);yn=r(Sh,"safetensors"),Sh.forEach(t),wn=r(Cs," above) in the future!"),Cs.forEach(t),Ba=c(e),B=a(e,"H3",{class:!0});var Ds=s(B);fe=a(Ds,"A",{id:!0,class:!0,href:!0});var Ch=s(fe);Ao=a(Ch,"SPAN",{});var Dh=s(Ao);d(ot.$$.fragment,Dh),Dh.forEach(t),Ch.forEach(t),kn=c(Ds),sl=a(Ds,"SPAN",{});var jp=s(sl);_n=r(jp,"Improve "),jo=a(jp,"CODE",{});var Oh=s(jo);En=r(Oh,"torch.load/save"),Oh.forEach(t),jp.forEach(t),Ds.forEach(t),Ga=c(e),he=a(e,"P",{});var Os=s(he);bn=r(Os,"There\u2019s an open discussion in progress at PyTorch on having a "),at=a(Os,"A",{href:!0,rel:!0});var Ih=s(at);gn=r(Ih,"Safe way of loading only weights from *.pt file by default"),Ih.forEach(t),$n=r(Os," \u2013 please chime in there!"),Os.forEach(t),Va=c(e),G=a(e,"H3",{class:!0});var Is=s(G);ce=a(Is,"A",{id:!0,class:!0,href:!0});var zh=s(ce);Lo=a(zh,"SPAN",{});var Wh=s(Lo);d(st.$$.fragment,Wh),Wh.forEach(t),zh.forEach(t),Pn=c(Is),To=a(Is,"SPAN",{});var Nh=s(To);xn=r(Nh,"Hub\u2019s Security Scanner"),Nh.forEach(t),Is.forEach(t),Ja=c(e),V=a(e,"H4",{class:!0});var zs=s(V);ue=a(zs,"A",{id:!0,class:!0,href:!0});var Hh=s(ue);So=a(Hh,"SPAN",{});var Rh=s(So);d(it.$$.fragment,Rh),Rh.forEach(t),Hh.forEach(t),An=c(zs),Co=a(zs,"SPAN",{});var Fh=s(Co);jn=r(Fh,"What we have now"),Fh.forEach(t),zs.forEach(t),Ka=c(e),il=a(e,"P",{});var Mh=s(il);Ln=r(Mh,"We have created a security scanner that scans every file pushed to the Hub and runs security checks. At the time of writing, it runs two types of scans:"),Mh.forEach(t),Ya=c(e),de=a(e,"UL",{});var Ws=s(de);Do=a(Ws,"LI",{});var qh=s(Do);Tn=r(qh,"ClamAV scans"),qh.forEach(t),Sn=c(Ws),Oo=a(Ws,"LI",{});var Uh=s(Oo);Cn=r(Uh,"Pickle Import scans"),Uh.forEach(t),Ws.forEach(t),Za=c(e),me=a(e,"P",{});var Ns=s(me);Dn=r(Ns,"For ClamAV scans, files are run through the open-source antivirus "),rt=a(Ns,"A",{href:!0,rel:!0});var Bh=s(rt);On=r(Bh,"ClamAV"),Bh.forEach(t),In=r(Ns,". While this covers a good amount of dangerous files, it doesn\u2019t cover pickle exploits."),Ns.forEach(t),Qa=c(e),ve=a(e,"P",{});var Hs=s(ve);zn=r(Hs,"We have implemented a Pickle Import scan, which extracts the list of imports referenced in a pickle file. Every time you upload a "),Io=a(Hs,"CODE",{});var Gh=s(Io);Wn=r(Gh,"pytorch_model.bin"),Gh.forEach(t),Nn=r(Hs,", this scan is run."),Hs.forEach(t),Xa=c(e),ye=a(e,"P",{});var Rs=s(ye);Hn=r(Rs,"We get this data thanks to "),nt=a(Rs,"A",{href:!0,rel:!0});var Vh=s(nt);zo=a(Vh,"CODE",{});var Jh=s(zo);Rn=r(Jh,"pickletools.genops"),Jh.forEach(t),Vh.forEach(t),Fn=r(Rs," which allows us to read the file without executing potentially dangerous code."),Rs.forEach(t),es=c(e),C=a(e,"P",{});var El=s(C);Mn=r(El,"Note that this is what allows to know if, when unpickling a file, it will "),Wo=a(El,"CODE",{});var Kh=s(Wo);qn=r(Kh,"REDUCE"),Kh.forEach(t),Un=r(El," on a potentially dangerous function that was imported by "),No=a(El,"CODE",{});var Yh=s(No);Bn=r(Yh,"*GLOBAL"),Yh.forEach(t),Gn=r(El,"."),El.forEach(t),ts=c(e),J=a(e,"H4",{class:!0});var Fs=s(J);we=a(Fs,"A",{id:!0,class:!0,href:!0});var Zh=s(we);Ho=a(Zh,"SPAN",{});var Qh=s(Ho);d(pt.$$.fragment,Qh),Qh.forEach(t),Zh.forEach(t),Vn=c(Fs),Ro=a(Fs,"SPAN",{});var Xh=s(Ro);Jn=r(Xh,"Potential solutions"),Xh.forEach(t),Fs.forEach(t),ls=c(e),x=a(e,"P",{});var xe=s(x);Kn=r(xe,"One could think of creating a custom "),ft=a(xe,"A",{href:!0,rel:!0});var ec=s(ft);Yn=r(ec,"Unpickler"),ec.forEach(t),Zn=r(xe," in the likes of "),ht=a(xe,"A",{href:!0,rel:!0});var tc=s(ht);Qn=r(tc,"this one"),tc.forEach(t),Xn=r(xe,". But as we can see in this "),ct=a(xe,"A",{href:!0,rel:!0});var lc=s(ct);ep=r(lc,"sophisticated exploit"),lc.forEach(t),tp=r(xe,", this won\u2019t work."),xe.forEach(t),os=c(e),ke=a(e,"P",{});var Ms=s(ke);lp=r(Ms,"Thankfully, there is always a trace of the "),Fo=a(Ms,"CODE",{});var oc=s(Fo);op=r(oc,"eval"),oc.forEach(t),ap=r(Ms," import, so reading the opcodes directly should allow to catch malicious usage."),Ms.forEach(t),as=c(e),_e=a(e,"P",{});var qs=s(_e);sp=r(qs,"The current solution I propose is creating a file resembling a "),Mo=a(qs,"CODE",{});var ac=s(Mo);ip=r(ac,".gitignore"),ac.forEach(t),rp=r(qs," but for imports."),qs.forEach(t),ss=c(e),Ee=a(e,"P",{});var Us=s(Ee);np=r(Us,"This file would be a whitelist of imports that would make a "),qo=a(Us,"CODE",{});var sc=s(qo);pp=r(sc,"pytorch_model.bin"),sc.forEach(t),fp=r(Us," file flagged as dangerous if there are imports not included in the whitelist."),Us.forEach(t),is=c(e),be=a(e,"P",{});var Bs=s(be);hp=r(Bs,"One could imagine having a regex-ish format where you could allow all numpy submodules for instance via a simple line like: "),Uo=a(Bs,"CODE",{});var ic=s(Uo);cp=r(ic,"numpy.*"),ic.forEach(t),up=r(Bs,"."),Bs.forEach(t),rs=c(e),K=a(e,"H2",{class:!0});var Gs=s(K);ge=a(Gs,"A",{id:!0,class:!0,href:!0});var rc=s(ge);Bo=a(rc,"SPAN",{});var nc=s(Bo);d(ut.$$.fragment,nc),nc.forEach(t),rc.forEach(t),dp=c(Gs),Go=a(Gs,"SPAN",{});var pc=s(Go);mp=r(pc,"Further Reading"),pc.forEach(t),Gs.forEach(t),ns=c(e),rl=a(e,"P",{});var fc=s(rl);dt=a(fc,"A",{href:!0,rel:!0});var hc=s(dt);vp=r(hc,"pickle - Python object serialization - Python 3.10.6 documentation"),hc.forEach(t),fc.forEach(t),ps=c(e),nl=a(e,"P",{});var cc=s(nl);mt=a(cc,"A",{href:!0,rel:!0});var uc=s(mt);yp=r(uc,"Dangerous Pickles - Malicious Python Serialization"),uc.forEach(t),cc.forEach(t),fs=c(e),pl=a(e,"P",{});var dc=s(pl);vt=a(dc,"A",{href:!0,rel:!0});var mc=s(vt);wp=r(mc,"GitHub - trailofbits/fickling: A Python pickling decompiler and static analyzer"),mc.forEach(t),dc.forEach(t),hs=c(e),fl=a(e,"P",{});var vc=s(fl);yt=a(vc,"A",{href:!0,rel:!0});var yc=s(yt);kp=r(yc,"Exploiting Python pickles"),yc.forEach(t),vc.forEach(t),cs=c(e),hl=a(e,"P",{});var wc=s(hl);wt=a(wc,"A",{href:!0,rel:!0});var kc=s(wt);_p=r(kc,"cpython/pickletools.py at 3.10 \xB7 python/cpython"),kc.forEach(t),wc.forEach(t),us=c(e),cl=a(e,"P",{});var _c=s(cl);kt=a(_c,"A",{href:!0,rel:!0});var Ec=s(kt);Ep=r(Ec,"cpython/pickle.py at 3.10 \xB7 python/cpython"),Ec.forEach(t),_c.forEach(t),ds=c(e),ul=a(e,"P",{});var bc=s(ul);_t=a(bc,"A",{href:!0,rel:!0});var gc=s(_t);bp=r(gc,"CrypTen/serial.py at main \xB7 facebookresearch/CrypTen"),gc.forEach(t),bc.forEach(t),ms=c(e),dl=a(e,"P",{});var $c=s(dl);Et=a($c,"A",{href:!0,rel:!0});var Pc=s(Et);gp=r(Pc,"CTFtime.org / Balsn CTF 2019 / pyshv1 / Writeup"),Pc.forEach(t),$c.forEach(t),vs=c(e),ml=a(e,"P",{});var xc=s(ml);bt=a(xc,"A",{href:!0,rel:!0});var Ac=s(bt);$p=r(Ac,"Rehabilitating Python\u2019s pickle module"),Ac.forEach(t),xc.forEach(t),this.h()},h(){f(I,"name","hf:doc:metadata"),f(I,"content",JSON.stringify(Ic)),f(Z,"id","pickle-scanning"),f(Z,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(Z,"href","#pickle-scanning"),f(z,"class","relative group"),f($t,"href","#tldr"),f(Pt,"href","#what-is-a-pickle"),f(xt,"href","#why-is-it-dangerous"),f(jt,"href","#mitigation-strategies"),f(Lt,"href","#load-files-from-users-and-organizations-you-trust"),f(Tt,"href","#load-model-weights-from-tf-or-flax"),f(St,"href","#use-your-own-serialization-format"),f(je,"href","#improve-torchloadsave"),f(Dt,"href","#hubs-security-scanner"),f(Ot,"href","#what-we-have-now"),f(It,"href","#potential-solutions"),f(zt,"href","#further-reading"),f(Q,"id","tldr"),f(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(Q,"href","#tldr"),f(W,"class","relative group"),f(ee,"id","what-is-a-pickle"),f(ee,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(ee,"href","#what-is-a-pickle"),f(N,"class","relative group"),f(Ce,"href","https://docs.python.org/3/library/pickle.html"),f(Ce,"rel","nofollow"),f(ze,"href","https://docs.python.org/3/library/pickletools.html"),f(ze,"rel","nofollow"),f(le,"id","why-is-it-dangerous"),f(le,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(le,"href","#why-is-it-dangerous"),f(H,"class","relative group"),f(Fe,"href","https://github.com/trailofbits/fickling"),f(Fe,"rel","nofollow"),f(se,"id","mitigation-strategies"),f(se,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(se,"href","#mitigation-strategies"),f(F,"class","relative group"),f(ie,"id","load-files-from-users-and-organizations-you-trust"),f(ie,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(ie,"href","#load-files-from-users-and-organizations-you-trust"),f(M,"class","relative group"),f(ll,"href","./security-gpg"),f(re,"id","load-model-weights-from-tf-or-flax"),f(re,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(re,"href","#load-model-weights-from-tf-or-flax"),f(q,"class","relative group"),f(ne,"id","use-your-own-serialization-format"),f(ne,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(ne,"href","#use-your-own-serialization-format"),f(U,"class","relative group"),f(Ye,"href","https://github.com/HDFGroup/hdf5"),f(Ye,"rel","nofollow"),f(Ze,"href","https://www.tensorflow.org/guide/saved_model"),f(Ze,"rel","nofollow"),f(Qe,"href","https://msgpack.org/index.html"),f(Qe,"rel","nofollow"),f(Xe,"href","https://developers.google.com/protocol-buffers"),f(Xe,"rel","nofollow"),f(et,"href","https://capnproto.org/"),f(et,"rel","nofollow"),f(tt,"href","https://avro.apache.org/"),f(tt,"rel","nofollow"),f(lt,"href","https://github.com/Narsil/safetensors/"),f(lt,"rel","nofollow"),f(fe,"id","improve-torchloadsave"),f(fe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(fe,"href","#improve-torchloadsave"),f(B,"class","relative group"),f(at,"href","https://github.com/pytorch/pytorch/issues/52181"),f(at,"rel","nofollow"),f(ce,"id","hubs-security-scanner"),f(ce,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(ce,"href","#hubs-security-scanner"),f(G,"class","relative group"),f(ue,"id","what-we-have-now"),f(ue,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(ue,"href","#what-we-have-now"),f(V,"class","relative group"),f(rt,"href","https://www.clamav.net"),f(rt,"rel","nofollow"),f(nt,"href","https://docs.python.org/3/library/pickletools.html#pickletools.genops"),f(nt,"rel","nofollow"),f(we,"id","potential-solutions"),f(we,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(we,"href","#potential-solutions"),f(J,"class","relative group"),f(ft,"href","https://docs.python.org/3/library/pickle.html#pickle.Unpickler"),f(ft,"rel","nofollow"),f(ht,"href","https://github.com/facebookresearch/CrypTen/blob/main/crypten/common/serial.py"),f(ht,"rel","nofollow"),f(ct,"href","https://ctftime.org/writeup/16723"),f(ct,"rel","nofollow"),f(ge,"id","further-reading"),f(ge,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(ge,"href","#further-reading"),f(K,"class","relative group"),f(dt,"href","https://docs.python.org/3/library/pickle.html#what-can-be-pickled-and-unpickled"),f(dt,"rel","nofollow"),f(mt,"href","https://intoli.com/blog/dangerous-pickles/"),f(mt,"rel","nofollow"),f(vt,"href","https://github.com/trailofbits/fickling"),f(vt,"rel","nofollow"),f(yt,"href","https://davidhamann.de/2020/04/05/exploiting-python-pickle/"),f(yt,"rel","nofollow"),f(wt,"href","https://github.com/python/cpython/blob/3.10/Lib/pickletools.py"),f(wt,"rel","nofollow"),f(kt,"href","https://github.com/python/cpython/blob/3.10/Lib/pickle.py"),f(kt,"rel","nofollow"),f(_t,"href","https://github.com/facebookresearch/CrypTen/blob/main/crypten/common/serial.py"),f(_t,"rel","nofollow"),f(Et,"href","https://ctftime.org/writeup/16723"),f(Et,"rel","nofollow"),f(bt,"href","https://github.com/moreati/pickle-fuzz"),f(bt,"rel","nofollow")},m(e,n){l(document.head,I),p(e,Vo,n),p(e,z,n),l(z,Z),l(Z,bl),m(Ae,bl,null),l(z,Vs),l(z,gl),l(gl,Js),p(e,Jo,n),p(e,_,n),l(_,$l),l($l,$t),l($t,Ks),l(_,Ys),l(_,Pl),l(Pl,Pt),l(Pt,Zs),l(_,Qs),l(_,xl),l(xl,xt),l(xt,Xs),l(_,ei),l(_,At),l(At,jt),l(jt,ti),l(At,b),l(b,Al),l(Al,Lt),l(Lt,li),l(b,oi),l(b,jl),l(jl,Tt),l(Tt,ai),l(b,si),l(b,Ll),l(Ll,St),l(St,ii),l(b,ri),l(b,Tl),l(Tl,je),l(je,ni),l(je,Sl),l(Sl,pi),l(b,fi),l(b,Ct),l(Ct,Dt),l(Dt,hi),l(Ct,Le),l(Le,Cl),l(Cl,Ot),l(Ot,ci),l(Le,ui),l(Le,Dl),l(Dl,It),l(It,di),l(_,mi),l(_,Ol),l(Ol,zt),l(zt,vi),p(e,Ko,n),p(e,W,n),l(W,Q),l(Q,Il),m(Te,Il,null),l(W,yi),l(W,zl),l(zl,wi),p(e,Yo,n),p(e,Wt,n),l(Wt,ki),p(e,Zo,n),p(e,X,n),l(X,_i),l(X,Wl),l(Wl,Ei),l(X,bi),p(e,Qo,n),p(e,N,n),l(N,ee),l(ee,Nl),m(Se,Nl,null),l(N,gi),l(N,Hl),l(Hl,$i),p(e,Xo,n),p(e,te,n),l(te,Pi),l(te,Ce),l(Ce,xi),l(te,Ai),p(e,ea,n),p(e,Nt,n),l(Nt,De),l(De,ji),l(De,Rl),l(Rl,Li),l(De,Ti),p(e,ta,n),p(e,Ht,n),l(Ht,Si),p(e,la,n),p(e,Rt,n),l(Rt,Ci),p(e,oa,n),p(e,Ft,n),l(Ft,Di),p(e,aa,n),p(e,Mt,n),l(Mt,Oi),p(e,sa,n),m(Oe,e,n),p(e,ia,n),p(e,qt,n),l(qt,Ii),p(e,ra,n),m(Ie,e,n),p(e,na,n),p(e,j,n),l(j,zi),l(j,ze),l(ze,Wi),l(j,Ni),l(j,Fl),l(Fl,Ml),l(Ml,Hi),l(j,Ri),p(e,pa,n),p(e,Ut,n),l(Ut,Fi),p(e,fa,n),p(e,H,n),l(H,le),l(le,ql),m(We,ql,null),l(H,Mi),l(H,Ul),l(Ul,qi),p(e,ha,n),p(e,Bt,n),l(Bt,Ui),p(e,ca,n),p(e,Gt,n),l(Gt,Bi),p(e,ua,n),m(Ne,e,n),p(e,da,n),p(e,oe,n),l(oe,Gi),l(oe,Bl),l(Bl,Vi),l(oe,Ji),p(e,ma,n),m(He,e,n),p(e,va,n),p(e,Vt,n),l(Vt,Ki),p(e,ya,n),p(e,Jt,n),l(Jt,Yi),p(e,wa,n),m(Re,e,n),p(e,ka,n),p(e,L,n),l(L,Zi),l(L,Fe),l(Fe,Qi),l(L,Xi),l(L,Gl),l(Gl,er),l(L,tr),p(e,_a,n),p(e,ae,n),l(ae,lr),l(ae,Vl),l(Vl,or),l(ae,ar),p(e,Ea,n),m(Me,e,n),p(e,ba,n),p(e,Kt,n),l(Kt,sr),p(e,ga,n),m(qe,e,n),p(e,$a,n),p(e,Yt,n),l(Yt,ir),p(e,Pa,n),m(Ue,e,n),p(e,xa,n),p(e,$,n),l($,rr),l($,Jl),l(Jl,nr),l($,pr),l($,Kl),l(Kl,fr),l($,hr),l($,Yl),l(Yl,cr),l($,ur),p(e,Aa,n),p(e,A,n),l(A,Zl),l(Zl,dr),l(A,mr),l(A,Ql),l(Ql,vr),l(A,yr),l(A,Xl),l(Xl,wr),l(A,kr),p(e,ja,n),p(e,Zt,n),l(Zt,_r),p(e,La,n),p(e,T,n),l(T,eo),l(eo,Er),l(T,br),l(T,R),l(R,gr),l(R,to),l(to,$r),l(R,Pr),l(R,lo),l(lo,xr),l(R,Ar),l(T,jr),l(T,oo),l(oo,Lr),p(e,Ta,n),p(e,Qt,n),l(Qt,Tr),p(e,Sa,n),p(e,F,n),l(F,se),l(se,ao),m(Be,ao,null),l(F,Sr),l(F,so),l(so,Cr),p(e,Ca,n),p(e,Xt,n),l(Xt,io),l(io,ro),l(ro,Dr),p(e,Da,n),p(e,el,n),l(el,Or),p(e,Oa,n),p(e,tl,n),l(tl,Ir),p(e,Ia,n),p(e,M,n),l(M,ie),l(ie,no),m(Ge,no,null),l(M,zr),l(M,po),l(po,Wr),p(e,za,n),p(e,S,n),l(S,Nr),l(S,ll),l(ll,Hr),l(S,Rr),l(S,fo),l(fo,Fr),l(S,Mr),p(e,Wa,n),p(e,ol,n),l(ol,qr),p(e,Na,n),p(e,q,n),l(q,re),l(re,ho),m(Ve,ho,null),l(q,Ur),l(q,co),l(co,Br),p(e,Ha,n),p(e,P,n),l(P,Gr),l(P,uo),l(uo,Vr),l(P,Jr),l(P,mo),l(mo,Kr),l(P,Yr),l(P,vo),l(vo,Zr),l(P,Qr),p(e,Ra,n),p(e,al,n),l(al,Xr),p(e,Fa,n),m(Je,e,n),p(e,Ma,n),p(e,U,n),l(U,ne),l(ne,yo),m(Ke,yo,null),l(U,en),l(U,wo),l(wo,tn),p(e,qa,n),p(e,k,n),l(k,ko),l(ko,Ye),l(Ye,ln),l(k,on),l(k,_o),l(_o,Ze),l(Ze,an),l(k,sn),l(k,Eo),l(Eo,Qe),l(Qe,rn),l(k,nn),l(k,bo),l(bo,Xe),l(Xe,pn),l(k,fn),l(k,go),l(go,et),l(et,hn),l(k,cn),l(k,$o),l($o,tt),l(tt,un),l(k,dn),l(k,Po),l(Po,lt),l(lt,mn),p(e,Ua,n),p(e,pe,n),l(pe,vn),l(pe,xo),l(xo,yn),l(pe,wn),p(e,Ba,n),p(e,B,n),l(B,fe),l(fe,Ao),m(ot,Ao,null),l(B,kn),l(B,sl),l(sl,_n),l(sl,jo),l(jo,En),p(e,Ga,n),p(e,he,n),l(he,bn),l(he,at),l(at,gn),l(he,$n),p(e,Va,n),p(e,G,n),l(G,ce),l(ce,Lo),m(st,Lo,null),l(G,Pn),l(G,To),l(To,xn),p(e,Ja,n),p(e,V,n),l(V,ue),l(ue,So),m(it,So,null),l(V,An),l(V,Co),l(Co,jn),p(e,Ka,n),p(e,il,n),l(il,Ln),p(e,Ya,n),p(e,de,n),l(de,Do),l(Do,Tn),l(de,Sn),l(de,Oo),l(Oo,Cn),p(e,Za,n),p(e,me,n),l(me,Dn),l(me,rt),l(rt,On),l(me,In),p(e,Qa,n),p(e,ve,n),l(ve,zn),l(ve,Io),l(Io,Wn),l(ve,Nn),p(e,Xa,n),p(e,ye,n),l(ye,Hn),l(ye,nt),l(nt,zo),l(zo,Rn),l(ye,Fn),p(e,es,n),p(e,C,n),l(C,Mn),l(C,Wo),l(Wo,qn),l(C,Un),l(C,No),l(No,Bn),l(C,Gn),p(e,ts,n),p(e,J,n),l(J,we),l(we,Ho),m(pt,Ho,null),l(J,Vn),l(J,Ro),l(Ro,Jn),p(e,ls,n),p(e,x,n),l(x,Kn),l(x,ft),l(ft,Yn),l(x,Zn),l(x,ht),l(ht,Qn),l(x,Xn),l(x,ct),l(ct,ep),l(x,tp),p(e,os,n),p(e,ke,n),l(ke,lp),l(ke,Fo),l(Fo,op),l(ke,ap),p(e,as,n),p(e,_e,n),l(_e,sp),l(_e,Mo),l(Mo,ip),l(_e,rp),p(e,ss,n),p(e,Ee,n),l(Ee,np),l(Ee,qo),l(qo,pp),l(Ee,fp),p(e,is,n),p(e,be,n),l(be,hp),l(be,Uo),l(Uo,cp),l(be,up),p(e,rs,n),p(e,K,n),l(K,ge),l(ge,Bo),m(ut,Bo,null),l(K,dp),l(K,Go),l(Go,mp),p(e,ns,n),p(e,rl,n),l(rl,dt),l(dt,vp),p(e,ps,n),p(e,nl,n),l(nl,mt),l(mt,yp),p(e,fs,n),p(e,pl,n),l(pl,vt),l(vt,wp),p(e,hs,n),p(e,fl,n),l(fl,yt),l(yt,kp),p(e,cs,n),p(e,hl,n),l(hl,wt),l(wt,_p),p(e,us,n),p(e,cl,n),l(cl,kt),l(kt,Ep),p(e,ds,n),p(e,ul,n),l(ul,_t),l(_t,bp),p(e,ms,n),p(e,dl,n),l(dl,Et),l(Et,gp),p(e,vs,n),p(e,ml,n),l(ml,bt),l(bt,$p),ys=!0},p:Cc,i(e){ys||(v(Ae.$$.fragment,e),v(Te.$$.fragment,e),v(Se.$$.fragment,e),v(Oe.$$.fragment,e),v(Ie.$$.fragment,e),v(We.$$.fragment,e),v(Ne.$$.fragment,e),v(He.$$.fragment,e),v(Re.$$.fragment,e),v(Me.$$.fragment,e),v(qe.$$.fragment,e),v(Ue.$$.fragment,e),v(Be.$$.fragment,e),v(Ge.$$.fragment,e),v(Ve.$$.fragment,e),v(Je.$$.fragment,e),v(Ke.$$.fragment,e),v(ot.$$.fragment,e),v(st.$$.fragment,e),v(it.$$.fragment,e),v(pt.$$.fragment,e),v(ut.$$.fragment,e),ys=!0)},o(e){y(Ae.$$.fragment,e),y(Te.$$.fragment,e),y(Se.$$.fragment,e),y(Oe.$$.fragment,e),y(Ie.$$.fragment,e),y(We.$$.fragment,e),y(Ne.$$.fragment,e),y(He.$$.fragment,e),y(Re.$$.fragment,e),y(Me.$$.fragment,e),y(qe.$$.fragment,e),y(Ue.$$.fragment,e),y(Be.$$.fragment,e),y(Ge.$$.fragment,e),y(Ve.$$.fragment,e),y(Je.$$.fragment,e),y(Ke.$$.fragment,e),y(ot.$$.fragment,e),y(st.$$.fragment,e),y(it.$$.fragment,e),y(pt.$$.fragment,e),y(ut.$$.fragment,e),ys=!1},d(e){t(I),e&&t(Vo),e&&t(z),w(Ae),e&&t(Jo),e&&t(_),e&&t(Ko),e&&t(W),w(Te),e&&t(Yo),e&&t(Wt),e&&t(Zo),e&&t(X),e&&t(Qo),e&&t(N),w(Se),e&&t(Xo),e&&t(te),e&&t(ea),e&&t(Nt),e&&t(ta),e&&t(Ht),e&&t(la),e&&t(Rt),e&&t(oa),e&&t(Ft),e&&t(aa),e&&t(Mt),e&&t(sa),w(Oe,e),e&&t(ia),e&&t(qt),e&&t(ra),w(Ie,e),e&&t(na),e&&t(j),e&&t(pa),e&&t(Ut),e&&t(fa),e&&t(H),w(We),e&&t(ha),e&&t(Bt),e&&t(ca),e&&t(Gt),e&&t(ua),w(Ne,e),e&&t(da),e&&t(oe),e&&t(ma),w(He,e),e&&t(va),e&&t(Vt),e&&t(ya),e&&t(Jt),e&&t(wa),w(Re,e),e&&t(ka),e&&t(L),e&&t(_a),e&&t(ae),e&&t(Ea),w(Me,e),e&&t(ba),e&&t(Kt),e&&t(ga),w(qe,e),e&&t($a),e&&t(Yt),e&&t(Pa),w(Ue,e),e&&t(xa),e&&t($),e&&t(Aa),e&&t(A),e&&t(ja),e&&t(Zt),e&&t(La),e&&t(T),e&&t(Ta),e&&t(Qt),e&&t(Sa),e&&t(F),w(Be),e&&t(Ca),e&&t(Xt),e&&t(Da),e&&t(el),e&&t(Oa),e&&t(tl),e&&t(Ia),e&&t(M),w(Ge),e&&t(za),e&&t(S),e&&t(Wa),e&&t(ol),e&&t(Na),e&&t(q),w(Ve),e&&t(Ha),e&&t(P),e&&t(Ra),e&&t(al),e&&t(Fa),w(Je,e),e&&t(Ma),e&&t(U),w(Ke),e&&t(qa),e&&t(k),e&&t(Ua),e&&t(pe),e&&t(Ba),e&&t(B),w(ot),e&&t(Ga),e&&t(he),e&&t(Va),e&&t(G),w(st),e&&t(Ja),e&&t(V),w(it),e&&t(Ka),e&&t(il),e&&t(Ya),e&&t(de),e&&t(Za),e&&t(me),e&&t(Qa),e&&t(ve),e&&t(Xa),e&&t(ye),e&&t(es),e&&t(C),e&&t(ts),e&&t(J),w(pt),e&&t(ls),e&&t(x),e&&t(os),e&&t(ke),e&&t(as),e&&t(_e),e&&t(ss),e&&t(Ee),e&&t(is),e&&t(be),e&&t(rs),e&&t(K),w(ut),e&&t(ns),e&&t(rl),e&&t(ps),e&&t(nl),e&&t(fs),e&&t(pl),e&&t(hs),e&&t(fl),e&&t(cs),e&&t(hl),e&&t(us),e&&t(cl),e&&t(ds),e&&t(ul),e&&t(ms),e&&t(dl),e&&t(vs),e&&t(ml)}}}const Ic={local:"pickle-scanning",sections:[{local:"tldr",title:"TL;DR"},{local:"what-is-a-pickle",title:"What is a pickle?"},{local:"why-is-it-dangerous",title:"Why is it dangerous?"},{local:"mitigation-strategies",sections:[{local:"load-files-from-users-and-organizations-you-trust",title:"Load files from users and organizations you trust"},{local:"load-model-weights-from-tf-or-flax",title:"Load model weights from TF or Flax"},{local:"use-your-own-serialization-format",title:"Use your own serialization format"},{local:"improve-torchloadsave",title:"Improve `torch.load/save`"},{local:"hubs-security-scanner",sections:[{local:"what-we-have-now",title:"What we have now"},{local:"potential-solutions",title:"Potential solutions"}],title:"Hub\u2019s Security Scanner"}],title:"Mitigation Strategies"},{local:"further-reading",title:"Further Reading"}],title:"Pickle Scanning"};function zc(Lp){return Dc(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Rc extends jc{constructor(I){super();Lc(this,I,zc,Oc,Tc,{})}}export{Rc as default,Ic as metadata};
