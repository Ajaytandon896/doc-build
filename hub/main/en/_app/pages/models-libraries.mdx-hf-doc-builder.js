import{S as wc,i as Ac,s as Pc,e as r,k as n,w as Ec,t as l,N as Rc,c as a,d as e,m as s,a as o,x as gc,h as d,b as h,G as t,g as dt,y as pc,L as Lc,q as mc,o as Dc,B as bc,v as kc}from"../chunks/vendor-hf-doc-builder.js";import{I as yc}from"../chunks/IconCopyLink-hf-doc-builder.js";function Sc(nh){let nt,Aa,st,it,ue,Tt,Ba,ve,Oa,Pa,ft,za,_e,Ua,Ga,Ra,ct,Va,Et,Wa,qa,La,ut,Te,u,Ee,Ja,Ka,ge,Xa,Za,pe,ja,Ya,Gt,Qa,to,me,eo,ro,De,ao,oo,i,v,be,gt,lo,no,ye,so,ho,we,io,fo,Vt,co,uo,Ae,vo,_o,Pe,To,Eo,_,Re,pt,go,po,Le,mo,Do,ke,bo,yo,Wt,wo,Ao,Se,Po,Ro,He,Lo,ko,T,Ce,mt,So,Ho,Ie,Co,Io,Ne,No,$o,qt,xo,Mo,$e,Fo,Bo,xe,Oo,zo,E,Me,Dt,Uo,Go,Fe,Vo,Wo,Be,qo,Jo,Jt,Ko,Xo,Oe,Zo,jo,ze,Yo,Qo,g,Ue,bt,tl,el,Ge,rl,al,Ve,ol,ll,Kt,dl,nl,We,sl,hl,qe,il,fl,p,Je,yt,cl,ul,Ke,vl,_l,Xe,Tl,El,Xt,gl,pl,Ze,ml,Dl,je,bl,yl,m,Ye,wt,wl,Al,Qe,Pl,Rl,tr,Ll,kl,Zt,Sl,Hl,er,Cl,Il,rr,Nl,$l,D,ar,At,xl,Ml,or,Fl,Bl,lr,Ol,zl,jt,Ul,Gl,dr,Vl,Wl,nr,ql,Jl,b,sr,Pt,Kl,Xl,hr,Zl,jl,ir,Yl,Ql,Yt,td,ed,fr,rd,ad,cr,od,ld,y,ur,Rt,dd,nd,vr,sd,hd,_r,id,fd,Qt,cd,ud,Tr,vd,_d,Er,Td,Ed,w,gr,Lt,gd,pd,pr,md,Dd,mr,bd,yd,te,wd,Ad,Dr,Pd,Rd,br,Ld,kd,A,yr,kt,Sd,Hd,wr,Cd,Id,Ar,Nd,$d,ee,xd,Md,Pr,Fd,Bd,Rr,Od,zd,P,Lr,St,Ud,Gd,kr,Vd,Wd,Sr,qd,Jd,re,Kd,Xd,Hr,Zd,jd,Cr,Yd,Qd,R,Ir,Ht,tn,en,Nr,rn,an,$r,on,ln,ae,dn,nn,xr,sn,hn,Mr,fn,cn,L,Fr,Ct,un,vn,Br,_n,Tn,Or,En,gn,oe,pn,mn,zr,Dn,bn,Ur,yn,wn,k,Gr,It,An,Pn,Nt,Rn,$t,Ln,kn,Sn,Vr,Hn,Cn,le,In,Nn,Wr,$n,xn,qr,Mn,Fn,S,Jr,xt,Bn,On,Kr,zn,Un,Xr,Gn,Vn,de,Wn,qn,Zr,Jn,Kn,jr,Xn,Zn,H,Yr,Mt,jn,Yn,Qr,Qn,ts,ta,es,rs,ne,as,os,ea,ls,ds,ra,ns,ss,C,aa,Ft,hs,is,oa,fs,cs,la,us,vs,se,_s,Ts,da,Es,gs,na,ps,ms,I,sa,Bt,Ds,bs,ha,ys,ws,ia,As,Ps,he,Rs,Ls,fa,ks,Ss,ca,Hs,Cs,N,ua,Ot,Is,Ns,va,$s,xs,_a,Ms,Fs,ie,Bs,Os,Ta,zs,Us,Ea,Gs,Vs,$,ga,zt,Ws,qs,pa,Js,Ks,ma,Xs,Zs,fe,js,Ys,Da,Qs,th,ba,eh,ka,ht,vt,ya,Ut,rh,wa,ah,Sa,_t,oh,ce,lh,dh,Ha;return Tt=new yc({}),Ut=new yc({}),{c(){nt=r("meta"),Aa=n(),st=r("h1"),it=r("a"),ue=r("span"),Ec(Tt.$$.fragment),Ba=n(),ve=r("span"),Oa=l("Libraries"),Pa=n(),ft=r("p"),za=l("The Hub has support for dozens of libraries in the Open Source ecosystem. Thanks to the "),_e=r("code"),Ua=l("huggingface_hub"),Ga=l(" Python library, it\u2019s easy to enable sharing your models in the Hub. The Hub supports many libraries, and we\u2019re working on expanding this support! We\u2019re happy to welcome to the Hub a set of Open Source libraries that are pushing Machine Learning forward."),Ra=n(),ct=r("p"),Va=l("The table below summarizes the supported libraries and their level of integration. Find all our supported libraries "),Et=r("a"),Wa=l("here"),qa=l("!"),La=n(),ut=r("table"),Te=r("thead"),u=r("tr"),Ee=r("th"),Ja=l("Library"),Ka=n(),ge=r("th"),Xa=l("Description"),Za=n(),pe=r("th"),ja=l("Inference API"),Ya=n(),Gt=r("th"),Qa=l("Widgets"),to=n(),me=r("th"),eo=l("Download from Hub"),ro=n(),De=r("th"),ao=l("Push to Hub"),oo=n(),i=r("tbody"),v=r("tr"),be=r("td"),gt=r("a"),lo=l("\u{1F917} Transformers"),no=n(),ye=r("td"),so=l("State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX"),ho=n(),we=r("td"),io=l("\u2705"),fo=n(),Vt=r("td"),co=l("\u2705"),uo=n(),Ae=r("td"),vo=l("\u2705"),_o=n(),Pe=r("td"),To=l("\u2705"),Eo=n(),_=r("tr"),Re=r("td"),pt=r("a"),go=l("\u{1F917} Diffusers"),po=n(),Le=r("td"),mo=l("A modular toolbox for inference and training of diffusion models"),Do=n(),ke=r("td"),bo=l("\u274C"),yo=n(),Wt=r("td"),wo=l("\u274C"),Ao=n(),Se=r("td"),Po=l("\u2705"),Ro=n(),He=r("td"),Lo=l("\u2705"),ko=n(),T=r("tr"),Ce=r("td"),mt=r("a"),So=l("Adapter Transformers"),Ho=n(),Ie=r("td"),Co=l("Extends \u{1F917}Transformers with Adapters."),Io=n(),Ne=r("td"),No=l("\u274C"),$o=n(),qt=r("td"),xo=l("\u274C"),Mo=n(),$e=r("td"),Fo=l("\u2705"),Bo=n(),xe=r("td"),Oo=l("\u2705"),zo=n(),E=r("tr"),Me=r("td"),Dt=r("a"),Uo=l("AllenNLP"),Go=n(),Fe=r("td"),Vo=l("An open-source NLP research library, built on PyTorch."),Wo=n(),Be=r("td"),qo=l("\u2705"),Jo=n(),Jt=r("td"),Ko=l("\u2705"),Xo=n(),Oe=r("td"),Zo=l("\u2705"),jo=n(),ze=r("td"),Yo=l("\u274C"),Qo=n(),g=r("tr"),Ue=r("td"),bt=r("a"),tl=l("Asteroid"),el=n(),Ge=r("td"),rl=l("Pytorch-based audio source separation toolkit"),al=n(),Ve=r("td"),ol=l("\u2705"),ll=n(),Kt=r("td"),dl=l("\u2705"),nl=n(),We=r("td"),sl=l("\u2705"),hl=n(),qe=r("td"),il=l("\u274C"),fl=n(),p=r("tr"),Je=r("td"),yt=r("a"),cl=l("docTR"),ul=n(),Ke=r("td"),vl=l("Models and datasets for OCR-related tasks in PyTorch & TensorFlow"),_l=n(),Xe=r("td"),Tl=l("\u2705"),El=n(),Xt=r("td"),gl=l("\u2705"),pl=n(),Ze=r("td"),ml=l("\u2705"),Dl=n(),je=r("td"),bl=l("\u274C"),yl=n(),m=r("tr"),Ye=r("td"),wt=r("a"),wl=l("ESPnet"),Al=n(),Qe=r("td"),Pl=l("End-to-end speech processing toolkit (e.g. TTS)"),Rl=n(),tr=r("td"),Ll=l("\u2705"),kl=n(),Zt=r("td"),Sl=l("\u2705"),Hl=n(),er=r("td"),Cl=l("\u2705"),Il=n(),rr=r("td"),Nl=l("\u274C"),$l=n(),D=r("tr"),ar=r("td"),At=r("a"),xl=l("fastai"),Ml=n(),or=r("td"),Fl=l("Library to train fast and accurate models with state-of-the-art outputs."),Bl=n(),lr=r("td"),Ol=l("\u2705"),zl=n(),jt=r("td"),Ul=l("\u2705"),Gl=n(),dr=r("td"),Vl=l("\u2705"),Wl=n(),nr=r("td"),ql=l("\u2705"),Jl=n(),b=r("tr"),sr=r("td"),Pt=r("a"),Kl=l("Keras"),Xl=n(),hr=r("td"),Zl=l("Library that uses a consistent and simple API to build models leveraging TensorFlow and its ecosystem."),jl=n(),ir=r("td"),Yl=l("\u274C"),Ql=n(),Yt=r("td"),td=l("\u274C"),ed=n(),fr=r("td"),rd=l("\u2705"),ad=n(),cr=r("td"),od=l("\u2705"),ld=n(),y=r("tr"),ur=r("td"),Rt=r("a"),dd=l("Flair"),nd=n(),vr=r("td"),sd=l("Very simple framework for state-of-the-art NLP."),hd=n(),_r=r("td"),id=l("\u2705"),fd=n(),Qt=r("td"),cd=l("\u2705"),ud=n(),Tr=r("td"),vd=l("\u2705"),_d=n(),Er=r("td"),Td=l("\u274C"),Ed=n(),w=r("tr"),gr=r("td"),Lt=r("a"),gd=l("ML-Agents"),pd=n(),pr=r("td"),md=l("Enables games and simulations made with Unity to serve as environments for training intelligent agents."),Dd=n(),mr=r("td"),bd=l("\u274C"),yd=n(),te=r("td"),wd=l("\u274C"),Ad=n(),Dr=r("td"),Pd=l("\u2705"),Rd=n(),br=r("td"),Ld=l("\u2705"),kd=n(),A=r("tr"),yr=r("td"),kt=r("a"),Sd=l("NeMo"),Hd=n(),wr=r("td"),Cd=l("Conversational AI toolkit built for researchers"),Id=n(),Ar=r("td"),Nd=l("\u2705"),$d=n(),ee=r("td"),xd=l("\u2705"),Md=n(),Pr=r("td"),Fd=l("\u2705"),Bd=n(),Rr=r("td"),Od=l("\u274C"),zd=n(),P=r("tr"),Lr=r("td"),St=r("a"),Ud=l("Pyannote"),Gd=n(),kr=r("td"),Vd=l("Neural building blocks for speaker diarization."),Wd=n(),Sr=r("td"),qd=l("\u274C"),Jd=n(),re=r("td"),Kd=l("\u274C"),Xd=n(),Hr=r("td"),Zd=l("\u2705"),jd=n(),Cr=r("td"),Yd=l("\u274C"),Qd=n(),R=r("tr"),Ir=r("td"),Ht=r("a"),tn=l("PyCTCDecode"),en=n(),Nr=r("td"),rn=l("Language model supported CTC decoding for speech recognition"),an=n(),$r=r("td"),on=l("\u274C"),ln=n(),ae=r("td"),dn=l("\u274C"),nn=n(),xr=r("td"),sn=l("\u2705"),hn=n(),Mr=r("td"),fn=l("\u274C"),cn=n(),L=r("tr"),Fr=r("td"),Ct=r("a"),un=l("Pythae"),vn=n(),Br=r("td"),_n=l("Unifyed framework for Generative Autoencoders in Python"),Tn=n(),Or=r("td"),En=l("\u274C"),gn=n(),oe=r("td"),pn=l("\u274C"),mn=n(),zr=r("td"),Dn=l("\u2705"),bn=n(),Ur=r("td"),yn=l("\u2705"),wn=n(),k=r("tr"),Gr=r("td"),It=r("a"),An=l("RL-Baselines3-Zoo"),Pn=n(),Nt=r("td"),Rn=l("Training framework for Reinforcement Learning, using "),$t=r("a"),Ln=l("Stable Baselines3"),kn=l("."),Sn=n(),Vr=r("td"),Hn=l("\u274C"),Cn=n(),le=r("td"),In=l("\u2705"),Nn=n(),Wr=r("td"),$n=l("\u2705"),xn=n(),qr=r("td"),Mn=l("\u2705"),Fn=n(),S=r("tr"),Jr=r("td"),xt=r("a"),Bn=l("Sentence Transformers"),On=n(),Kr=r("td"),zn=l("Compute dense vector representations for sentences, paragraphs, and images."),Un=n(),Xr=r("td"),Gn=l("\u2705"),Vn=n(),de=r("td"),Wn=l("\u2705"),qn=n(),Zr=r("td"),Jn=l("\u2705"),Kn=n(),jr=r("td"),Xn=l("\u2705"),Zn=n(),H=r("tr"),Yr=r("td"),Mt=r("a"),jn=l("spaCy"),Yn=n(),Qr=r("td"),Qn=l("Advanced Natural Language Processing in Python and Cython."),ts=n(),ta=r("td"),es=l("\u2705"),rs=n(),ne=r("td"),as=l("\u2705"),os=n(),ea=r("td"),ls=l("\u2705"),ds=n(),ra=r("td"),ns=l("\u2705"),ss=n(),C=r("tr"),aa=r("td"),Ft=r("a"),hs=l("Speechbrain"),is=n(),oa=r("td"),fs=l("A PyTorch Powered Speech Toolkit."),cs=n(),la=r("td"),us=l("\u2705"),vs=n(),se=r("td"),_s=l("\u2705"),Ts=n(),da=r("td"),Es=l("\u2705"),gs=n(),na=r("td"),ps=l("\u274C"),ms=n(),I=r("tr"),sa=r("td"),Bt=r("a"),Ds=l("Stable-Baselines3"),bs=n(),ha=r("td"),ys=l("Set of reliable implementations of deep reinforcement learning algorithms in PyTorch"),ws=n(),ia=r("td"),As=l("\u274C"),Ps=n(),he=r("td"),Rs=l("\u2705"),Ls=n(),fa=r("td"),ks=l("\u2705"),Ss=n(),ca=r("td"),Hs=l("\u2705"),Cs=n(),N=r("tr"),ua=r("td"),Ot=r("a"),Is=l("TensorFlowTTS"),Ns=n(),va=r("td"),$s=l("Real-time state-of-the-art speech synthesis architectures."),xs=n(),_a=r("td"),Ms=l("\u274C"),Fs=n(),ie=r("td"),Bs=l("\u274C"),Os=n(),Ta=r("td"),zs=l("\u2705"),Us=n(),Ea=r("td"),Gs=l("\u274C"),Vs=n(),$=r("tr"),ga=r("td"),zt=r("a"),Ws=l("Timm"),qs=n(),pa=r("td"),Js=l("Collection of image models, scripts, pretrained weights, etc."),Ks=n(),ma=r("td"),Xs=l("\u2705"),Zs=n(),fe=r("td"),js=l("\u2705"),Ys=n(),Da=r("td"),Qs=l("\u2705"),th=n(),ba=r("td"),eh=l("\u2705"),ka=n(),ht=r("h3"),vt=r("a"),ya=r("span"),Ec(Ut.$$.fragment),rh=n(),wa=r("span"),ah=l("How can I add a new library to the Inference API?"),Sa=n(),_t=r("p"),oh=l("If you\u2019re interested in adding your library, please reach out to us! Read about it in "),ce=r("a"),lh=l("Adding a Library Guide"),dh=l("."),this.h()},l(f){const x=Rc('[data-svelte="svelte-1phssyn"]',document.head);nt=a(x,"META",{name:!0,content:!0}),x.forEach(e),Aa=s(f),st=a(f,"H1",{class:!0});var Ca=o(st);it=a(Ca,"A",{id:!0,class:!0,href:!0});var sh=o(it);ue=a(sh,"SPAN",{});var hh=o(ue);gc(Tt.$$.fragment,hh),hh.forEach(e),sh.forEach(e),Ba=s(Ca),ve=a(Ca,"SPAN",{});var ih=o(ve);Oa=d(ih,"Libraries"),ih.forEach(e),Ca.forEach(e),Pa=s(f),ft=a(f,"P",{});var Ia=o(ft);za=d(Ia,"The Hub has support for dozens of libraries in the Open Source ecosystem. Thanks to the "),_e=a(Ia,"CODE",{});var fh=o(_e);Ua=d(fh,"huggingface_hub"),fh.forEach(e),Ga=d(Ia," Python library, it\u2019s easy to enable sharing your models in the Hub. The Hub supports many libraries, and we\u2019re working on expanding this support! We\u2019re happy to welcome to the Hub a set of Open Source libraries that are pushing Machine Learning forward."),Ia.forEach(e),Ra=s(f),ct=a(f,"P",{});var Na=o(ct);Va=d(Na,"The table below summarizes the supported libraries and their level of integration. Find all our supported libraries "),Et=a(Na,"A",{href:!0,rel:!0});var ch=o(Et);Wa=d(ch,"here"),ch.forEach(e),qa=d(Na,"!"),Na.forEach(e),La=s(f),ut=a(f,"TABLE",{});var $a=o(ut);Te=a($a,"THEAD",{});var uh=o(Te);u=a(uh,"TR",{});var M=o(u);Ee=a(M,"TH",{});var vh=o(Ee);Ja=d(vh,"Library"),vh.forEach(e),Ka=s(M),ge=a(M,"TH",{});var _h=o(ge);Xa=d(_h,"Description"),_h.forEach(e),Za=s(M),pe=a(M,"TH",{});var Th=o(pe);ja=d(Th,"Inference API"),Th.forEach(e),Ya=s(M),Gt=a(M,"TH",{align:!0});var Eh=o(Gt);Qa=d(Eh,"Widgets"),Eh.forEach(e),to=s(M),me=a(M,"TH",{});var gh=o(me);eo=d(gh,"Download from Hub"),gh.forEach(e),ro=s(M),De=a(M,"TH",{});var ph=o(De);ao=d(ph,"Push to Hub"),ph.forEach(e),M.forEach(e),uh.forEach(e),oo=s($a),i=a($a,"TBODY",{});var c=o(i);v=a(c,"TR",{});var F=o(v);be=a(F,"TD",{});var mh=o(be);gt=a(mh,"A",{href:!0,rel:!0});var Dh=o(gt);lo=d(Dh,"\u{1F917} Transformers"),Dh.forEach(e),mh.forEach(e),no=s(F),ye=a(F,"TD",{});var bh=o(ye);so=d(bh,"State-of-the-art Natural Language Processing for Pytorch, TensorFlow, and JAX"),bh.forEach(e),ho=s(F),we=a(F,"TD",{});var yh=o(we);io=d(yh,"\u2705"),yh.forEach(e),fo=s(F),Vt=a(F,"TD",{align:!0});var wh=o(Vt);co=d(wh,"\u2705"),wh.forEach(e),uo=s(F),Ae=a(F,"TD",{});var Ah=o(Ae);vo=d(Ah,"\u2705"),Ah.forEach(e),_o=s(F),Pe=a(F,"TD",{});var Ph=o(Pe);To=d(Ph,"\u2705"),Ph.forEach(e),F.forEach(e),Eo=s(c),_=a(c,"TR",{});var B=o(_);Re=a(B,"TD",{});var Rh=o(Re);pt=a(Rh,"A",{href:!0,rel:!0});var Lh=o(pt);go=d(Lh,"\u{1F917} Diffusers"),Lh.forEach(e),Rh.forEach(e),po=s(B),Le=a(B,"TD",{});var kh=o(Le);mo=d(kh,"A modular toolbox for inference and training of diffusion models"),kh.forEach(e),Do=s(B),ke=a(B,"TD",{});var Sh=o(ke);bo=d(Sh,"\u274C"),Sh.forEach(e),yo=s(B),Wt=a(B,"TD",{align:!0});var Hh=o(Wt);wo=d(Hh,"\u274C"),Hh.forEach(e),Ao=s(B),Se=a(B,"TD",{});var Ch=o(Se);Po=d(Ch,"\u2705"),Ch.forEach(e),Ro=s(B),He=a(B,"TD",{});var Ih=o(He);Lo=d(Ih,"\u2705"),Ih.forEach(e),B.forEach(e),ko=s(c),T=a(c,"TR",{});var O=o(T);Ce=a(O,"TD",{});var Nh=o(Ce);mt=a(Nh,"A",{href:!0,rel:!0});var $h=o(mt);So=d($h,"Adapter Transformers"),$h.forEach(e),Nh.forEach(e),Ho=s(O),Ie=a(O,"TD",{});var xh=o(Ie);Co=d(xh,"Extends \u{1F917}Transformers with Adapters."),xh.forEach(e),Io=s(O),Ne=a(O,"TD",{});var Mh=o(Ne);No=d(Mh,"\u274C"),Mh.forEach(e),$o=s(O),qt=a(O,"TD",{align:!0});var Fh=o(qt);xo=d(Fh,"\u274C"),Fh.forEach(e),Mo=s(O),$e=a(O,"TD",{});var Bh=o($e);Fo=d(Bh,"\u2705"),Bh.forEach(e),Bo=s(O),xe=a(O,"TD",{});var Oh=o(xe);Oo=d(Oh,"\u2705"),Oh.forEach(e),O.forEach(e),zo=s(c),E=a(c,"TR",{});var z=o(E);Me=a(z,"TD",{});var zh=o(Me);Dt=a(zh,"A",{href:!0,rel:!0});var Uh=o(Dt);Uo=d(Uh,"AllenNLP"),Uh.forEach(e),zh.forEach(e),Go=s(z),Fe=a(z,"TD",{});var Gh=o(Fe);Vo=d(Gh,"An open-source NLP research library, built on PyTorch."),Gh.forEach(e),Wo=s(z),Be=a(z,"TD",{});var Vh=o(Be);qo=d(Vh,"\u2705"),Vh.forEach(e),Jo=s(z),Jt=a(z,"TD",{align:!0});var Wh=o(Jt);Ko=d(Wh,"\u2705"),Wh.forEach(e),Xo=s(z),Oe=a(z,"TD",{});var qh=o(Oe);Zo=d(qh,"\u2705"),qh.forEach(e),jo=s(z),ze=a(z,"TD",{});var Jh=o(ze);Yo=d(Jh,"\u274C"),Jh.forEach(e),z.forEach(e),Qo=s(c),g=a(c,"TR",{});var U=o(g);Ue=a(U,"TD",{});var Kh=o(Ue);bt=a(Kh,"A",{href:!0,rel:!0});var Xh=o(bt);tl=d(Xh,"Asteroid"),Xh.forEach(e),Kh.forEach(e),el=s(U),Ge=a(U,"TD",{});var Zh=o(Ge);rl=d(Zh,"Pytorch-based audio source separation toolkit"),Zh.forEach(e),al=s(U),Ve=a(U,"TD",{});var jh=o(Ve);ol=d(jh,"\u2705"),jh.forEach(e),ll=s(U),Kt=a(U,"TD",{align:!0});var Yh=o(Kt);dl=d(Yh,"\u2705"),Yh.forEach(e),nl=s(U),We=a(U,"TD",{});var Qh=o(We);sl=d(Qh,"\u2705"),Qh.forEach(e),hl=s(U),qe=a(U,"TD",{});var ti=o(qe);il=d(ti,"\u274C"),ti.forEach(e),U.forEach(e),fl=s(c),p=a(c,"TR",{});var G=o(p);Je=a(G,"TD",{});var ei=o(Je);yt=a(ei,"A",{href:!0,rel:!0});var ri=o(yt);cl=d(ri,"docTR"),ri.forEach(e),ei.forEach(e),ul=s(G),Ke=a(G,"TD",{});var ai=o(Ke);vl=d(ai,"Models and datasets for OCR-related tasks in PyTorch & TensorFlow"),ai.forEach(e),_l=s(G),Xe=a(G,"TD",{});var oi=o(Xe);Tl=d(oi,"\u2705"),oi.forEach(e),El=s(G),Xt=a(G,"TD",{align:!0});var li=o(Xt);gl=d(li,"\u2705"),li.forEach(e),pl=s(G),Ze=a(G,"TD",{});var di=o(Ze);ml=d(di,"\u2705"),di.forEach(e),Dl=s(G),je=a(G,"TD",{});var ni=o(je);bl=d(ni,"\u274C"),ni.forEach(e),G.forEach(e),yl=s(c),m=a(c,"TR",{});var V=o(m);Ye=a(V,"TD",{});var si=o(Ye);wt=a(si,"A",{href:!0,rel:!0});var hi=o(wt);wl=d(hi,"ESPnet"),hi.forEach(e),si.forEach(e),Al=s(V),Qe=a(V,"TD",{});var ii=o(Qe);Pl=d(ii,"End-to-end speech processing toolkit (e.g. TTS)"),ii.forEach(e),Rl=s(V),tr=a(V,"TD",{});var fi=o(tr);Ll=d(fi,"\u2705"),fi.forEach(e),kl=s(V),Zt=a(V,"TD",{align:!0});var ci=o(Zt);Sl=d(ci,"\u2705"),ci.forEach(e),Hl=s(V),er=a(V,"TD",{});var ui=o(er);Cl=d(ui,"\u2705"),ui.forEach(e),Il=s(V),rr=a(V,"TD",{});var vi=o(rr);Nl=d(vi,"\u274C"),vi.forEach(e),V.forEach(e),$l=s(c),D=a(c,"TR",{});var W=o(D);ar=a(W,"TD",{});var _i=o(ar);At=a(_i,"A",{href:!0,rel:!0});var Ti=o(At);xl=d(Ti,"fastai"),Ti.forEach(e),_i.forEach(e),Ml=s(W),or=a(W,"TD",{});var Ei=o(or);Fl=d(Ei,"Library to train fast and accurate models with state-of-the-art outputs."),Ei.forEach(e),Bl=s(W),lr=a(W,"TD",{});var gi=o(lr);Ol=d(gi,"\u2705"),gi.forEach(e),zl=s(W),jt=a(W,"TD",{align:!0});var pi=o(jt);Ul=d(pi,"\u2705"),pi.forEach(e),Gl=s(W),dr=a(W,"TD",{});var mi=o(dr);Vl=d(mi,"\u2705"),mi.forEach(e),Wl=s(W),nr=a(W,"TD",{});var Di=o(nr);ql=d(Di,"\u2705"),Di.forEach(e),W.forEach(e),Jl=s(c),b=a(c,"TR",{});var q=o(b);sr=a(q,"TD",{});var bi=o(sr);Pt=a(bi,"A",{href:!0,rel:!0});var yi=o(Pt);Kl=d(yi,"Keras"),yi.forEach(e),bi.forEach(e),Xl=s(q),hr=a(q,"TD",{});var wi=o(hr);Zl=d(wi,"Library that uses a consistent and simple API to build models leveraging TensorFlow and its ecosystem."),wi.forEach(e),jl=s(q),ir=a(q,"TD",{});var Ai=o(ir);Yl=d(Ai,"\u274C"),Ai.forEach(e),Ql=s(q),Yt=a(q,"TD",{align:!0});var Pi=o(Yt);td=d(Pi,"\u274C"),Pi.forEach(e),ed=s(q),fr=a(q,"TD",{});var Ri=o(fr);rd=d(Ri,"\u2705"),Ri.forEach(e),ad=s(q),cr=a(q,"TD",{});var Li=o(cr);od=d(Li,"\u2705"),Li.forEach(e),q.forEach(e),ld=s(c),y=a(c,"TR",{});var J=o(y);ur=a(J,"TD",{});var ki=o(ur);Rt=a(ki,"A",{href:!0,rel:!0});var Si=o(Rt);dd=d(Si,"Flair"),Si.forEach(e),ki.forEach(e),nd=s(J),vr=a(J,"TD",{});var Hi=o(vr);sd=d(Hi,"Very simple framework for state-of-the-art NLP."),Hi.forEach(e),hd=s(J),_r=a(J,"TD",{});var Ci=o(_r);id=d(Ci,"\u2705"),Ci.forEach(e),fd=s(J),Qt=a(J,"TD",{align:!0});var Ii=o(Qt);cd=d(Ii,"\u2705"),Ii.forEach(e),ud=s(J),Tr=a(J,"TD",{});var Ni=o(Tr);vd=d(Ni,"\u2705"),Ni.forEach(e),_d=s(J),Er=a(J,"TD",{});var $i=o(Er);Td=d($i,"\u274C"),$i.forEach(e),J.forEach(e),Ed=s(c),w=a(c,"TR",{});var K=o(w);gr=a(K,"TD",{});var xi=o(gr);Lt=a(xi,"A",{href:!0,rel:!0});var Mi=o(Lt);gd=d(Mi,"ML-Agents"),Mi.forEach(e),xi.forEach(e),pd=s(K),pr=a(K,"TD",{});var Fi=o(pr);md=d(Fi,"Enables games and simulations made with Unity to serve as environments for training intelligent agents."),Fi.forEach(e),Dd=s(K),mr=a(K,"TD",{});var Bi=o(mr);bd=d(Bi,"\u274C"),Bi.forEach(e),yd=s(K),te=a(K,"TD",{align:!0});var Oi=o(te);wd=d(Oi,"\u274C"),Oi.forEach(e),Ad=s(K),Dr=a(K,"TD",{});var zi=o(Dr);Pd=d(zi,"\u2705"),zi.forEach(e),Rd=s(K),br=a(K,"TD",{});var Ui=o(br);Ld=d(Ui,"\u2705"),Ui.forEach(e),K.forEach(e),kd=s(c),A=a(c,"TR",{});var X=o(A);yr=a(X,"TD",{});var Gi=o(yr);kt=a(Gi,"A",{href:!0,rel:!0});var Vi=o(kt);Sd=d(Vi,"NeMo"),Vi.forEach(e),Gi.forEach(e),Hd=s(X),wr=a(X,"TD",{});var Wi=o(wr);Cd=d(Wi,"Conversational AI toolkit built for researchers"),Wi.forEach(e),Id=s(X),Ar=a(X,"TD",{});var qi=o(Ar);Nd=d(qi,"\u2705"),qi.forEach(e),$d=s(X),ee=a(X,"TD",{align:!0});var Ji=o(ee);xd=d(Ji,"\u2705"),Ji.forEach(e),Md=s(X),Pr=a(X,"TD",{});var Ki=o(Pr);Fd=d(Ki,"\u2705"),Ki.forEach(e),Bd=s(X),Rr=a(X,"TD",{});var Xi=o(Rr);Od=d(Xi,"\u274C"),Xi.forEach(e),X.forEach(e),zd=s(c),P=a(c,"TR",{});var Z=o(P);Lr=a(Z,"TD",{});var Zi=o(Lr);St=a(Zi,"A",{href:!0,rel:!0});var ji=o(St);Ud=d(ji,"Pyannote"),ji.forEach(e),Zi.forEach(e),Gd=s(Z),kr=a(Z,"TD",{});var Yi=o(kr);Vd=d(Yi,"Neural building blocks for speaker diarization."),Yi.forEach(e),Wd=s(Z),Sr=a(Z,"TD",{});var Qi=o(Sr);qd=d(Qi,"\u274C"),Qi.forEach(e),Jd=s(Z),re=a(Z,"TD",{align:!0});var tf=o(re);Kd=d(tf,"\u274C"),tf.forEach(e),Xd=s(Z),Hr=a(Z,"TD",{});var ef=o(Hr);Zd=d(ef,"\u2705"),ef.forEach(e),jd=s(Z),Cr=a(Z,"TD",{});var rf=o(Cr);Yd=d(rf,"\u274C"),rf.forEach(e),Z.forEach(e),Qd=s(c),R=a(c,"TR",{});var j=o(R);Ir=a(j,"TD",{});var af=o(Ir);Ht=a(af,"A",{href:!0,rel:!0});var of=o(Ht);tn=d(of,"PyCTCDecode"),of.forEach(e),af.forEach(e),en=s(j),Nr=a(j,"TD",{});var lf=o(Nr);rn=d(lf,"Language model supported CTC decoding for speech recognition"),lf.forEach(e),an=s(j),$r=a(j,"TD",{});var df=o($r);on=d(df,"\u274C"),df.forEach(e),ln=s(j),ae=a(j,"TD",{align:!0});var nf=o(ae);dn=d(nf,"\u274C"),nf.forEach(e),nn=s(j),xr=a(j,"TD",{});var sf=o(xr);sn=d(sf,"\u2705"),sf.forEach(e),hn=s(j),Mr=a(j,"TD",{});var hf=o(Mr);fn=d(hf,"\u274C"),hf.forEach(e),j.forEach(e),cn=s(c),L=a(c,"TR",{});var Y=o(L);Fr=a(Y,"TD",{});var ff=o(Fr);Ct=a(ff,"A",{href:!0,rel:!0});var cf=o(Ct);un=d(cf,"Pythae"),cf.forEach(e),ff.forEach(e),vn=s(Y),Br=a(Y,"TD",{});var uf=o(Br);_n=d(uf,"Unifyed framework for Generative Autoencoders in Python"),uf.forEach(e),Tn=s(Y),Or=a(Y,"TD",{});var vf=o(Or);En=d(vf,"\u274C"),vf.forEach(e),gn=s(Y),oe=a(Y,"TD",{align:!0});var _f=o(oe);pn=d(_f,"\u274C"),_f.forEach(e),mn=s(Y),zr=a(Y,"TD",{});var Tf=o(zr);Dn=d(Tf,"\u2705"),Tf.forEach(e),bn=s(Y),Ur=a(Y,"TD",{});var Ef=o(Ur);yn=d(Ef,"\u2705"),Ef.forEach(e),Y.forEach(e),wn=s(c),k=a(c,"TR",{});var Q=o(k);Gr=a(Q,"TD",{});var gf=o(Gr);It=a(gf,"A",{href:!0,rel:!0});var pf=o(It);An=d(pf,"RL-Baselines3-Zoo"),pf.forEach(e),gf.forEach(e),Pn=s(Q),Nt=a(Q,"TD",{});var xa=o(Nt);Rn=d(xa,"Training framework for Reinforcement Learning, using "),$t=a(xa,"A",{href:!0,rel:!0});var mf=o($t);Ln=d(mf,"Stable Baselines3"),mf.forEach(e),kn=d(xa,"."),xa.forEach(e),Sn=s(Q),Vr=a(Q,"TD",{});var Df=o(Vr);Hn=d(Df,"\u274C"),Df.forEach(e),Cn=s(Q),le=a(Q,"TD",{align:!0});var bf=o(le);In=d(bf,"\u2705"),bf.forEach(e),Nn=s(Q),Wr=a(Q,"TD",{});var yf=o(Wr);$n=d(yf,"\u2705"),yf.forEach(e),xn=s(Q),qr=a(Q,"TD",{});var wf=o(qr);Mn=d(wf,"\u2705"),wf.forEach(e),Q.forEach(e),Fn=s(c),S=a(c,"TR",{});var tt=o(S);Jr=a(tt,"TD",{});var Af=o(Jr);xt=a(Af,"A",{href:!0,rel:!0});var Pf=o(xt);Bn=d(Pf,"Sentence Transformers"),Pf.forEach(e),Af.forEach(e),On=s(tt),Kr=a(tt,"TD",{});var Rf=o(Kr);zn=d(Rf,"Compute dense vector representations for sentences, paragraphs, and images."),Rf.forEach(e),Un=s(tt),Xr=a(tt,"TD",{});var Lf=o(Xr);Gn=d(Lf,"\u2705"),Lf.forEach(e),Vn=s(tt),de=a(tt,"TD",{align:!0});var kf=o(de);Wn=d(kf,"\u2705"),kf.forEach(e),qn=s(tt),Zr=a(tt,"TD",{});var Sf=o(Zr);Jn=d(Sf,"\u2705"),Sf.forEach(e),Kn=s(tt),jr=a(tt,"TD",{});var Hf=o(jr);Xn=d(Hf,"\u2705"),Hf.forEach(e),tt.forEach(e),Zn=s(c),H=a(c,"TR",{});var et=o(H);Yr=a(et,"TD",{});var Cf=o(Yr);Mt=a(Cf,"A",{href:!0,rel:!0});var If=o(Mt);jn=d(If,"spaCy"),If.forEach(e),Cf.forEach(e),Yn=s(et),Qr=a(et,"TD",{});var Nf=o(Qr);Qn=d(Nf,"Advanced Natural Language Processing in Python and Cython."),Nf.forEach(e),ts=s(et),ta=a(et,"TD",{});var $f=o(ta);es=d($f,"\u2705"),$f.forEach(e),rs=s(et),ne=a(et,"TD",{align:!0});var xf=o(ne);as=d(xf,"\u2705"),xf.forEach(e),os=s(et),ea=a(et,"TD",{});var Mf=o(ea);ls=d(Mf,"\u2705"),Mf.forEach(e),ds=s(et),ra=a(et,"TD",{});var Ff=o(ra);ns=d(Ff,"\u2705"),Ff.forEach(e),et.forEach(e),ss=s(c),C=a(c,"TR",{});var rt=o(C);aa=a(rt,"TD",{});var Bf=o(aa);Ft=a(Bf,"A",{href:!0,rel:!0});var Of=o(Ft);hs=d(Of,"Speechbrain"),Of.forEach(e),Bf.forEach(e),is=s(rt),oa=a(rt,"TD",{});var zf=o(oa);fs=d(zf,"A PyTorch Powered Speech Toolkit."),zf.forEach(e),cs=s(rt),la=a(rt,"TD",{});var Uf=o(la);us=d(Uf,"\u2705"),Uf.forEach(e),vs=s(rt),se=a(rt,"TD",{align:!0});var Gf=o(se);_s=d(Gf,"\u2705"),Gf.forEach(e),Ts=s(rt),da=a(rt,"TD",{});var Vf=o(da);Es=d(Vf,"\u2705"),Vf.forEach(e),gs=s(rt),na=a(rt,"TD",{});var Wf=o(na);ps=d(Wf,"\u274C"),Wf.forEach(e),rt.forEach(e),ms=s(c),I=a(c,"TR",{});var at=o(I);sa=a(at,"TD",{});var qf=o(sa);Bt=a(qf,"A",{href:!0,rel:!0});var Jf=o(Bt);Ds=d(Jf,"Stable-Baselines3"),Jf.forEach(e),qf.forEach(e),bs=s(at),ha=a(at,"TD",{});var Kf=o(ha);ys=d(Kf,"Set of reliable implementations of deep reinforcement learning algorithms in PyTorch"),Kf.forEach(e),ws=s(at),ia=a(at,"TD",{});var Xf=o(ia);As=d(Xf,"\u274C"),Xf.forEach(e),Ps=s(at),he=a(at,"TD",{align:!0});var Zf=o(he);Rs=d(Zf,"\u2705"),Zf.forEach(e),Ls=s(at),fa=a(at,"TD",{});var jf=o(fa);ks=d(jf,"\u2705"),jf.forEach(e),Ss=s(at),ca=a(at,"TD",{});var Yf=o(ca);Hs=d(Yf,"\u2705"),Yf.forEach(e),at.forEach(e),Cs=s(c),N=a(c,"TR",{});var ot=o(N);ua=a(ot,"TD",{});var Qf=o(ua);Ot=a(Qf,"A",{href:!0,rel:!0});var tc=o(Ot);Is=d(tc,"TensorFlowTTS"),tc.forEach(e),Qf.forEach(e),Ns=s(ot),va=a(ot,"TD",{});var ec=o(va);$s=d(ec,"Real-time state-of-the-art speech synthesis architectures."),ec.forEach(e),xs=s(ot),_a=a(ot,"TD",{});var rc=o(_a);Ms=d(rc,"\u274C"),rc.forEach(e),Fs=s(ot),ie=a(ot,"TD",{align:!0});var ac=o(ie);Bs=d(ac,"\u274C"),ac.forEach(e),Os=s(ot),Ta=a(ot,"TD",{});var oc=o(Ta);zs=d(oc,"\u2705"),oc.forEach(e),Us=s(ot),Ea=a(ot,"TD",{});var lc=o(Ea);Gs=d(lc,"\u274C"),lc.forEach(e),ot.forEach(e),Vs=s(c),$=a(c,"TR",{});var lt=o($);ga=a(lt,"TD",{});var dc=o(ga);zt=a(dc,"A",{href:!0,rel:!0});var nc=o(zt);Ws=d(nc,"Timm"),nc.forEach(e),dc.forEach(e),qs=s(lt),pa=a(lt,"TD",{});var sc=o(pa);Js=d(sc,"Collection of image models, scripts, pretrained weights, etc."),sc.forEach(e),Ks=s(lt),ma=a(lt,"TD",{});var hc=o(ma);Xs=d(hc,"\u2705"),hc.forEach(e),Zs=s(lt),fe=a(lt,"TD",{align:!0});var ic=o(fe);js=d(ic,"\u2705"),ic.forEach(e),Ys=s(lt),Da=a(lt,"TD",{});var fc=o(Da);Qs=d(fc,"\u2705"),fc.forEach(e),th=s(lt),ba=a(lt,"TD",{});var cc=o(ba);eh=d(cc,"\u2705"),cc.forEach(e),lt.forEach(e),c.forEach(e),$a.forEach(e),ka=s(f),ht=a(f,"H3",{class:!0});var Ma=o(ht);vt=a(Ma,"A",{id:!0,class:!0,href:!0});var uc=o(vt);ya=a(uc,"SPAN",{});var vc=o(ya);gc(Ut.$$.fragment,vc),vc.forEach(e),uc.forEach(e),rh=s(Ma),wa=a(Ma,"SPAN",{});var _c=o(wa);ah=d(_c,"How can I add a new library to the Inference API?"),_c.forEach(e),Ma.forEach(e),Sa=s(f),_t=a(f,"P",{});var Fa=o(_t);oh=d(Fa,"If you\u2019re interested in adding your library, please reach out to us! Read about it in "),ce=a(Fa,"A",{href:!0});var Tc=o(ce);lh=d(Tc,"Adding a Library Guide"),Tc.forEach(e),dh=d(Fa,"."),Fa.forEach(e),this.h()},h(){h(nt,"name","hf:doc:metadata"),h(nt,"content",JSON.stringify(Hc)),h(it,"id","libraries"),h(it,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(it,"href","#libraries"),h(st,"class","relative group"),h(Et,"href","https://github.com/huggingface/hub-docs/blob/main/js/src/lib/interfaces/Libraries.ts"),h(Et,"rel","nofollow"),h(Gt,"align","right"),h(gt,"href","https://github.com/huggingface/transformers"),h(gt,"rel","nofollow"),h(Vt,"align","right"),h(pt,"href","https://github.com/huggingface/diffusers"),h(pt,"rel","nofollow"),h(Wt,"align","right"),h(mt,"href","https://github.com/Adapter-Hub/adapter-transformers"),h(mt,"rel","nofollow"),h(qt,"align","right"),h(Dt,"href","https://github.com/allenai/allennlp"),h(Dt,"rel","nofollow"),h(Jt,"align","right"),h(bt,"href","https://github.com/asteroid-team/asteroid"),h(bt,"rel","nofollow"),h(Kt,"align","right"),h(yt,"href","https://github.com/mindee/doctr"),h(yt,"rel","nofollow"),h(Xt,"align","right"),h(wt,"href","https://github.com/espnet/espnet"),h(wt,"rel","nofollow"),h(Zt,"align","right"),h(At,"href","https://github.com/fastai/fastai"),h(At,"rel","nofollow"),h(jt,"align","right"),h(Pt,"href","https://huggingface.co/docs/hub/keras"),h(Pt,"rel","nofollow"),h(Yt,"align","right"),h(Rt,"href","https://github.com/flairNLP/flair"),h(Rt,"rel","nofollow"),h(Qt,"align","right"),h(Lt,"href","https://github.com/huggingface/ml-agents"),h(Lt,"rel","nofollow"),h(te,"align","right"),h(kt,"href","https://github.com/NVIDIA/NeMo"),h(kt,"rel","nofollow"),h(ee,"align","right"),h(St,"href","https://github.com/pyannote/pyannote-audio"),h(St,"rel","nofollow"),h(re,"align","right"),h(Ht,"href","https://github.com/kensho-technologies/pyctcdecode"),h(Ht,"rel","nofollow"),h(ae,"align","right"),h(Ct,"href","https://github.com/clementchadebec/benchmark_VAE"),h(Ct,"rel","nofollow"),h(oe,"align","right"),h(It,"href","https://github.com/DLR-RM/rl-baselines3-zoo"),h(It,"rel","nofollow"),h($t,"href","https://github.com/DLR-RM/stable-baselines3"),h($t,"rel","nofollow"),h(le,"align","right"),h(xt,"href","https://github.com/UKPLab/sentence-transformers"),h(xt,"rel","nofollow"),h(de,"align","right"),h(Mt,"href","https://github.com/explosion/spaCy"),h(Mt,"rel","nofollow"),h(ne,"align","right"),h(Ft,"href","https://speechbrain.github.io/"),h(Ft,"rel","nofollow"),h(se,"align","right"),h(Bt,"href","https://github.com/DLR-RM/stable-baselines3"),h(Bt,"rel","nofollow"),h(he,"align","right"),h(Ot,"href","https://github.com/TensorSpeech/TensorFlowTTS"),h(Ot,"rel","nofollow"),h(ie,"align","right"),h(zt,"href","https://github.com/rwightman/pytorch-image-models"),h(zt,"rel","nofollow"),h(fe,"align","right"),h(vt,"id","how-can-i-add-a-new-library-to-the-inference-api"),h(vt,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(vt,"href","#how-can-i-add-a-new-library-to-the-inference-api"),h(ht,"class","relative group"),h(ce,"href","./models-adding-libraries")},m(f,x){t(document.head,nt),dt(f,Aa,x),dt(f,st,x),t(st,it),t(it,ue),pc(Tt,ue,null),t(st,Ba),t(st,ve),t(ve,Oa),dt(f,Pa,x),dt(f,ft,x),t(ft,za),t(ft,_e),t(_e,Ua),t(ft,Ga),dt(f,Ra,x),dt(f,ct,x),t(ct,Va),t(ct,Et),t(Et,Wa),t(ct,qa),dt(f,La,x),dt(f,ut,x),t(ut,Te),t(Te,u),t(u,Ee),t(Ee,Ja),t(u,Ka),t(u,ge),t(ge,Xa),t(u,Za),t(u,pe),t(pe,ja),t(u,Ya),t(u,Gt),t(Gt,Qa),t(u,to),t(u,me),t(me,eo),t(u,ro),t(u,De),t(De,ao),t(ut,oo),t(ut,i),t(i,v),t(v,be),t(be,gt),t(gt,lo),t(v,no),t(v,ye),t(ye,so),t(v,ho),t(v,we),t(we,io),t(v,fo),t(v,Vt),t(Vt,co),t(v,uo),t(v,Ae),t(Ae,vo),t(v,_o),t(v,Pe),t(Pe,To),t(i,Eo),t(i,_),t(_,Re),t(Re,pt),t(pt,go),t(_,po),t(_,Le),t(Le,mo),t(_,Do),t(_,ke),t(ke,bo),t(_,yo),t(_,Wt),t(Wt,wo),t(_,Ao),t(_,Se),t(Se,Po),t(_,Ro),t(_,He),t(He,Lo),t(i,ko),t(i,T),t(T,Ce),t(Ce,mt),t(mt,So),t(T,Ho),t(T,Ie),t(Ie,Co),t(T,Io),t(T,Ne),t(Ne,No),t(T,$o),t(T,qt),t(qt,xo),t(T,Mo),t(T,$e),t($e,Fo),t(T,Bo),t(T,xe),t(xe,Oo),t(i,zo),t(i,E),t(E,Me),t(Me,Dt),t(Dt,Uo),t(E,Go),t(E,Fe),t(Fe,Vo),t(E,Wo),t(E,Be),t(Be,qo),t(E,Jo),t(E,Jt),t(Jt,Ko),t(E,Xo),t(E,Oe),t(Oe,Zo),t(E,jo),t(E,ze),t(ze,Yo),t(i,Qo),t(i,g),t(g,Ue),t(Ue,bt),t(bt,tl),t(g,el),t(g,Ge),t(Ge,rl),t(g,al),t(g,Ve),t(Ve,ol),t(g,ll),t(g,Kt),t(Kt,dl),t(g,nl),t(g,We),t(We,sl),t(g,hl),t(g,qe),t(qe,il),t(i,fl),t(i,p),t(p,Je),t(Je,yt),t(yt,cl),t(p,ul),t(p,Ke),t(Ke,vl),t(p,_l),t(p,Xe),t(Xe,Tl),t(p,El),t(p,Xt),t(Xt,gl),t(p,pl),t(p,Ze),t(Ze,ml),t(p,Dl),t(p,je),t(je,bl),t(i,yl),t(i,m),t(m,Ye),t(Ye,wt),t(wt,wl),t(m,Al),t(m,Qe),t(Qe,Pl),t(m,Rl),t(m,tr),t(tr,Ll),t(m,kl),t(m,Zt),t(Zt,Sl),t(m,Hl),t(m,er),t(er,Cl),t(m,Il),t(m,rr),t(rr,Nl),t(i,$l),t(i,D),t(D,ar),t(ar,At),t(At,xl),t(D,Ml),t(D,or),t(or,Fl),t(D,Bl),t(D,lr),t(lr,Ol),t(D,zl),t(D,jt),t(jt,Ul),t(D,Gl),t(D,dr),t(dr,Vl),t(D,Wl),t(D,nr),t(nr,ql),t(i,Jl),t(i,b),t(b,sr),t(sr,Pt),t(Pt,Kl),t(b,Xl),t(b,hr),t(hr,Zl),t(b,jl),t(b,ir),t(ir,Yl),t(b,Ql),t(b,Yt),t(Yt,td),t(b,ed),t(b,fr),t(fr,rd),t(b,ad),t(b,cr),t(cr,od),t(i,ld),t(i,y),t(y,ur),t(ur,Rt),t(Rt,dd),t(y,nd),t(y,vr),t(vr,sd),t(y,hd),t(y,_r),t(_r,id),t(y,fd),t(y,Qt),t(Qt,cd),t(y,ud),t(y,Tr),t(Tr,vd),t(y,_d),t(y,Er),t(Er,Td),t(i,Ed),t(i,w),t(w,gr),t(gr,Lt),t(Lt,gd),t(w,pd),t(w,pr),t(pr,md),t(w,Dd),t(w,mr),t(mr,bd),t(w,yd),t(w,te),t(te,wd),t(w,Ad),t(w,Dr),t(Dr,Pd),t(w,Rd),t(w,br),t(br,Ld),t(i,kd),t(i,A),t(A,yr),t(yr,kt),t(kt,Sd),t(A,Hd),t(A,wr),t(wr,Cd),t(A,Id),t(A,Ar),t(Ar,Nd),t(A,$d),t(A,ee),t(ee,xd),t(A,Md),t(A,Pr),t(Pr,Fd),t(A,Bd),t(A,Rr),t(Rr,Od),t(i,zd),t(i,P),t(P,Lr),t(Lr,St),t(St,Ud),t(P,Gd),t(P,kr),t(kr,Vd),t(P,Wd),t(P,Sr),t(Sr,qd),t(P,Jd),t(P,re),t(re,Kd),t(P,Xd),t(P,Hr),t(Hr,Zd),t(P,jd),t(P,Cr),t(Cr,Yd),t(i,Qd),t(i,R),t(R,Ir),t(Ir,Ht),t(Ht,tn),t(R,en),t(R,Nr),t(Nr,rn),t(R,an),t(R,$r),t($r,on),t(R,ln),t(R,ae),t(ae,dn),t(R,nn),t(R,xr),t(xr,sn),t(R,hn),t(R,Mr),t(Mr,fn),t(i,cn),t(i,L),t(L,Fr),t(Fr,Ct),t(Ct,un),t(L,vn),t(L,Br),t(Br,_n),t(L,Tn),t(L,Or),t(Or,En),t(L,gn),t(L,oe),t(oe,pn),t(L,mn),t(L,zr),t(zr,Dn),t(L,bn),t(L,Ur),t(Ur,yn),t(i,wn),t(i,k),t(k,Gr),t(Gr,It),t(It,An),t(k,Pn),t(k,Nt),t(Nt,Rn),t(Nt,$t),t($t,Ln),t(Nt,kn),t(k,Sn),t(k,Vr),t(Vr,Hn),t(k,Cn),t(k,le),t(le,In),t(k,Nn),t(k,Wr),t(Wr,$n),t(k,xn),t(k,qr),t(qr,Mn),t(i,Fn),t(i,S),t(S,Jr),t(Jr,xt),t(xt,Bn),t(S,On),t(S,Kr),t(Kr,zn),t(S,Un),t(S,Xr),t(Xr,Gn),t(S,Vn),t(S,de),t(de,Wn),t(S,qn),t(S,Zr),t(Zr,Jn),t(S,Kn),t(S,jr),t(jr,Xn),t(i,Zn),t(i,H),t(H,Yr),t(Yr,Mt),t(Mt,jn),t(H,Yn),t(H,Qr),t(Qr,Qn),t(H,ts),t(H,ta),t(ta,es),t(H,rs),t(H,ne),t(ne,as),t(H,os),t(H,ea),t(ea,ls),t(H,ds),t(H,ra),t(ra,ns),t(i,ss),t(i,C),t(C,aa),t(aa,Ft),t(Ft,hs),t(C,is),t(C,oa),t(oa,fs),t(C,cs),t(C,la),t(la,us),t(C,vs),t(C,se),t(se,_s),t(C,Ts),t(C,da),t(da,Es),t(C,gs),t(C,na),t(na,ps),t(i,ms),t(i,I),t(I,sa),t(sa,Bt),t(Bt,Ds),t(I,bs),t(I,ha),t(ha,ys),t(I,ws),t(I,ia),t(ia,As),t(I,Ps),t(I,he),t(he,Rs),t(I,Ls),t(I,fa),t(fa,ks),t(I,Ss),t(I,ca),t(ca,Hs),t(i,Cs),t(i,N),t(N,ua),t(ua,Ot),t(Ot,Is),t(N,Ns),t(N,va),t(va,$s),t(N,xs),t(N,_a),t(_a,Ms),t(N,Fs),t(N,ie),t(ie,Bs),t(N,Os),t(N,Ta),t(Ta,zs),t(N,Us),t(N,Ea),t(Ea,Gs),t(i,Vs),t(i,$),t($,ga),t(ga,zt),t(zt,Ws),t($,qs),t($,pa),t(pa,Js),t($,Ks),t($,ma),t(ma,Xs),t($,Zs),t($,fe),t(fe,js),t($,Ys),t($,Da),t(Da,Qs),t($,th),t($,ba),t(ba,eh),dt(f,ka,x),dt(f,ht,x),t(ht,vt),t(vt,ya),pc(Ut,ya,null),t(ht,rh),t(ht,wa),t(wa,ah),dt(f,Sa,x),dt(f,_t,x),t(_t,oh),t(_t,ce),t(ce,lh),t(_t,dh),Ha=!0},p:Lc,i(f){Ha||(mc(Tt.$$.fragment,f),mc(Ut.$$.fragment,f),Ha=!0)},o(f){Dc(Tt.$$.fragment,f),Dc(Ut.$$.fragment,f),Ha=!1},d(f){e(nt),f&&e(Aa),f&&e(st),bc(Tt),f&&e(Pa),f&&e(ft),f&&e(Ra),f&&e(ct),f&&e(La),f&&e(ut),f&&e(ka),f&&e(ht),bc(Ut),f&&e(Sa),f&&e(_t)}}}const Hc={local:"libraries",sections:[{local:"how-can-i-add-a-new-library-to-the-inference-api",title:"How can I add a new library to the Inference API?"}],title:"Libraries"};function Cc(nh){return kc(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class $c extends wc{constructor(nt){super();Ac(this,nt,Cc,Sc,Pc,{})}}export{$c as default,Hc as metadata};
