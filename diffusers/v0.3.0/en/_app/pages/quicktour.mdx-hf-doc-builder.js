import{S as pn,i as hn,s as dn,e as o,k as u,w as g,t as n,M as cn,c as a,d as i,m as p,a as s,x as v,h as l,b as h,G as t,g as f,y as _,L as mn,q as y,o as w,B as b,v as gn}from"../chunks/vendor-hf-doc-builder.js";import{I as un}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as P}from"../chunks/CodeBlock-hf-doc-builder.js";function vn(Ua){let S,Lt,q,L,tt,X,qi,it,xi,Mt,M,Ii,Ee,Ni,Oi,Ut,ke,Ci,Vt,J,Rt,x,U,ot,Z,Gi,at,Hi,Yt,T,Li,$e,Mi,Ui,De,Vi,Ri,zt,V,st,I,nt,lt,Yi,zi,rt,ft,Bi,Fi,ut,pt,Ki,Qi,D,N,ht,Wi,Xi,dt,Ji,Zi,ct,Pe,eo,to,O,mt,io,oo,gt,ao,so,vt,Te,no,lo,C,_t,ro,fo,yt,uo,po,wt,Ae,ho,co,G,bt,mo,go,Et,vo,_o,kt,je,yo,Bt,R,wo,Se,$t,bo,Eo,Ft,d,ko,qe,$o,Do,xe,Po,To,ee,Ao,jo,Ie,So,qo,te,xo,Io,Kt,ie,Qt,Y,No,Ne,Oo,Co,Wt,oe,Xt,z,Go,Dt,Ho,Lo,Jt,ae,Zt,B,Mo,se,Uo,Vo,ei,Oe,Ro,ti,ne,ii,c,Yo,le,zo,Bo,re,Fo,Ko,Pt,Qo,Wo,fe,Tt,Xo,Jo,ue,Zo,ea,oi,pe,ai,A,ta,he,At,ia,oa,jt,aa,sa,si,de,ni,Ce,na,li,ce,St,la,ra,ri,me,fi,F,fa,qt,ua,pa,ui,ge,pi,Ge,ha,hi,ve,di,m,da,He,ca,ma,Le,ga,va,xt,_a,ya,Me,wa,ba,ci,_e,mi,H,ye,Ea,ka,Ue,$a,Da,gi,K,Pa,we,Ta,Aa,vi,E,It,Ve,ja,Sa,Nt,Re,qa,xa,Ot,Ye,Ia,Na,Ct,ze,Oa,_i,be,Ca,Be,Gt,Ga,yi,Fe,Ha,wi;return X=new un({}),J=new P({props:{code:"pip install --upgrade diffusers",highlighted:"pip install --upgrade diffusers"}}),Z=new un({}),ie=new P({props:{code:`from diffusers import DiffusionPipeline

generator = DiffusionPipeline.from_pretrained("CompVis/ldm-text2im-large-256")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> diffusers <span class="hljs-keyword">import</span> DiffusionPipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>generator = DiffusionPipeline.from_pretrained(<span class="hljs-string">&quot;CompVis/ldm-text2im-large-256&quot;</span>)`}}),oe=new P({props:{code:'generator.to("cuda")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>generator.to(<span class="hljs-string">&quot;cuda&quot;</span>)'}}),ae=new P({props:{code:'image = generator("An image of a squirrel in Picasso style").images[0]',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>image = generator(<span class="hljs-string">&quot;An image of a squirrel in Picasso style&quot;</span>).images[<span class="hljs-number">0</span>]'}}),ne=new P({props:{code:'image.save("image_of_squirrel_painting.png")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>image.save(<span class="hljs-string">&quot;image_of_squirrel_painting.png&quot;</span>)'}}),pe=new P({props:{code:'AUTH_TOKEN = "<please-fill-with-your-token>"',highlighted:'AUTH_TOKEN = <span class="hljs-string">&quot;&lt;please-fill-with-your-token&gt;&quot;</span>'}}),de=new P({props:{code:`from diffusers import DiffusionPipeline

generator = DiffusionPipeline.from_pretrained("CompVis/stable-diffusion-v1-4", use_auth_token=AUTH_TOKEN)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> diffusers <span class="hljs-keyword">import</span> DiffusionPipeline

<span class="hljs-meta">&gt;&gt;&gt; </span>generator = DiffusionPipeline.from_pretrained(<span class="hljs-string">&quot;CompVis/stable-diffusion-v1-4&quot;</span>, use_auth_token=AUTH_TOKEN)`}}),me=new P({props:{code:`git lfs install
git clone https://huggingface.co/CompVis/stable-diffusion-v1-4`,highlighted:`git lfs install
git clone https:<span class="hljs-regexp">//</span>huggingface.co<span class="hljs-regexp">/CompVis/</span>stable-diffusion-v1-<span class="hljs-number">4</span>`}}),ge=new P({props:{code:'generator = DiffusionPipeline.from_pretrained("./stable-diffusion-v1-4")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>generator = DiffusionPipeline.from_pretrained(<span class="hljs-string">&quot;./stable-diffusion-v1-4&quot;</span>)'}}),ve=new P({props:{code:`generator.to("cuda")
image = generator("An image of a squirrel in Picasso style").images[0]
image.save("image_of_squirrel_painting.png")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>generator.to(<span class="hljs-string">&quot;cuda&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>image = generator(<span class="hljs-string">&quot;An image of a squirrel in Picasso style&quot;</span>).images[<span class="hljs-number">0</span>]
<span class="hljs-meta">&gt;&gt;&gt; </span>image.save(<span class="hljs-string">&quot;image_of_squirrel_painting.png&quot;</span>)`}}),_e=new P({props:{code:`from diffusers import LMSDiscreteScheduler

scheduler = LMSDiscreteScheduler(beta_start=0.00085, beta_end=0.012, beta_schedule="scaled_linear")

generator = StableDiffusionPipeline.from_pretrained(
    "CompVis/stable-diffusion-v1-4", scheduler=scheduler, use_auth_token=AUTH_TOKEN
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> diffusers <span class="hljs-keyword">import</span> LMSDiscreteScheduler

<span class="hljs-meta">&gt;&gt;&gt; </span>scheduler = LMSDiscreteScheduler(beta_start=<span class="hljs-number">0.00085</span>, beta_end=<span class="hljs-number">0.012</span>, beta_schedule=<span class="hljs-string">&quot;scaled_linear&quot;</span>)

<span class="hljs-meta">&gt;&gt;&gt; </span>generator = StableDiffusionPipeline.from_pretrained(
<span class="hljs-meta">... </span>    <span class="hljs-string">&quot;CompVis/stable-diffusion-v1-4&quot;</span>, scheduler=scheduler, use_auth_token=AUTH_TOKEN
<span class="hljs-meta">... </span>)`}}),{c(){S=o("meta"),Lt=u(),q=o("h1"),L=o("a"),tt=o("span"),g(X.$$.fragment),qi=u(),it=o("span"),xi=n("Quicktour"),Mt=u(),M=o("p"),Ii=n(`Get up and running with \u{1F9E8} Diffusers quickly!
Whether you\u2019re a developer or an everyday user, this quick tour will help you get started and show you how to use `),Ee=o("a"),Ni=n("DiffusionPipeline"),Oi=n(" for inference."),Ut=u(),ke=o("p"),Ci=n("Before you begin, make sure you have all the necessary libraries installed:"),Vt=u(),g(J.$$.fragment),Rt=u(),x=o("h2"),U=o("a"),ot=o("span"),g(Z.$$.fragment),Gi=u(),at=o("span"),Hi=n("DiffusionPipeline"),Yt=u(),T=o("p"),Li=n("The "),$e=o("a"),Mi=n("DiffusionPipeline"),Ui=n(" is the easiest way to use a pre-trained diffusion system for inference. You can use the "),De=o("a"),Vi=n("DiffusionPipeline"),Ri=n(" out-of-the-box for many tasks across different modalities. Take a look at the table below for some supported tasks:"),zt=u(),V=o("table"),st=o("thead"),I=o("tr"),nt=o("th"),lt=o("strong"),Yi=n("Task"),zi=u(),rt=o("th"),ft=o("strong"),Bi=n("Description"),Fi=u(),ut=o("th"),pt=o("strong"),Ki=n("Pipeline"),Qi=u(),D=o("tbody"),N=o("tr"),ht=o("td"),Wi=n("Unconditional Image Generation"),Xi=u(),dt=o("td"),Ji=n("generate an image from gaussian noise"),Zi=u(),ct=o("td"),Pe=o("a"),eo=n("unconditional_image_generation"),to=u(),O=o("tr"),mt=o("td"),io=n("Text-Guided Image Generation"),oo=u(),gt=o("td"),ao=n("generate an image given a text prompt"),so=u(),vt=o("td"),Te=o("a"),no=n("conditional_image_generation"),lo=u(),C=o("tr"),_t=o("td"),ro=n("Text-Guided Image-to-Image Translation"),fo=u(),yt=o("td"),uo=n("generate an image given an original image and a text prompt"),po=u(),wt=o("td"),Ae=o("a"),ho=n("img2img"),co=u(),G=o("tr"),bt=o("td"),mo=n("Text-Guided Image-Inpainting"),go=u(),Et=o("td"),vo=n("fill the masked part of an image given the image, the mask and a text prompt"),_o=u(),kt=o("td"),je=o("a"),yo=n("inpaint"),Bt=u(),R=o("p"),wo=n("For more in-detail information on how diffusion pipelines function for the different tasks, please have a look at the "),Se=o("a"),$t=o("strong"),bo=n("Using Diffusers"),Eo=n(" section."),Ft=u(),d=o("p"),ko=n("As an example, start by creating an instance of "),qe=o("a"),$o=n("DiffusionPipeline"),Do=n(` and specify which pipeline checkpoint you would like to download.
You can use the `),xe=o("a"),Po=n("DiffusionPipeline"),To=n(" for any "),ee=o("a"),Ao=n("Diffusers\u2019 checkpoint"),jo=n(`.
In this guide though, you\u2019ll use `),Ie=o("a"),So=n("DiffusionPipeline"),qo=n(" for text-to-image generation with "),te=o("a"),xo=n("Latent Diffusion"),Io=n(":"),Kt=u(),g(ie.$$.fragment),Qt=u(),Y=o("p"),No=n("The "),Ne=o("a"),Oo=n("DiffusionPipeline"),Co=n(` downloads and caches all modeling, tokenization, and scheduling components.
Because the model consists of roughly 1.4 billion parameters, we strongly recommend running it on GPU.
You can move the generator object to GPU, just like you would in PyTorch.`),Wt=u(),g(oe.$$.fragment),Xt=u(),z=o("p"),Go=n("Now you can use the "),Dt=o("code"),Ho=n("generator"),Lo=n(" on your text prompt:"),Jt=u(),g(ae.$$.fragment),Zt=u(),B=o("p"),Mo=n("The output is by default wrapped into a "),se=o("a"),Uo=n("PIL Image object"),Vo=n("."),ei=u(),Oe=o("p"),Ro=n("You can save the image by simply calling:"),ti=u(),g(ne.$$.fragment),ii=u(),c=o("p"),Yo=n("More advanced models, like "),le=o("a"),zo=n("Stable Diffusion"),Bo=n(" require you to accept a "),re=o("a"),Fo=n("license"),Ko=n(` before running the model.
This is due to the improved image generation capabilities of the model and the potentially harmful content that could be produced with it.
Long story short: Head over to your stable diffusion model of choice, `),Pt=o("em"),Qo=n("e.g."),Wo=u(),fe=o("a"),Tt=o("code"),Xo=n("CompVis/stable-diffusion-v1-4"),Jo=n(`, read through the license and click-accept to get
access to the model.
You have to be a registered user in \u{1F917} Hugging Face Hub, and you\u2019ll also need to use an access token for the code to work. For more information on access tokens, please refer to `),ue=o("a"),Zo=n("this section of the documentation"),ea=n(`.
Having \u201Cclick-accepted\u201D the license, you can save your token:`),oi=u(),g(pe.$$.fragment),ai=u(),A=o("p"),ta=n("You can then load "),he=o("a"),At=o("code"),ia=n("CompVis/stable-diffusion-v1-4"),oa=n(`
just like we did before only that now you need to pass your `),jt=o("code"),aa=n("AUTH_TOKEN"),sa=n(":"),si=u(),g(de.$$.fragment),ni=u(),Ce=o("p"),na=n(`If you do not pass your authentification token you will see that the diffusion system will not be correctly
downloaded. Forcing the user to pass an authentification token ensures that it can be verified that the
user has indeed read and accepted the license, which also means that an internet connection is required.`),li=u(),ce=o("p"),St=o("strong"),la=n("Note"),ra=n(`: If you do not want to be forced to pass an authentification token, you can also simply download
the weights locally via:`),ri=u(),g(me.$$.fragment),fi=u(),F=o("p"),fa=n(`and then load locally saved weights into the pipeline. This way, you do not need to pass an authentification
token. Assuming that `),qt=o("code"),ua=n('"./stable-diffusion-v1-4"'),pa=n(` is the local path to the cloned stable-diffusion-v1-4 repo,
you can also load the pipeline as follows:`),ui=u(),g(ge.$$.fragment),pi=u(),Ge=o("p"),ha=n("Running the pipeline is then identical to the code above as it\u2019s the same model architecture."),hi=u(),g(ve.$$.fragment),di=u(),m=o("p"),da=n("Diffusion systems can be used with multiple different "),He=o("a"),ca=n("schedulers"),ma=n(` each with their
pros and cons. By default, Stable Diffusion runs with `),Le=o("a"),ga=n("PNDMScheduler"),va=n(`, but it\u2019s very simple to
use a different scheduler. `),xt=o("em"),_a=n("E.g."),ya=n(" if you would instead like to use the "),Me=o("a"),wa=n("LMSDiscreteScheduler"),ba=n(` scheduler,
you could use it as follows:`),ci=u(),g(_e.$$.fragment),mi=u(),H=o("p"),ye=o("a"),Ea=n("Stability AI\u2019s"),ka=n(` Stable Diffusion model is an impressive image generation model
and can do much more than just generating images from text. We have dedicated a whole documentation page,
just for Stable Diffusion `),Ue=o("a"),$a=n("here"),Da=n("."),gi=u(),K=o("p"),Pa=n("If you want to know how to optimize Stable Diffusion to run on less memory, higher inference speeds, on specific hardware, such as Mac, or with "),we=o("a"),Ta=n("ONNX Runtime"),Aa=n(`, please have a look at our
optimization pages:`),vi=u(),E=o("ul"),It=o("li"),Ve=o("a"),ja=n("Optimized PyTorch on GPU"),Sa=u(),Nt=o("li"),Re=o("a"),qa=n("Mac OS with PyTorch"),xa=u(),Ot=o("li"),Ye=o("a"),Ia=n("ONNX"),Na=u(),Ct=o("li"),ze=o("a"),Oa=n("OpenVINO"),_i=u(),be=o("p"),Ca=n("If you want to fine-tune or train your diffusion model, please have a look at the "),Be=o("a"),Gt=o("strong"),Ga=n("training section"),yi=u(),Fe=o("p"),Ha=n("Finally, please be considerate when distributing generated images publicly \u{1F917}."),this.h()},l(e){const r=cn('[data-svelte="svelte-1phssyn"]',document.head);S=a(r,"META",{name:!0,content:!0}),r.forEach(i),Lt=p(e),q=a(e,"H1",{class:!0});var bi=s(q);L=a(bi,"A",{id:!0,class:!0,href:!0});var Va=s(L);tt=a(Va,"SPAN",{});var Ra=s(tt);v(X.$$.fragment,Ra),Ra.forEach(i),Va.forEach(i),qi=p(bi),it=a(bi,"SPAN",{});var Ya=s(it);xi=l(Ya,"Quicktour"),Ya.forEach(i),bi.forEach(i),Mt=p(e),M=a(e,"P",{});var Ei=s(M);Ii=l(Ei,`Get up and running with \u{1F9E8} Diffusers quickly!
Whether you\u2019re a developer or an everyday user, this quick tour will help you get started and show you how to use `),Ee=a(Ei,"A",{href:!0});var za=s(Ee);Ni=l(za,"DiffusionPipeline"),za.forEach(i),Oi=l(Ei," for inference."),Ei.forEach(i),Ut=p(e),ke=a(e,"P",{});var Ba=s(ke);Ci=l(Ba,"Before you begin, make sure you have all the necessary libraries installed:"),Ba.forEach(i),Vt=p(e),v(J.$$.fragment,e),Rt=p(e),x=a(e,"H2",{class:!0});var ki=s(x);U=a(ki,"A",{id:!0,class:!0,href:!0});var Fa=s(U);ot=a(Fa,"SPAN",{});var Ka=s(ot);v(Z.$$.fragment,Ka),Ka.forEach(i),Fa.forEach(i),Gi=p(ki),at=a(ki,"SPAN",{});var Qa=s(at);Hi=l(Qa,"DiffusionPipeline"),Qa.forEach(i),ki.forEach(i),Yt=p(e),T=a(e,"P",{});var Ke=s(T);Li=l(Ke,"The "),$e=a(Ke,"A",{href:!0});var Wa=s($e);Mi=l(Wa,"DiffusionPipeline"),Wa.forEach(i),Ui=l(Ke," is the easiest way to use a pre-trained diffusion system for inference. You can use the "),De=a(Ke,"A",{href:!0});var Xa=s(De);Vi=l(Xa,"DiffusionPipeline"),Xa.forEach(i),Ri=l(Ke," out-of-the-box for many tasks across different modalities. Take a look at the table below for some supported tasks:"),Ke.forEach(i),zt=p(e),V=a(e,"TABLE",{});var $i=s(V);st=a($i,"THEAD",{});var Ja=s(st);I=a(Ja,"TR",{});var Qe=s(I);nt=a(Qe,"TH",{});var Za=s(nt);lt=a(Za,"STRONG",{});var es=s(lt);Yi=l(es,"Task"),es.forEach(i),Za.forEach(i),zi=p(Qe),rt=a(Qe,"TH",{});var ts=s(rt);ft=a(ts,"STRONG",{});var is=s(ft);Bi=l(is,"Description"),is.forEach(i),ts.forEach(i),Fi=p(Qe),ut=a(Qe,"TH",{});var os=s(ut);pt=a(os,"STRONG",{});var as=s(pt);Ki=l(as,"Pipeline"),as.forEach(i),os.forEach(i),Qe.forEach(i),Ja.forEach(i),Qi=p($i),D=a($i,"TBODY",{});var Q=s(D);N=a(Q,"TR",{});var We=s(N);ht=a(We,"TD",{});var ss=s(ht);Wi=l(ss,"Unconditional Image Generation"),ss.forEach(i),Xi=p(We),dt=a(We,"TD",{});var ns=s(dt);Ji=l(ns,"generate an image from gaussian noise"),ns.forEach(i),Zi=p(We),ct=a(We,"TD",{});var ls=s(ct);Pe=a(ls,"A",{href:!0});var rs=s(Pe);eo=l(rs,"unconditional_image_generation"),rs.forEach(i),ls.forEach(i),We.forEach(i),to=p(Q),O=a(Q,"TR",{});var Xe=s(O);mt=a(Xe,"TD",{});var fs=s(mt);io=l(fs,"Text-Guided Image Generation"),fs.forEach(i),oo=p(Xe),gt=a(Xe,"TD",{});var us=s(gt);ao=l(us,"generate an image given a text prompt"),us.forEach(i),so=p(Xe),vt=a(Xe,"TD",{});var ps=s(vt);Te=a(ps,"A",{href:!0});var hs=s(Te);no=l(hs,"conditional_image_generation"),hs.forEach(i),ps.forEach(i),Xe.forEach(i),lo=p(Q),C=a(Q,"TR",{});var Je=s(C);_t=a(Je,"TD",{});var ds=s(_t);ro=l(ds,"Text-Guided Image-to-Image Translation"),ds.forEach(i),fo=p(Je),yt=a(Je,"TD",{});var cs=s(yt);uo=l(cs,"generate an image given an original image and a text prompt"),cs.forEach(i),po=p(Je),wt=a(Je,"TD",{});var ms=s(wt);Ae=a(ms,"A",{href:!0});var gs=s(Ae);ho=l(gs,"img2img"),gs.forEach(i),ms.forEach(i),Je.forEach(i),co=p(Q),G=a(Q,"TR",{});var Ze=s(G);bt=a(Ze,"TD",{});var vs=s(bt);mo=l(vs,"Text-Guided Image-Inpainting"),vs.forEach(i),go=p(Ze),Et=a(Ze,"TD",{});var _s=s(Et);vo=l(_s,"fill the masked part of an image given the image, the mask and a text prompt"),_s.forEach(i),_o=p(Ze),kt=a(Ze,"TD",{});var ys=s(kt);je=a(ys,"A",{href:!0});var ws=s(je);yo=l(ws,"inpaint"),ws.forEach(i),ys.forEach(i),Ze.forEach(i),Q.forEach(i),$i.forEach(i),Bt=p(e),R=a(e,"P",{});var Di=s(R);wo=l(Di,"For more in-detail information on how diffusion pipelines function for the different tasks, please have a look at the "),Se=a(Di,"A",{href:!0});var bs=s(Se);$t=a(bs,"STRONG",{});var Es=s($t);bo=l(Es,"Using Diffusers"),Es.forEach(i),bs.forEach(i),Eo=l(Di," section."),Di.forEach(i),Ft=p(e),d=a(e,"P",{});var k=s(d);ko=l(k,"As an example, start by creating an instance of "),qe=a(k,"A",{href:!0});var ks=s(qe);$o=l(ks,"DiffusionPipeline"),ks.forEach(i),Do=l(k,` and specify which pipeline checkpoint you would like to download.
You can use the `),xe=a(k,"A",{href:!0});var $s=s(xe);Po=l($s,"DiffusionPipeline"),$s.forEach(i),To=l(k," for any "),ee=a(k,"A",{href:!0,rel:!0});var Ds=s(ee);Ao=l(Ds,"Diffusers\u2019 checkpoint"),Ds.forEach(i),jo=l(k,`.
In this guide though, you\u2019ll use `),Ie=a(k,"A",{href:!0});var Ps=s(Ie);So=l(Ps,"DiffusionPipeline"),Ps.forEach(i),qo=l(k," for text-to-image generation with "),te=a(k,"A",{href:!0,rel:!0});var Ts=s(te);xo=l(Ts,"Latent Diffusion"),Ts.forEach(i),Io=l(k,":"),k.forEach(i),Kt=p(e),v(ie.$$.fragment,e),Qt=p(e),Y=a(e,"P",{});var Pi=s(Y);No=l(Pi,"The "),Ne=a(Pi,"A",{href:!0});var As=s(Ne);Oo=l(As,"DiffusionPipeline"),As.forEach(i),Co=l(Pi,` downloads and caches all modeling, tokenization, and scheduling components.
Because the model consists of roughly 1.4 billion parameters, we strongly recommend running it on GPU.
You can move the generator object to GPU, just like you would in PyTorch.`),Pi.forEach(i),Wt=p(e),v(oe.$$.fragment,e),Xt=p(e),z=a(e,"P",{});var Ti=s(z);Go=l(Ti,"Now you can use the "),Dt=a(Ti,"CODE",{});var js=s(Dt);Ho=l(js,"generator"),js.forEach(i),Lo=l(Ti," on your text prompt:"),Ti.forEach(i),Jt=p(e),v(ae.$$.fragment,e),Zt=p(e),B=a(e,"P",{});var Ai=s(B);Mo=l(Ai,"The output is by default wrapped into a "),se=a(Ai,"A",{href:!0,rel:!0});var Ss=s(se);Uo=l(Ss,"PIL Image object"),Ss.forEach(i),Vo=l(Ai,"."),Ai.forEach(i),ei=p(e),Oe=a(e,"P",{});var qs=s(Oe);Ro=l(qs,"You can save the image by simply calling:"),qs.forEach(i),ti=p(e),v(ne.$$.fragment,e),ii=p(e),c=a(e,"P",{});var $=s(c);Yo=l($,"More advanced models, like "),le=a($,"A",{href:!0,rel:!0});var xs=s(le);zo=l(xs,"Stable Diffusion"),xs.forEach(i),Bo=l($," require you to accept a "),re=a($,"A",{href:!0,rel:!0});var Is=s(re);Fo=l(Is,"license"),Is.forEach(i),Ko=l($,` before running the model.
This is due to the improved image generation capabilities of the model and the potentially harmful content that could be produced with it.
Long story short: Head over to your stable diffusion model of choice, `),Pt=a($,"EM",{});var Ns=s(Pt);Qo=l(Ns,"e.g."),Ns.forEach(i),Wo=p($),fe=a($,"A",{href:!0,rel:!0});var Os=s(fe);Tt=a(Os,"CODE",{});var Cs=s(Tt);Xo=l(Cs,"CompVis/stable-diffusion-v1-4"),Cs.forEach(i),Os.forEach(i),Jo=l($,`, read through the license and click-accept to get
access to the model.
You have to be a registered user in \u{1F917} Hugging Face Hub, and you\u2019ll also need to use an access token for the code to work. For more information on access tokens, please refer to `),ue=a($,"A",{href:!0,rel:!0});var Gs=s(ue);Zo=l(Gs,"this section of the documentation"),Gs.forEach(i),ea=l($,`.
Having \u201Cclick-accepted\u201D the license, you can save your token:`),$.forEach(i),oi=p(e),v(pe.$$.fragment,e),ai=p(e),A=a(e,"P",{});var et=s(A);ta=l(et,"You can then load "),he=a(et,"A",{href:!0,rel:!0});var Hs=s(he);At=a(Hs,"CODE",{});var Ls=s(At);ia=l(Ls,"CompVis/stable-diffusion-v1-4"),Ls.forEach(i),Hs.forEach(i),oa=l(et,`
just like we did before only that now you need to pass your `),jt=a(et,"CODE",{});var Ms=s(jt);aa=l(Ms,"AUTH_TOKEN"),Ms.forEach(i),sa=l(et,":"),et.forEach(i),si=p(e),v(de.$$.fragment,e),ni=p(e),Ce=a(e,"P",{});var Us=s(Ce);na=l(Us,`If you do not pass your authentification token you will see that the diffusion system will not be correctly
downloaded. Forcing the user to pass an authentification token ensures that it can be verified that the
user has indeed read and accepted the license, which also means that an internet connection is required.`),Us.forEach(i),li=p(e),ce=a(e,"P",{});var La=s(ce);St=a(La,"STRONG",{});var Vs=s(St);la=l(Vs,"Note"),Vs.forEach(i),ra=l(La,`: If you do not want to be forced to pass an authentification token, you can also simply download
the weights locally via:`),La.forEach(i),ri=p(e),v(me.$$.fragment,e),fi=p(e),F=a(e,"P",{});var ji=s(F);fa=l(ji,`and then load locally saved weights into the pipeline. This way, you do not need to pass an authentification
token. Assuming that `),qt=a(ji,"CODE",{});var Rs=s(qt);ua=l(Rs,'"./stable-diffusion-v1-4"'),Rs.forEach(i),pa=l(ji,` is the local path to the cloned stable-diffusion-v1-4 repo,
you can also load the pipeline as follows:`),ji.forEach(i),ui=p(e),v(ge.$$.fragment,e),pi=p(e),Ge=a(e,"P",{});var Ys=s(Ge);ha=l(Ys,"Running the pipeline is then identical to the code above as it\u2019s the same model architecture."),Ys.forEach(i),hi=p(e),v(ve.$$.fragment,e),di=p(e),m=a(e,"P",{});var j=s(m);da=l(j,"Diffusion systems can be used with multiple different "),He=a(j,"A",{href:!0});var zs=s(He);ca=l(zs,"schedulers"),zs.forEach(i),ma=l(j,` each with their
pros and cons. By default, Stable Diffusion runs with `),Le=a(j,"A",{href:!0});var Bs=s(Le);ga=l(Bs,"PNDMScheduler"),Bs.forEach(i),va=l(j,`, but it\u2019s very simple to
use a different scheduler. `),xt=a(j,"EM",{});var Fs=s(xt);_a=l(Fs,"E.g."),Fs.forEach(i),ya=l(j," if you would instead like to use the "),Me=a(j,"A",{href:!0});var Ks=s(Me);wa=l(Ks,"LMSDiscreteScheduler"),Ks.forEach(i),ba=l(j,` scheduler,
you could use it as follows:`),j.forEach(i),ci=p(e),v(_e.$$.fragment,e),mi=p(e),H=a(e,"P",{});var Ht=s(H);ye=a(Ht,"A",{href:!0,rel:!0});var Qs=s(ye);Ea=l(Qs,"Stability AI\u2019s"),Qs.forEach(i),ka=l(Ht,` Stable Diffusion model is an impressive image generation model
and can do much more than just generating images from text. We have dedicated a whole documentation page,
just for Stable Diffusion `),Ue=a(Ht,"A",{href:!0});var Ws=s(Ue);$a=l(Ws,"here"),Ws.forEach(i),Da=l(Ht,"."),Ht.forEach(i),gi=p(e),K=a(e,"P",{});var Si=s(K);Pa=l(Si,"If you want to know how to optimize Stable Diffusion to run on less memory, higher inference speeds, on specific hardware, such as Mac, or with "),we=a(Si,"A",{href:!0,rel:!0});var Xs=s(we);Ta=l(Xs,"ONNX Runtime"),Xs.forEach(i),Aa=l(Si,`, please have a look at our
optimization pages:`),Si.forEach(i),vi=p(e),E=a(e,"UL",{});var W=s(E);It=a(W,"LI",{});var Js=s(It);Ve=a(Js,"A",{href:!0});var Zs=s(Ve);ja=l(Zs,"Optimized PyTorch on GPU"),Zs.forEach(i),Js.forEach(i),Sa=p(W),Nt=a(W,"LI",{});var en=s(Nt);Re=a(en,"A",{href:!0});var tn=s(Re);qa=l(tn,"Mac OS with PyTorch"),tn.forEach(i),en.forEach(i),xa=p(W),Ot=a(W,"LI",{});var on=s(Ot);Ye=a(on,"A",{href:!0});var an=s(Ye);Ia=l(an,"ONNX"),an.forEach(i),on.forEach(i),Na=p(W),Ct=a(W,"LI",{});var sn=s(Ct);ze=a(sn,"A",{href:!0});var nn=s(ze);Oa=l(nn,"OpenVINO"),nn.forEach(i),sn.forEach(i),W.forEach(i),_i=p(e),be=a(e,"P",{});var Ma=s(be);Ca=l(Ma,"If you want to fine-tune or train your diffusion model, please have a look at the "),Be=a(Ma,"A",{href:!0});var ln=s(Be);Gt=a(ln,"STRONG",{});var rn=s(Gt);Ga=l(rn,"training section"),rn.forEach(i),ln.forEach(i),Ma.forEach(i),yi=p(e),Fe=a(e,"P",{});var fn=s(Fe);Ha=l(fn,"Finally, please be considerate when distributing generated images publicly \u{1F917}."),fn.forEach(i),this.h()},h(){h(S,"name","hf:doc:metadata"),h(S,"content",JSON.stringify(_n)),h(L,"id","quicktour"),h(L,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(L,"href","#quicktour"),h(q,"class","relative group"),h(Ee,"href","/docs/diffusers/v0.3.0/en/api/diffusion_pipeline#diffusers.DiffusionPipeline"),h(U,"id","diffusionpipeline"),h(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(U,"href","#diffusionpipeline"),h(x,"class","relative group"),h($e,"href","/docs/diffusers/v0.3.0/en/api/diffusion_pipeline#diffusers.DiffusionPipeline"),h(De,"href","/docs/diffusers/v0.3.0/en/api/diffusion_pipeline#diffusers.DiffusionPipeline"),h(Pe,"href","./using-diffusers/unconditional_image_generation%60"),h(Te,"href","./using-diffusers/conditional_image_generation"),h(Ae,"href","./using-diffusers/img2img"),h(je,"href","./using-diffusers/inpaint"),h(Se,"href","./using-diffusers/overview"),h(qe,"href","/docs/diffusers/v0.3.0/en/api/diffusion_pipeline#diffusers.DiffusionPipeline"),h(xe,"href","/docs/diffusers/v0.3.0/en/api/diffusion_pipeline#diffusers.DiffusionPipeline"),h(ee,"href","https://huggingface.co/models?library=diffusers&sort=downloads"),h(ee,"rel","nofollow"),h(Ie,"href","/docs/diffusers/v0.3.0/en/api/diffusion_pipeline#diffusers.DiffusionPipeline"),h(te,"href","https://huggingface.co/CompVis/ldm-text2im-large-256"),h(te,"rel","nofollow"),h(Ne,"href","/docs/diffusers/v0.3.0/en/api/diffusion_pipeline#diffusers.DiffusionPipeline"),h(se,"href","https://pillow.readthedocs.io/en/stable/reference/Image.html?highlight=image#the-image-class"),h(se,"rel","nofollow"),h(le,"href","https://huggingface.co/CompVis/stable-diffusion"),h(le,"rel","nofollow"),h(re,"href","https://huggingface.co/spaces/CompVis/stable-diffusion-license"),h(re,"rel","nofollow"),h(fe,"href","https://huggingface.co/CompVis/stable-diffusion-v1-4"),h(fe,"rel","nofollow"),h(ue,"href","https://huggingface.co/docs/hub/security-tokens"),h(ue,"rel","nofollow"),h(he,"href","https://huggingface.co/CompVis/stable-diffusion-v1-4"),h(he,"rel","nofollow"),h(He,"href","%22api/schedulers%22"),h(Le,"href","/docs/diffusers/v0.3.0/en/api/schedulers#diffusers.PNDMScheduler"),h(Me,"href","/docs/diffusers/v0.3.0/en/api/schedulers#diffusers.LMSDiscreteScheduler"),h(ye,"href","https://stability.ai/"),h(ye,"rel","nofollow"),h(Ue,"href","%22./conceptual/stable_diffusion%22"),h(we,"href","https://onnxruntime.ai/"),h(we,"rel","nofollow"),h(Ve,"href","%22./optimization/fp16%22"),h(Re,"href","%22./optimization/mps%22"),h(Ye,"href","%22./optimization/onnx"),h(ze,"href","%22./optimization/open_vino"),h(Be,"href","./training/overview")},m(e,r){t(document.head,S),f(e,Lt,r),f(e,q,r),t(q,L),t(L,tt),_(X,tt,null),t(q,qi),t(q,it),t(it,xi),f(e,Mt,r),f(e,M,r),t(M,Ii),t(M,Ee),t(Ee,Ni),t(M,Oi),f(e,Ut,r),f(e,ke,r),t(ke,Ci),f(e,Vt,r),_(J,e,r),f(e,Rt,r),f(e,x,r),t(x,U),t(U,ot),_(Z,ot,null),t(x,Gi),t(x,at),t(at,Hi),f(e,Yt,r),f(e,T,r),t(T,Li),t(T,$e),t($e,Mi),t(T,Ui),t(T,De),t(De,Vi),t(T,Ri),f(e,zt,r),f(e,V,r),t(V,st),t(st,I),t(I,nt),t(nt,lt),t(lt,Yi),t(I,zi),t(I,rt),t(rt,ft),t(ft,Bi),t(I,Fi),t(I,ut),t(ut,pt),t(pt,Ki),t(V,Qi),t(V,D),t(D,N),t(N,ht),t(ht,Wi),t(N,Xi),t(N,dt),t(dt,Ji),t(N,Zi),t(N,ct),t(ct,Pe),t(Pe,eo),t(D,to),t(D,O),t(O,mt),t(mt,io),t(O,oo),t(O,gt),t(gt,ao),t(O,so),t(O,vt),t(vt,Te),t(Te,no),t(D,lo),t(D,C),t(C,_t),t(_t,ro),t(C,fo),t(C,yt),t(yt,uo),t(C,po),t(C,wt),t(wt,Ae),t(Ae,ho),t(D,co),t(D,G),t(G,bt),t(bt,mo),t(G,go),t(G,Et),t(Et,vo),t(G,_o),t(G,kt),t(kt,je),t(je,yo),f(e,Bt,r),f(e,R,r),t(R,wo),t(R,Se),t(Se,$t),t($t,bo),t(R,Eo),f(e,Ft,r),f(e,d,r),t(d,ko),t(d,qe),t(qe,$o),t(d,Do),t(d,xe),t(xe,Po),t(d,To),t(d,ee),t(ee,Ao),t(d,jo),t(d,Ie),t(Ie,So),t(d,qo),t(d,te),t(te,xo),t(d,Io),f(e,Kt,r),_(ie,e,r),f(e,Qt,r),f(e,Y,r),t(Y,No),t(Y,Ne),t(Ne,Oo),t(Y,Co),f(e,Wt,r),_(oe,e,r),f(e,Xt,r),f(e,z,r),t(z,Go),t(z,Dt),t(Dt,Ho),t(z,Lo),f(e,Jt,r),_(ae,e,r),f(e,Zt,r),f(e,B,r),t(B,Mo),t(B,se),t(se,Uo),t(B,Vo),f(e,ei,r),f(e,Oe,r),t(Oe,Ro),f(e,ti,r),_(ne,e,r),f(e,ii,r),f(e,c,r),t(c,Yo),t(c,le),t(le,zo),t(c,Bo),t(c,re),t(re,Fo),t(c,Ko),t(c,Pt),t(Pt,Qo),t(c,Wo),t(c,fe),t(fe,Tt),t(Tt,Xo),t(c,Jo),t(c,ue),t(ue,Zo),t(c,ea),f(e,oi,r),_(pe,e,r),f(e,ai,r),f(e,A,r),t(A,ta),t(A,he),t(he,At),t(At,ia),t(A,oa),t(A,jt),t(jt,aa),t(A,sa),f(e,si,r),_(de,e,r),f(e,ni,r),f(e,Ce,r),t(Ce,na),f(e,li,r),f(e,ce,r),t(ce,St),t(St,la),t(ce,ra),f(e,ri,r),_(me,e,r),f(e,fi,r),f(e,F,r),t(F,fa),t(F,qt),t(qt,ua),t(F,pa),f(e,ui,r),_(ge,e,r),f(e,pi,r),f(e,Ge,r),t(Ge,ha),f(e,hi,r),_(ve,e,r),f(e,di,r),f(e,m,r),t(m,da),t(m,He),t(He,ca),t(m,ma),t(m,Le),t(Le,ga),t(m,va),t(m,xt),t(xt,_a),t(m,ya),t(m,Me),t(Me,wa),t(m,ba),f(e,ci,r),_(_e,e,r),f(e,mi,r),f(e,H,r),t(H,ye),t(ye,Ea),t(H,ka),t(H,Ue),t(Ue,$a),t(H,Da),f(e,gi,r),f(e,K,r),t(K,Pa),t(K,we),t(we,Ta),t(K,Aa),f(e,vi,r),f(e,E,r),t(E,It),t(It,Ve),t(Ve,ja),t(E,Sa),t(E,Nt),t(Nt,Re),t(Re,qa),t(E,xa),t(E,Ot),t(Ot,Ye),t(Ye,Ia),t(E,Na),t(E,Ct),t(Ct,ze),t(ze,Oa),f(e,_i,r),f(e,be,r),t(be,Ca),t(be,Be),t(Be,Gt),t(Gt,Ga),f(e,yi,r),f(e,Fe,r),t(Fe,Ha),wi=!0},p:mn,i(e){wi||(y(X.$$.fragment,e),y(J.$$.fragment,e),y(Z.$$.fragment,e),y(ie.$$.fragment,e),y(oe.$$.fragment,e),y(ae.$$.fragment,e),y(ne.$$.fragment,e),y(pe.$$.fragment,e),y(de.$$.fragment,e),y(me.$$.fragment,e),y(ge.$$.fragment,e),y(ve.$$.fragment,e),y(_e.$$.fragment,e),wi=!0)},o(e){w(X.$$.fragment,e),w(J.$$.fragment,e),w(Z.$$.fragment,e),w(ie.$$.fragment,e),w(oe.$$.fragment,e),w(ae.$$.fragment,e),w(ne.$$.fragment,e),w(pe.$$.fragment,e),w(de.$$.fragment,e),w(me.$$.fragment,e),w(ge.$$.fragment,e),w(ve.$$.fragment,e),w(_e.$$.fragment,e),wi=!1},d(e){i(S),e&&i(Lt),e&&i(q),b(X),e&&i(Mt),e&&i(M),e&&i(Ut),e&&i(ke),e&&i(Vt),b(J,e),e&&i(Rt),e&&i(x),b(Z),e&&i(Yt),e&&i(T),e&&i(zt),e&&i(V),e&&i(Bt),e&&i(R),e&&i(Ft),e&&i(d),e&&i(Kt),b(ie,e),e&&i(Qt),e&&i(Y),e&&i(Wt),b(oe,e),e&&i(Xt),e&&i(z),e&&i(Jt),b(ae,e),e&&i(Zt),e&&i(B),e&&i(ei),e&&i(Oe),e&&i(ti),b(ne,e),e&&i(ii),e&&i(c),e&&i(oi),b(pe,e),e&&i(ai),e&&i(A),e&&i(si),b(de,e),e&&i(ni),e&&i(Ce),e&&i(li),e&&i(ce),e&&i(ri),b(me,e),e&&i(fi),e&&i(F),e&&i(ui),b(ge,e),e&&i(pi),e&&i(Ge),e&&i(hi),b(ve,e),e&&i(di),e&&i(m),e&&i(ci),b(_e,e),e&&i(mi),e&&i(H),e&&i(gi),e&&i(K),e&&i(vi),e&&i(E),e&&i(_i),e&&i(be),e&&i(yi),e&&i(Fe)}}}const _n={local:"quicktour",sections:[{local:"diffusionpipeline",title:"DiffusionPipeline"}],title:"Quicktour"};function yn(Ua){return gn(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class kn extends pn{constructor(S){super();hn(this,S,yn,vn,dn,{})}}export{kn as default,_n as metadata};
