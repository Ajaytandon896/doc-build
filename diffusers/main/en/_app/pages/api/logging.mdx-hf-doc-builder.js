import{S as vl,i as bl,s as _l,F as El,e as s,w as D,k as g,c as o,a as l,x as I,d as r,m as d,b as h,g as f,G as t,y as R,Q as yl,H as wl,I as Dl,J as Il,q as E,o as y,B as A,v as $l,_ as Rl,$ as Al,t as i,M as Nl,h as n,L as Ol}from"../../chunks/vendor-hf-doc-builder.js";import{T as Ll}from"../../chunks/Tip-hf-doc-builder.js";import{D as U}from"../../chunks/Docstring-hf-doc-builder.js";import{C as or}from"../../chunks/CodeBlock-hf-doc-builder.js";import{I as Hr}from"../../chunks/IconCopyLink-hf-doc-builder.js";const{window:Sl}=Rl;function Fl(S){let c,b,_,u,m,p,v,P,L;u=new Hr({props:{classNames:"text-smd"}});const C=S[4].default,w=El(C,S,S[3],null);return{c(){c=s("div"),b=s("a"),_=s("span"),D(u.$$.fragment),p=g(),w&&w.c(),this.h()},l($){c=o($,"DIV",{class:!0});var N=l(c);b=o(N,"A",{id:!0,class:!0,href:!0});var k=l(b);_=o(k,"SPAN",{});var W=l(_);I(u.$$.fragment,W),W.forEach(r),k.forEach(r),p=d(N),w&&w.l(N),N.forEach(r),this.h()},h(){h(b,"id",S[0]),h(b,"class","header-link block pr-0.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(b,"href",m=`#${S[0]}`),h(c,"class","relative group rounded-md")},m($,N){f($,c,N),t(c,b),t(b,_),R(u,_,null),t(c,p),w&&w.m(c,null),S[5](c),v=!0,P||(L=yl(Sl,"hashchange",S[2]),P=!0)},p($,[N]){(!v||N&1)&&h(b,"id",$[0]),(!v||N&1&&m!==(m=`#${$[0]}`))&&h(b,"href",m),w&&w.p&&(!v||N&8)&&wl(w,C,$,$[3],v?Il(C,$[3],N,null):Dl($[3]),null)},i($){v||(E(u.$$.fragment,$),E(w,$),v=!0)},o($){y(u.$$.fragment,$),y(w,$),v=!1},d($){$&&r(c),A(u),w&&w.d($),S[5](null),P=!1,L()}}}const ml="bg-yellow-50 dark:bg-[#494a3d]";function Cl(S,c,b){let{$$slots:_={},$$scope:u}=c,{anchor:m}=c,p;function v(){const{hash:L}=window.location,C=L.substring(1);p&&p.classList.remove(...ml.split(" ")),C===m&&p.classList.add(...ml.split(" "))}$l(()=>{v()});function P(L){Al[L?"unshift":"push"](()=>{p=L,b(1,p)})}return S.$$set=L=>{"anchor"in L&&b(0,m=L.anchor),"$$scope"in L&&b(3,u=L.$$scope)},[m,p,v,u,_,P]}class Pl extends vl{constructor(c){super();bl(this,c,Cl,Fl,_l,{anchor:0})}}function kl(S){let c,b,_,u,m,p,v,P,L,C,w,$,N,k,W,oe,Ce,H,Ee,q,Pe,ye,B,we,O,X,le,ie,ke,ne,Z,Te,j,xe;return{c(){c=s("p"),b=i("\u{1F917} Diffusers has following logging levels:"),_=g(),u=s("ul"),m=s("li"),p=i("50: "),v=s("code"),P=i("diffusers.logging.CRITICAL"),L=i(" or "),C=s("code"),w=i("diffusers.logging.FATAL"),$=g(),N=s("li"),k=i("40: "),W=s("code"),oe=i("diffusers.logging.ERROR"),Ce=g(),H=s("li"),Ee=i("30: "),q=s("code"),Pe=i("diffusers.logging.WARNING"),ye=i(" or "),B=s("code"),we=i("diffusers.logging.WARN"),O=g(),X=s("li"),le=i("20: "),ie=s("code"),ke=i("diffusers.logging.INFO"),ne=g(),Z=s("li"),Te=i("10: "),j=s("code"),xe=i("diffusers.logging.DEBUG")},l(T){c=o(T,"P",{});var M=l(c);b=n(M,"\u{1F917} Diffusers has following logging levels:"),M.forEach(r),_=d(T),u=o(T,"UL",{});var x=l(u);m=o(x,"LI",{});var ae=l(m);p=n(ae,"50: "),v=o(ae,"CODE",{});var De=l(v);P=n(De,"diffusers.logging.CRITICAL"),De.forEach(r),L=n(ae," or "),C=o(ae,"CODE",{});var ft=l(C);w=n(ft,"diffusers.logging.FATAL"),ft.forEach(r),ae.forEach(r),$=d(x),N=o(x,"LI",{});var Ve=l(N);k=n(Ve,"40: "),W=o(Ve,"CODE",{});var Ie=l(W);oe=n(Ie,"diffusers.logging.ERROR"),Ie.forEach(r),Ve.forEach(r),Ce=d(x),H=o(x,"LI",{});var fe=l(H);Ee=n(fe,"30: "),q=o(fe,"CODE",{});var gt=l(q);Pe=n(gt,"diffusers.logging.WARNING"),gt.forEach(r),ye=n(fe," or "),B=o(fe,"CODE",{});var Ge=l(B);we=n(Ge,"diffusers.logging.WARN"),Ge.forEach(r),fe.forEach(r),O=d(x),X=o(x,"LI",{});var z=l(X);le=n(z,"20: "),ie=o(z,"CODE",{});var Be=l(ie);ke=n(Be,"diffusers.logging.INFO"),Be.forEach(r),z.forEach(r),ne=d(x),Z=o(x,"LI",{});var F=l(Z);Te=n(F,"10: "),j=o(F,"CODE",{});var dt=l(j);xe=n(dt,"diffusers.logging.DEBUG"),dt.forEach(r),F.forEach(r),x.forEach(r)},m(T,M){f(T,c,M),t(c,b),f(T,_,M),f(T,u,M),t(u,m),t(m,p),t(m,v),t(v,P),t(m,L),t(m,C),t(C,w),t(u,$),t(u,N),t(N,k),t(N,W),t(W,oe),t(u,Ce),t(u,H),t(H,Ee),t(H,q),t(q,Pe),t(H,ye),t(H,B),t(B,we),t(u,O),t(u,X),t(X,le),t(X,ie),t(ie,ke),t(u,ne),t(u,Z),t(Z,Te),t(Z,j),t(j,xe)},d(T){T&&r(c),T&&r(_),T&&r(u)}}}function Tl(S){let c,b,_,u,m;return u=new or({props:{code:"    [LEVELNAME|FILENAME|LINE NUMBER] TIME >> MESSAGE",highlighted:'    [LEVELNAME|<span class="hljs-type">FILENAME</span>|<span class="hljs-type">LINE</span> NUMBER] TIME &gt;&gt; MESSAGE'}}),{c(){c=s("p"),b=i("Enable explicit formatting for every HuggingFace Diffusers\u2019 logger. The explicit formatter is as follows:"),_=g(),D(u.$$.fragment)},l(p){c=o(p,"P",{});var v=l(c);b=n(v,"Enable explicit formatting for every HuggingFace Diffusers\u2019 logger. The explicit formatter is as follows:"),v.forEach(r),_=d(p),I(u.$$.fragment,p)},m(p,v){f(p,c,v),t(c,b),f(p,_,v),R(u,p,v),m=!0},p:Ol,i(p){m||(E(u.$$.fragment,p),m=!0)},o(p){y(u.$$.fragment,p),m=!1},d(p){p&&r(c),p&&r(_),A(u,p)}}}function xl(S){let c,b,_,u,m,p,v,P,L,C,w,$,N,k,W,oe,Ce,H,Ee,q,Pe,ye,B,we,O,X,le,ie,ke,ne,Z,Te,j,xe,T,M,x,ae,De,ft,Ve,Ie,fe,gt,Ge,z,Be,F,dt,Dt,qr,Mr,It,Yr,jr,Rt,zr,Jr,At,Qr,Kr,lr,Ue,ir,ut,Xr,nr,We,ar,ee,Zr,ct,es,ts,pt,rs,ss,fr,V,Re,Nt,os,ls,Ot,is,ns,as,ht,Lt,fs,gs,ds,Ae,St,us,cs,Ft,ps,hs,ms,mt,Ct,vs,bs,_s,vt,Pt,$s,Es,gr,Y,ys,kt,ws,Ds,bt,Is,Rs,_t,As,Ns,dr,ge,Ne,Tt,He,Os,xt,Ls,ur,de,qe,Ss,Me,Fs,Vt,Cs,Ps,cr,ue,Ye,ks,je,Ts,Gt,xs,Vs,pr,ce,ze,Gs,Je,Bs,Bt,Us,Ws,hr,pe,Qe,Hs,Ke,qs,Ut,Ms,Ys,mr,he,Oe,Wt,Xe,js,Ht,zs,vr,J,Ze,Js,qt,Qs,Ks,Le,br,me,et,Xs,Mt,Zs,_r,Q,tt,eo,Yt,to,ro,jt,so,$r,ve,rt,oo,zt,lo,Er,be,st,io,Jt,no,yr,te,ot,ao,Se,fo,wr,K,lt,go,Qt,uo,co,Kt,po,Dr,_e,it,ho,Xt,mo,Ir,$e,nt,vo,Zt,bo,Rr;return p=new Hr({}),B=new or({props:{code:`import diffusers

diffusers.logging.set_verbosity_info()`,highlighted:`<span class="hljs-keyword">import</span> diffusers

diffusers.logging.set_verbosity_info()`}}),z=new or({props:{code:"DIFFUSERS_VERBOSITY=error ./myprogram.py",highlighted:"DIFFUSERS_VERBOSITY=error ./myprogram.py"}}),Ue=new or({props:{code:"DIFFUSERS_NO_ADVISORY_WARNINGS=1 ./myprogram.py",highlighted:"DIFFUSERS_NO_ADVISORY_WARNINGS=1 ./myprogram.py"}}),We=new or({props:{code:`from diffusers.utils import logging

logging.set_verbosity_info()
logger = logging.get_logger("diffusers")
logger.info("INFO")
logger.warning("WARN")`,highlighted:`<span class="hljs-keyword">from</span> diffusers.utils <span class="hljs-keyword">import</span> logging

logging.set_verbosity_info()
logger = logging.get_logger(<span class="hljs-string">&quot;diffusers&quot;</span>)
logger.info(<span class="hljs-string">&quot;INFO&quot;</span>)
logger.warning(<span class="hljs-string">&quot;WARN&quot;</span>)`}}),He=new Hr({}),qe=new U({props:{name:"diffusers.utils.logging.set_verbosity_error",anchor:"diffusers.utils.logging.set_verbosity_error",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L184"}}),Ye=new U({props:{name:"diffusers.utils.logging.set_verbosity_warning",anchor:"diffusers.utils.logging.set_verbosity_warning",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L174"}}),ze=new U({props:{name:"diffusers.utils.logging.set_verbosity_info",anchor:"diffusers.utils.logging.set_verbosity_info",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L169"}}),Qe=new U({props:{name:"diffusers.utils.logging.set_verbosity_debug",anchor:"diffusers.utils.logging.set_verbosity_debug",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L179"}}),Xe=new Hr({}),Ze=new U({props:{name:"diffusers.utils.logging.get_verbosity",anchor:"diffusers.utils.logging.get_verbosity",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L127",returnDescription:`
<p>The logging level.</p>
`,returnType:`
<p><code>int</code></p>
`}}),Le=new Ll({props:{$$slots:{default:[kl]},$$scope:{ctx:S}}}),et=new U({props:{name:"diffusers.utils.logging.set_verbosity",anchor:"diffusers.utils.logging.set_verbosity",parameters:[{name:"verbosity",val:": int"}],parametersDescription:[{anchor:"diffusers.utils.logging.set_verbosity.verbosity",description:`<strong>verbosity</strong> (<code>int</code>) &#x2014;
Logging level, e.g., one of:</p>
<ul>
<li><code>diffusers.logging.CRITICAL</code> or <code>diffusers.logging.FATAL</code></li>
<li><code>diffusers.logging.ERROR</code></li>
<li><code>diffusers.logging.WARNING</code> or <code>diffusers.logging.WARN</code></li>
<li><code>diffusers.logging.INFO</code></li>
<li><code>diffusers.logging.DEBUG</code></li>
</ul>`,name:"verbosity"}],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L150"}}),tt=new U({props:{name:"diffusers.utils.get_logger",anchor:"diffusers.utils.get_logger",parameters:[{name:"name",val:": typing.Optional[str] = None"}],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L113"}}),rt=new U({props:{name:"diffusers.utils.logging.enable_default_handler",anchor:"diffusers.utils.logging.enable_default_handler",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L198"}}),st=new U({props:{name:"diffusers.utils.logging.disable_default_handler",anchor:"diffusers.utils.logging.disable_default_handler",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L189"}}),ot=new U({props:{name:"diffusers.utils.logging.enable_explicit_format",anchor:"diffusers.utils.logging.enable_explicit_format",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L244"}}),Se=new Pl({props:{anchor:"diffusers.utils.logging.enable_explicit_format.example",$$slots:{default:[Tl]},$$scope:{ctx:S}}}),lt=new U({props:{name:"diffusers.utils.logging.reset_format",anchor:"diffusers.utils.logging.reset_format",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L259"}}),it=new U({props:{name:"diffusers.utils.logging.enable_progress_bar",anchor:"diffusers.utils.logging.enable_progress_bar",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L335"}}),nt=new U({props:{name:"diffusers.utils.logging.disable_progress_bar",anchor:"diffusers.utils.logging.disable_progress_bar",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L341"}}),{c(){c=s("meta"),b=g(),_=s("h1"),u=s("a"),m=s("span"),D(p.$$.fragment),v=g(),P=s("span"),L=i("Logging"),C=g(),w=s("p"),$=i("\u{1F9E8} Diffusers has a centralized logging system, so that you can setup the verbosity of the library easily."),N=g(),k=s("p"),W=i("Currently the default verbosity of the library is "),oe=s("code"),Ce=i("WARNING"),H=i("."),Ee=g(),q=s("p"),Pe=i(`To change the level of verbosity, just use one of the direct setters. For instance, here is how to change the verbosity
to the INFO level.`),ye=g(),D(B.$$.fragment),we=g(),O=s("p"),X=i("You can also use the environment variable "),le=s("code"),ie=i("DIFFUSERS_VERBOSITY"),ke=i(` to override the default verbosity. You can set it
to one of the following: `),ne=s("code"),Z=i("debug"),Te=i(", "),j=s("code"),xe=i("info"),T=i(", "),M=s("code"),x=i("warning"),ae=i(", "),De=s("code"),ft=i("error"),Ve=i(", "),Ie=s("code"),fe=i("critical"),gt=i(". For example:"),Ge=g(),D(z.$$.fragment),Be=g(),F=s("p"),dt=i("Additionally, some "),Dt=s("code"),qr=i("warnings"),Mr=i(` can be disabled by setting the environment variable
`),It=s("code"),Yr=i("DIFFUSERS_NO_ADVISORY_WARNINGS"),jr=i(" to a true value, like "),Rt=s("em"),zr=i("1"),Jr=i(`. This will disable any warning that is logged using
`),At=s("code"),Qr=i("logger.warning_advice"),Kr=i(". For example:"),lr=g(),D(Ue.$$.fragment),ir=g(),ut=s("p"),Xr=i("Here is an example of how to use the same logger as the library in your own module or script:"),nr=g(),D(We.$$.fragment),ar=g(),ee=s("p"),Zr=i(`All the methods of this logging module are documented below, the main ones are
`),ct=s("a"),es=i("logging.get_verbosity()"),ts=i(` to get the current level of verbosity in the logger and
`),pt=s("a"),rs=i("logging.set_verbosity()"),ss=i(` to set the verbosity to the level of your choice. In order (from the least
verbose to the most verbose), those levels (with their corresponding int values in parenthesis) are:`),fr=g(),V=s("ul"),Re=s("li"),Nt=s("code"),os=i("diffusers.logging.CRITICAL"),ls=i(" or "),Ot=s("code"),is=i("diffusers.logging.FATAL"),ns=i(` (int value, 50): only report the most
critical errors.`),as=g(),ht=s("li"),Lt=s("code"),fs=i("diffusers.logging.ERROR"),gs=i(" (int value, 40): only report errors."),ds=g(),Ae=s("li"),St=s("code"),us=i("diffusers.logging.WARNING"),cs=i(" or "),Ft=s("code"),ps=i("diffusers.logging.WARN"),hs=i(` (int value, 30): only reports error and
warnings. This the default level used by the library.`),ms=g(),mt=s("li"),Ct=s("code"),vs=i("diffusers.logging.INFO"),bs=i(" (int value, 20): reports error, warnings and basic information."),_s=g(),vt=s("li"),Pt=s("code"),$s=i("diffusers.logging.DEBUG"),Es=i(" (int value, 10): report all information."),gr=g(),Y=s("p"),ys=i("By default, "),kt=s("code"),ws=i("tqdm"),Ds=i(" progress bars will be displayed during model download. "),bt=s("a"),Is=i("logging.disable_progress_bar()"),Rs=i(" and "),_t=s("a"),As=i("logging.enable_progress_bar()"),Ns=i(" can be used to suppress or unsuppress this behavior."),dr=g(),ge=s("h2"),Ne=s("a"),Tt=s("span"),D(He.$$.fragment),Os=g(),xt=s("span"),Ls=i("Base setters"),ur=g(),de=s("div"),D(qe.$$.fragment),Ss=g(),Me=s("p"),Fs=i("Set the verbosity to the "),Vt=s("code"),Cs=i("ERROR"),Ps=i(" level."),cr=g(),ue=s("div"),D(Ye.$$.fragment),ks=g(),je=s("p"),Ts=i("Set the verbosity to the "),Gt=s("code"),xs=i("WARNING"),Vs=i(" level."),pr=g(),ce=s("div"),D(ze.$$.fragment),Gs=g(),Je=s("p"),Bs=i("Set the verbosity to the "),Bt=s("code"),Us=i("INFO"),Ws=i(" level."),hr=g(),pe=s("div"),D(Qe.$$.fragment),Hs=g(),Ke=s("p"),qs=i("Set the verbosity to the "),Ut=s("code"),Ms=i("DEBUG"),Ys=i(" level."),mr=g(),he=s("h2"),Oe=s("a"),Wt=s("span"),D(Xe.$$.fragment),js=g(),Ht=s("span"),zs=i("Other functions"),vr=g(),J=s("div"),D(Ze.$$.fragment),Js=g(),qt=s("p"),Qs=i("Return the current level for the \u{1F917} Diffusers\u2019 root logger as an int."),Ks=g(),D(Le.$$.fragment),br=g(),me=s("div"),D(et.$$.fragment),Xs=g(),Mt=s("p"),Zs=i("Set the verbosity level for the \u{1F917} Diffusers\u2019 root logger."),_r=g(),Q=s("div"),D(tt.$$.fragment),eo=g(),Yt=s("p"),to=i("Return a logger with the specified name."),ro=g(),jt=s("p"),so=i("This function is not supposed to be directly accessed unless you are writing a custom diffusers module."),$r=g(),ve=s("div"),D(rt.$$.fragment),oo=g(),zt=s("p"),lo=i("Enable the default handler of the HuggingFace Diffusers\u2019 root logger."),Er=g(),be=s("div"),D(st.$$.fragment),io=g(),Jt=s("p"),no=i("Disable the default handler of the HuggingFace Diffusers\u2019 root logger."),yr=g(),te=s("div"),D(ot.$$.fragment),ao=g(),D(Se.$$.fragment),fo=i(`
All handlers currently bound to the root logger are affected by this method.`),wr=g(),K=s("div"),D(lt.$$.fragment),go=g(),Qt=s("p"),uo=i("Resets the formatting for HuggingFace Diffusers\u2019 loggers."),co=g(),Kt=s("p"),po=i("All handlers currently bound to the root logger are affected by this method."),Dr=g(),_e=s("div"),D(it.$$.fragment),ho=g(),Xt=s("p"),mo=i("Enable tqdm progress bar."),Ir=g(),$e=s("div"),D(nt.$$.fragment),vo=g(),Zt=s("p"),bo=i("Disable tqdm progress bar."),this.h()},l(e){const a=Nl('[data-svelte="svelte-1phssyn"]',document.head);c=o(a,"META",{name:!0,content:!0}),a.forEach(r),b=d(e),_=o(e,"H1",{class:!0});var at=l(_);u=o(at,"A",{id:!0,class:!0,href:!0});var er=l(u);m=o(er,"SPAN",{});var yo=l(m);I(p.$$.fragment,yo),yo.forEach(r),er.forEach(r),v=d(at),P=o(at,"SPAN",{});var wo=l(P);L=n(wo,"Logging"),wo.forEach(r),at.forEach(r),C=d(e),w=o(e,"P",{});var Do=l(w);$=n(Do,"\u{1F9E8} Diffusers has a centralized logging system, so that you can setup the verbosity of the library easily."),Do.forEach(r),N=d(e),k=o(e,"P",{});var Ar=l(k);W=n(Ar,"Currently the default verbosity of the library is "),oe=o(Ar,"CODE",{});var Io=l(oe);Ce=n(Io,"WARNING"),Io.forEach(r),H=n(Ar,"."),Ar.forEach(r),Ee=d(e),q=o(e,"P",{});var Ro=l(q);Pe=n(Ro,`To change the level of verbosity, just use one of the direct setters. For instance, here is how to change the verbosity
to the INFO level.`),Ro.forEach(r),ye=d(e),I(B.$$.fragment,e),we=d(e),O=o(e,"P",{});var G=l(O);X=n(G,"You can also use the environment variable "),le=o(G,"CODE",{});var Ao=l(le);ie=n(Ao,"DIFFUSERS_VERBOSITY"),Ao.forEach(r),ke=n(G,` to override the default verbosity. You can set it
to one of the following: `),ne=o(G,"CODE",{});var No=l(ne);Z=n(No,"debug"),No.forEach(r),Te=n(G,", "),j=o(G,"CODE",{});var Oo=l(j);xe=n(Oo,"info"),Oo.forEach(r),T=n(G,", "),M=o(G,"CODE",{});var Lo=l(M);x=n(Lo,"warning"),Lo.forEach(r),ae=n(G,", "),De=o(G,"CODE",{});var So=l(De);ft=n(So,"error"),So.forEach(r),Ve=n(G,", "),Ie=o(G,"CODE",{});var Fo=l(Ie);fe=n(Fo,"critical"),Fo.forEach(r),gt=n(G,". For example:"),G.forEach(r),Ge=d(e),I(z.$$.fragment,e),Be=d(e),F=o(e,"P",{});var re=l(F);dt=n(re,"Additionally, some "),Dt=o(re,"CODE",{});var Co=l(Dt);qr=n(Co,"warnings"),Co.forEach(r),Mr=n(re,` can be disabled by setting the environment variable
`),It=o(re,"CODE",{});var Po=l(It);Yr=n(Po,"DIFFUSERS_NO_ADVISORY_WARNINGS"),Po.forEach(r),jr=n(re," to a true value, like "),Rt=o(re,"EM",{});var ko=l(Rt);zr=n(ko,"1"),ko.forEach(r),Jr=n(re,`. This will disable any warning that is logged using
`),At=o(re,"CODE",{});var To=l(At);Qr=n(To,"logger.warning_advice"),To.forEach(r),Kr=n(re,". For example:"),re.forEach(r),lr=d(e),I(Ue.$$.fragment,e),ir=d(e),ut=o(e,"P",{});var xo=l(ut);Xr=n(xo,"Here is an example of how to use the same logger as the library in your own module or script:"),xo.forEach(r),nr=d(e),I(We.$$.fragment,e),ar=d(e),ee=o(e,"P",{});var $t=l(ee);Zr=n($t,`All the methods of this logging module are documented below, the main ones are
`),ct=o($t,"A",{href:!0});var Vo=l(ct);es=n(Vo,"logging.get_verbosity()"),Vo.forEach(r),ts=n($t,` to get the current level of verbosity in the logger and
`),pt=o($t,"A",{href:!0});var Go=l(pt);rs=n(Go,"logging.set_verbosity()"),Go.forEach(r),ss=n($t,` to set the verbosity to the level of your choice. In order (from the least
verbose to the most verbose), those levels (with their corresponding int values in parenthesis) are:`),$t.forEach(r),fr=d(e),V=o(e,"UL",{});var se=l(V);Re=o(se,"LI",{});var tr=l(Re);Nt=o(tr,"CODE",{});var Bo=l(Nt);os=n(Bo,"diffusers.logging.CRITICAL"),Bo.forEach(r),ls=n(tr," or "),Ot=o(tr,"CODE",{});var Uo=l(Ot);is=n(Uo,"diffusers.logging.FATAL"),Uo.forEach(r),ns=n(tr,` (int value, 50): only report the most
critical errors.`),tr.forEach(r),as=d(se),ht=o(se,"LI",{});var _o=l(ht);Lt=o(_o,"CODE",{});var Wo=l(Lt);fs=n(Wo,"diffusers.logging.ERROR"),Wo.forEach(r),gs=n(_o," (int value, 40): only report errors."),_o.forEach(r),ds=d(se),Ae=o(se,"LI",{});var rr=l(Ae);St=o(rr,"CODE",{});var Ho=l(St);us=n(Ho,"diffusers.logging.WARNING"),Ho.forEach(r),cs=n(rr," or "),Ft=o(rr,"CODE",{});var qo=l(Ft);ps=n(qo,"diffusers.logging.WARN"),qo.forEach(r),hs=n(rr,` (int value, 30): only reports error and
warnings. This the default level used by the library.`),rr.forEach(r),ms=d(se),mt=o(se,"LI",{});var $o=l(mt);Ct=o($o,"CODE",{});var Mo=l(Ct);vs=n(Mo,"diffusers.logging.INFO"),Mo.forEach(r),bs=n($o," (int value, 20): reports error, warnings and basic information."),$o.forEach(r),_s=d(se),vt=o(se,"LI",{});var Eo=l(vt);Pt=o(Eo,"CODE",{});var Yo=l(Pt);$s=n(Yo,"diffusers.logging.DEBUG"),Yo.forEach(r),Es=n(Eo," (int value, 10): report all information."),Eo.forEach(r),se.forEach(r),gr=d(e),Y=o(e,"P",{});var Fe=l(Y);ys=n(Fe,"By default, "),kt=o(Fe,"CODE",{});var jo=l(kt);ws=n(jo,"tqdm"),jo.forEach(r),Ds=n(Fe," progress bars will be displayed during model download. "),bt=o(Fe,"A",{href:!0});var zo=l(bt);Is=n(zo,"logging.disable_progress_bar()"),zo.forEach(r),Rs=n(Fe," and "),_t=o(Fe,"A",{href:!0});var Jo=l(_t);As=n(Jo,"logging.enable_progress_bar()"),Jo.forEach(r),Ns=n(Fe," can be used to suppress or unsuppress this behavior."),Fe.forEach(r),dr=d(e),ge=o(e,"H2",{class:!0});var Nr=l(ge);Ne=o(Nr,"A",{id:!0,class:!0,href:!0});var Qo=l(Ne);Tt=o(Qo,"SPAN",{});var Ko=l(Tt);I(He.$$.fragment,Ko),Ko.forEach(r),Qo.forEach(r),Os=d(Nr),xt=o(Nr,"SPAN",{});var Xo=l(xt);Ls=n(Xo,"Base setters"),Xo.forEach(r),Nr.forEach(r),ur=d(e),de=o(e,"DIV",{class:!0});var Or=l(de);I(qe.$$.fragment,Or),Ss=d(Or),Me=o(Or,"P",{});var Lr=l(Me);Fs=n(Lr,"Set the verbosity to the "),Vt=o(Lr,"CODE",{});var Zo=l(Vt);Cs=n(Zo,"ERROR"),Zo.forEach(r),Ps=n(Lr," level."),Lr.forEach(r),Or.forEach(r),cr=d(e),ue=o(e,"DIV",{class:!0});var Sr=l(ue);I(Ye.$$.fragment,Sr),ks=d(Sr),je=o(Sr,"P",{});var Fr=l(je);Ts=n(Fr,"Set the verbosity to the "),Gt=o(Fr,"CODE",{});var el=l(Gt);xs=n(el,"WARNING"),el.forEach(r),Vs=n(Fr," level."),Fr.forEach(r),Sr.forEach(r),pr=d(e),ce=o(e,"DIV",{class:!0});var Cr=l(ce);I(ze.$$.fragment,Cr),Gs=d(Cr),Je=o(Cr,"P",{});var Pr=l(Je);Bs=n(Pr,"Set the verbosity to the "),Bt=o(Pr,"CODE",{});var tl=l(Bt);Us=n(tl,"INFO"),tl.forEach(r),Ws=n(Pr," level."),Pr.forEach(r),Cr.forEach(r),hr=d(e),pe=o(e,"DIV",{class:!0});var kr=l(pe);I(Qe.$$.fragment,kr),Hs=d(kr),Ke=o(kr,"P",{});var Tr=l(Ke);qs=n(Tr,"Set the verbosity to the "),Ut=o(Tr,"CODE",{});var rl=l(Ut);Ms=n(rl,"DEBUG"),rl.forEach(r),Ys=n(Tr," level."),Tr.forEach(r),kr.forEach(r),mr=d(e),he=o(e,"H2",{class:!0});var xr=l(he);Oe=o(xr,"A",{id:!0,class:!0,href:!0});var sl=l(Oe);Wt=o(sl,"SPAN",{});var ol=l(Wt);I(Xe.$$.fragment,ol),ol.forEach(r),sl.forEach(r),js=d(xr),Ht=o(xr,"SPAN",{});var ll=l(Ht);zs=n(ll,"Other functions"),ll.forEach(r),xr.forEach(r),vr=d(e),J=o(e,"DIV",{class:!0});var Et=l(J);I(Ze.$$.fragment,Et),Js=d(Et),qt=o(Et,"P",{});var il=l(qt);Qs=n(il,"Return the current level for the \u{1F917} Diffusers\u2019 root logger as an int."),il.forEach(r),Ks=d(Et),I(Le.$$.fragment,Et),Et.forEach(r),br=d(e),me=o(e,"DIV",{class:!0});var Vr=l(me);I(et.$$.fragment,Vr),Xs=d(Vr),Mt=o(Vr,"P",{});var nl=l(Mt);Zs=n(nl,"Set the verbosity level for the \u{1F917} Diffusers\u2019 root logger."),nl.forEach(r),Vr.forEach(r),_r=d(e),Q=o(e,"DIV",{class:!0});var yt=l(Q);I(tt.$$.fragment,yt),eo=d(yt),Yt=o(yt,"P",{});var al=l(Yt);to=n(al,"Return a logger with the specified name."),al.forEach(r),ro=d(yt),jt=o(yt,"P",{});var fl=l(jt);so=n(fl,"This function is not supposed to be directly accessed unless you are writing a custom diffusers module."),fl.forEach(r),yt.forEach(r),$r=d(e),ve=o(e,"DIV",{class:!0});var Gr=l(ve);I(rt.$$.fragment,Gr),oo=d(Gr),zt=o(Gr,"P",{});var gl=l(zt);lo=n(gl,"Enable the default handler of the HuggingFace Diffusers\u2019 root logger."),gl.forEach(r),Gr.forEach(r),Er=d(e),be=o(e,"DIV",{class:!0});var Br=l(be);I(st.$$.fragment,Br),io=d(Br),Jt=o(Br,"P",{});var dl=l(Jt);no=n(dl,"Disable the default handler of the HuggingFace Diffusers\u2019 root logger."),dl.forEach(r),Br.forEach(r),yr=d(e),te=o(e,"DIV",{class:!0});var sr=l(te);I(ot.$$.fragment,sr),ao=d(sr),I(Se.$$.fragment,sr),fo=n(sr,`
All handlers currently bound to the root logger are affected by this method.`),sr.forEach(r),wr=d(e),K=o(e,"DIV",{class:!0});var wt=l(K);I(lt.$$.fragment,wt),go=d(wt),Qt=o(wt,"P",{});var ul=l(Qt);uo=n(ul,"Resets the formatting for HuggingFace Diffusers\u2019 loggers."),ul.forEach(r),co=d(wt),Kt=o(wt,"P",{});var cl=l(Kt);po=n(cl,"All handlers currently bound to the root logger are affected by this method."),cl.forEach(r),wt.forEach(r),Dr=d(e),_e=o(e,"DIV",{class:!0});var Ur=l(_e);I(it.$$.fragment,Ur),ho=d(Ur),Xt=o(Ur,"P",{});var pl=l(Xt);mo=n(pl,"Enable tqdm progress bar."),pl.forEach(r),Ur.forEach(r),Ir=d(e),$e=o(e,"DIV",{class:!0});var Wr=l($e);I(nt.$$.fragment,Wr),vo=d(Wr),Zt=o(Wr,"P",{});var hl=l(Zt);bo=n(hl,"Disable tqdm progress bar."),hl.forEach(r),Wr.forEach(r),this.h()},h(){h(c,"name","hf:doc:metadata"),h(c,"content",JSON.stringify(Vl)),h(u,"id","logging"),h(u,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(u,"href","#logging"),h(_,"class","relative group"),h(ct,"href","/docs/diffusers/main/en/api/logging#diffusers.utils.logging.get_verbosity"),h(pt,"href","/docs/diffusers/main/en/api/logging#diffusers.utils.logging.set_verbosity"),h(bt,"href","/docs/diffusers/main/en/api/logging#diffusers.utils.logging.disable_progress_bar"),h(_t,"href","/docs/diffusers/main/en/api/logging#diffusers.utils.logging.enable_progress_bar"),h(Ne,"id","diffusers.utils.logging.set_verbosity_error"),h(Ne,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(Ne,"href","#diffusers.utils.logging.set_verbosity_error"),h(ge,"class","relative group"),h(de,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(ue,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(ce,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(pe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(Oe,"id","diffusers.utils.logging.get_verbosity"),h(Oe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(Oe,"href","#diffusers.utils.logging.get_verbosity"),h(he,"class","relative group"),h(J,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(me,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(Q,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(ve,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(be,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(te,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(K,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(_e,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h($e,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(e,a){t(document.head,c),f(e,b,a),f(e,_,a),t(_,u),t(u,m),R(p,m,null),t(_,v),t(_,P),t(P,L),f(e,C,a),f(e,w,a),t(w,$),f(e,N,a),f(e,k,a),t(k,W),t(k,oe),t(oe,Ce),t(k,H),f(e,Ee,a),f(e,q,a),t(q,Pe),f(e,ye,a),R(B,e,a),f(e,we,a),f(e,O,a),t(O,X),t(O,le),t(le,ie),t(O,ke),t(O,ne),t(ne,Z),t(O,Te),t(O,j),t(j,xe),t(O,T),t(O,M),t(M,x),t(O,ae),t(O,De),t(De,ft),t(O,Ve),t(O,Ie),t(Ie,fe),t(O,gt),f(e,Ge,a),R(z,e,a),f(e,Be,a),f(e,F,a),t(F,dt),t(F,Dt),t(Dt,qr),t(F,Mr),t(F,It),t(It,Yr),t(F,jr),t(F,Rt),t(Rt,zr),t(F,Jr),t(F,At),t(At,Qr),t(F,Kr),f(e,lr,a),R(Ue,e,a),f(e,ir,a),f(e,ut,a),t(ut,Xr),f(e,nr,a),R(We,e,a),f(e,ar,a),f(e,ee,a),t(ee,Zr),t(ee,ct),t(ct,es),t(ee,ts),t(ee,pt),t(pt,rs),t(ee,ss),f(e,fr,a),f(e,V,a),t(V,Re),t(Re,Nt),t(Nt,os),t(Re,ls),t(Re,Ot),t(Ot,is),t(Re,ns),t(V,as),t(V,ht),t(ht,Lt),t(Lt,fs),t(ht,gs),t(V,ds),t(V,Ae),t(Ae,St),t(St,us),t(Ae,cs),t(Ae,Ft),t(Ft,ps),t(Ae,hs),t(V,ms),t(V,mt),t(mt,Ct),t(Ct,vs),t(mt,bs),t(V,_s),t(V,vt),t(vt,Pt),t(Pt,$s),t(vt,Es),f(e,gr,a),f(e,Y,a),t(Y,ys),t(Y,kt),t(kt,ws),t(Y,Ds),t(Y,bt),t(bt,Is),t(Y,Rs),t(Y,_t),t(_t,As),t(Y,Ns),f(e,dr,a),f(e,ge,a),t(ge,Ne),t(Ne,Tt),R(He,Tt,null),t(ge,Os),t(ge,xt),t(xt,Ls),f(e,ur,a),f(e,de,a),R(qe,de,null),t(de,Ss),t(de,Me),t(Me,Fs),t(Me,Vt),t(Vt,Cs),t(Me,Ps),f(e,cr,a),f(e,ue,a),R(Ye,ue,null),t(ue,ks),t(ue,je),t(je,Ts),t(je,Gt),t(Gt,xs),t(je,Vs),f(e,pr,a),f(e,ce,a),R(ze,ce,null),t(ce,Gs),t(ce,Je),t(Je,Bs),t(Je,Bt),t(Bt,Us),t(Je,Ws),f(e,hr,a),f(e,pe,a),R(Qe,pe,null),t(pe,Hs),t(pe,Ke),t(Ke,qs),t(Ke,Ut),t(Ut,Ms),t(Ke,Ys),f(e,mr,a),f(e,he,a),t(he,Oe),t(Oe,Wt),R(Xe,Wt,null),t(he,js),t(he,Ht),t(Ht,zs),f(e,vr,a),f(e,J,a),R(Ze,J,null),t(J,Js),t(J,qt),t(qt,Qs),t(J,Ks),R(Le,J,null),f(e,br,a),f(e,me,a),R(et,me,null),t(me,Xs),t(me,Mt),t(Mt,Zs),f(e,_r,a),f(e,Q,a),R(tt,Q,null),t(Q,eo),t(Q,Yt),t(Yt,to),t(Q,ro),t(Q,jt),t(jt,so),f(e,$r,a),f(e,ve,a),R(rt,ve,null),t(ve,oo),t(ve,zt),t(zt,lo),f(e,Er,a),f(e,be,a),R(st,be,null),t(be,io),t(be,Jt),t(Jt,no),f(e,yr,a),f(e,te,a),R(ot,te,null),t(te,ao),R(Se,te,null),t(te,fo),f(e,wr,a),f(e,K,a),R(lt,K,null),t(K,go),t(K,Qt),t(Qt,uo),t(K,co),t(K,Kt),t(Kt,po),f(e,Dr,a),f(e,_e,a),R(it,_e,null),t(_e,ho),t(_e,Xt),t(Xt,mo),f(e,Ir,a),f(e,$e,a),R(nt,$e,null),t($e,vo),t($e,Zt),t(Zt,bo),Rr=!0},p(e,[a]){const at={};a&2&&(at.$$scope={dirty:a,ctx:e}),Le.$set(at);const er={};a&2&&(er.$$scope={dirty:a,ctx:e}),Se.$set(er)},i(e){Rr||(E(p.$$.fragment,e),E(B.$$.fragment,e),E(z.$$.fragment,e),E(Ue.$$.fragment,e),E(We.$$.fragment,e),E(He.$$.fragment,e),E(qe.$$.fragment,e),E(Ye.$$.fragment,e),E(ze.$$.fragment,e),E(Qe.$$.fragment,e),E(Xe.$$.fragment,e),E(Ze.$$.fragment,e),E(Le.$$.fragment,e),E(et.$$.fragment,e),E(tt.$$.fragment,e),E(rt.$$.fragment,e),E(st.$$.fragment,e),E(ot.$$.fragment,e),E(Se.$$.fragment,e),E(lt.$$.fragment,e),E(it.$$.fragment,e),E(nt.$$.fragment,e),Rr=!0)},o(e){y(p.$$.fragment,e),y(B.$$.fragment,e),y(z.$$.fragment,e),y(Ue.$$.fragment,e),y(We.$$.fragment,e),y(He.$$.fragment,e),y(qe.$$.fragment,e),y(Ye.$$.fragment,e),y(ze.$$.fragment,e),y(Qe.$$.fragment,e),y(Xe.$$.fragment,e),y(Ze.$$.fragment,e),y(Le.$$.fragment,e),y(et.$$.fragment,e),y(tt.$$.fragment,e),y(rt.$$.fragment,e),y(st.$$.fragment,e),y(ot.$$.fragment,e),y(Se.$$.fragment,e),y(lt.$$.fragment,e),y(it.$$.fragment,e),y(nt.$$.fragment,e),Rr=!1},d(e){r(c),e&&r(b),e&&r(_),A(p),e&&r(C),e&&r(w),e&&r(N),e&&r(k),e&&r(Ee),e&&r(q),e&&r(ye),A(B,e),e&&r(we),e&&r(O),e&&r(Ge),A(z,e),e&&r(Be),e&&r(F),e&&r(lr),A(Ue,e),e&&r(ir),e&&r(ut),e&&r(nr),A(We,e),e&&r(ar),e&&r(ee),e&&r(fr),e&&r(V),e&&r(gr),e&&r(Y),e&&r(dr),e&&r(ge),A(He),e&&r(ur),e&&r(de),A(qe),e&&r(cr),e&&r(ue),A(Ye),e&&r(pr),e&&r(ce),A(ze),e&&r(hr),e&&r(pe),A(Qe),e&&r(mr),e&&r(he),A(Xe),e&&r(vr),e&&r(J),A(Ze),A(Le),e&&r(br),e&&r(me),A(et),e&&r(_r),e&&r(Q),A(tt),e&&r($r),e&&r(ve),A(rt),e&&r(Er),e&&r(be),A(st),e&&r(yr),e&&r(te),A(ot),A(Se),e&&r(wr),e&&r(K),A(lt),e&&r(Dr),e&&r(_e),A(it),e&&r(Ir),e&&r($e),A(nt)}}}const Vl={local:"logging",sections:[{local:"diffusers.utils.logging.set_verbosity_error",title:"Base setters"},{local:"diffusers.utils.logging.get_verbosity",title:"Other functions"}],title:"Logging"};function Gl(S){return $l(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ml extends vl{constructor(c){super();bl(this,c,Gl,xl,_l,{})}}export{Ml as default,Vl as metadata};
