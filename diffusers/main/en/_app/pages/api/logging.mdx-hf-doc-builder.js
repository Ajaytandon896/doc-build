import{S as hl,i as vl,s as bl,e as s,k as g,w as h,t as l,M as _l,c as o,d as r,m as d,a as n,x as v,h as i,b as c,G as t,g as a,y as b,q as _,o as $,B as E,v as $l,L as El}from"../../chunks/vendor-hf-doc-builder.js";import{T as yl}from"../../chunks/Tip-hf-doc-builder.js";import{D as F}from"../../chunks/Docstring-hf-doc-builder.js";import{C as or}from"../../chunks/CodeBlock-hf-doc-builder.js";import{I as Eo}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{E as wl}from"../../chunks/ExampleCodeBlock-hf-doc-builder.js";function Dl(ft){let m,C,w,u,D,p,R,Z,Se,H,Y,Le,V,x,ee,te,Fe,P,be,T,Ce,_e,L,$e,y,j,re,se,xe,oe,z,Pe,B,Te;return{c(){m=s("p"),C=l("\u{1F917} Diffusers has following logging levels:"),w=g(),u=s("ul"),D=s("li"),p=l("50: "),R=s("code"),Z=l("diffusers.logging.CRITICAL"),Se=l(" or "),H=s("code"),Y=l("diffusers.logging.FATAL"),Le=g(),V=s("li"),x=l("40: "),ee=s("code"),te=l("diffusers.logging.ERROR"),Fe=g(),P=s("li"),be=l("30: "),T=s("code"),Ce=l("diffusers.logging.WARNING"),_e=l(" or "),L=s("code"),$e=l("diffusers.logging.WARN"),y=g(),j=s("li"),re=l("20: "),se=s("code"),xe=l("diffusers.logging.INFO"),oe=g(),z=s("li"),Pe=l("10: "),B=s("code"),Te=l("diffusers.logging.DEBUG")},l(A){m=o(A,"P",{});var k=n(m);C=i(k,"\u{1F917} Diffusers has following logging levels:"),k.forEach(r),w=d(A),u=o(A,"UL",{});var N=n(u);D=o(N,"LI",{});var le=n(D);p=i(le,"50: "),R=o(le,"CODE",{});var Ee=n(R);Z=i(Ee,"diffusers.logging.CRITICAL"),Ee.forEach(r),Se=i(le," or "),H=o(le,"CODE",{});var at=n(H);Y=i(at,"diffusers.logging.FATAL"),at.forEach(r),le.forEach(r),Le=d(N),V=o(N,"LI",{});var ke=n(V);x=i(ke,"40: "),ee=o(ke,"CODE",{});var ye=n(ee);te=i(ye,"diffusers.logging.ERROR"),ye.forEach(r),ke.forEach(r),Fe=d(N),P=o(N,"LI",{});var ie=n(P);be=i(ie,"30: "),T=o(ie,"CODE",{});var gt=n(T);Ce=i(gt,"diffusers.logging.WARNING"),gt.forEach(r),_e=i(ie," or "),L=o(ie,"CODE",{});var Ge=n(L);$e=i(Ge,"diffusers.logging.WARN"),Ge.forEach(r),ie.forEach(r),y=d(N),j=o(N,"LI",{});var U=n(j);re=i(U,"20: "),se=o(U,"CODE",{});var Ve=n(se);xe=i(Ve,"diffusers.logging.INFO"),Ve.forEach(r),U.forEach(r),oe=d(N),z=o(N,"LI",{});var I=n(z);Pe=i(I,"10: "),B=o(I,"CODE",{});var dt=n(B);Te=i(dt,"diffusers.logging.DEBUG"),dt.forEach(r),I.forEach(r),N.forEach(r)},m(A,k){a(A,m,k),t(m,C),a(A,w,k),a(A,u,k),t(u,D),t(D,p),t(D,R),t(R,Z),t(D,Se),t(D,H),t(H,Y),t(u,Le),t(u,V),t(V,x),t(V,ee),t(ee,te),t(u,Fe),t(u,P),t(P,be),t(P,T),t(T,Ce),t(P,_e),t(P,L),t(L,$e),t(u,y),t(u,j),t(j,re),t(j,se),t(se,xe),t(u,oe),t(u,z),t(z,Pe),t(z,B),t(B,Te)},d(A){A&&r(m),A&&r(w),A&&r(u)}}}function Il(ft){let m,C,w,u,D;return u=new or({props:{code:"    [LEVELNAME|FILENAME|LINE NUMBER] TIME >> MESSAGE",highlighted:'    [LEVELNAME|<span class="hljs-type">FILENAME</span>|<span class="hljs-type">LINE</span> NUMBER] TIME &gt;&gt; MESSAGE'}}),{c(){m=s("p"),C=l("Enable explicit formatting for every HuggingFace Diffusers\u2019 logger. The explicit formatter is as follows:"),w=g(),h(u.$$.fragment)},l(p){m=o(p,"P",{});var R=n(m);C=i(R,"Enable explicit formatting for every HuggingFace Diffusers\u2019 logger. The explicit formatter is as follows:"),R.forEach(r),w=d(p),v(u.$$.fragment,p)},m(p,R){a(p,m,R),t(m,C),a(p,w,R),b(u,p,R),D=!0},p:El,i(p){D||(_(u.$$.fragment,p),D=!0)},o(p){$(u.$$.fragment,p),D=!1},d(p){p&&r(m),p&&r(w),E(u,p)}}}function Rl(ft){let m,C,w,u,D,p,R,Z,Se,H,Y,Le,V,x,ee,te,Fe,P,be,T,Ce,_e,L,$e,y,j,re,se,xe,oe,z,Pe,B,Te,A,k,N,le,Ee,at,ke,ye,ie,gt,Ge,U,Ve,I,dt,Dt,qr,Mr,It,Hr,Yr,Rt,jr,zr,At,Jr,Kr,lr,Be,ir,ut,Qr,nr,Ue,fr,J,Xr,ct,Zr,es,pt,ts,rs,ar,O,we,Nt,ss,os,Ot,ls,is,ns,mt,St,fs,as,gs,De,Lt,ds,us,Ft,cs,ps,ms,ht,Ct,hs,vs,bs,vt,xt,_s,$s,gr,G,Es,Pt,ys,ws,bt,Ds,Is,_t,Rs,As,dr,ne,Ie,Tt,We,Ns,kt,Os,ur,fe,qe,Ss,Me,Ls,Gt,Fs,Cs,cr,ae,He,xs,Ye,Ps,Vt,Ts,ks,pr,ge,je,Gs,ze,Vs,Bt,Bs,Us,mr,de,Je,Ws,Ke,qs,Ut,Ms,Hs,hr,ue,Re,Wt,Qe,Ys,qt,js,vr,W,Xe,zs,Mt,Js,Ks,Ae,br,ce,Ze,Qs,Ht,Xs,_r,q,et,Zs,Yt,eo,to,jt,ro,$r,pe,tt,so,zt,oo,Er,me,rt,lo,Jt,io,yr,K,st,no,Ne,fo,wr,M,ot,ao,Kt,go,uo,Qt,co,Dr,he,lt,po,Xt,mo,Ir,ve,it,ho,Zt,vo,Rr;return p=new Eo({}),L=new or({props:{code:`import diffusers

diffusers.logging.set_verbosity_info()`,highlighted:`<span class="hljs-keyword">import</span> diffusers

diffusers.logging.set_verbosity_info()`}}),U=new or({props:{code:"DIFFUSERS_VERBOSITY=error ./myprogram.py",highlighted:"DIFFUSERS_VERBOSITY=error ./myprogram.py"}}),Be=new or({props:{code:"DIFFUSERS_NO_ADVISORY_WARNINGS=1 ./myprogram.py",highlighted:"DIFFUSERS_NO_ADVISORY_WARNINGS=1 ./myprogram.py"}}),Ue=new or({props:{code:`from diffusers.utils import logging

logging.set_verbosity_info()
logger = logging.get_logger("diffusers")
logger.info("INFO")
logger.warning("WARN")`,highlighted:`<span class="hljs-keyword">from</span> diffusers.utils <span class="hljs-keyword">import</span> logging

logging.set_verbosity_info()
logger = logging.get_logger(<span class="hljs-string">&quot;diffusers&quot;</span>)
logger.info(<span class="hljs-string">&quot;INFO&quot;</span>)
logger.warning(<span class="hljs-string">&quot;WARN&quot;</span>)`}}),We=new Eo({}),qe=new F({props:{name:"diffusers.utils.logging.set_verbosity_error",anchor:"diffusers.utils.logging.set_verbosity_error",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L180"}}),He=new F({props:{name:"diffusers.utils.logging.set_verbosity_warning",anchor:"diffusers.utils.logging.set_verbosity_warning",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L170"}}),je=new F({props:{name:"diffusers.utils.logging.set_verbosity_info",anchor:"diffusers.utils.logging.set_verbosity_info",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L165"}}),Je=new F({props:{name:"diffusers.utils.logging.set_verbosity_debug",anchor:"diffusers.utils.logging.set_verbosity_debug",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L175"}}),Qe=new Eo({}),Xe=new F({props:{name:"diffusers.utils.logging.get_verbosity",anchor:"diffusers.utils.logging.get_verbosity",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L123",returnDescription:`
<p>The logging level.</p>
`,returnType:`
<p><code>int</code></p>
`}}),Ae=new yl({props:{$$slots:{default:[Dl]},$$scope:{ctx:ft}}}),Ze=new F({props:{name:"diffusers.utils.logging.set_verbosity",anchor:"diffusers.utils.logging.set_verbosity",parameters:[{name:"verbosity",val:": int"}],parametersDescription:[{anchor:"diffusers.utils.logging.set_verbosity.verbosity",description:`<strong>verbosity</strong> (<code>int</code>) &#x2014;
Logging level, e.g., one of:</p>
<ul>
<li><code>diffusers.logging.CRITICAL</code> or <code>diffusers.logging.FATAL</code></li>
<li><code>diffusers.logging.ERROR</code></li>
<li><code>diffusers.logging.WARNING</code> or <code>diffusers.logging.WARN</code></li>
<li><code>diffusers.logging.INFO</code></li>
<li><code>diffusers.logging.DEBUG</code></li>
</ul>`,name:"verbosity"}],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L146"}}),et=new F({props:{name:"diffusers.utils.get_logger",anchor:"diffusers.utils.get_logger",parameters:[{name:"name",val:": typing.Optional[str] = None"}],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L109"}}),tt=new F({props:{name:"diffusers.utils.logging.enable_default_handler",anchor:"diffusers.utils.logging.enable_default_handler",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L194"}}),rt=new F({props:{name:"diffusers.utils.logging.disable_default_handler",anchor:"diffusers.utils.logging.disable_default_handler",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L185"}}),st=new F({props:{name:"diffusers.utils.logging.enable_explicit_format",anchor:"diffusers.utils.logging.enable_explicit_format",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L240"}}),Ne=new wl({props:{anchor:"diffusers.utils.logging.enable_explicit_format.example",$$slots:{default:[Il]},$$scope:{ctx:ft}}}),ot=new F({props:{name:"diffusers.utils.logging.reset_format",anchor:"diffusers.utils.logging.reset_format",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L255"}}),lt=new F({props:{name:"diffusers.utils.logging.enable_progress_bar",anchor:"diffusers.utils.logging.enable_progress_bar",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L331"}}),it=new F({props:{name:"diffusers.utils.logging.disable_progress_bar",anchor:"diffusers.utils.logging.disable_progress_bar",parameters:[],source:"https://github.com/huggingface/diffusers/blob/main/src/diffusers/utils/logging.py#L337"}}),{c(){m=s("meta"),C=g(),w=s("h1"),u=s("a"),D=s("span"),h(p.$$.fragment),R=g(),Z=s("span"),Se=l("Logging"),H=g(),Y=s("p"),Le=l("\u{1F9E8} Diffusers has a centralized logging system, so that you can setup the verbosity of the library easily."),V=g(),x=s("p"),ee=l("Currently the default verbosity of the library is "),te=s("code"),Fe=l("WARNING"),P=l("."),be=g(),T=s("p"),Ce=l(`To change the level of verbosity, just use one of the direct setters. For instance, here is how to change the verbosity
to the INFO level.`),_e=g(),h(L.$$.fragment),$e=g(),y=s("p"),j=l("You can also use the environment variable "),re=s("code"),se=l("DIFFUSERS_VERBOSITY"),xe=l(` to override the default verbosity. You can set it
to one of the following: `),oe=s("code"),z=l("debug"),Pe=l(", "),B=s("code"),Te=l("info"),A=l(", "),k=s("code"),N=l("warning"),le=l(", "),Ee=s("code"),at=l("error"),ke=l(", "),ye=s("code"),ie=l("critical"),gt=l(". For example:"),Ge=g(),h(U.$$.fragment),Ve=g(),I=s("p"),dt=l("Additionally, some "),Dt=s("code"),qr=l("warnings"),Mr=l(` can be disabled by setting the environment variable
`),It=s("code"),Hr=l("DIFFUSERS_NO_ADVISORY_WARNINGS"),Yr=l(" to a true value, like "),Rt=s("em"),jr=l("1"),zr=l(`. This will disable any warning that is logged using
`),At=s("code"),Jr=l("logger.warning_advice"),Kr=l(". For example:"),lr=g(),h(Be.$$.fragment),ir=g(),ut=s("p"),Qr=l("Here is an example of how to use the same logger as the library in your own module or script:"),nr=g(),h(Ue.$$.fragment),fr=g(),J=s("p"),Xr=l(`All the methods of this logging module are documented below, the main ones are
`),ct=s("a"),Zr=l("logging.get_verbosity()"),es=l(` to get the current level of verbosity in the logger and
`),pt=s("a"),ts=l("logging.set_verbosity()"),rs=l(` to set the verbosity to the level of your choice. In order (from the least
verbose to the most verbose), those levels (with their corresponding int values in parenthesis) are:`),ar=g(),O=s("ul"),we=s("li"),Nt=s("code"),ss=l("diffusers.logging.CRITICAL"),os=l(" or "),Ot=s("code"),ls=l("diffusers.logging.FATAL"),is=l(` (int value, 50): only report the most
critical errors.`),ns=g(),mt=s("li"),St=s("code"),fs=l("diffusers.logging.ERROR"),as=l(" (int value, 40): only report errors."),gs=g(),De=s("li"),Lt=s("code"),ds=l("diffusers.logging.WARNING"),us=l(" or "),Ft=s("code"),cs=l("diffusers.logging.WARN"),ps=l(` (int value, 30): only reports error and
warnings. This the default level used by the library.`),ms=g(),ht=s("li"),Ct=s("code"),hs=l("diffusers.logging.INFO"),vs=l(" (int value, 20): reports error, warnings and basic information."),bs=g(),vt=s("li"),xt=s("code"),_s=l("diffusers.logging.DEBUG"),$s=l(" (int value, 10): report all information."),gr=g(),G=s("p"),Es=l("By default, "),Pt=s("code"),ys=l("tqdm"),ws=l(" progress bars will be displayed during model download. "),bt=s("a"),Ds=l("logging.disable_progress_bar()"),Is=l(" and "),_t=s("a"),Rs=l("logging.enable_progress_bar()"),As=l(" can be used to suppress or unsuppress this behavior."),dr=g(),ne=s("h2"),Ie=s("a"),Tt=s("span"),h(We.$$.fragment),Ns=g(),kt=s("span"),Os=l("Base setters"),ur=g(),fe=s("div"),h(qe.$$.fragment),Ss=g(),Me=s("p"),Ls=l("Set the verbosity to the "),Gt=s("code"),Fs=l("ERROR"),Cs=l(" level."),cr=g(),ae=s("div"),h(He.$$.fragment),xs=g(),Ye=s("p"),Ps=l("Set the verbosity to the "),Vt=s("code"),Ts=l("WARNING"),ks=l(" level."),pr=g(),ge=s("div"),h(je.$$.fragment),Gs=g(),ze=s("p"),Vs=l("Set the verbosity to the "),Bt=s("code"),Bs=l("INFO"),Us=l(" level."),mr=g(),de=s("div"),h(Je.$$.fragment),Ws=g(),Ke=s("p"),qs=l("Set the verbosity to the "),Ut=s("code"),Ms=l("DEBUG"),Hs=l(" level."),hr=g(),ue=s("h2"),Re=s("a"),Wt=s("span"),h(Qe.$$.fragment),Ys=g(),qt=s("span"),js=l("Other functions"),vr=g(),W=s("div"),h(Xe.$$.fragment),zs=g(),Mt=s("p"),Js=l("Return the current level for the \u{1F917} Diffusers\u2019 root logger as an int."),Ks=g(),h(Ae.$$.fragment),br=g(),ce=s("div"),h(Ze.$$.fragment),Qs=g(),Ht=s("p"),Xs=l("Set the verbosity level for the \u{1F917} Diffusers\u2019 root logger."),_r=g(),q=s("div"),h(et.$$.fragment),Zs=g(),Yt=s("p"),eo=l("Return a logger with the specified name."),to=g(),jt=s("p"),ro=l("This function is not supposed to be directly accessed unless you are writing a custom diffusers module."),$r=g(),pe=s("div"),h(tt.$$.fragment),so=g(),zt=s("p"),oo=l("Enable the default handler of the HuggingFace Diffusers\u2019 root logger."),Er=g(),me=s("div"),h(rt.$$.fragment),lo=g(),Jt=s("p"),io=l("Disable the default handler of the HuggingFace Diffusers\u2019 root logger."),yr=g(),K=s("div"),h(st.$$.fragment),no=g(),h(Ne.$$.fragment),fo=l(`
All handlers currently bound to the root logger are affected by this method.`),wr=g(),M=s("div"),h(ot.$$.fragment),ao=g(),Kt=s("p"),go=l("Resets the formatting for HuggingFace Diffusers\u2019 loggers."),uo=g(),Qt=s("p"),co=l("All handlers currently bound to the root logger are affected by this method."),Dr=g(),he=s("div"),h(lt.$$.fragment),po=g(),Xt=s("p"),mo=l("Enable tqdm progress bar."),Ir=g(),ve=s("div"),h(it.$$.fragment),ho=g(),Zt=s("p"),vo=l("Disable tqdm progress bar."),this.h()},l(e){const f=_l('[data-svelte="svelte-1phssyn"]',document.head);m=o(f,"META",{name:!0,content:!0}),f.forEach(r),C=d(e),w=o(e,"H1",{class:!0});var nt=n(w);u=o(nt,"A",{id:!0,class:!0,href:!0});var er=n(u);D=o(er,"SPAN",{});var yo=n(D);v(p.$$.fragment,yo),yo.forEach(r),er.forEach(r),R=d(nt),Z=o(nt,"SPAN",{});var wo=n(Z);Se=i(wo,"Logging"),wo.forEach(r),nt.forEach(r),H=d(e),Y=o(e,"P",{});var Do=n(Y);Le=i(Do,"\u{1F9E8} Diffusers has a centralized logging system, so that you can setup the verbosity of the library easily."),Do.forEach(r),V=d(e),x=o(e,"P",{});var Ar=n(x);ee=i(Ar,"Currently the default verbosity of the library is "),te=o(Ar,"CODE",{});var Io=n(te);Fe=i(Io,"WARNING"),Io.forEach(r),P=i(Ar,"."),Ar.forEach(r),be=d(e),T=o(e,"P",{});var Ro=n(T);Ce=i(Ro,`To change the level of verbosity, just use one of the direct setters. For instance, here is how to change the verbosity
to the INFO level.`),Ro.forEach(r),_e=d(e),v(L.$$.fragment,e),$e=d(e),y=o(e,"P",{});var S=n(y);j=i(S,"You can also use the environment variable "),re=o(S,"CODE",{});var Ao=n(re);se=i(Ao,"DIFFUSERS_VERBOSITY"),Ao.forEach(r),xe=i(S,` to override the default verbosity. You can set it
to one of the following: `),oe=o(S,"CODE",{});var No=n(oe);z=i(No,"debug"),No.forEach(r),Pe=i(S,", "),B=o(S,"CODE",{});var Oo=n(B);Te=i(Oo,"info"),Oo.forEach(r),A=i(S,", "),k=o(S,"CODE",{});var So=n(k);N=i(So,"warning"),So.forEach(r),le=i(S,", "),Ee=o(S,"CODE",{});var Lo=n(Ee);at=i(Lo,"error"),Lo.forEach(r),ke=i(S,", "),ye=o(S,"CODE",{});var Fo=n(ye);ie=i(Fo,"critical"),Fo.forEach(r),gt=i(S,". For example:"),S.forEach(r),Ge=d(e),v(U.$$.fragment,e),Ve=d(e),I=o(e,"P",{});var Q=n(I);dt=i(Q,"Additionally, some "),Dt=o(Q,"CODE",{});var Co=n(Dt);qr=i(Co,"warnings"),Co.forEach(r),Mr=i(Q,` can be disabled by setting the environment variable
`),It=o(Q,"CODE",{});var xo=n(It);Hr=i(xo,"DIFFUSERS_NO_ADVISORY_WARNINGS"),xo.forEach(r),Yr=i(Q," to a true value, like "),Rt=o(Q,"EM",{});var Po=n(Rt);jr=i(Po,"1"),Po.forEach(r),zr=i(Q,`. This will disable any warning that is logged using
`),At=o(Q,"CODE",{});var To=n(At);Jr=i(To,"logger.warning_advice"),To.forEach(r),Kr=i(Q,". For example:"),Q.forEach(r),lr=d(e),v(Be.$$.fragment,e),ir=d(e),ut=o(e,"P",{});var ko=n(ut);Qr=i(ko,"Here is an example of how to use the same logger as the library in your own module or script:"),ko.forEach(r),nr=d(e),v(Ue.$$.fragment,e),fr=d(e),J=o(e,"P",{});var $t=n(J);Xr=i($t,`All the methods of this logging module are documented below, the main ones are
`),ct=o($t,"A",{href:!0});var Go=n(ct);Zr=i(Go,"logging.get_verbosity()"),Go.forEach(r),es=i($t,` to get the current level of verbosity in the logger and
`),pt=o($t,"A",{href:!0});var Vo=n(pt);ts=i(Vo,"logging.set_verbosity()"),Vo.forEach(r),rs=i($t,` to set the verbosity to the level of your choice. In order (from the least
verbose to the most verbose), those levels (with their corresponding int values in parenthesis) are:`),$t.forEach(r),ar=d(e),O=o(e,"UL",{});var X=n(O);we=o(X,"LI",{});var tr=n(we);Nt=o(tr,"CODE",{});var Bo=n(Nt);ss=i(Bo,"diffusers.logging.CRITICAL"),Bo.forEach(r),os=i(tr," or "),Ot=o(tr,"CODE",{});var Uo=n(Ot);ls=i(Uo,"diffusers.logging.FATAL"),Uo.forEach(r),is=i(tr,` (int value, 50): only report the most
critical errors.`),tr.forEach(r),ns=d(X),mt=o(X,"LI",{});var bo=n(mt);St=o(bo,"CODE",{});var Wo=n(St);fs=i(Wo,"diffusers.logging.ERROR"),Wo.forEach(r),as=i(bo," (int value, 40): only report errors."),bo.forEach(r),gs=d(X),De=o(X,"LI",{});var rr=n(De);Lt=o(rr,"CODE",{});var qo=n(Lt);ds=i(qo,"diffusers.logging.WARNING"),qo.forEach(r),us=i(rr," or "),Ft=o(rr,"CODE",{});var Mo=n(Ft);cs=i(Mo,"diffusers.logging.WARN"),Mo.forEach(r),ps=i(rr,` (int value, 30): only reports error and
warnings. This the default level used by the library.`),rr.forEach(r),ms=d(X),ht=o(X,"LI",{});var _o=n(ht);Ct=o(_o,"CODE",{});var Ho=n(Ct);hs=i(Ho,"diffusers.logging.INFO"),Ho.forEach(r),vs=i(_o," (int value, 20): reports error, warnings and basic information."),_o.forEach(r),bs=d(X),vt=o(X,"LI",{});var $o=n(vt);xt=o($o,"CODE",{});var Yo=n(xt);_s=i(Yo,"diffusers.logging.DEBUG"),Yo.forEach(r),$s=i($o," (int value, 10): report all information."),$o.forEach(r),X.forEach(r),gr=d(e),G=o(e,"P",{});var Oe=n(G);Es=i(Oe,"By default, "),Pt=o(Oe,"CODE",{});var jo=n(Pt);ys=i(jo,"tqdm"),jo.forEach(r),ws=i(Oe," progress bars will be displayed during model download. "),bt=o(Oe,"A",{href:!0});var zo=n(bt);Ds=i(zo,"logging.disable_progress_bar()"),zo.forEach(r),Is=i(Oe," and "),_t=o(Oe,"A",{href:!0});var Jo=n(_t);Rs=i(Jo,"logging.enable_progress_bar()"),Jo.forEach(r),As=i(Oe," can be used to suppress or unsuppress this behavior."),Oe.forEach(r),dr=d(e),ne=o(e,"H2",{class:!0});var Nr=n(ne);Ie=o(Nr,"A",{id:!0,class:!0,href:!0});var Ko=n(Ie);Tt=o(Ko,"SPAN",{});var Qo=n(Tt);v(We.$$.fragment,Qo),Qo.forEach(r),Ko.forEach(r),Ns=d(Nr),kt=o(Nr,"SPAN",{});var Xo=n(kt);Os=i(Xo,"Base setters"),Xo.forEach(r),Nr.forEach(r),ur=d(e),fe=o(e,"DIV",{class:!0});var Or=n(fe);v(qe.$$.fragment,Or),Ss=d(Or),Me=o(Or,"P",{});var Sr=n(Me);Ls=i(Sr,"Set the verbosity to the "),Gt=o(Sr,"CODE",{});var Zo=n(Gt);Fs=i(Zo,"ERROR"),Zo.forEach(r),Cs=i(Sr," level."),Sr.forEach(r),Or.forEach(r),cr=d(e),ae=o(e,"DIV",{class:!0});var Lr=n(ae);v(He.$$.fragment,Lr),xs=d(Lr),Ye=o(Lr,"P",{});var Fr=n(Ye);Ps=i(Fr,"Set the verbosity to the "),Vt=o(Fr,"CODE",{});var el=n(Vt);Ts=i(el,"WARNING"),el.forEach(r),ks=i(Fr," level."),Fr.forEach(r),Lr.forEach(r),pr=d(e),ge=o(e,"DIV",{class:!0});var Cr=n(ge);v(je.$$.fragment,Cr),Gs=d(Cr),ze=o(Cr,"P",{});var xr=n(ze);Vs=i(xr,"Set the verbosity to the "),Bt=o(xr,"CODE",{});var tl=n(Bt);Bs=i(tl,"INFO"),tl.forEach(r),Us=i(xr," level."),xr.forEach(r),Cr.forEach(r),mr=d(e),de=o(e,"DIV",{class:!0});var Pr=n(de);v(Je.$$.fragment,Pr),Ws=d(Pr),Ke=o(Pr,"P",{});var Tr=n(Ke);qs=i(Tr,"Set the verbosity to the "),Ut=o(Tr,"CODE",{});var rl=n(Ut);Ms=i(rl,"DEBUG"),rl.forEach(r),Hs=i(Tr," level."),Tr.forEach(r),Pr.forEach(r),hr=d(e),ue=o(e,"H2",{class:!0});var kr=n(ue);Re=o(kr,"A",{id:!0,class:!0,href:!0});var sl=n(Re);Wt=o(sl,"SPAN",{});var ol=n(Wt);v(Qe.$$.fragment,ol),ol.forEach(r),sl.forEach(r),Ys=d(kr),qt=o(kr,"SPAN",{});var ll=n(qt);js=i(ll,"Other functions"),ll.forEach(r),kr.forEach(r),vr=d(e),W=o(e,"DIV",{class:!0});var Et=n(W);v(Xe.$$.fragment,Et),zs=d(Et),Mt=o(Et,"P",{});var il=n(Mt);Js=i(il,"Return the current level for the \u{1F917} Diffusers\u2019 root logger as an int."),il.forEach(r),Ks=d(Et),v(Ae.$$.fragment,Et),Et.forEach(r),br=d(e),ce=o(e,"DIV",{class:!0});var Gr=n(ce);v(Ze.$$.fragment,Gr),Qs=d(Gr),Ht=o(Gr,"P",{});var nl=n(Ht);Xs=i(nl,"Set the verbosity level for the \u{1F917} Diffusers\u2019 root logger."),nl.forEach(r),Gr.forEach(r),_r=d(e),q=o(e,"DIV",{class:!0});var yt=n(q);v(et.$$.fragment,yt),Zs=d(yt),Yt=o(yt,"P",{});var fl=n(Yt);eo=i(fl,"Return a logger with the specified name."),fl.forEach(r),to=d(yt),jt=o(yt,"P",{});var al=n(jt);ro=i(al,"This function is not supposed to be directly accessed unless you are writing a custom diffusers module."),al.forEach(r),yt.forEach(r),$r=d(e),pe=o(e,"DIV",{class:!0});var Vr=n(pe);v(tt.$$.fragment,Vr),so=d(Vr),zt=o(Vr,"P",{});var gl=n(zt);oo=i(gl,"Enable the default handler of the HuggingFace Diffusers\u2019 root logger."),gl.forEach(r),Vr.forEach(r),Er=d(e),me=o(e,"DIV",{class:!0});var Br=n(me);v(rt.$$.fragment,Br),lo=d(Br),Jt=o(Br,"P",{});var dl=n(Jt);io=i(dl,"Disable the default handler of the HuggingFace Diffusers\u2019 root logger."),dl.forEach(r),Br.forEach(r),yr=d(e),K=o(e,"DIV",{class:!0});var sr=n(K);v(st.$$.fragment,sr),no=d(sr),v(Ne.$$.fragment,sr),fo=i(sr,`
All handlers currently bound to the root logger are affected by this method.`),sr.forEach(r),wr=d(e),M=o(e,"DIV",{class:!0});var wt=n(M);v(ot.$$.fragment,wt),ao=d(wt),Kt=o(wt,"P",{});var ul=n(Kt);go=i(ul,"Resets the formatting for HuggingFace Diffusers\u2019 loggers."),ul.forEach(r),uo=d(wt),Qt=o(wt,"P",{});var cl=n(Qt);co=i(cl,"All handlers currently bound to the root logger are affected by this method."),cl.forEach(r),wt.forEach(r),Dr=d(e),he=o(e,"DIV",{class:!0});var Ur=n(he);v(lt.$$.fragment,Ur),po=d(Ur),Xt=o(Ur,"P",{});var pl=n(Xt);mo=i(pl,"Enable tqdm progress bar."),pl.forEach(r),Ur.forEach(r),Ir=d(e),ve=o(e,"DIV",{class:!0});var Wr=n(ve);v(it.$$.fragment,Wr),ho=d(Wr),Zt=o(Wr,"P",{});var ml=n(Zt);vo=i(ml,"Disable tqdm progress bar."),ml.forEach(r),Wr.forEach(r),this.h()},h(){c(m,"name","hf:doc:metadata"),c(m,"content",JSON.stringify(Al)),c(u,"id","logging"),c(u,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(u,"href","#logging"),c(w,"class","relative group"),c(ct,"href","/docs/diffusers/main/en/api/logging#diffusers.utils.logging.get_verbosity"),c(pt,"href","/docs/diffusers/main/en/api/logging#diffusers.utils.logging.set_verbosity"),c(bt,"href","/docs/diffusers/main/en/api/logging#diffusers.utils.logging.disable_progress_bar"),c(_t,"href","/docs/diffusers/main/en/api/logging#diffusers.utils.logging.enable_progress_bar"),c(Ie,"id","diffusers.utils.logging.set_verbosity_error"),c(Ie,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Ie,"href","#diffusers.utils.logging.set_verbosity_error"),c(ne,"class","relative group"),c(fe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(ae,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(ge,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(de,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(Re,"id","diffusers.utils.logging.get_verbosity"),c(Re,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Re,"href","#diffusers.utils.logging.get_verbosity"),c(ue,"class","relative group"),c(W,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(ce,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(q,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(pe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(me,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(K,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(M,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(he,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),c(ve,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(e,f){t(document.head,m),a(e,C,f),a(e,w,f),t(w,u),t(u,D),b(p,D,null),t(w,R),t(w,Z),t(Z,Se),a(e,H,f),a(e,Y,f),t(Y,Le),a(e,V,f),a(e,x,f),t(x,ee),t(x,te),t(te,Fe),t(x,P),a(e,be,f),a(e,T,f),t(T,Ce),a(e,_e,f),b(L,e,f),a(e,$e,f),a(e,y,f),t(y,j),t(y,re),t(re,se),t(y,xe),t(y,oe),t(oe,z),t(y,Pe),t(y,B),t(B,Te),t(y,A),t(y,k),t(k,N),t(y,le),t(y,Ee),t(Ee,at),t(y,ke),t(y,ye),t(ye,ie),t(y,gt),a(e,Ge,f),b(U,e,f),a(e,Ve,f),a(e,I,f),t(I,dt),t(I,Dt),t(Dt,qr),t(I,Mr),t(I,It),t(It,Hr),t(I,Yr),t(I,Rt),t(Rt,jr),t(I,zr),t(I,At),t(At,Jr),t(I,Kr),a(e,lr,f),b(Be,e,f),a(e,ir,f),a(e,ut,f),t(ut,Qr),a(e,nr,f),b(Ue,e,f),a(e,fr,f),a(e,J,f),t(J,Xr),t(J,ct),t(ct,Zr),t(J,es),t(J,pt),t(pt,ts),t(J,rs),a(e,ar,f),a(e,O,f),t(O,we),t(we,Nt),t(Nt,ss),t(we,os),t(we,Ot),t(Ot,ls),t(we,is),t(O,ns),t(O,mt),t(mt,St),t(St,fs),t(mt,as),t(O,gs),t(O,De),t(De,Lt),t(Lt,ds),t(De,us),t(De,Ft),t(Ft,cs),t(De,ps),t(O,ms),t(O,ht),t(ht,Ct),t(Ct,hs),t(ht,vs),t(O,bs),t(O,vt),t(vt,xt),t(xt,_s),t(vt,$s),a(e,gr,f),a(e,G,f),t(G,Es),t(G,Pt),t(Pt,ys),t(G,ws),t(G,bt),t(bt,Ds),t(G,Is),t(G,_t),t(_t,Rs),t(G,As),a(e,dr,f),a(e,ne,f),t(ne,Ie),t(Ie,Tt),b(We,Tt,null),t(ne,Ns),t(ne,kt),t(kt,Os),a(e,ur,f),a(e,fe,f),b(qe,fe,null),t(fe,Ss),t(fe,Me),t(Me,Ls),t(Me,Gt),t(Gt,Fs),t(Me,Cs),a(e,cr,f),a(e,ae,f),b(He,ae,null),t(ae,xs),t(ae,Ye),t(Ye,Ps),t(Ye,Vt),t(Vt,Ts),t(Ye,ks),a(e,pr,f),a(e,ge,f),b(je,ge,null),t(ge,Gs),t(ge,ze),t(ze,Vs),t(ze,Bt),t(Bt,Bs),t(ze,Us),a(e,mr,f),a(e,de,f),b(Je,de,null),t(de,Ws),t(de,Ke),t(Ke,qs),t(Ke,Ut),t(Ut,Ms),t(Ke,Hs),a(e,hr,f),a(e,ue,f),t(ue,Re),t(Re,Wt),b(Qe,Wt,null),t(ue,Ys),t(ue,qt),t(qt,js),a(e,vr,f),a(e,W,f),b(Xe,W,null),t(W,zs),t(W,Mt),t(Mt,Js),t(W,Ks),b(Ae,W,null),a(e,br,f),a(e,ce,f),b(Ze,ce,null),t(ce,Qs),t(ce,Ht),t(Ht,Xs),a(e,_r,f),a(e,q,f),b(et,q,null),t(q,Zs),t(q,Yt),t(Yt,eo),t(q,to),t(q,jt),t(jt,ro),a(e,$r,f),a(e,pe,f),b(tt,pe,null),t(pe,so),t(pe,zt),t(zt,oo),a(e,Er,f),a(e,me,f),b(rt,me,null),t(me,lo),t(me,Jt),t(Jt,io),a(e,yr,f),a(e,K,f),b(st,K,null),t(K,no),b(Ne,K,null),t(K,fo),a(e,wr,f),a(e,M,f),b(ot,M,null),t(M,ao),t(M,Kt),t(Kt,go),t(M,uo),t(M,Qt),t(Qt,co),a(e,Dr,f),a(e,he,f),b(lt,he,null),t(he,po),t(he,Xt),t(Xt,mo),a(e,Ir,f),a(e,ve,f),b(it,ve,null),t(ve,ho),t(ve,Zt),t(Zt,vo),Rr=!0},p(e,[f]){const nt={};f&2&&(nt.$$scope={dirty:f,ctx:e}),Ae.$set(nt);const er={};f&2&&(er.$$scope={dirty:f,ctx:e}),Ne.$set(er)},i(e){Rr||(_(p.$$.fragment,e),_(L.$$.fragment,e),_(U.$$.fragment,e),_(Be.$$.fragment,e),_(Ue.$$.fragment,e),_(We.$$.fragment,e),_(qe.$$.fragment,e),_(He.$$.fragment,e),_(je.$$.fragment,e),_(Je.$$.fragment,e),_(Qe.$$.fragment,e),_(Xe.$$.fragment,e),_(Ae.$$.fragment,e),_(Ze.$$.fragment,e),_(et.$$.fragment,e),_(tt.$$.fragment,e),_(rt.$$.fragment,e),_(st.$$.fragment,e),_(Ne.$$.fragment,e),_(ot.$$.fragment,e),_(lt.$$.fragment,e),_(it.$$.fragment,e),Rr=!0)},o(e){$(p.$$.fragment,e),$(L.$$.fragment,e),$(U.$$.fragment,e),$(Be.$$.fragment,e),$(Ue.$$.fragment,e),$(We.$$.fragment,e),$(qe.$$.fragment,e),$(He.$$.fragment,e),$(je.$$.fragment,e),$(Je.$$.fragment,e),$(Qe.$$.fragment,e),$(Xe.$$.fragment,e),$(Ae.$$.fragment,e),$(Ze.$$.fragment,e),$(et.$$.fragment,e),$(tt.$$.fragment,e),$(rt.$$.fragment,e),$(st.$$.fragment,e),$(Ne.$$.fragment,e),$(ot.$$.fragment,e),$(lt.$$.fragment,e),$(it.$$.fragment,e),Rr=!1},d(e){r(m),e&&r(C),e&&r(w),E(p),e&&r(H),e&&r(Y),e&&r(V),e&&r(x),e&&r(be),e&&r(T),e&&r(_e),E(L,e),e&&r($e),e&&r(y),e&&r(Ge),E(U,e),e&&r(Ve),e&&r(I),e&&r(lr),E(Be,e),e&&r(ir),e&&r(ut),e&&r(nr),E(Ue,e),e&&r(fr),e&&r(J),e&&r(ar),e&&r(O),e&&r(gr),e&&r(G),e&&r(dr),e&&r(ne),E(We),e&&r(ur),e&&r(fe),E(qe),e&&r(cr),e&&r(ae),E(He),e&&r(pr),e&&r(ge),E(je),e&&r(mr),e&&r(de),E(Je),e&&r(hr),e&&r(ue),E(Qe),e&&r(vr),e&&r(W),E(Xe),E(Ae),e&&r(br),e&&r(ce),E(Ze),e&&r(_r),e&&r(q),E(et),e&&r($r),e&&r(pe),E(tt),e&&r(Er),e&&r(me),E(rt),e&&r(yr),e&&r(K),E(st),E(Ne),e&&r(wr),e&&r(M),E(ot),e&&r(Dr),e&&r(he),E(lt),e&&r(Ir),e&&r(ve),E(it)}}}const Al={local:"logging",sections:[{local:"diffusers.utils.logging.set_verbosity_error",title:"Base setters"},{local:"diffusers.utils.logging.get_verbosity",title:"Other functions"}],title:"Logging"};function Nl(ft){return $l(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Pl extends hl{constructor(m){super();vl(this,m,Nl,Rl,bl,{})}}export{Pl as default,Al as metadata};
