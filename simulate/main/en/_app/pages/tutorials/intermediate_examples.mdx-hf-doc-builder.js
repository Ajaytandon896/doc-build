import{S as ye,i as xe,s as Ee,e as r,k as x,w as be,t as i,M as Ie,c as o,d as a,m as E,a as l,x as $e,h as d,b as s,G as e,g as A,y as Se,L as Ae,q as Le,o as ke,B as Ce,v as Oe}from"../../chunks/vendor-hf-doc-builder.js";import{I as Pe}from"../../chunks/IconCopyLink-hf-doc-builder.js";function ze(se){let c,q,m,u,L,w,B,k,G,M,b,H,N,n,p,_,C,J,R,O,F,K,Q,I,g,P,V,W,X,$,v,z,Y,Z,ee,S,y,D,ae,te,j;return w=new Pe({}),{c(){c=r("meta"),q=x(),m=r("h1"),u=r("a"),L=r("span"),be(w.$$.fragment),B=x(),k=r("span"),G=i("Intermediate examples in Simulate"),M=x(),b=r("p"),H=i("These examples are intended to showcase advanced individual features, building visually appealing scenes, and some interactive elements (like rewards and actuators)."),N=x(),n=r("ul"),p=r("li"),_=r("a"),C=r("code"),J=i("playground.py"),R=i(": showcases how to build a small world, add objects, and add actors to interact with the world. The actor must find a randomly colored box labelled "),O=r("code"),F=i("target"),K=i("."),Q=x(),I=r("li"),g=r("a"),P=r("code"),V=i("procgren_grid.py"),W=i(": shows how we can create procgen grids from numpy arrays."),X=x(),$=r("li"),v=r("a"),z=r("code"),Y=i("reward_example"),Z=i(": showcases different varieties of reward functions that can be added to one scene."),ee=x(),S=r("li"),y=r("a"),D=r("code"),ae=i("tmaze.py"),te=i(": showcases building a small detailed maze for an agent to explore."),this.h()},l(t){const h=Ie('[data-svelte="svelte-1phssyn"]',document.head);c=o(h,"META",{name:!0,content:!0}),h.forEach(a),q=E(t),m=o(t,"H1",{class:!0});var U=l(m);u=o(U,"A",{id:!0,class:!0,href:!0});var ne=l(u);L=o(ne,"SPAN",{});var ie=l(L);$e(w.$$.fragment,ie),ie.forEach(a),ne.forEach(a),B=E(U),k=o(U,"SPAN",{});var de=l(k);G=d(de,"Intermediate examples in Simulate"),de.forEach(a),U.forEach(a),M=E(t),b=o(t,"P",{});var ce=l(b);H=d(ce,"These examples are intended to showcase advanced individual features, building visually appealing scenes, and some interactive elements (like rewards and actuators)."),ce.forEach(a),N=E(t),n=o(t,"UL",{});var f=l(n);p=o(f,"LI",{});var T=l(p);_=o(T,"A",{href:!0,rel:!0});var me=l(_);C=o(me,"CODE",{});var he=l(C);J=d(he,"playground.py"),he.forEach(a),me.forEach(a),R=d(T,": showcases how to build a small world, add objects, and add actors to interact with the world. The actor must find a randomly colored box labelled "),O=o(T,"CODE",{});var ue=l(O);F=d(ue,"target"),ue.forEach(a),K=d(T,"."),T.forEach(a),Q=E(f),I=o(f,"LI",{});var re=l(I);g=o(re,"A",{href:!0,rel:!0});var pe=l(g);P=o(pe,"CODE",{});var fe=l(P);V=d(fe,"procgren_grid.py"),fe.forEach(a),pe.forEach(a),W=d(re,": shows how we can create procgen grids from numpy arrays."),re.forEach(a),X=E(f),$=o(f,"LI",{});var oe=l($);v=o(oe,"A",{href:!0,rel:!0});var we=l(v);z=o(we,"CODE",{});var _e=l(z);Y=d(_e,"reward_example"),_e.forEach(a),we.forEach(a),Z=d(oe,": showcases different varieties of reward functions that can be added to one scene."),oe.forEach(a),ee=E(f),S=o(f,"LI",{});var le=l(S);y=o(le,"A",{href:!0,rel:!0});var ge=l(y);D=o(ge,"CODE",{});var ve=l(D);ae=d(ve,"tmaze.py"),ve.forEach(a),ge.forEach(a),te=d(le,": showcases building a small detailed maze for an agent to explore."),le.forEach(a),f.forEach(a),this.h()},h(){s(c,"name","hf:doc:metadata"),s(c,"content",JSON.stringify(De)),s(u,"id","intermediate-examples-in-simulate"),s(u,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(u,"href","#intermediate-examples-in-simulate"),s(m,"class","relative group"),s(_,"href","https://github.com/huggingface/simulate/examples/intermediate/playground.py"),s(_,"rel","nofollow"),s(g,"href","https://github.com/huggingface/simulate/examples/intermediate/procgren_grid.py"),s(g,"rel","nofollow"),s(v,"href","https://github.com/huggingface/simulate/examples/intermediate/reward_example.py"),s(v,"rel","nofollow"),s(y,"href","https://github.com/huggingface/simulate/examples/intermediate/tmaze.py"),s(y,"rel","nofollow")},m(t,h){e(document.head,c),A(t,q,h),A(t,m,h),e(m,u),e(u,L),Se(w,L,null),e(m,B),e(m,k),e(k,G),A(t,M,h),A(t,b,h),e(b,H),A(t,N,h),A(t,n,h),e(n,p),e(p,_),e(_,C),e(C,J),e(p,R),e(p,O),e(O,F),e(p,K),e(n,Q),e(n,I),e(I,g),e(g,P),e(P,V),e(I,W),e(n,X),e(n,$),e($,v),e(v,z),e(z,Y),e($,Z),e(n,ee),e(n,S),e(S,y),e(y,D),e(D,ae),e(S,te),j=!0},p:Ae,i(t){j||(Le(w.$$.fragment,t),j=!0)},o(t){ke(w.$$.fragment,t),j=!1},d(t){a(c),t&&a(q),t&&a(m),Ce(w),t&&a(M),t&&a(b),t&&a(N),t&&a(n)}}}const De={local:"intermediate-examples-in-simulate",title:"Intermediate examples in Simulate"};function Te(se){return Oe(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ne extends ye{constructor(c){super();xe(this,c,Te,ze,Ee,{})}}export{Ne as default,De as metadata};
