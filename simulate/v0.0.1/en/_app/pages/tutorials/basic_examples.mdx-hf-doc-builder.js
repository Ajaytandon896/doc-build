import{S as _e,i as ge,s as ve,e as s,k as y,w as be,t as c,M as ye,c as l,d as a,m as x,a as i,x as xe,h as n,b as o,G as e,g as $,y as we,L as Ee,q as Se,o as je,B as Te,v as $e}from"../../chunks/vendor-hf-doc-builder.js";import{I as Ae}from"../../chunks/IconCopyLink-hf-doc-builder.js";function Le(se){let h,B,p,u,A,f,H,L,M,O,w,N,D,r,E,_,C,F,U,J,S,g,I,R,z,K,j,v,P,Q,V,W,T,b,k,X,Y,q;return f=new Ae({}),{c(){h=s("meta"),B=y(),p=s("h1"),u=s("a"),A=s("span"),be(f.$$.fragment),H=y(),L=s("span"),M=c("Basic examples in Simulate"),O=y(),w=s("p"),N=c("These examples are intended to showcase the basic usage of Simulate: creating a scene, adding objects, and observing physics."),D=y(),r=s("ul"),E=s("li"),_=s("a"),C=s("code"),F=c("create_and_save.py"),U=c(": This example showcases basic scene assembly and saving as a gltf."),J=y(),S=s("li"),g=s("a"),I=s("code"),R=c("objects.py"),z=c(": This examples showcases the different objects we have in HuggingFace Simulate."),K=y(),j=s("li"),v=s("a"),P=s("code"),Q=c("simple_physics.py"),V=c(": This example showcases a basic falling object physics experiment with sensors."),W=y(),T=s("li"),b=s("a"),k=s("code"),X=c("structured_grid_test.py"),Y=c(": This example tests the StructuredGrid object in Simulate"),this.h()},l(t){const m=ye('[data-svelte="svelte-1phssyn"]',document.head);h=l(m,"META",{name:!0,content:!0}),m.forEach(a),B=x(t),p=l(t,"H1",{class:!0});var G=i(p);u=l(G,"A",{id:!0,class:!0,href:!0});var le=i(u);A=l(le,"SPAN",{});var ie=i(A);xe(f.$$.fragment,ie),ie.forEach(a),le.forEach(a),H=x(G),L=l(G,"SPAN",{});var oe=i(L);M=n(oe,"Basic examples in Simulate"),oe.forEach(a),G.forEach(a),O=x(t),w=l(t,"P",{});var re=i(w);N=n(re,"These examples are intended to showcase the basic usage of Simulate: creating a scene, adding objects, and observing physics."),re.forEach(a),D=x(t),r=l(t,"UL",{});var d=i(r);E=l(d,"LI",{});var Z=i(E);_=l(Z,"A",{href:!0,rel:!0});var ce=i(_);C=l(ce,"CODE",{});var ne=i(C);F=n(ne,"create_and_save.py"),ne.forEach(a),ce.forEach(a),U=n(Z,": This example showcases basic scene assembly and saving as a gltf."),Z.forEach(a),J=x(d),S=l(d,"LI",{});var ee=i(S);g=l(ee,"A",{href:!0,rel:!0});var he=i(g);I=l(he,"CODE",{});var pe=i(I);R=n(pe,"objects.py"),pe.forEach(a),he.forEach(a),z=n(ee,": This examples showcases the different objects we have in HuggingFace Simulate."),ee.forEach(a),K=x(d),j=l(d,"LI",{});var ae=i(j);v=l(ae,"A",{href:!0,rel:!0});var me=i(v);P=l(me,"CODE",{});var ue=i(P);Q=n(ue,"simple_physics.py"),ue.forEach(a),me.forEach(a),V=n(ae,": This example showcases a basic falling object physics experiment with sensors."),ae.forEach(a),W=x(d),T=l(d,"LI",{});var te=i(T);b=l(te,"A",{href:!0,rel:!0});var de=i(b);k=l(de,"CODE",{});var fe=i(k);X=n(fe,"structured_grid_test.py"),fe.forEach(a),de.forEach(a),Y=n(te,": This example tests the StructuredGrid object in Simulate"),te.forEach(a),d.forEach(a),this.h()},h(){o(h,"name","hf:doc:metadata"),o(h,"content",JSON.stringify(Ce)),o(u,"id","basic-examples-in-simulate"),o(u,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),o(u,"href","#basic-examples-in-simulate"),o(p,"class","relative group"),o(_,"href","https://github.com/huggingface/simulate/examples/basic/create_and_save.py"),o(_,"rel","nofollow"),o(g,"href","https://github.com/huggingface/simulate/examples/basic/objects.py"),o(g,"rel","nofollow"),o(v,"href","https://github.com/huggingface/simulate/examples/basic/simple_physics.py"),o(v,"rel","nofollow"),o(b,"href","https://github.com/huggingface/simulate/examples/basic/structured_grid_test.py"),o(b,"rel","nofollow")},m(t,m){e(document.head,h),$(t,B,m),$(t,p,m),e(p,u),e(u,A),we(f,A,null),e(p,H),e(p,L),e(L,M),$(t,O,m),$(t,w,m),e(w,N),$(t,D,m),$(t,r,m),e(r,E),e(E,_),e(_,C),e(C,F),e(E,U),e(r,J),e(r,S),e(S,g),e(g,I),e(I,R),e(S,z),e(r,K),e(r,j),e(j,v),e(v,P),e(P,Q),e(j,V),e(r,W),e(r,T),e(T,b),e(b,k),e(k,X),e(T,Y),q=!0},p:Ee,i(t){q||(Se(f.$$.fragment,t),q=!0)},o(t){je(f.$$.fragment,t),q=!1},d(t){a(h),t&&a(B),t&&a(p),Te(f),t&&a(O),t&&a(w),t&&a(D),t&&a(r)}}}const Ce={local:"basic-examples-in-simulate",title:"Basic examples in Simulate"};function Ie(se){return $e(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Be extends _e{constructor(h){super();ge(this,h,Ie,Le,ve,{})}}export{Be as default,Ce as metadata};
