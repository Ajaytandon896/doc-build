import{S as wo,i as vo,s as $o,e as o,k as p,w as v,t as s,M as yo,c as i,d as t,m as c,a as n,x as $,h as l,b as f,G as e,g as d,y,q as j,o as b,B as k,v as jo}from"../chunks/vendor-hf-doc-builder.js";import{T as wl}from"../chunks/Tip-hf-doc-builder.js";import{I as Ba}from"../chunks/IconCopyLink-hf-doc-builder.js";import{C as J}from"../chunks/CodeBlock-hf-doc-builder.js";function bo(K){let u,z,m,w,E,_,q,x;return{c(){u=o("p"),z=s("To work with audio datasets, you need to have the "),m=o("code"),w=s("audio"),E=s(" dependency installed. Check out the "),_=o("a"),q=s("installation"),x=s(" guide to learn how to install it."),this.h()},l(g){u=i(g,"P",{});var h=n(u);z=l(h,"To work with audio datasets, you need to have the "),m=i(h,"CODE",{});var A=n(m);w=l(A,"audio"),A.forEach(t),E=l(h," dependency installed. Check out the "),_=i(h,"A",{href:!0});var O=n(_);q=l(O,"installation"),O.forEach(t),x=l(h," guide to learn how to install it."),h.forEach(t),this.h()},h(){f(_,"href","./installation#audio")},m(g,h){d(g,u,h),e(u,z),e(u,m),e(m,w),e(u,E),e(u,_),e(_,q),e(u,x)},d(g){g&&t(u)}}}function ko(K){let u,z,m,w,E,_,q,x;return{c(){u=o("p"),z=s("Index into an audio dataset using the row index first and then the "),m=o("code"),w=s("audio"),E=s(" column - "),_=o("code"),q=s('dataset[0]["audio"]'),x=s(" - to avoid decoding and resampling all the audio files in the dataset. Otherwise, this can be a slow and time-consuming process if you have a large dataset.")},l(g){u=i(g,"P",{});var h=n(u);z=l(h,"Index into an audio dataset using the row index first and then the "),m=i(h,"CODE",{});var A=n(m);w=l(A,"audio"),A.forEach(t),E=l(h," column - "),_=i(h,"CODE",{});var O=n(_);q=l(O,'dataset[0]["audio"]'),O.forEach(t),x=l(h," - to avoid decoding and resampling all the audio files in the dataset. Otherwise, this can be a slow and time-consuming process if you have a large dataset."),h.forEach(t)},m(g,h){d(g,u,h),e(u,z),e(u,m),e(m,w),e(u,E),e(u,_),e(_,q),e(u,x)},d(g){g&&t(u)}}}function Eo(K){let u,z,m,w,E,_,q,x;return{c(){u=o("p"),z=s("Alternatively, you can add "),m=o("code"),w=s("label"),E=s(" column to your "),_=o("code"),q=s("metadata.csv"),x=s(" file.")},l(g){u=i(g,"P",{});var h=n(u);z=l(h,"Alternatively, you can add "),m=i(h,"CODE",{});var A=n(m);w=l(A,"label"),A.forEach(t),E=l(h," column to your "),_=i(h,"CODE",{});var O=n(_);q=l(O,"metadata.csv"),O.forEach(t),x=l(h," file."),h.forEach(t)},m(g,h){d(g,u,h),e(u,z),e(u,m),e(m,w),e(u,E),e(u,_),e(_,q),e(u,x)},d(g){g&&t(u)}}}function xo(K){let u,z,m,w,E,_,q,x,g,h,A,O,Wa,xt,At,De,S,Ca,Ga,zt,qt,Ct,Oa,Ka,Ot,Pt,Dt,Pa,Qa,Ft,It,Fe,Q,Ie,L,St,Va,Lt,Nt,Da,Tt,Ut,Se,ua,Le,V,Ne,X,Yt,fa,Ht,Jt,Te,M,Z,Xa,ha,Mt,Za,Rt,Ue,C,Bt,ae,Wt,Gt,Fa,Kt,Qt,ee,Vt,Xt,Ia,Zt,as,Ye,ma,He,P,es,te,ts,ss,se,ls,os,Sa,is,ns,Je,_a,Me,R,aa,le,ga,rs,oe,ds,Re,ea,ps,ie,cs,us,Be,B,ta,ne,wa,fs,re,hs,We,sa,ms,de,_s,gs,Ge,va,Ke,D,ws,pe,vs,$s,ce,ys,js,ue,bs,ks,Qe,$a,Ve,la,Es,fe,xs,As,Xe,N,zs,he,qs,Cs,me,Os,Ps,Ze,ya,at,I,_e,Ds,Fs,ge,Is,Ss,we,Ls,Ns,et,ja,tt,oa,Ts,ve,Us,Ys,st,ba,lt,W,ia,$e,ka,Hs,ye,Js,ot,F,Ms,je,Rs,Bs,be,Ws,Gs,La,Ks,Qs,it,G,na,ke,Ea,Vs,Ee,Xs,nt,Na,Zs,rt,xa,dt,T,al,xe,el,tl,Ae,sl,ll,pt,Aa,ct,U,ol,ze,il,nl,Ta,rl,dl,ut,ra,ft,Y,pl,qe,cl,ul,Ce,fl,hl,ht;return _=new Ba({}),Q=new wl({props:{$$slots:{default:[bo]},$$scope:{ctx:K}}}),ua=new J({props:{code:`from datasets import load_dataset, Audio

dataset = load_dataset("PolyAI/minds14", "en-US", split="train")
dataset[0]["audio"]`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset, Audio

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;PolyAI/minds14&quot;</span>, <span class="hljs-string">&quot;en-US&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;audio&quot;</span>]
{<span class="hljs-string">&#x27;array&#x27;</span>: array([ <span class="hljs-number">0.</span>        ,  <span class="hljs-number">0.00024414</span>, -<span class="hljs-number">0.00024414</span>, ..., -<span class="hljs-number">0.00024414</span>,
         <span class="hljs-number">0.</span>        ,  <span class="hljs-number">0.</span>        ], dtype=float32),
 <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/root/.cache/huggingface/datasets/downloads/extracted/f14948e0e84be638dd7943ac36518a4cf3324e8b7aa331c5ab11541518e9368c/en-US~JOINT_ACCOUNT/602ba55abb1e6d0fbce92065.wav&#x27;</span>,
 <span class="hljs-string">&#x27;sampling_rate&#x27;</span>: <span class="hljs-number">8000</span>}`}}),V=new wl({props:{warning:!0,$$slots:{default:[ko]},$$scope:{ctx:K}}}),ha=new Ba({}),ma=new J({props:{code:'audio_dataset = Dataset.from_dict({"audio": ["path/to/audio_1", "path/to/audio_2", ..., "path/to/audio_n"]}).cast_column("audio", Audio())',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>audio_dataset = Dataset.from_dict({<span class="hljs-string">&quot;audio&quot;</span>: [<span class="hljs-string">&quot;path/to/audio_1&quot;</span>, <span class="hljs-string">&quot;path/to/audio_2&quot;</span>, ..., <span class="hljs-string">&quot;path/to/audio_n&quot;</span>]}).cast_column(<span class="hljs-string">&quot;audio&quot;</span>, Audio())'}}),_a=new J({props:{code:`dataset = load_dataset("PolyAI/minds14", "en-US", split="train").cast_column("audio", Audio(decode=False))
dataset[0]`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;PolyAI/minds14&quot;</span>, <span class="hljs-string">&quot;en-US&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>).cast_column(<span class="hljs-string">&quot;audio&quot;</span>, Audio(decode=<span class="hljs-literal">False</span>))
<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-number">0</span>]
{<span class="hljs-string">&#x27;audio&#x27;</span>: {<span class="hljs-string">&#x27;bytes&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/root/.cache/huggingface/datasets/downloads/extracted/f14948e0e84be638dd7943ac36518a4cf3324e8b7aa331c5ab11541518e9368c/en-US~JOINT_ACCOUNT/602ba55abb1e6d0fbce92065.wav&#x27;</span>},
 <span class="hljs-string">&#x27;english_transcription&#x27;</span>: <span class="hljs-string">&#x27;I would like to set up a joint account with my partner&#x27;</span>,
 <span class="hljs-string">&#x27;intent_class&#x27;</span>: <span class="hljs-number">11</span>,
 <span class="hljs-string">&#x27;lang_id&#x27;</span>: <span class="hljs-number">4</span>,
 <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/root/.cache/huggingface/datasets/downloads/extracted/f14948e0e84be638dd7943ac36518a4cf3324e8b7aa331c5ab11541518e9368c/en-US~JOINT_ACCOUNT/602ba55abb1e6d0fbce92065.wav&#x27;</span>,
 <span class="hljs-string">&#x27;transcription&#x27;</span>: <span class="hljs-string">&#x27;I would like to set up a joint account with my partner&#x27;</span>}`}}),ga=new Ba({}),wa=new Ba({}),va=new J({props:{code:`folder/train/metadata.csv
folder/train/first_audio_file.mp3
folder/train/second_audio_file.mp3
folder/train/third_audio_file.mp3`,highlighted:`folder<span class="hljs-regexp">/train/m</span>etadata.csv
folder<span class="hljs-regexp">/train/</span>first_audio_file.mp3
folder<span class="hljs-regexp">/train/</span>second_audio_file.mp3
folder<span class="hljs-regexp">/train/</span>third_audio_file.mp3`}}),$a=new J({props:{code:`file_name,transcription
first_audio_file.mp3,znowu si\u0119 duch z cia\u0142em zro\u015Bnie w m\u0142odocianej wstaniesz wiosnie i mo\u017Cesz skutkiem tych lek\xF3w umiera\u0107 wstawa\u0107 wiek wiek\xF3w dalej tam by\u0142y przestrogi jak sieka\u0107 g\u0142ow\u0119 jak nogi
second_audio_file.mp3,ju\u017C u \u017Awierzy\u0144ca podwoj\xF3w kr\xF3l zasiada przy nim ksi\u0105\u017C\u0119ta i panowie rada a gdzie wznios\u0142y kr\u0105\u017Cy\u0142 ganek rycerze obok kochanek kr\xF3l skin\u0105\u0142 palcem zacz\u0119to igrzysko
third_audio_file.mp3,pewnie k\u0119dy\u015B w ob\u0142\u0119dzie ubite min\u0119\u0142y szlaki zaczekajmy dzie\u0144 jaki po\u015Blemy szuka\u0107 wsz\u0119dzie dzi\u015B jutro pewnie b\u0119dzie pos\u0142ali wsz\u0119dzie s\u0142ugi czekali dzie\u0144 i drugi gdy nic nie doczekali z p\u0142aczem chc\u0105 jecha\u0107 dali`,highlighted:`file_name,transcription
first_audio_file.mp3,znowu si\u0119 duch z cia\u0142em zro\u015Bnie w m\u0142odocianej wstaniesz wiosnie i mo\u017Cesz skutkiem tych lek\xF3w umiera\u0107 wstawa\u0107 wiek wiek\xF3w dalej tam by\u0142y przestrogi jak sieka\u0107 g\u0142ow\u0119 jak nogi
second_audio_file.mp3,ju\u017C u \u017Awierzy\u0144ca podwoj\xF3w kr\xF3l zasiada przy nim ksi\u0105\u017C\u0119ta i panowie rada a gdzie wznios\u0142y kr\u0105\u017Cy\u0142 ganek rycerze obok kochanek kr\xF3l skin\u0105\u0142 palcem zacz\u0119to igrzysko
third_audio_file.mp3,pewnie k\u0119dy\u015B w ob\u0142\u0119dzie ubite min\u0119\u0142y szlaki zaczekajmy dzie\u0144 jaki po\u015Blemy szuka\u0107 wsz\u0119dzie dzi\u015B jutro pewnie b\u0119dzie pos\u0142ali wsz\u0119dzie s\u0142ugi czekali dzie\u0144 i drugi gdy nic nie doczekali z p\u0142aczem chc\u0105 jecha\u0107 dali`}}),ya=new J({props:{code:`from datasets import load_dataset

dataset = load_dataset("audiofolder", data_dir="/path/to/folder")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;audiofolder&quot;</span>, data_dir=<span class="hljs-string">&quot;/path/to/folder&quot;</span>)`}}),ja=new J({props:{code:'dataset["train"][0]',highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span>dataset[<span class="hljs-string">&quot;train&quot;</span>][<span class="hljs-number">0</span>]
{<span class="hljs-string">&#x27;audio&#x27;</span>:
    {<span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/path/to/extracted/audio/first_audio_file.mp3&#x27;</span>,
    <span class="hljs-string">&#x27;array&#x27;</span>: array([ <span class="hljs-number">0.00088501</span>,  <span class="hljs-number">0.0012207</span> ,  <span class="hljs-number">0.00131226</span>, ..., -<span class="hljs-number">0.00045776</span>, -<span class="hljs-number">0.00054932</span>, -<span class="hljs-number">0.00054932</span>], dtype=float32),
    <span class="hljs-string">&#x27;sampling_rate&#x27;</span>: <span class="hljs-number">16000</span>},
 <span class="hljs-string">&#x27;transcription&#x27;</span>: <span class="hljs-string">&#x27;znowu si\u0119 duch z cia\u0142em zro\u015Bnie w m\u0142odocianej wstaniesz wiosnie i mo\u017Cesz skutkiem tych lek\xF3w umiera\u0107 wstawa\u0107 wiek wiek\xF3w dalej tam by\u0142y przestrogi jak sieka\u0107 g\u0142ow\u0119 jak nogi&#x27;</span>
}`}}),ba=new J({props:{code:'dataset = load_dataset("audiofolder", data_files="https://s3.amazonaws.com/datasets.huggingface.co/SpeechCommands/v0.01/v0.01_test.tar.gz")',highlighted:'<span class="hljs-meta">&gt;&gt;&gt; </span>dataset = load_dataset(<span class="hljs-string">&quot;audiofolder&quot;</span>, data_files=<span class="hljs-string">&quot;https://s3.amazonaws.com/datasets.huggingface.co/SpeechCommands/v0.01/v0.01_test.tar.gz&quot;</span>)'}}),ka=new Ba({}),Ea=new Ba({}),xa=new J({props:{code:`folder/train/ar/0197_720_0207_190.wav
folder/train/ar/0179_830_0185_540.mp3
folder/train/ar/0179_830_0185_540.mp3

folder/train/zh/0442_690_0454_380.mp3`,highlighted:`folder<span class="hljs-regexp">/train/</span>ar/<span class="hljs-number">0197</span>_720_0207_190.wav
folder<span class="hljs-regexp">/train/</span>ar/<span class="hljs-number">0179</span>_830_0185_540.mp3
folder<span class="hljs-regexp">/train/</span>ar/<span class="hljs-number">0179</span>_830_0185_540.mp3

folder<span class="hljs-regexp">/train/</span>zh/<span class="hljs-number">0442</span>_690_0454_380.mp3`}}),Aa=new J({props:{code:`dataset = load_dataset("audiofolder", data_dir="/path/to/folder", drop_labels=False)
dataset["train"][0]

dataset["train"][-1]`,highlighted:`&gt;&gt;&gt; dataset = load_dataset(<span class="hljs-string">&quot;audiofolder&quot;</span>, data_dir=<span class="hljs-string">&quot;/path/to/folder&quot;</span>, drop_labels=<span class="hljs-symbol">False</span>)
&gt;&gt;&gt; dataset[<span class="hljs-string">&quot;train&quot;</span>][<span class="hljs-number">0</span>]
{<span class="hljs-string">&#x27;audio&#x27;</span>:
    {<span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/path/to/extracted/audio/0197_720_0207_190.mp3&#x27;</span>,
    <span class="hljs-string">&#x27;array&#x27;</span>: array([<span class="hljs-number">-3.6621094e-04</span>, <span class="hljs-number">-6.1035156e-05</span>,  <span class="hljs-number">6.1035156e-05</span>, ..., <span class="hljs-number">-5.1879883e-04</span>, <span class="hljs-number">-1.0070801e-03</span>, <span class="hljs-number">-7.6293945e-04</span>],
    <span class="hljs-string">&#x27;sampling_rate&#x27;</span>: <span class="hljs-number">16000</span>}
 <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-number">0</span>  # <span class="hljs-string">&quot;ar&quot;</span>
}

&gt;&gt;&gt; dataset[<span class="hljs-string">&quot;train&quot;</span>][<span class="hljs-number">-1</span>]
{<span class="hljs-string">&#x27;audio&#x27;</span>:
    {<span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/path/to/extracted/audio/0442_690_0454_380.mp3&#x27;</span>,
    <span class="hljs-string">&#x27;array&#x27;</span>: array([<span class="hljs-number">1.8920898e-03</span>, <span class="hljs-number">9.4604492e-04</span>, <span class="hljs-number">1.9226074e-03</span>, ..., <span class="hljs-number">9.1552734e-05</span>, <span class="hljs-number">1.8310547e-04</span>, <span class="hljs-number">6.1035156e-05</span>],
    <span class="hljs-string">&#x27;sampling_rate&#x27;</span>: <span class="hljs-number">16000</span>}
 <span class="hljs-string">&#x27;label&#x27;</span>: <span class="hljs-number">99</span>  # <span class="hljs-string">&quot;zh&quot;</span>
}`}}),ra=new wl({props:{$$slots:{default:[Eo]},$$scope:{ctx:K}}}),{c(){u=o("meta"),z=p(),m=o("h1"),w=o("a"),E=o("span"),v(_.$$.fragment),q=p(),x=o("span"),g=s("Load audio data"),h=p(),A=o("p"),O=s("Audio datasets are loaded from the "),Wa=o("code"),xt=s("audio"),At=s(" column, which contains three important fields:"),De=p(),S=o("ul"),Ca=o("li"),Ga=o("code"),zt=s("array"),qt=s(": the decoded audio data represented as a 1-dimensional array."),Ct=p(),Oa=o("li"),Ka=o("code"),Ot=s("path"),Pt=s(": the path to the downloaded audio file."),Dt=p(),Pa=o("li"),Qa=o("code"),Ft=s("sampling_rate"),It=s(": the sampling rate of the audio data."),Fe=p(),v(Q.$$.fragment),Ie=p(),L=o("p"),St=s("When you load an audio dataset and call the "),Va=o("code"),Lt=s("audio"),Nt=s(" column, the "),Da=o("a"),Tt=s("Audio"),Ut=s(" feature automatically decodes and resamples the audio file:"),Se=p(),v(ua.$$.fragment),Le=p(),v(V.$$.fragment),Ne=p(),X=o("p"),Yt=s("For a guide on how to load any type of dataset, take a look at the "),fa=o("a"),Ht=s("general loading guide"),Jt=s("."),Te=p(),M=o("h2"),Z=o("a"),Xa=o("span"),v(ha.$$.fragment),Mt=p(),Za=o("span"),Rt=s("Local files"),Ue=p(),C=o("p"),Bt=s("The "),ae=o("code"),Wt=s("path"),Gt=s(" is useful for loading your own dataset. Use the "),Fa=o("a"),Kt=s("cast_column()"),Qt=s(" function to take a column of audio file paths, and decode it into "),ee=o("code"),Vt=s("array"),Xt=s("\u2019s with the "),Ia=o("a"),Zt=s("Audio"),as=s(" feature:"),Ye=p(),v(ma.$$.fragment),He=p(),P=o("p"),es=s("If you only want to load the underlying path to the audio dataset without decoding the audio file into an "),te=o("code"),ts=s("array"),ss=s(", set "),se=o("code"),ls=s("decode=False"),os=s(" in the "),Sa=o("a"),is=s("Audio"),ns=s(" feature:"),Je=p(),v(_a.$$.fragment),Me=p(),R=o("h2"),aa=o("a"),le=o("span"),v(ga.$$.fragment),rs=p(),oe=o("span"),ds=s("AudioFolder"),Re=p(),ea=o("p"),ps=s("You can also load a dataset with an "),ie=o("code"),cs=s("AudioFolder"),us=s(" dataset builder. It does not require writing a custom dataloader, making it useful for quickly loading audio data."),Be=p(),B=o("h2"),ta=o("a"),ne=o("span"),v(wa.$$.fragment),fs=p(),re=o("span"),hs=s("AudioFolder with metadata"),We=p(),sa=o("p"),ms=s("To link your audio files with metadata information, make sure your dataset has a "),de=o("code"),_s=s("metadata.csv"),gs=s(" file. Your dataset structure might look like:"),Ge=p(),v(va.$$.fragment),Ke=p(),D=o("p"),ws=s("Your "),pe=o("code"),vs=s("metadata.csv"),$s=s(" file must have a "),ce=o("code"),ys=s("file_name"),js=s(" column which links audio files with their metadata. An example "),ue=o("code"),bs=s("metadata.csv"),ks=s(" file might look like:"),Qe=p(),v($a.$$.fragment),Ve=p(),la=o("p"),Es=s("Metadata can also be specified as JSON Lines, in which case use "),fe=o("code"),xs=s("metadata.jsonl"),As=s(" as the name of the metadata file. This format is helpful in scenarios when one of the columns is complex, e.g. a list of floats, to avoid parsing errors or reading the complex values as strings."),Xe=p(),N=o("p"),zs=s("Load your audio dataset by specifying "),he=o("code"),qs=s("audiofolder"),Cs=s(" and the directory containing your data in "),me=o("code"),Os=s("data_dir"),Ps=s(":"),Ze=p(),v(ya.$$.fragment),at=p(),I=o("p"),_e=o("code"),Ds=s("AudioFolder"),Fs=s(" will load audio data and create a "),ge=o("code"),Is=s("transcription"),Ss=s(" column containing texts from "),we=o("code"),Ls=s("metadata.csv"),Ns=s(":"),et=p(),v(ja.$$.fragment),tt=p(),oa=o("p"),Ts=s("You can load remote datasets from their URLs with the "),ve=o("code"),Us=s("data_files"),Ys=s(" parameter:"),st=p(),v(ba.$$.fragment),lt=p(),W=o("h2"),ia=o("a"),$e=o("span"),v(ka.$$.fragment),Hs=p(),ye=o("span"),Js=s("AudioFolder with labels"),ot=p(),F=o("p"),Ms=s("If your data directory doesn\u2019t contain any metadata files, by default "),je=o("code"),Rs=s("AudioFolder"),Bs=s(" automatically adds a "),be=o("code"),Ws=s("label"),Gs=s(" column of "),La=o("a"),Ks=s("ClassLabel"),Qs=s(` type, with labels based on the directory name.
It might be useful if you have an audio classification task.`),it=p(),G=o("h3"),na=o("a"),ke=o("span"),v(Ea.$$.fragment),Vs=p(),Ee=o("span"),Xs=s("Language identification"),nt=p(),Na=o("p"),Zs=s("Language identification datasets have audio recordings of speech in multiple languages:"),rt=p(),v(xa.$$.fragment),dt=p(),T=o("p"),al=s("As there are no metadata files, "),xe=o("code"),el=s("AudioFolder"),tl=s(" will create a "),Ae=o("code"),sl=s("label"),ll=s(" column with the language id based on the directory name:"),pt=p(),v(Aa.$$.fragment),ct=p(),U=o("p"),ol=s("If you have metadata files inside your data directory, but you still want to infer labels from directories names, set "),ze=o("code"),il=s("drop_labels=False"),nl=s(" as defined in "),Ta=o("a"),rl=s("AudioFolderConfig"),dl=s("."),ut=p(),v(ra.$$.fragment),ft=p(),Y=o("p"),pl=s("If you have no metadata files and want to drop automatically created labels, set "),qe=o("code"),cl=s("drop_labels=True"),ul=s(". In this case your dataset would contain only an "),Ce=o("code"),fl=s("audio"),hl=s(" column."),this.h()},l(a){const r=yo('[data-svelte="svelte-1phssyn"]',document.head);u=i(r,"META",{name:!0,content:!0}),r.forEach(t),z=c(a),m=i(a,"H1",{class:!0});var za=n(m);w=i(za,"A",{id:!0,class:!0,href:!0});var Oe=n(w);E=i(Oe,"SPAN",{});var Pe=n(E);$(_.$$.fragment,Pe),Pe.forEach(t),Oe.forEach(t),q=c(za),x=i(za,"SPAN",{});var vl=n(x);g=l(vl,"Load audio data"),vl.forEach(t),za.forEach(t),h=c(a),A=i(a,"P",{});var mt=n(A);O=l(mt,"Audio datasets are loaded from the "),Wa=i(mt,"CODE",{});var $l=n(Wa);xt=l($l,"audio"),$l.forEach(t),At=l(mt," column, which contains three important fields:"),mt.forEach(t),De=c(a),S=i(a,"UL",{});var Ua=n(S);Ca=i(Ua,"LI",{});var ml=n(Ca);Ga=i(ml,"CODE",{});var yl=n(Ga);zt=l(yl,"array"),yl.forEach(t),qt=l(ml,": the decoded audio data represented as a 1-dimensional array."),ml.forEach(t),Ct=c(Ua),Oa=i(Ua,"LI",{});var _l=n(Oa);Ka=i(_l,"CODE",{});var jl=n(Ka);Ot=l(jl,"path"),jl.forEach(t),Pt=l(_l,": the path to the downloaded audio file."),_l.forEach(t),Dt=c(Ua),Pa=i(Ua,"LI",{});var gl=n(Pa);Qa=i(gl,"CODE",{});var bl=n(Qa);Ft=l(bl,"sampling_rate"),bl.forEach(t),It=l(gl,": the sampling rate of the audio data."),gl.forEach(t),Ua.forEach(t),Fe=c(a),$(Q.$$.fragment,a),Ie=c(a),L=i(a,"P",{});var Ya=n(L);St=l(Ya,"When you load an audio dataset and call the "),Va=i(Ya,"CODE",{});var kl=n(Va);Lt=l(kl,"audio"),kl.forEach(t),Nt=l(Ya," column, the "),Da=i(Ya,"A",{href:!0});var El=n(Da);Tt=l(El,"Audio"),El.forEach(t),Ut=l(Ya," feature automatically decodes and resamples the audio file:"),Ya.forEach(t),Se=c(a),$(ua.$$.fragment,a),Le=c(a),$(V.$$.fragment,a),Ne=c(a),X=i(a,"P",{});var _t=n(X);Yt=l(_t,"For a guide on how to load any type of dataset, take a look at the "),fa=i(_t,"A",{class:!0,href:!0});var xl=n(fa);Ht=l(xl,"general loading guide"),xl.forEach(t),Jt=l(_t,"."),_t.forEach(t),Te=c(a),M=i(a,"H2",{class:!0});var gt=n(M);Z=i(gt,"A",{id:!0,class:!0,href:!0});var Al=n(Z);Xa=i(Al,"SPAN",{});var zl=n(Xa);$(ha.$$.fragment,zl),zl.forEach(t),Al.forEach(t),Mt=c(gt),Za=i(gt,"SPAN",{});var ql=n(Za);Rt=l(ql,"Local files"),ql.forEach(t),gt.forEach(t),Ue=c(a),C=i(a,"P",{});var H=n(C);Bt=l(H,"The "),ae=i(H,"CODE",{});var Cl=n(ae);Wt=l(Cl,"path"),Cl.forEach(t),Gt=l(H," is useful for loading your own dataset. Use the "),Fa=i(H,"A",{href:!0});var Ol=n(Fa);Kt=l(Ol,"cast_column()"),Ol.forEach(t),Qt=l(H," function to take a column of audio file paths, and decode it into "),ee=i(H,"CODE",{});var Pl=n(ee);Vt=l(Pl,"array"),Pl.forEach(t),Xt=l(H,"\u2019s with the "),Ia=i(H,"A",{href:!0});var Dl=n(Ia);Zt=l(Dl,"Audio"),Dl.forEach(t),as=l(H," feature:"),H.forEach(t),Ye=c(a),$(ma.$$.fragment,a),He=c(a),P=i(a,"P",{});var da=n(P);es=l(da,"If you only want to load the underlying path to the audio dataset without decoding the audio file into an "),te=i(da,"CODE",{});var Fl=n(te);ts=l(Fl,"array"),Fl.forEach(t),ss=l(da,", set "),se=i(da,"CODE",{});var Il=n(se);ls=l(Il,"decode=False"),Il.forEach(t),os=l(da," in the "),Sa=i(da,"A",{href:!0});var Sl=n(Sa);is=l(Sl,"Audio"),Sl.forEach(t),ns=l(da," feature:"),da.forEach(t),Je=c(a),$(_a.$$.fragment,a),Me=c(a),R=i(a,"H2",{class:!0});var wt=n(R);aa=i(wt,"A",{id:!0,class:!0,href:!0});var Ll=n(aa);le=i(Ll,"SPAN",{});var Nl=n(le);$(ga.$$.fragment,Nl),Nl.forEach(t),Ll.forEach(t),rs=c(wt),oe=i(wt,"SPAN",{});var Tl=n(oe);ds=l(Tl,"AudioFolder"),Tl.forEach(t),wt.forEach(t),Re=c(a),ea=i(a,"P",{});var vt=n(ea);ps=l(vt,"You can also load a dataset with an "),ie=i(vt,"CODE",{});var Ul=n(ie);cs=l(Ul,"AudioFolder"),Ul.forEach(t),us=l(vt," dataset builder. It does not require writing a custom dataloader, making it useful for quickly loading audio data."),vt.forEach(t),Be=c(a),B=i(a,"H2",{class:!0});var $t=n(B);ta=i($t,"A",{id:!0,class:!0,href:!0});var Yl=n(ta);ne=i(Yl,"SPAN",{});var Hl=n(ne);$(wa.$$.fragment,Hl),Hl.forEach(t),Yl.forEach(t),fs=c($t),re=i($t,"SPAN",{});var Jl=n(re);hs=l(Jl,"AudioFolder with metadata"),Jl.forEach(t),$t.forEach(t),We=c(a),sa=i(a,"P",{});var yt=n(sa);ms=l(yt,"To link your audio files with metadata information, make sure your dataset has a "),de=i(yt,"CODE",{});var Ml=n(de);_s=l(Ml,"metadata.csv"),Ml.forEach(t),gs=l(yt," file. Your dataset structure might look like:"),yt.forEach(t),Ge=c(a),$(va.$$.fragment,a),Ke=c(a),D=i(a,"P",{});var pa=n(D);ws=l(pa,"Your "),pe=i(pa,"CODE",{});var Rl=n(pe);vs=l(Rl,"metadata.csv"),Rl.forEach(t),$s=l(pa," file must have a "),ce=i(pa,"CODE",{});var Bl=n(ce);ys=l(Bl,"file_name"),Bl.forEach(t),js=l(pa," column which links audio files with their metadata. An example "),ue=i(pa,"CODE",{});var Wl=n(ue);bs=l(Wl,"metadata.csv"),Wl.forEach(t),ks=l(pa," file might look like:"),pa.forEach(t),Qe=c(a),$($a.$$.fragment,a),Ve=c(a),la=i(a,"P",{});var jt=n(la);Es=l(jt,"Metadata can also be specified as JSON Lines, in which case use "),fe=i(jt,"CODE",{});var Gl=n(fe);xs=l(Gl,"metadata.jsonl"),Gl.forEach(t),As=l(jt," as the name of the metadata file. This format is helpful in scenarios when one of the columns is complex, e.g. a list of floats, to avoid parsing errors or reading the complex values as strings."),jt.forEach(t),Xe=c(a),N=i(a,"P",{});var Ha=n(N);zs=l(Ha,"Load your audio dataset by specifying "),he=i(Ha,"CODE",{});var Kl=n(he);qs=l(Kl,"audiofolder"),Kl.forEach(t),Cs=l(Ha," and the directory containing your data in "),me=i(Ha,"CODE",{});var Ql=n(me);Os=l(Ql,"data_dir"),Ql.forEach(t),Ps=l(Ha,":"),Ha.forEach(t),Ze=c(a),$(ya.$$.fragment,a),at=c(a),I=i(a,"P",{});var qa=n(I);_e=i(qa,"CODE",{});var Vl=n(_e);Ds=l(Vl,"AudioFolder"),Vl.forEach(t),Fs=l(qa," will load audio data and create a "),ge=i(qa,"CODE",{});var Xl=n(ge);Is=l(Xl,"transcription"),Xl.forEach(t),Ss=l(qa," column containing texts from "),we=i(qa,"CODE",{});var Zl=n(we);Ls=l(Zl,"metadata.csv"),Zl.forEach(t),Ns=l(qa,":"),qa.forEach(t),et=c(a),$(ja.$$.fragment,a),tt=c(a),oa=i(a,"P",{});var bt=n(oa);Ts=l(bt,"You can load remote datasets from their URLs with the "),ve=i(bt,"CODE",{});var ao=n(ve);Us=l(ao,"data_files"),ao.forEach(t),Ys=l(bt," parameter:"),bt.forEach(t),st=c(a),$(ba.$$.fragment,a),lt=c(a),W=i(a,"H2",{class:!0});var kt=n(W);ia=i(kt,"A",{id:!0,class:!0,href:!0});var eo=n(ia);$e=i(eo,"SPAN",{});var to=n($e);$(ka.$$.fragment,to),to.forEach(t),eo.forEach(t),Hs=c(kt),ye=i(kt,"SPAN",{});var so=n(ye);Js=l(so,"AudioFolder with labels"),so.forEach(t),kt.forEach(t),ot=c(a),F=i(a,"P",{});var ca=n(F);Ms=l(ca,"If your data directory doesn\u2019t contain any metadata files, by default "),je=i(ca,"CODE",{});var lo=n(je);Rs=l(lo,"AudioFolder"),lo.forEach(t),Bs=l(ca," automatically adds a "),be=i(ca,"CODE",{});var oo=n(be);Ws=l(oo,"label"),oo.forEach(t),Gs=l(ca," column of "),La=i(ca,"A",{href:!0});var io=n(La);Ks=l(io,"ClassLabel"),io.forEach(t),Qs=l(ca,` type, with labels based on the directory name.
It might be useful if you have an audio classification task.`),ca.forEach(t),it=c(a),G=i(a,"H3",{class:!0});var Et=n(G);na=i(Et,"A",{id:!0,class:!0,href:!0});var no=n(na);ke=i(no,"SPAN",{});var ro=n(ke);$(Ea.$$.fragment,ro),ro.forEach(t),no.forEach(t),Vs=c(Et),Ee=i(Et,"SPAN",{});var po=n(Ee);Xs=l(po,"Language identification"),po.forEach(t),Et.forEach(t),nt=c(a),Na=i(a,"P",{});var co=n(Na);Zs=l(co,"Language identification datasets have audio recordings of speech in multiple languages:"),co.forEach(t),rt=c(a),$(xa.$$.fragment,a),dt=c(a),T=i(a,"P",{});var Ja=n(T);al=l(Ja,"As there are no metadata files, "),xe=i(Ja,"CODE",{});var uo=n(xe);el=l(uo,"AudioFolder"),uo.forEach(t),tl=l(Ja," will create a "),Ae=i(Ja,"CODE",{});var fo=n(Ae);sl=l(fo,"label"),fo.forEach(t),ll=l(Ja," column with the language id based on the directory name:"),Ja.forEach(t),pt=c(a),$(Aa.$$.fragment,a),ct=c(a),U=i(a,"P",{});var Ma=n(U);ol=l(Ma,"If you have metadata files inside your data directory, but you still want to infer labels from directories names, set "),ze=i(Ma,"CODE",{});var ho=n(ze);il=l(ho,"drop_labels=False"),ho.forEach(t),nl=l(Ma," as defined in "),Ta=i(Ma,"A",{href:!0});var mo=n(Ta);rl=l(mo,"AudioFolderConfig"),mo.forEach(t),dl=l(Ma,"."),Ma.forEach(t),ut=c(a),$(ra.$$.fragment,a),ft=c(a),Y=i(a,"P",{});var Ra=n(Y);pl=l(Ra,"If you have no metadata files and want to drop automatically created labels, set "),qe=i(Ra,"CODE",{});var _o=n(qe);cl=l(_o,"drop_labels=True"),_o.forEach(t),ul=l(Ra,". In this case your dataset would contain only an "),Ce=i(Ra,"CODE",{});var go=n(Ce);fl=l(go,"audio"),go.forEach(t),hl=l(Ra," column."),Ra.forEach(t),this.h()},h(){f(u,"name","hf:doc:metadata"),f(u,"content",JSON.stringify(Ao)),f(w,"id","load-audio-data"),f(w,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(w,"href","#load-audio-data"),f(m,"class","relative group"),f(Da,"href","/docs/datasets/main/en/package_reference/main_classes#datasets.Audio"),f(fa,"class","underline decoration-sky-400 decoration-2 font-semibold"),f(fa,"href","./loading"),f(Z,"id","local-files"),f(Z,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(Z,"href","#local-files"),f(M,"class","relative group"),f(Fa,"href","/docs/datasets/main/en/package_reference/main_classes#datasets.Dataset.cast_column"),f(Ia,"href","/docs/datasets/main/en/package_reference/main_classes#datasets.Audio"),f(Sa,"href","/docs/datasets/main/en/package_reference/main_classes#datasets.Audio"),f(aa,"id","audiofolder"),f(aa,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(aa,"href","#audiofolder"),f(R,"class","relative group"),f(ta,"id","audiofolder-with-metadata"),f(ta,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(ta,"href","#audiofolder-with-metadata"),f(B,"class","relative group"),f(ia,"id","audiofolder-with-labels"),f(ia,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(ia,"href","#audiofolder-with-labels"),f(W,"class","relative group"),f(La,"href","/docs/datasets/main/en/package_reference/main_classes#datasets.ClassLabel"),f(na,"id","language-identification"),f(na,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(na,"href","#language-identification"),f(G,"class","relative group"),f(Ta,"href","/docs/datasets/main/en/package_reference/loading_methods#datasets.packaged_modules.audiofolder.AudioFolderConfig")},m(a,r){e(document.head,u),d(a,z,r),d(a,m,r),e(m,w),e(w,E),y(_,E,null),e(m,q),e(m,x),e(x,g),d(a,h,r),d(a,A,r),e(A,O),e(A,Wa),e(Wa,xt),e(A,At),d(a,De,r),d(a,S,r),e(S,Ca),e(Ca,Ga),e(Ga,zt),e(Ca,qt),e(S,Ct),e(S,Oa),e(Oa,Ka),e(Ka,Ot),e(Oa,Pt),e(S,Dt),e(S,Pa),e(Pa,Qa),e(Qa,Ft),e(Pa,It),d(a,Fe,r),y(Q,a,r),d(a,Ie,r),d(a,L,r),e(L,St),e(L,Va),e(Va,Lt),e(L,Nt),e(L,Da),e(Da,Tt),e(L,Ut),d(a,Se,r),y(ua,a,r),d(a,Le,r),y(V,a,r),d(a,Ne,r),d(a,X,r),e(X,Yt),e(X,fa),e(fa,Ht),e(X,Jt),d(a,Te,r),d(a,M,r),e(M,Z),e(Z,Xa),y(ha,Xa,null),e(M,Mt),e(M,Za),e(Za,Rt),d(a,Ue,r),d(a,C,r),e(C,Bt),e(C,ae),e(ae,Wt),e(C,Gt),e(C,Fa),e(Fa,Kt),e(C,Qt),e(C,ee),e(ee,Vt),e(C,Xt),e(C,Ia),e(Ia,Zt),e(C,as),d(a,Ye,r),y(ma,a,r),d(a,He,r),d(a,P,r),e(P,es),e(P,te),e(te,ts),e(P,ss),e(P,se),e(se,ls),e(P,os),e(P,Sa),e(Sa,is),e(P,ns),d(a,Je,r),y(_a,a,r),d(a,Me,r),d(a,R,r),e(R,aa),e(aa,le),y(ga,le,null),e(R,rs),e(R,oe),e(oe,ds),d(a,Re,r),d(a,ea,r),e(ea,ps),e(ea,ie),e(ie,cs),e(ea,us),d(a,Be,r),d(a,B,r),e(B,ta),e(ta,ne),y(wa,ne,null),e(B,fs),e(B,re),e(re,hs),d(a,We,r),d(a,sa,r),e(sa,ms),e(sa,de),e(de,_s),e(sa,gs),d(a,Ge,r),y(va,a,r),d(a,Ke,r),d(a,D,r),e(D,ws),e(D,pe),e(pe,vs),e(D,$s),e(D,ce),e(ce,ys),e(D,js),e(D,ue),e(ue,bs),e(D,ks),d(a,Qe,r),y($a,a,r),d(a,Ve,r),d(a,la,r),e(la,Es),e(la,fe),e(fe,xs),e(la,As),d(a,Xe,r),d(a,N,r),e(N,zs),e(N,he),e(he,qs),e(N,Cs),e(N,me),e(me,Os),e(N,Ps),d(a,Ze,r),y(ya,a,r),d(a,at,r),d(a,I,r),e(I,_e),e(_e,Ds),e(I,Fs),e(I,ge),e(ge,Is),e(I,Ss),e(I,we),e(we,Ls),e(I,Ns),d(a,et,r),y(ja,a,r),d(a,tt,r),d(a,oa,r),e(oa,Ts),e(oa,ve),e(ve,Us),e(oa,Ys),d(a,st,r),y(ba,a,r),d(a,lt,r),d(a,W,r),e(W,ia),e(ia,$e),y(ka,$e,null),e(W,Hs),e(W,ye),e(ye,Js),d(a,ot,r),d(a,F,r),e(F,Ms),e(F,je),e(je,Rs),e(F,Bs),e(F,be),e(be,Ws),e(F,Gs),e(F,La),e(La,Ks),e(F,Qs),d(a,it,r),d(a,G,r),e(G,na),e(na,ke),y(Ea,ke,null),e(G,Vs),e(G,Ee),e(Ee,Xs),d(a,nt,r),d(a,Na,r),e(Na,Zs),d(a,rt,r),y(xa,a,r),d(a,dt,r),d(a,T,r),e(T,al),e(T,xe),e(xe,el),e(T,tl),e(T,Ae),e(Ae,sl),e(T,ll),d(a,pt,r),y(Aa,a,r),d(a,ct,r),d(a,U,r),e(U,ol),e(U,ze),e(ze,il),e(U,nl),e(U,Ta),e(Ta,rl),e(U,dl),d(a,ut,r),y(ra,a,r),d(a,ft,r),d(a,Y,r),e(Y,pl),e(Y,qe),e(qe,cl),e(Y,ul),e(Y,Ce),e(Ce,fl),e(Y,hl),ht=!0},p(a,[r]){const za={};r&2&&(za.$$scope={dirty:r,ctx:a}),Q.$set(za);const Oe={};r&2&&(Oe.$$scope={dirty:r,ctx:a}),V.$set(Oe);const Pe={};r&2&&(Pe.$$scope={dirty:r,ctx:a}),ra.$set(Pe)},i(a){ht||(j(_.$$.fragment,a),j(Q.$$.fragment,a),j(ua.$$.fragment,a),j(V.$$.fragment,a),j(ha.$$.fragment,a),j(ma.$$.fragment,a),j(_a.$$.fragment,a),j(ga.$$.fragment,a),j(wa.$$.fragment,a),j(va.$$.fragment,a),j($a.$$.fragment,a),j(ya.$$.fragment,a),j(ja.$$.fragment,a),j(ba.$$.fragment,a),j(ka.$$.fragment,a),j(Ea.$$.fragment,a),j(xa.$$.fragment,a),j(Aa.$$.fragment,a),j(ra.$$.fragment,a),ht=!0)},o(a){b(_.$$.fragment,a),b(Q.$$.fragment,a),b(ua.$$.fragment,a),b(V.$$.fragment,a),b(ha.$$.fragment,a),b(ma.$$.fragment,a),b(_a.$$.fragment,a),b(ga.$$.fragment,a),b(wa.$$.fragment,a),b(va.$$.fragment,a),b($a.$$.fragment,a),b(ya.$$.fragment,a),b(ja.$$.fragment,a),b(ba.$$.fragment,a),b(ka.$$.fragment,a),b(Ea.$$.fragment,a),b(xa.$$.fragment,a),b(Aa.$$.fragment,a),b(ra.$$.fragment,a),ht=!1},d(a){t(u),a&&t(z),a&&t(m),k(_),a&&t(h),a&&t(A),a&&t(De),a&&t(S),a&&t(Fe),k(Q,a),a&&t(Ie),a&&t(L),a&&t(Se),k(ua,a),a&&t(Le),k(V,a),a&&t(Ne),a&&t(X),a&&t(Te),a&&t(M),k(ha),a&&t(Ue),a&&t(C),a&&t(Ye),k(ma,a),a&&t(He),a&&t(P),a&&t(Je),k(_a,a),a&&t(Me),a&&t(R),k(ga),a&&t(Re),a&&t(ea),a&&t(Be),a&&t(B),k(wa),a&&t(We),a&&t(sa),a&&t(Ge),k(va,a),a&&t(Ke),a&&t(D),a&&t(Qe),k($a,a),a&&t(Ve),a&&t(la),a&&t(Xe),a&&t(N),a&&t(Ze),k(ya,a),a&&t(at),a&&t(I),a&&t(et),k(ja,a),a&&t(tt),a&&t(oa),a&&t(st),k(ba,a),a&&t(lt),a&&t(W),k(ka),a&&t(ot),a&&t(F),a&&t(it),a&&t(G),k(Ea),a&&t(nt),a&&t(Na),a&&t(rt),k(xa,a),a&&t(dt),a&&t(T),a&&t(pt),k(Aa,a),a&&t(ct),a&&t(U),a&&t(ut),k(ra,a),a&&t(ft),a&&t(Y)}}}const Ao={local:"load-audio-data",sections:[{local:"local-files",title:"Local files"},{local:"audiofolder",title:"AudioFolder"},{local:"audiofolder-with-metadata",title:"AudioFolder with metadata"},{local:"audiofolder-with-labels",sections:[{local:"language-identification",title:"Language identification"}],title:"AudioFolder with labels"}],title:"Load audio data"};function zo(K){return jo(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Do extends wo{constructor(u){super();vo(this,u,zo,xo,$o,{})}}export{Do as default,Ao as metadata};
