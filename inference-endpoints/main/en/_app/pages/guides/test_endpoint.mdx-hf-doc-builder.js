import{S as Me,i as Ne,s as De,e as r,k as h,w as ve,t as o,M as We,c as i,d as t,m as f,a as u,x as _e,h as s,b as l,N as He,G as a,g as d,y as ke,L as Fe,q as qe,o as Ee,B as Te,v as Ge}from"../../chunks/vendor-hf-doc-builder.js";import{I as Xe}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{C as Oe}from"../../chunks/CodeBlock-hf-doc-builder.js";function Ye($e){let m,j,y,g,R,q,K,C,Q,B,w,V,b,Z,ee,O,E,Ae,M,S,te,N,T,D,p,ae,$,oe,se,A,ne,re,L,ie,le,W,c,ue,U,de,pe,z,ce,he,x,fe,me,H,I,F,v,ye,P,ge,we,G;return q=new Xe({}),T=new Oe({props:{code:`curl https://uu149rez6gw9ehej.eu-west-1.aws.endpoints.huggingface.cloud/distilbert-sentiment \\
	-X POST \\
	-d '{"inputs": "Deploying my first endpoint was an amazing experience."}' \\
	-H "Authorization: Bearer <Token>"`,highlighted:`curl https://uu149rez6gw9ehej.eu-west-1.aws.endpoints.huggingface.cloud/distilbert-sentiment \\
	-X POST \\
	-d <span class="hljs-string">&#x27;{&quot;inputs&quot;: &quot;Deploying my first endpoint was an amazing experience.&quot;}&#x27;</span> \\
	-H <span class="hljs-string">&quot;Authorization: Bearer &lt;Token&gt;&quot;</span>`}}),I=new Oe({props:{code:`curl --request POST \\
  --url https://uu149rez6gw9ehej.eu-west-1.aws.endpoints.huggingface.cloud/wav2vec-asr \\
  --header 'Authorization: Bearer <Token>' \\
  --header 'Content-Type: audio/x-flac' \\
  --data-binary '@sample1.flac'`,highlighted:`curl --request POST \\
  --url https://uu149rez6gw9ehej.eu-west-1.aws.endpoints.huggingface.cloud/wav2vec-asr \\
  --header <span class="hljs-string">&#x27;Authorization: Bearer &lt;Token&gt;&#x27;</span> \\
  --header <span class="hljs-string">&#x27;Content-Type: audio/x-flac&#x27;</span> \\
  --data-binary <span class="hljs-string">&#x27;@sample1.flac&#x27;</span>`}}),{c(){m=r("meta"),j=h(),y=r("h1"),g=r("a"),R=r("span"),ve(q.$$.fragment),K=h(),C=r("span"),Q=o("Send Requests to Endpoints"),B=h(),w=r("p"),V=o("The Endpoint overview provides you access to the Inference Widget, which can be used to send requests as we did in 6. of "),b=r("a"),Z=o("Create your first Endpoint"),ee=o(`. This allows you to quickly test your Endpoint with different inputs and share it with team members. \\
In addition, the Inference Widget implements an extra command, which creates your request as a cURL command and copies it into your clipboard`),O=h(),E=r("img"),M=h(),S=r("p"),te=o("The cURL command for our request above should look like this (with your Token):"),N=h(),ve(T.$$.fragment),D=h(),p=r("p"),ae=o("The Endpoints API offers the same API definitions as the "),$=r("a"),oe=o("Inference API"),se=o(" and the "),A=r("a"),ne=o("SageMaker Inference Toolkit"),re=o(". In addition we have documented all request payloads in the "),L=r("a"),ie=o("Supported Tasks"),le=o(" section in the documentation."),W=h(),c=r("p"),ue=o("This means that for an NLP task the payload is represented as the "),U=r("code"),de=o("inputs"),pe=o(" key, and additional pipelines parameters in the "),z=r("code"),ce=o("parameters"),he=o(" key. You can provide any of the supported kwargs from "),x=r("a"),fe=o("pipelines"),me=o(` as parameters.
For Images or Audio, you should send the data as a binary request with the corresponding mime type. Below is an example cURL for an Audio payload.`),H=h(),ve(I.$$.fragment),F=h(),v=r("p"),ye=o("To get quickly started with the programming language of your choice you can use "),P=r("a"),ge=o("cURL Converter"),we=o(" to convert you cURL command to code."),this.h()},l(e){const n=We('[data-svelte="svelte-1phssyn"]',document.head);m=i(n,"META",{name:!0,content:!0}),n.forEach(t),j=f(e),y=i(e,"H1",{class:!0});var X=u(y);g=i(X,"A",{id:!0,class:!0,href:!0});var xe=u(g);R=i(xe,"SPAN",{});var Ie=u(R);_e(q.$$.fragment,Ie),Ie.forEach(t),xe.forEach(t),K=f(X),C=i(X,"SPAN",{});var Pe=u(C);Q=s(Pe,"Send Requests to Endpoints"),Pe.forEach(t),X.forEach(t),B=f(e),w=i(e,"P",{});var Y=u(w);V=s(Y,"The Endpoint overview provides you access to the Inference Widget, which can be used to send requests as we did in 6. of "),b=i(Y,"A",{href:!0});var be=u(b);Z=s(be,"Create your first Endpoint"),be.forEach(t),ee=s(Y,`. This allows you to quickly test your Endpoint with different inputs and share it with team members. \\
In addition, the Inference Widget implements an extra command, which creates your request as a cURL command and copies it into your clipboard`),Y.forEach(t),O=f(e),E=i(e,"IMG",{src:!0,alt:!0}),M=f(e),S=i(e,"P",{});var Se=u(S);te=s(Se,"The cURL command for our request above should look like this (with your Token):"),Se.forEach(t),N=f(e),_e(T.$$.fragment,e),D=f(e),p=i(e,"P",{});var _=u(p);ae=s(_,"The Endpoints API offers the same API definitions as the "),$=i(_,"A",{href:!0,rel:!0});var Le=u($);oe=s(Le,"Inference API"),Le.forEach(t),se=s(_," and the "),A=i(_,"A",{href:!0,rel:!0});var Re=u(A);ne=s(Re,"SageMaker Inference Toolkit"),Re.forEach(t),re=s(_,". In addition we have documented all request payloads in the "),L=i(_,"A",{href:!0});var Ce=u(L);ie=s(Ce,"Supported Tasks"),Ce.forEach(t),le=s(_," section in the documentation."),_.forEach(t),W=f(e),c=i(e,"P",{});var k=u(c);ue=s(k,"This means that for an NLP task the payload is represented as the "),U=i(k,"CODE",{});var Ue=u(U);de=s(Ue,"inputs"),Ue.forEach(t),pe=s(k," key, and additional pipelines parameters in the "),z=i(k,"CODE",{});var ze=u(z);ce=s(ze,"parameters"),ze.forEach(t),he=s(k," key. You can provide any of the supported kwargs from "),x=i(k,"A",{href:!0,rel:!0});var je=u(x);fe=s(je,"pipelines"),je.forEach(t),me=s(k,` as parameters.
For Images or Audio, you should send the data as a binary request with the corresponding mime type. Below is an example cURL for an Audio payload.`),k.forEach(t),H=f(e),_e(I.$$.fragment,e),F=f(e),v=i(e,"P",{});var J=u(v);ye=s(J,"To get quickly started with the programming language of your choice you can use "),P=i(J,"A",{href:!0,rel:!0});var Be=u(P);ge=s(Be,"cURL Converter"),Be.forEach(t),we=s(J," to convert you cURL command to code."),J.forEach(t),this.h()},h(){l(m,"name","hf:doc:metadata"),l(m,"content",JSON.stringify(Je)),l(g,"id","send-requests-to-endpoints"),l(g,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),l(g,"href","#send-requests-to-endpoints"),l(y,"class","relative group"),l(b,"href","/docs/inference-endpoints//guides/guides/create_endpoint"),He(E.src,Ae="https://raw.githubusercontent.com/huggingface/hf-endpoints-documentation/main/assets/2_copy_curl.png")||l(E,"src",Ae),l(E,"alt","copy curl"),l($,"href","https://huggingface.co/docs/api-inference/detailed_parameters"),l($,"rel","nofollow"),l(A,"href","https://huggingface.co/docs/sagemaker/reference#inference-toolkit-api"),l(A,"rel","nofollow"),l(L,"href","/docs/inference-endpoints//guides/supported_tasks"),l(x,"href","https://huggingface.co/docs/transformers/main_classes/pipelines"),l(x,"rel","nofollow"),l(P,"href","https://curlconverter.com/"),l(P,"rel","nofollow")},m(e,n){a(document.head,m),d(e,j,n),d(e,y,n),a(y,g),a(g,R),ke(q,R,null),a(y,K),a(y,C),a(C,Q),d(e,B,n),d(e,w,n),a(w,V),a(w,b),a(b,Z),a(w,ee),d(e,O,n),d(e,E,n),d(e,M,n),d(e,S,n),a(S,te),d(e,N,n),ke(T,e,n),d(e,D,n),d(e,p,n),a(p,ae),a(p,$),a($,oe),a(p,se),a(p,A),a(A,ne),a(p,re),a(p,L),a(L,ie),a(p,le),d(e,W,n),d(e,c,n),a(c,ue),a(c,U),a(U,de),a(c,pe),a(c,z),a(z,ce),a(c,he),a(c,x),a(x,fe),a(c,me),d(e,H,n),ke(I,e,n),d(e,F,n),d(e,v,n),a(v,ye),a(v,P),a(P,ge),a(v,we),G=!0},p:Fe,i(e){G||(qe(q.$$.fragment,e),qe(T.$$.fragment,e),qe(I.$$.fragment,e),G=!0)},o(e){Ee(q.$$.fragment,e),Ee(T.$$.fragment,e),Ee(I.$$.fragment,e),G=!1},d(e){t(m),e&&t(j),e&&t(y),Te(q),e&&t(B),e&&t(w),e&&t(O),e&&t(E),e&&t(M),e&&t(S),e&&t(N),Te(T,e),e&&t(D),e&&t(p),e&&t(W),e&&t(c),e&&t(H),Te(I,e),e&&t(F),e&&t(v)}}}const Je={local:"send-requests-to-endpoints",title:"Send Requests to Endpoints"};function Ke($e){return Ge(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class et extends Me{constructor(m){super();Ne(this,m,Ke,Ye,De,{})}}export{et as default,Je as metadata};
