import{S as Fe,i as We,s as Ye,e as r,k as f,w as Ee,t as s,M as Ge,c as i,d as a,m,a as l,x as qe,h as o,b as u,N as Xe,G as t,g as c,y as Te,L as Je,q as $e,o as Ae,B as Pe,v as Ke}from"../../chunks/vendor-hf-doc-builder.js";import{I as Qe}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{C as He}from"../../chunks/CodeBlock-hf-doc-builder.js";function Ve(xe){let g,B,y,w,R,E,Q,C,V,O,v,Z,I,ee,te,M,q,be,N,S,ae,D,T,H,p,se,$,oe,ne,A,re,ie,L,le,ue,F,d,ce,U,de,pe,z,he,fe,j,me,ge,P,ye,we,W,x,Y,_,ve,b,_e,ke,G;return E=new Qe({}),T=new He({props:{code:`curl https://uu149rez6gw9ehej.eu-west-1.aws.endpoints.huggingface.cloud/distilbert-sentiment \\
	-X POST \\
	-d '{"inputs": "Deploying my first endpoint was an amazing experience."}' \\
	-H "Authorization: Bearer <Token>"`,highlighted:`curl https://uu149rez6gw9ehej.eu-west-1.aws.endpoints.huggingface.cloud/distilbert-sentiment \\
	-X POST \\
	-d <span class="hljs-string">&#x27;{&quot;inputs&quot;: &quot;Deploying my first endpoint was an amazing experience.&quot;}&#x27;</span> \\
	-H <span class="hljs-string">&quot;Authorization: Bearer &lt;Token&gt;&quot;</span>`}}),x=new He({props:{code:`curl --request POST \\
  --url https://uu149rez6gw9ehej.eu-west-1.aws.endpoints.huggingface.cloud/wav2vec-asr \\
  --header 'Authorization: Bearer <Token>' \\
  --header 'Content-Type: audio/x-flac' \\
  --data-binary '@sample1.flac'`,highlighted:`curl --request POST \\
  --url https://uu149rez6gw9ehej.eu-west-1.aws.endpoints.huggingface.cloud/wav2vec-asr \\
  --header <span class="hljs-string">&#x27;Authorization: Bearer &lt;Token&gt;&#x27;</span> \\
  --header <span class="hljs-string">&#x27;Content-Type: audio/x-flac&#x27;</span> \\
  --data-binary <span class="hljs-string">&#x27;@sample1.flac&#x27;</span>`}}),{c(){g=r("meta"),B=f(),y=r("h1"),w=r("a"),R=r("span"),Ee(E.$$.fragment),Q=f(),C=r("span"),V=s("Send Requests to Endpoints"),O=f(),v=r("p"),Z=s("The Endpoint overview provides access to the Inference Widget which can be used to send requests (see step 6 of "),I=r("a"),ee=s("Create an Endpoint"),te=s("). This allows you to quickly test your Endpoint with different inputs and share it with team members. In addition, the Inference Widget has an additional option for creating your request as a cURL command and copying it so you can easily share or use it."),M=f(),q=r("img"),N=f(),S=r("p"),ae=s("The cURL command for the request above should look like this. You\u2019ll need to provide your user token which can be found in your Hugging Face account settings:"),D=f(),Ee(T.$$.fragment),H=f(),p=r("p"),se=s("The Endpoints API offers the same API definitions as the "),$=r("a"),oe=s("Inference API"),ne=s(" and the "),A=r("a"),re=s("SageMaker Inference Toolkit"),ie=s(". All the request payloads are documented in the "),L=r("a"),le=s("Supported Tasks"),ue=s(" section."),F=f(),d=r("p"),ce=s("This means for an NLP task, the payload is represented as the "),U=r("code"),de=s("inputs"),pe=s(" key and additional pipeline parameters are included in the "),z=r("code"),he=s("parameters"),fe=s(" key. You can provide any of the supported "),j=r("code"),me=s("kwargs"),ge=s(" from "),P=r("a"),ye=s("pipelines"),we=s(` as parameters.
For image or audio tasks, you should send the data as a binary request with the corresponding mime type. Below is an example cURL for an audio payload:`),W=f(),Ee(x.$$.fragment),Y=f(),_=r("p"),ve=s("To use your cURL command as code, use the "),b=r("a"),_e=s("cURL Converter"),ke=s(" tool to quickly get started with the programming language of your choice."),this.h()},l(e){const n=Ge('[data-svelte="svelte-1phssyn"]',document.head);g=i(n,"META",{name:!0,content:!0}),n.forEach(a),B=m(e),y=i(e,"H1",{class:!0});var X=l(y);w=i(X,"A",{id:!0,class:!0,href:!0});var Ie=l(w);R=i(Ie,"SPAN",{});var Se=l(R);qe(E.$$.fragment,Se),Se.forEach(a),Ie.forEach(a),Q=m(X),C=i(X,"SPAN",{});var Le=l(C);V=o(Le,"Send Requests to Endpoints"),Le.forEach(a),X.forEach(a),O=m(e),v=i(e,"P",{});var J=l(v);Z=o(J,"The Endpoint overview provides access to the Inference Widget which can be used to send requests (see step 6 of "),I=i(J,"A",{href:!0});var Re=l(I);ee=o(Re,"Create an Endpoint"),Re.forEach(a),te=o(J,"). This allows you to quickly test your Endpoint with different inputs and share it with team members. In addition, the Inference Widget has an additional option for creating your request as a cURL command and copying it so you can easily share or use it."),J.forEach(a),M=m(e),q=i(e,"IMG",{src:!0,alt:!0}),N=m(e),S=i(e,"P",{});var Ce=l(S);ae=o(Ce,"The cURL command for the request above should look like this. You\u2019ll need to provide your user token which can be found in your Hugging Face account settings:"),Ce.forEach(a),D=m(e),qe(T.$$.fragment,e),H=m(e),p=i(e,"P",{});var k=l(p);se=o(k,"The Endpoints API offers the same API definitions as the "),$=i(k,"A",{href:!0,rel:!0});var Ue=l($);oe=o(Ue,"Inference API"),Ue.forEach(a),ne=o(k," and the "),A=i(k,"A",{href:!0,rel:!0});var ze=l(A);re=o(ze,"SageMaker Inference Toolkit"),ze.forEach(a),ie=o(k,". All the request payloads are documented in the "),L=i(k,"A",{href:!0});var je=l(L);le=o(je,"Supported Tasks"),je.forEach(a),ue=o(k," section."),k.forEach(a),F=m(e),d=i(e,"P",{});var h=l(d);ce=o(h,"This means for an NLP task, the payload is represented as the "),U=i(h,"CODE",{});var Be=l(U);de=o(Be,"inputs"),Be.forEach(a),pe=o(h," key and additional pipeline parameters are included in the "),z=i(h,"CODE",{});var Oe=l(z);he=o(Oe,"parameters"),Oe.forEach(a),fe=o(h," key. You can provide any of the supported "),j=i(h,"CODE",{});var Me=l(j);me=o(Me,"kwargs"),Me.forEach(a),ge=o(h," from "),P=i(h,"A",{href:!0,rel:!0});var Ne=l(P);ye=o(Ne,"pipelines"),Ne.forEach(a),we=o(h,` as parameters.
For image or audio tasks, you should send the data as a binary request with the corresponding mime type. Below is an example cURL for an audio payload:`),h.forEach(a),W=m(e),qe(x.$$.fragment,e),Y=m(e),_=i(e,"P",{});var K=l(_);ve=o(K,"To use your cURL command as code, use the "),b=i(K,"A",{href:!0,rel:!0});var De=l(b);_e=o(De,"cURL Converter"),De.forEach(a),ke=o(K," tool to quickly get started with the programming language of your choice."),K.forEach(a),this.h()},h(){u(g,"name","hf:doc:metadata"),u(g,"content",JSON.stringify(Ze)),u(w,"id","send-requests-to-endpoints"),u(w,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(w,"href","#send-requests-to-endpoints"),u(y,"class","relative group"),u(I,"href","/docs/inference-endpoints/guides/create_endpoint"),Xe(q.src,be="https://raw.githubusercontent.com/huggingface/hf-endpoints-documentation/main/assets/2_copy_curl.png")||u(q,"src",be),u(q,"alt","copy curl"),u($,"href","https://huggingface.co/docs/api-inference/detailed_parameters"),u($,"rel","nofollow"),u(A,"href","https://huggingface.co/docs/sagemaker/reference#inference-toolkit-api"),u(A,"rel","nofollow"),u(L,"href","/docs/inference-endpoints/supported_tasks"),u(P,"href","https://huggingface.co/docs/transformers/main_classes/pipelines"),u(P,"rel","nofollow"),u(b,"href","https://curlconverter.com/"),u(b,"rel","nofollow")},m(e,n){t(document.head,g),c(e,B,n),c(e,y,n),t(y,w),t(w,R),Te(E,R,null),t(y,Q),t(y,C),t(C,V),c(e,O,n),c(e,v,n),t(v,Z),t(v,I),t(I,ee),t(v,te),c(e,M,n),c(e,q,n),c(e,N,n),c(e,S,n),t(S,ae),c(e,D,n),Te(T,e,n),c(e,H,n),c(e,p,n),t(p,se),t(p,$),t($,oe),t(p,ne),t(p,A),t(A,re),t(p,ie),t(p,L),t(L,le),t(p,ue),c(e,F,n),c(e,d,n),t(d,ce),t(d,U),t(U,de),t(d,pe),t(d,z),t(z,he),t(d,fe),t(d,j),t(j,me),t(d,ge),t(d,P),t(P,ye),t(d,we),c(e,W,n),Te(x,e,n),c(e,Y,n),c(e,_,n),t(_,ve),t(_,b),t(b,_e),t(_,ke),G=!0},p:Je,i(e){G||($e(E.$$.fragment,e),$e(T.$$.fragment,e),$e(x.$$.fragment,e),G=!0)},o(e){Ae(E.$$.fragment,e),Ae(T.$$.fragment,e),Ae(x.$$.fragment,e),G=!1},d(e){a(g),e&&a(B),e&&a(y),Pe(E),e&&a(O),e&&a(v),e&&a(M),e&&a(q),e&&a(N),e&&a(S),e&&a(D),Pe(T,e),e&&a(H),e&&a(p),e&&a(F),e&&a(d),e&&a(W),Pe(x,e),e&&a(Y),e&&a(_)}}}const Ze={local:"send-requests-to-endpoints",title:"Send Requests to Endpoints"};function et(xe){return Ke(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class ot extends Fe{constructor(g){super();We(this,g,et,Ve,Ye,{})}}export{ot as default,Ze as metadata};
