import{S as Se,i as Re,s as ze,e as l,k as C,w as ke,t as a,M as Ge,c as n,d as o,m as M,a as c,x as Ie,h as r,b as i,N as He,G as t,g as f,y as xe,L as je,q as Te,o as qe,B as Pe,v as Be}from"../../chunks/vendor-hf-doc-builder.js";import{I as De}from"../../chunks/IconCopyLink-hf-doc-builder.js";import{C as Fe}from"../../chunks/CodeBlock-hf-doc-builder.js";function Ne(he){let p,z,d,g,T,v,L,q,O,G,s,W,k,J,K,P,Q,V,y,X,Y,w,Z,ee,E,te,oe,b,ae,re,H,A,pe,j,_,se,I,le,ne,B,h,ie,S,ce,me,R,ue,fe,D,$,F;return v=new De({}),$=new Fe({props:{code:`tensorflow_model_server \\
  --rest_api_port=5000 \\
  --model_name=my_model \\
  --model_base_path="/repository"`,highlighted:`tensorflow_model_server \\
  <span class="hljs-attribute">--rest_api_port</span>=5000 \\
  <span class="hljs-attribute">--model_name</span>=my_model \\
  <span class="hljs-attribute">--model_base_path</span>=<span class="hljs-string">&quot;/repository&quot;</span>`}}),{c(){p=l("meta"),z=C(),d=l("h1"),g=l("a"),T=l("span"),ke(v.$$.fragment),L=C(),q=l("span"),O=a("Use a custom Container Image"),G=C(),s=l("p"),W=a("Hugging Face Endpoints not only allows you to "),k=l("a"),J=a("customize your inference handler"),K=a(", it also allows you to provide a custom container image. Those can be public images, e.g "),P=l("em"),Q=a("tensorflow/serving:2.7.3,"),V=a(" or private Images hosted on "),y=l("a"),X=a("Docker hub"),Y=a(", "),w=l("a"),Z=a("AWS ECR"),ee=a(", "),E=l("a"),te=a("Azure ACR"),oe=a(", or "),b=l("a"),ae=a("Google GCR"),re=a("."),H=C(),A=l("img"),j=C(),_=l("p"),se=a("The "),I=l("a"),le=a("creation flow"),ne=a(" of your Image artifacts will stay the same way on how your custom image is used as the base image. This means that Hugging Face Endpoints will create a unique image artifact derived from your provided image including all Model Artifacts."),B=C(),h=l("p"),ie=a("The Model Artifacts (weights) are stored under "),S=l("code"),ce=a("/repository"),me=a(". Meaning if you use"),R=l("code"),ue=a("tensorflow/serving"),fe=a(" as your custom image you have to set model_base_path to /repository. Below is an example:"),D=C(),ke($.$$.fragment),this.h()},l(e){const m=Ge('[data-svelte="svelte-1phssyn"]',document.head);p=n(m,"META",{name:!0,content:!0}),m.forEach(o),z=M(e),d=n(e,"H1",{class:!0});var N=c(d);g=n(N,"A",{id:!0,class:!0,href:!0});var de=c(g);T=n(de,"SPAN",{});var ge=c(T);Ie(v.$$.fragment,ge),ge.forEach(o),de.forEach(o),L=M(N),q=n(N,"SPAN",{});var _e=c(q);O=r(_e,"Use a custom Container Image"),_e.forEach(o),N.forEach(o),G=M(e),s=n(e,"P",{});var u=c(s);W=r(u,"Hugging Face Endpoints not only allows you to "),k=n(u,"A",{href:!0});var ve=c(k);J=r(ve,"customize your inference handler"),ve.forEach(o),K=r(u,", it also allows you to provide a custom container image. Those can be public images, e.g "),P=n(u,"EM",{});var ye=c(P);Q=r(ye,"tensorflow/serving:2.7.3,"),ye.forEach(o),V=r(u," or private Images hosted on "),y=n(u,"A",{href:!0,rel:!0});var we=c(y);X=r(we,"Docker hub"),we.forEach(o),Y=r(u,", "),w=n(u,"A",{href:!0,rel:!0});var Ee=c(w);Z=r(Ee,"AWS ECR"),Ee.forEach(o),ee=r(u,", "),E=n(u,"A",{href:!0,rel:!0});var be=c(E);te=r(be,"Azure ACR"),be.forEach(o),oe=r(u,", or "),b=n(u,"A",{href:!0,rel:!0});var Ae=c(b);ae=r(Ae,"Google GCR"),Ae.forEach(o),re=r(u,"."),u.forEach(o),H=M(e),A=n(e,"IMG",{src:!0,alt:!0}),j=M(e),_=n(e,"P",{});var U=c(_);se=r(U,"The "),I=n(U,"A",{href:!0});var $e=c(I);le=r($e,"creation flow"),$e.forEach(o),ne=r(U," of your Image artifacts will stay the same way on how your custom image is used as the base image. This means that Hugging Face Endpoints will create a unique image artifact derived from your provided image including all Model Artifacts."),U.forEach(o),B=M(e),h=n(e,"P",{});var x=c(h);ie=r(x,"The Model Artifacts (weights) are stored under "),S=n(x,"CODE",{});var Ce=c(S);ce=r(Ce,"/repository"),Ce.forEach(o),me=r(x,". Meaning if you use"),R=n(x,"CODE",{});var Me=c(R);ue=r(Me,"tensorflow/serving"),Me.forEach(o),fe=r(x," as your custom image you have to set model_base_path to /repository. Below is an example:"),x.forEach(o),D=M(e),Ie($.$$.fragment,e),this.h()},h(){i(p,"name","hf:doc:metadata"),i(p,"content",JSON.stringify(Ue)),i(g,"id","use-a-custom-container-image"),i(g,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(g,"href","#use-a-custom-container-image"),i(d,"class","relative group"),i(k,"href","/guides/custom_handler"),i(y,"href","https://hub.docker.com/"),i(y,"rel","nofollow"),i(w,"href","https://aws.amazon.com/ecr/?nc1=h_ls"),i(w,"rel","nofollow"),i(E,"href","https://azure.microsoft.com/de-de/services/container-registry/"),i(E,"rel","nofollow"),i(b,"href","https://cloud.google.com/container-registry?hl=de"),i(b,"rel","nofollow"),He(A.src,pe="https://github.com/huggingface/hf-endpoints-documentation/blob/main/assets/custom_container.png")||i(A,"src",pe),i(A,"alt","custom container config"),i(I,"href","/")},m(e,m){t(document.head,p),f(e,z,m),f(e,d,m),t(d,g),t(g,T),xe(v,T,null),t(d,L),t(d,q),t(q,O),f(e,G,m),f(e,s,m),t(s,W),t(s,k),t(k,J),t(s,K),t(s,P),t(P,Q),t(s,V),t(s,y),t(y,X),t(s,Y),t(s,w),t(w,Z),t(s,ee),t(s,E),t(E,te),t(s,oe),t(s,b),t(b,ae),t(s,re),f(e,H,m),f(e,A,m),f(e,j,m),f(e,_,m),t(_,se),t(_,I),t(I,le),t(_,ne),f(e,B,m),f(e,h,m),t(h,ie),t(h,S),t(S,ce),t(h,me),t(h,R),t(R,ue),t(h,fe),f(e,D,m),xe($,e,m),F=!0},p:je,i(e){F||(Te(v.$$.fragment,e),Te($.$$.fragment,e),F=!0)},o(e){qe(v.$$.fragment,e),qe($.$$.fragment,e),F=!1},d(e){o(p),e&&o(z),e&&o(d),Pe(v),e&&o(G),e&&o(s),e&&o(H),e&&o(A),e&&o(j),e&&o(_),e&&o(B),e&&o(h),e&&o(D),Pe($,e)}}}const Ue={local:"use-a-custom-container-image",title:"Use a custom Container Image"};function Le(he){return Be(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ke extends Se{constructor(p){super();Re(this,p,Le,Ne,ze,{})}}export{Ke as default,Ue as metadata};
